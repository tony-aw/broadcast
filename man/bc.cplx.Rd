% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bc_cplx.R
\name{bc.cplx}
\alias{bc.cplx}
\title{Broadcasted Operations for Character/String Arrays}
\usage{
bc.cplx(x, y, op)
}
\arguments{
\item{x, y}{conformable atomic arrays of typee \code{complex}.}

\item{op}{a single string, giving the operator. \cr
Supported arithmetic operators: +, -, *, /. \cr
Supported relational operators: ==, !=. \cr}
}
\value{
For arithmetic operators: \cr
A complex array as a result of the broadcasted arithmetic operation. \cr
\cr
For relational operators: \cr
A logical array as a result of the broadcasted relational comparison. \cr
\cr
}
\description{
The \code{bc.cplx()} function performs broadcasted operations on 2 \code{complex} arrays. \cr
\cr
Note that \code{bc.cplx()} uses more strict \code{NA} checks than base 'R': \cr
If for an element of either \code{x} or \code{y}, either the real or imaginary part is \code{NA} or \code{NaN},
than the result of the operation for that element is necessarily \code{NA}. \cr
}
\examples{
x.dim <- c(10:8)
x.len <- prod(x.dim)
gen <- function() sample(c(rnorm(10), NA, NA, NaN, NaN, Inf, Inf, -Inf, -Inf))
x <- array(gen() + gen() * -1i, x.dim)
y <- array(gen() + gen() * -1i, c(10,1,1))

bc.cplx(x, y, "==")
bc.cplx(x, y, "!=")

bc.cplx(x, y, "+")

bc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), "==")
bc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), "!=")

x <- gen() + gen() * -1i
y <- gen() + gen() * -1i
out <- bc.cplx(array(x), array(y), "*")
cbind(x, y, x*y, out)
}
