// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_test
int rcpp_test(int x, int y);
RcppExport SEXP _broadcast_rcpp_test(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_test(x, y));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_dbl_v
SEXP rcpp_bc_dbl_v(SEXP x, SEXP y, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bc_dbl_v(SEXP xSEXP, SEXP ySEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_dbl_v(x, y, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_dbl_d
SEXP rcpp_bc_dbl_d(SEXP x, SEXP y, SEXP by_x, SEXP by_y, SEXP dimcumprod_x, SEXP dimcumprod_y, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bc_dbl_d(SEXP xSEXP, SEXP ySEXP, SEXP by_xSEXP, SEXP by_ySEXP, SEXP dimcumprod_xSEXP, SEXP dimcumprod_ySEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_x(by_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_y(by_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type dimcumprod_x(dimcumprod_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dimcumprod_y(dimcumprod_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_dbl_d(x, y, by_x, by_y, dimcumprod_x, dimcumprod_y, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_dbl_general
SEXP rcpp_bc_dbl_general(SEXP x, SEXP y, const SEXP s1, const SEXP s2, const SEXP xdims1, const SEXP xdims2, const R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bc_dbl_general(SEXP xSEXP, SEXP ySEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP xdims1SEXP, SEXP xdims2SEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< const SEXP >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< const SEXP >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< const SEXP >::type xdims1(xdims1SEXP);
    Rcpp::traits::input_parameter< const SEXP >::type xdims2(xdims2SEXP);
    Rcpp::traits::input_parameter< const R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_dbl_general(x, y, s1, s2, xdims1, xdims2, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_seq_mlen
List rcpp_seq_mlen(IntegerVector x);
RcppExport SEXP _broadcast_rcpp_seq_mlen(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_seq_mlen(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_recycle_seq_mlen
List rcpp_recycle_seq_mlen(IntegerVector x, IntegerVector y);
RcppExport SEXP _broadcast_rcpp_recycle_seq_mlen(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_recycle_seq_mlen(x, y));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP C_check_conf_dim(SEXP, SEXP);
RcppExport SEXP C_pmax(SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_broadcast_rcpp_test", (DL_FUNC) &_broadcast_rcpp_test, 2},
    {"_broadcast_rcpp_bc_dbl_v", (DL_FUNC) &_broadcast_rcpp_bc_dbl_v, 4},
    {"_broadcast_rcpp_bc_dbl_d", (DL_FUNC) &_broadcast_rcpp_bc_dbl_d, 9},
    {"_broadcast_rcpp_bc_dbl_general", (DL_FUNC) &_broadcast_rcpp_bc_dbl_general, 8},
    {"_broadcast_rcpp_seq_mlen", (DL_FUNC) &_broadcast_rcpp_seq_mlen, 1},
    {"_broadcast_rcpp_recycle_seq_mlen", (DL_FUNC) &_broadcast_rcpp_recycle_seq_mlen, 2},
    {"C_check_conf_dim", (DL_FUNC) &C_check_conf_dim, 2},
    {"C_pmax",           (DL_FUNC) &C_pmax,           2},
    {NULL, NULL, 0}
};

RcppExport void R_init_broadcast(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
