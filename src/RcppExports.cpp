// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_factor_count
int rcpp_factor_count(SEXP grp, int j);
RcppExport SEXP _broadcast_rcpp_factor_count(SEXP grpSEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type grp(grpSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_factor_count(grp, j));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_factor_which
SEXP rcpp_factor_which(SEXP grp, int j, int size);
RcppExport SEXP _broadcast_rcpp_factor_which(SEXP grpSEXP, SEXP jSEXP, SEXP sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type grp(grpSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_factor_which(grp, j, size));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_acast
void rcpp_acast(SEXP out, SEXP y, const SEXP starts, const SEXP lens, const SEXP subs, const SEXP out_dim, const SEXP dcp_out, const SEXP dcp_y, SEXP grp, int grp_n, int margin, int newdim);
RcppExport SEXP _broadcast_rcpp_acast(SEXP outSEXP, SEXP ySEXP, SEXP startsSEXP, SEXP lensSEXP, SEXP subsSEXP, SEXP out_dimSEXP, SEXP dcp_outSEXP, SEXP dcp_ySEXP, SEXP grpSEXP, SEXP grp_nSEXP, SEXP marginSEXP, SEXP newdimSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type out(outSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< const SEXP >::type starts(startsSEXP);
    Rcpp::traits::input_parameter< const SEXP >::type lens(lensSEXP);
    Rcpp::traits::input_parameter< const SEXP >::type subs(subsSEXP);
    Rcpp::traits::input_parameter< const SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< const SEXP >::type dcp_out(dcp_outSEXP);
    Rcpp::traits::input_parameter< const SEXP >::type dcp_y(dcp_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type grp(grpSEXP);
    Rcpp::traits::input_parameter< int >::type grp_n(grp_nSEXP);
    Rcpp::traits::input_parameter< int >::type margin(marginSEXP);
    Rcpp::traits::input_parameter< int >::type newdim(newdimSEXP);
    rcpp_acast(out, y, starts, lens, subs, out_dim, dcp_out, dcp_y, grp, grp_n, margin, newdim);
    return R_NilValue;
END_RCPP
}
// rcpp_str_dist_led
int rcpp_str_dist_led(String x, String y);
RcppExport SEXP _broadcast_rcpp_str_dist_led(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type x(xSEXP);
    Rcpp::traits::input_parameter< String >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_str_dist_led(x, y));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bcDist_str_v
SEXP rcpp_bcDist_str_v(CharacterVector x, CharacterVector y, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bcDist_str_v(SEXP xSEXP, SEXP ySEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bcDist_str_v(x, y, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bcDist_str_ov
SEXP rcpp_bcDist_str_ov(CharacterVector x, CharacterVector y, bool RxC, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bcDist_str_ov(SEXP xSEXP, SEXP ySEXP, SEXP RxCSEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type RxC(RxCSEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bcDist_str_ov(x, y, RxC, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bcDist_str_d
SEXP rcpp_bcDist_str_d(CharacterVector x, CharacterVector y, SEXP by_x, SEXP by_y, SEXP dcp_x, SEXP dcp_y, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bcDist_str_d(SEXP xSEXP, SEXP ySEXP, SEXP by_xSEXP, SEXP by_ySEXP, SEXP dcp_xSEXP, SEXP dcp_ySEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_x(by_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_y(by_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_x(dcp_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_y(dcp_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bcDist_str_d(x, y, by_x, by_y, dcp_x, dcp_y, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bcRel_cplx_v
SEXP rcpp_bcRel_cplx_v(SEXP x, SEXP y, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bcRel_cplx_v(SEXP xSEXP, SEXP ySEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bcRel_cplx_v(x, y, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bcRel_cplx_ov
SEXP rcpp_bcRel_cplx_ov(SEXP x, SEXP y, bool RxC, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bcRel_cplx_ov(SEXP xSEXP, SEXP ySEXP, SEXP RxCSEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type RxC(RxCSEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bcRel_cplx_ov(x, y, RxC, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bcRel_cplx_d
SEXP rcpp_bcRel_cplx_d(SEXP x, SEXP y, SEXP by_x, SEXP by_y, SEXP dcp_x, SEXP dcp_y, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bcRel_cplx_d(SEXP xSEXP, SEXP ySEXP, SEXP by_xSEXP, SEXP by_ySEXP, SEXP dcp_xSEXP, SEXP dcp_ySEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_x(by_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_y(by_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_x(dcp_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_y(dcp_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bcRel_cplx_d(x, y, by_x, by_y, dcp_x, dcp_y, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bcRel_dec_v
SEXP rcpp_bcRel_dec_v(SEXP x, SEXP y, R_xlen_t nout, int op, double prec);
RcppExport SEXP _broadcast_rcpp_bcRel_dec_v(SEXP xSEXP, SEXP ySEXP, SEXP noutSEXP, SEXP opSEXP, SEXP precSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    Rcpp::traits::input_parameter< double >::type prec(precSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bcRel_dec_v(x, y, nout, op, prec));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bcRel_dec_ov
SEXP rcpp_bcRel_dec_ov(SEXP x, SEXP y, bool RxC, SEXP out_dim, R_xlen_t nout, int op, double prec);
RcppExport SEXP _broadcast_rcpp_bcRel_dec_ov(SEXP xSEXP, SEXP ySEXP, SEXP RxCSEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP, SEXP precSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type RxC(RxCSEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    Rcpp::traits::input_parameter< double >::type prec(precSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bcRel_dec_ov(x, y, RxC, out_dim, nout, op, prec));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bcRel_dec_d
SEXP rcpp_bcRel_dec_d(SEXP x, SEXP y, SEXP by_x, SEXP by_y, SEXP dcp_x, SEXP dcp_y, SEXP out_dim, R_xlen_t nout, int op, double prec);
RcppExport SEXP _broadcast_rcpp_bcRel_dec_d(SEXP xSEXP, SEXP ySEXP, SEXP by_xSEXP, SEXP by_ySEXP, SEXP dcp_xSEXP, SEXP dcp_ySEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP, SEXP precSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_x(by_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_y(by_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_x(dcp_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_y(dcp_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    Rcpp::traits::input_parameter< double >::type prec(precSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bcRel_dec_d(x, y, by_x, by_y, dcp_x, dcp_y, out_dim, nout, op, prec));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bcRel_int_v
SEXP rcpp_bcRel_int_v(SEXP x, SEXP y, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bcRel_int_v(SEXP xSEXP, SEXP ySEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bcRel_int_v(x, y, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bcRel_int_ov
SEXP rcpp_bcRel_int_ov(SEXP x, SEXP y, bool RxC, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bcRel_int_ov(SEXP xSEXP, SEXP ySEXP, SEXP RxCSEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type RxC(RxCSEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bcRel_int_ov(x, y, RxC, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bcRel_int_d
SEXP rcpp_bcRel_int_d(SEXP x, SEXP y, SEXP by_x, SEXP by_y, SEXP dcp_x, SEXP dcp_y, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bcRel_int_d(SEXP xSEXP, SEXP ySEXP, SEXP by_xSEXP, SEXP by_ySEXP, SEXP dcp_xSEXP, SEXP dcp_ySEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_x(by_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_y(by_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_x(dcp_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_y(dcp_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bcRel_int_d(x, y, by_x, by_y, dcp_x, dcp_y, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bcRel_str_v
SEXP rcpp_bcRel_str_v(SEXP x, SEXP y, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bcRel_str_v(SEXP xSEXP, SEXP ySEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bcRel_str_v(x, y, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bcRel_str_ov
SEXP rcpp_bcRel_str_ov(SEXP x, SEXP y, bool RxC, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bcRel_str_ov(SEXP xSEXP, SEXP ySEXP, SEXP RxCSEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type RxC(RxCSEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bcRel_str_ov(x, y, RxC, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bcRel_str_d
SEXP rcpp_bcRel_str_d(SEXP x, SEXP y, SEXP by_x, SEXP by_y, SEXP dcp_x, SEXP dcp_y, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bcRel_str_d(SEXP xSEXP, SEXP ySEXP, SEXP by_xSEXP, SEXP by_ySEXP, SEXP dcp_xSEXP, SEXP dcp_ySEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_x(by_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_y(by_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_x(dcp_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_y(dcp_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bcRel_str_d(x, y, by_x, by_y, dcp_x, dcp_y, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_b_v
SEXP rcpp_bc_b_v(SEXP x, SEXP y, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bc_b_v(SEXP xSEXP, SEXP ySEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_b_v(x, y, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_b_ov
SEXP rcpp_bc_b_ov(SEXP x, SEXP y, bool RxC, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bc_b_ov(SEXP xSEXP, SEXP ySEXP, SEXP RxCSEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type RxC(RxCSEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_b_ov(x, y, RxC, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_b_d
SEXP rcpp_bc_b_d(SEXP x, SEXP y, SEXP by_x, SEXP by_y, SEXP dcp_x, SEXP dcp_y, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bc_b_d(SEXP xSEXP, SEXP ySEXP, SEXP by_xSEXP, SEXP by_ySEXP, SEXP dcp_xSEXP, SEXP dcp_ySEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_x(by_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_y(by_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_x(dcp_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_y(dcp_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_b_d(x, y, by_x, by_y, dcp_x, dcp_y, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_bind
void rcpp_bc_bind(SEXP out, SEXP x, SEXP starts, SEXP ends, SEXP by_x, SEXP dcp_out, SEXP dcp_x, SEXP out_dim);
RcppExport SEXP _broadcast_rcpp_bc_bind(SEXP outSEXP, SEXP xSEXP, SEXP startsSEXP, SEXP endsSEXP, SEXP by_xSEXP, SEXP dcp_outSEXP, SEXP dcp_xSEXP, SEXP out_dimSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type out(outSEXP);
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type starts(startsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ends(endsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_x(by_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_out(dcp_outSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_x(dcp_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    rcpp_bc_bind(out, x, starts, ends, by_x, dcp_out, dcp_x, out_dim);
    return R_NilValue;
END_RCPP
}
// rcpp_bc_cplx_v
SEXP rcpp_bc_cplx_v(SEXP x, SEXP y, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bc_cplx_v(SEXP xSEXP, SEXP ySEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_cplx_v(x, y, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_cplx_ov
SEXP rcpp_bc_cplx_ov(SEXP x, SEXP y, bool RxC, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bc_cplx_ov(SEXP xSEXP, SEXP ySEXP, SEXP RxCSEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type RxC(RxCSEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_cplx_ov(x, y, RxC, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_cplx_d
SEXP rcpp_bc_cplx_d(SEXP x, SEXP y, SEXP by_x, SEXP by_y, SEXP dcp_x, SEXP dcp_y, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bc_cplx_d(SEXP xSEXP, SEXP ySEXP, SEXP by_xSEXP, SEXP by_ySEXP, SEXP dcp_xSEXP, SEXP dcp_ySEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_x(by_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_y(by_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_x(dcp_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_y(dcp_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_cplx_d(x, y, by_x, by_y, dcp_x, dcp_y, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_dec_v
SEXP rcpp_bc_dec_v(SEXP x, SEXP y, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bc_dec_v(SEXP xSEXP, SEXP ySEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_dec_v(x, y, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_dec_ov
SEXP rcpp_bc_dec_ov(SEXP x, SEXP y, bool RxC, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bc_dec_ov(SEXP xSEXP, SEXP ySEXP, SEXP RxCSEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type RxC(RxCSEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_dec_ov(x, y, RxC, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_dec_d
SEXP rcpp_bc_dec_d(SEXP x, SEXP y, SEXP by_x, SEXP by_y, SEXP dcp_x, SEXP dcp_y, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bc_dec_d(SEXP xSEXP, SEXP ySEXP, SEXP by_xSEXP, SEXP by_ySEXP, SEXP dcp_xSEXP, SEXP dcp_ySEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_x(by_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_y(by_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_x(dcp_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_y(dcp_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_dec_d(x, y, by_x, by_y, dcp_x, dcp_y, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_ifelse_v
SEXP rcpp_bc_ifelse_v(SEXP cond, SEXP x, SEXP y, R_xlen_t nout);
RcppExport SEXP _broadcast_rcpp_bc_ifelse_v(SEXP condSEXP, SEXP xSEXP, SEXP ySEXP, SEXP noutSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type cond(condSEXP);
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_ifelse_v(cond, x, y, nout));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_ifelse_ov
SEXP rcpp_bc_ifelse_ov(SEXP cond, SEXP x, SEXP y, bool RxC, SEXP out_dim, R_xlen_t nout);
RcppExport SEXP _broadcast_rcpp_bc_ifelse_ov(SEXP condSEXP, SEXP xSEXP, SEXP ySEXP, SEXP RxCSEXP, SEXP out_dimSEXP, SEXP noutSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type cond(condSEXP);
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type RxC(RxCSEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_ifelse_ov(cond, x, y, RxC, out_dim, nout));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_ifelse_d
SEXP rcpp_bc_ifelse_d(SEXP cond, SEXP x, SEXP y, SEXP by_x, SEXP by_y, SEXP dcp_x, SEXP dcp_y, SEXP out_dim, R_xlen_t nout);
RcppExport SEXP _broadcast_rcpp_bc_ifelse_d(SEXP condSEXP, SEXP xSEXP, SEXP ySEXP, SEXP by_xSEXP, SEXP by_ySEXP, SEXP dcp_xSEXP, SEXP dcp_ySEXP, SEXP out_dimSEXP, SEXP noutSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type cond(condSEXP);
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_x(by_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_y(by_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_x(dcp_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_y(dcp_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_ifelse_d(cond, x, y, by_x, by_y, dcp_x, dcp_y, out_dim, nout));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_int53_gcd_rec
long long rcpp_int53_gcd_rec(long long x, long long y);
RcppExport SEXP _broadcast_rcpp_int53_gcd_rec(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< long long >::type x(xSEXP);
    Rcpp::traits::input_parameter< long long >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_int53_gcd_rec(x, y));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_int53_gcd
double rcpp_int53_gcd(double x, double y);
RcppExport SEXP _broadcast_rcpp_int53_gcd(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_int53_gcd(x, y));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_int_v
SEXP rcpp_bc_int_v(SEXP x, SEXP y, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bc_int_v(SEXP xSEXP, SEXP ySEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_int_v(x, y, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_int_ov
SEXP rcpp_bc_int_ov(SEXP x, SEXP y, bool RxC, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bc_int_ov(SEXP xSEXP, SEXP ySEXP, SEXP RxCSEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type RxC(RxCSEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_int_ov(x, y, RxC, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_int_d
SEXP rcpp_bc_int_d(SEXP x, SEXP y, SEXP by_x, SEXP by_y, SEXP dcp_x, SEXP dcp_y, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bc_int_d(SEXP xSEXP, SEXP ySEXP, SEXP by_xSEXP, SEXP by_ySEXP, SEXP dcp_xSEXP, SEXP dcp_ySEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_x(by_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_y(by_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_x(dcp_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_y(dcp_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_int_d(x, y, by_x, by_y, dcp_x, dcp_y, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_list_v
SEXP rcpp_bc_list_v(List x, List y, R_xlen_t nout, Function f);
RcppExport SEXP _broadcast_rcpp_bc_list_v(SEXP xSEXP, SEXP ySEXP, SEXP noutSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< List >::type y(ySEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_list_v(x, y, nout, f));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_list_ov
SEXP rcpp_bc_list_ov(List x, List y, bool RxC, SEXP out_dim, R_xlen_t nout, Function f);
RcppExport SEXP _broadcast_rcpp_bc_list_ov(SEXP xSEXP, SEXP ySEXP, SEXP RxCSEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< List >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type RxC(RxCSEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_list_ov(x, y, RxC, out_dim, nout, f));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_list_d
SEXP rcpp_bc_list_d(List x, List y, SEXP by_x, SEXP by_y, SEXP dcp_x, SEXP dcp_y, SEXP out_dim, R_xlen_t nout, Function f);
RcppExport SEXP _broadcast_rcpp_bc_list_d(SEXP xSEXP, SEXP ySEXP, SEXP by_xSEXP, SEXP by_ySEXP, SEXP dcp_xSEXP, SEXP dcp_ySEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< List >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_x(by_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_y(by_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_x(dcp_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_y(dcp_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_list_d(x, y, by_x, by_y, dcp_x, dcp_y, out_dim, nout, f));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_string_plus
String rcpp_string_plus(String x, String y);
RcppExport SEXP _broadcast_rcpp_string_plus(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type x(xSEXP);
    Rcpp::traits::input_parameter< String >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_string_plus(x, y));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_str_v
SEXP rcpp_bc_str_v(CharacterVector x, CharacterVector y, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bc_str_v(SEXP xSEXP, SEXP ySEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_str_v(x, y, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_str_ov
SEXP rcpp_bc_str_ov(CharacterVector x, CharacterVector y, bool RxC, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bc_str_ov(SEXP xSEXP, SEXP ySEXP, SEXP RxCSEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type RxC(RxCSEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_str_ov(x, y, RxC, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bc_str_d
SEXP rcpp_bc_str_d(CharacterVector x, CharacterVector y, SEXP by_x, SEXP by_y, SEXP dcp_x, SEXP dcp_y, SEXP out_dim, R_xlen_t nout, int op);
RcppExport SEXP _broadcast_rcpp_bc_str_d(SEXP xSEXP, SEXP ySEXP, SEXP by_xSEXP, SEXP by_ySEXP, SEXP dcp_xSEXP, SEXP dcp_ySEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_x(by_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_y(by_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_x(dcp_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_y(dcp_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< int >::type op(opSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bc_str_d(x, y, by_x, by_y, dcp_x, dcp_y, out_dim, nout, op));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bcapply_v
void rcpp_bcapply_v(SEXP out, SEXP x, SEXP y, R_xlen_t nout, Function f);
RcppExport SEXP _broadcast_rcpp_bcapply_v(SEXP outSEXP, SEXP xSEXP, SEXP ySEXP, SEXP noutSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type out(outSEXP);
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_bcapply_v(out, x, y, nout, f);
    return R_NilValue;
END_RCPP
}
// rcpp_bcapply_ov
void rcpp_bcapply_ov(SEXP out, SEXP x, SEXP y, bool RxC, SEXP out_dim, R_xlen_t nout, Function f);
RcppExport SEXP _broadcast_rcpp_bcapply_ov(SEXP outSEXP, SEXP xSEXP, SEXP ySEXP, SEXP RxCSEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type out(outSEXP);
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type RxC(RxCSEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_bcapply_ov(out, x, y, RxC, out_dim, nout, f);
    return R_NilValue;
END_RCPP
}
// rcpp_bcapply_d
void rcpp_bcapply_d(SEXP out, SEXP x, SEXP y, SEXP by_x, SEXP by_y, SEXP dcp_x, SEXP dcp_y, SEXP out_dim, R_xlen_t nout, Function f);
RcppExport SEXP _broadcast_rcpp_bcapply_d(SEXP outSEXP, SEXP xSEXP, SEXP ySEXP, SEXP by_xSEXP, SEXP by_ySEXP, SEXP dcp_xSEXP, SEXP dcp_ySEXP, SEXP out_dimSEXP, SEXP noutSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type out(outSEXP);
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_x(by_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type by_y(by_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_x(dcp_xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dcp_y(dcp_ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type out_dim(out_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type nout(noutSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    rcpp_bcapply_d(out, x, y, by_x, by_y, dcp_x, dcp_y, out_dim, nout, f);
    return R_NilValue;
END_RCPP
}
// rcpp_bindhelper_max_type
int rcpp_bindhelper_max_type(SEXP x);
RcppExport SEXP _broadcast_rcpp_bindhelper_max_type(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bindhelper_max_type(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bindhelper_vdims
SEXP rcpp_bindhelper_vdims(SEXP x);
RcppExport SEXP _broadcast_rcpp_bindhelper_vdims(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bindhelper_vdims(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bindhelper_sum_along
R_xlen_t rcpp_bindhelper_sum_along(SEXP lst_dims, int along);
RcppExport SEXP _broadcast_rcpp_bindhelper_sum_along(SEXP lst_dimsSEXP, SEXP alongSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type lst_dims(lst_dimsSEXP);
    Rcpp::traits::input_parameter< int >::type along(alongSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bindhelper_sum_along(lst_dims, along));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bindhelper_conf_dims_2
int rcpp_bindhelper_conf_dims_2(SEXP x, SEXP y, int along, int max_bc);
RcppExport SEXP _broadcast_rcpp_bindhelper_conf_dims_2(SEXP xSEXP, SEXP ySEXP, SEXP alongSEXP, SEXP max_bcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type along(alongSEXP);
    Rcpp::traits::input_parameter< int >::type max_bc(max_bcSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bindhelper_conf_dims_2(x, y, along, max_bc));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bindhelper_conf_dims_all
int rcpp_bindhelper_conf_dims_all(SEXP lst_dims, SEXP target, int along, int max_bc);
RcppExport SEXP _broadcast_rcpp_bindhelper_conf_dims_all(SEXP lst_dimsSEXP, SEXP targetSEXP, SEXP alongSEXP, SEXP max_bcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type lst_dims(lst_dimsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type target(targetSEXP);
    Rcpp::traits::input_parameter< int >::type along(alongSEXP);
    Rcpp::traits::input_parameter< int >::type max_bc(max_bcSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bindhelper_conf_dims_all(lst_dims, target, along, max_bc));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bindhelper_get_dimnames
List rcpp_bindhelper_get_dimnames(List x, int along);
RcppExport SEXP _broadcast_rcpp_bindhelper_get_dimnames(SEXP xSEXP, SEXP alongSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type along(alongSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bindhelper_get_dimnames(x, along));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_recycle_seq_mlen
List rcpp_recycle_seq_mlen(IntegerVector x, IntegerVector y);
RcppExport SEXP _broadcast_rcpp_recycle_seq_mlen(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_recycle_seq_mlen(x, y));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_set_vind_32_atomic
void rcpp_set_vind_32_atomic(SEXP x, const SEXP ind, const SEXP rp);
RcppExport SEXP _broadcast_rcpp_set_vind_32_atomic(SEXP xSEXP, SEXP indSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< const SEXP >::type ind(indSEXP);
    Rcpp::traits::input_parameter< const SEXP >::type rp(rpSEXP);
    rcpp_set_vind_32_atomic(x, ind, rp);
    return R_NilValue;
END_RCPP
}
// rcpp_set_vind_64_atomic
void rcpp_set_vind_64_atomic(SEXP x, const SEXP ind, const SEXP rp);
RcppExport SEXP _broadcast_rcpp_set_vind_64_atomic(SEXP xSEXP, SEXP indSEXP, SEXP rpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< const SEXP >::type ind(indSEXP);
    Rcpp::traits::input_parameter< const SEXP >::type rp(rpSEXP);
    rcpp_set_vind_64_atomic(x, ind, rp);
    return R_NilValue;
END_RCPP
}

RcppExport SEXP C_any_nonNULL(SEXP);
RcppExport SEXP C_check_conf_dim(SEXP, SEXP);
RcppExport SEXP C_dims_all_orthogonal(SEXP, SEXP);
RcppExport SEXP C_findfirst_mergable_dims(SEXP, SEXP);
RcppExport SEXP C_lst_ndims(SEXP);
RcppExport SEXP C_make_by(SEXP);
RcppExport SEXP C_pmax(SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_broadcast_rcpp_factor_count", (DL_FUNC) &_broadcast_rcpp_factor_count, 2},
    {"_broadcast_rcpp_factor_which", (DL_FUNC) &_broadcast_rcpp_factor_which, 3},
    {"_broadcast_rcpp_acast", (DL_FUNC) &_broadcast_rcpp_acast, 12},
    {"_broadcast_rcpp_str_dist_led", (DL_FUNC) &_broadcast_rcpp_str_dist_led, 2},
    {"_broadcast_rcpp_bcDist_str_v", (DL_FUNC) &_broadcast_rcpp_bcDist_str_v, 4},
    {"_broadcast_rcpp_bcDist_str_ov", (DL_FUNC) &_broadcast_rcpp_bcDist_str_ov, 6},
    {"_broadcast_rcpp_bcDist_str_d", (DL_FUNC) &_broadcast_rcpp_bcDist_str_d, 9},
    {"_broadcast_rcpp_bcRel_cplx_v", (DL_FUNC) &_broadcast_rcpp_bcRel_cplx_v, 4},
    {"_broadcast_rcpp_bcRel_cplx_ov", (DL_FUNC) &_broadcast_rcpp_bcRel_cplx_ov, 6},
    {"_broadcast_rcpp_bcRel_cplx_d", (DL_FUNC) &_broadcast_rcpp_bcRel_cplx_d, 9},
    {"_broadcast_rcpp_bcRel_dec_v", (DL_FUNC) &_broadcast_rcpp_bcRel_dec_v, 5},
    {"_broadcast_rcpp_bcRel_dec_ov", (DL_FUNC) &_broadcast_rcpp_bcRel_dec_ov, 7},
    {"_broadcast_rcpp_bcRel_dec_d", (DL_FUNC) &_broadcast_rcpp_bcRel_dec_d, 10},
    {"_broadcast_rcpp_bcRel_int_v", (DL_FUNC) &_broadcast_rcpp_bcRel_int_v, 4},
    {"_broadcast_rcpp_bcRel_int_ov", (DL_FUNC) &_broadcast_rcpp_bcRel_int_ov, 6},
    {"_broadcast_rcpp_bcRel_int_d", (DL_FUNC) &_broadcast_rcpp_bcRel_int_d, 9},
    {"_broadcast_rcpp_bcRel_str_v", (DL_FUNC) &_broadcast_rcpp_bcRel_str_v, 4},
    {"_broadcast_rcpp_bcRel_str_ov", (DL_FUNC) &_broadcast_rcpp_bcRel_str_ov, 6},
    {"_broadcast_rcpp_bcRel_str_d", (DL_FUNC) &_broadcast_rcpp_bcRel_str_d, 9},
    {"_broadcast_rcpp_bc_b_v", (DL_FUNC) &_broadcast_rcpp_bc_b_v, 4},
    {"_broadcast_rcpp_bc_b_ov", (DL_FUNC) &_broadcast_rcpp_bc_b_ov, 6},
    {"_broadcast_rcpp_bc_b_d", (DL_FUNC) &_broadcast_rcpp_bc_b_d, 9},
    {"_broadcast_rcpp_bc_bind", (DL_FUNC) &_broadcast_rcpp_bc_bind, 8},
    {"_broadcast_rcpp_bc_cplx_v", (DL_FUNC) &_broadcast_rcpp_bc_cplx_v, 4},
    {"_broadcast_rcpp_bc_cplx_ov", (DL_FUNC) &_broadcast_rcpp_bc_cplx_ov, 6},
    {"_broadcast_rcpp_bc_cplx_d", (DL_FUNC) &_broadcast_rcpp_bc_cplx_d, 9},
    {"_broadcast_rcpp_bc_dec_v", (DL_FUNC) &_broadcast_rcpp_bc_dec_v, 4},
    {"_broadcast_rcpp_bc_dec_ov", (DL_FUNC) &_broadcast_rcpp_bc_dec_ov, 6},
    {"_broadcast_rcpp_bc_dec_d", (DL_FUNC) &_broadcast_rcpp_bc_dec_d, 9},
    {"_broadcast_rcpp_bc_ifelse_v", (DL_FUNC) &_broadcast_rcpp_bc_ifelse_v, 4},
    {"_broadcast_rcpp_bc_ifelse_ov", (DL_FUNC) &_broadcast_rcpp_bc_ifelse_ov, 6},
    {"_broadcast_rcpp_bc_ifelse_d", (DL_FUNC) &_broadcast_rcpp_bc_ifelse_d, 9},
    {"_broadcast_rcpp_int53_gcd_rec", (DL_FUNC) &_broadcast_rcpp_int53_gcd_rec, 2},
    {"_broadcast_rcpp_int53_gcd", (DL_FUNC) &_broadcast_rcpp_int53_gcd, 2},
    {"_broadcast_rcpp_bc_int_v", (DL_FUNC) &_broadcast_rcpp_bc_int_v, 4},
    {"_broadcast_rcpp_bc_int_ov", (DL_FUNC) &_broadcast_rcpp_bc_int_ov, 6},
    {"_broadcast_rcpp_bc_int_d", (DL_FUNC) &_broadcast_rcpp_bc_int_d, 9},
    {"_broadcast_rcpp_bc_list_v", (DL_FUNC) &_broadcast_rcpp_bc_list_v, 4},
    {"_broadcast_rcpp_bc_list_ov", (DL_FUNC) &_broadcast_rcpp_bc_list_ov, 6},
    {"_broadcast_rcpp_bc_list_d", (DL_FUNC) &_broadcast_rcpp_bc_list_d, 9},
    {"_broadcast_rcpp_string_plus", (DL_FUNC) &_broadcast_rcpp_string_plus, 2},
    {"_broadcast_rcpp_bc_str_v", (DL_FUNC) &_broadcast_rcpp_bc_str_v, 4},
    {"_broadcast_rcpp_bc_str_ov", (DL_FUNC) &_broadcast_rcpp_bc_str_ov, 6},
    {"_broadcast_rcpp_bc_str_d", (DL_FUNC) &_broadcast_rcpp_bc_str_d, 9},
    {"_broadcast_rcpp_bcapply_v", (DL_FUNC) &_broadcast_rcpp_bcapply_v, 5},
    {"_broadcast_rcpp_bcapply_ov", (DL_FUNC) &_broadcast_rcpp_bcapply_ov, 7},
    {"_broadcast_rcpp_bcapply_d", (DL_FUNC) &_broadcast_rcpp_bcapply_d, 10},
    {"_broadcast_rcpp_bindhelper_max_type", (DL_FUNC) &_broadcast_rcpp_bindhelper_max_type, 1},
    {"_broadcast_rcpp_bindhelper_vdims", (DL_FUNC) &_broadcast_rcpp_bindhelper_vdims, 1},
    {"_broadcast_rcpp_bindhelper_sum_along", (DL_FUNC) &_broadcast_rcpp_bindhelper_sum_along, 2},
    {"_broadcast_rcpp_bindhelper_conf_dims_2", (DL_FUNC) &_broadcast_rcpp_bindhelper_conf_dims_2, 4},
    {"_broadcast_rcpp_bindhelper_conf_dims_all", (DL_FUNC) &_broadcast_rcpp_bindhelper_conf_dims_all, 4},
    {"_broadcast_rcpp_bindhelper_get_dimnames", (DL_FUNC) &_broadcast_rcpp_bindhelper_get_dimnames, 2},
    {"_broadcast_rcpp_recycle_seq_mlen", (DL_FUNC) &_broadcast_rcpp_recycle_seq_mlen, 2},
    {"_broadcast_rcpp_set_vind_32_atomic", (DL_FUNC) &_broadcast_rcpp_set_vind_32_atomic, 3},
    {"_broadcast_rcpp_set_vind_64_atomic", (DL_FUNC) &_broadcast_rcpp_set_vind_64_atomic, 3},
    {"C_any_nonNULL",             (DL_FUNC) &C_any_nonNULL,             1},
    {"C_check_conf_dim",          (DL_FUNC) &C_check_conf_dim,          2},
    {"C_dims_all_orthogonal",     (DL_FUNC) &C_dims_all_orthogonal,     2},
    {"C_findfirst_mergable_dims", (DL_FUNC) &C_findfirst_mergable_dims, 2},
    {"C_lst_ndims",               (DL_FUNC) &C_lst_ndims,               1},
    {"C_make_by",                 (DL_FUNC) &C_make_by,                 1},
    {"C_pmax",                    (DL_FUNC) &C_pmax,                    2},
    {NULL, NULL, 0}
};

RcppExport void R_init_broadcast(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
