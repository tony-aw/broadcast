
## broadcast: Simple Broadcasted Operations for Atomic and Recursive Arrays with Minimal Dependencies {.unnumbered}


### Description

broadcast: <br />
Simple Broadcasted Binding and Binary Operations for Atomic and Recursive Arrays with Minimal Dependencies. <br /> <br />
Implements simple broadcasted operations for atomic and recursive arrays.

Besides linking to 'Rcpp', 'broadcast' does not depend on, vendor, link to, include, or otherwise use any external libraries;
'broadcast' was essentially made from scratch and can be installed out-of-the-box.

The implementations available in 'broadcast' include, but are not limited to, the following:


<ol>
<li> A faster, more memory efficient, and broadcasted version of <code>abind()</code>, for binding arrays along an arbitrary dimension;

</li>
<li> A set of type-specific functions for broadcasted element-wise binary operations;
they support a large set of relational-, arithmetic-, Boolean-, and string operations.

</li>
<li> A Broadcasted implementation of <code>ifelse()</code>;

</li>
<li> A Broadcasted apply-like function;

</li>
<li> The <code>acast()</code> function, for casting/pivoting an array into a new dimension.

</li></ol>

The functions in the 'broadcast' package strive to minimize computation time and memory usage (which is not just good for efficient computing, but also for the environment).



### Getting Started

An introduction and overview of the package can be found on the website. <br />
<br />



### Functions

<b>Functions for broadcasted element-wise binary operations</b> <br />
'broadcast' provides a set of functions for broadcasted element-wise binary operations
with broadcasting. <br />
These functions use an API similar to the outer function. <br />
<br />
The following functions for type-specific binary operations are available:


<ul>
<li> [bc.b](bc.b.qmd): Boolean operations;

</li>
<li> [bc.i](bc.i.qmd): integer (53bit) arithmetic and relational operations;

</li>
<li> [bc.d](bc.d.qmd): decimal (64bit) arithmetic and relational operations;

</li>
<li> [bc.cplx](bc.cplx.qmd): complex arithmetic and (in)equality operations;

</li>
<li> [bc.str](bc.str.qmd): string (in)equality, concatenation, and distance operations;

</li>
<li> [bc.list](bc.list.qmd): apply any 'R' function to 2 recursive arrays with broadcasting. <br /> <br />

</li></ul>

<b>Binding Implementations</b> <br />
'broadcast' provides 3 binding implementations: <br />
[bind_mat, bind_array, and bind_dt](bind.qmd). <br />
<br />

<b>General functions</b> <br />
'broadcast' also comes with 2 general broadcasted functions:


<ul>
<li> [bc_ifelse](bc_ifelse.qmd): Broadcasted version of ifelse.

</li>
<li> [bcapply](bcapply.qmd): Broadcasted apply-like function. <br /> <br />

</li></ul>

<b>Other functions</b> <br />
'broadcast' also provides
[type-casting](typecast.qmd) functions,
which preserve names and dimensions - convenient for arrays. <br /> <br />



### Author(s)

<strong>Author, Maintainer</strong>: Tony Wilkes <a href="mailto:tony_a_wilkes@outlook.com">tony_a_wilkes@outlook.com</a> (<a href="https://orcid.org/0000-0001-9498-8379">ORCID</a>)



### References

The badges shown in the documentation of this R-package were made using the services of: <a href="https://shields.io/">https://shields.io/</a>


