---
title: bc.cplx
---
## Broadcasted Complex Numeric Operations {.unnumbered}


### Description

The <code>bc.cplx()</code> function performs broadcasted complex numeric operations pairs of arrays. <br />
<br />
Note that <code>bc.cplx()</code> uses more strict <code>NA</code> checks than base 'R': <br />
If for an element of either <code>x</code> or <code>y</code>, either the real or imaginary part is <code>NA</code> or <code>NaN</code>,
than the result of the operation for that element is necessarily <code>NA</code>. <br />



### Usage

<pre><code class='language-R'>bc.cplx(x, y, op)
</code></pre>


### Arguments

<table>
<tr><td style = "white-space: collapse; font-family: monospace; vertical-align: top"><code id="x">x</code>, <code id="y">y</code></td>
<td>
conformable atomic arrays of type <code>complex</code>.
</td></tr>
<tr><td style = "white-space: collapse; font-family: monospace; vertical-align: top"><code id="op">op</code></td>
<td>
a single string, giving the operator. <br />
Supported arithmetic operators: +, -, *, /. <br />
Supported relational operators: ==, !=. <br />
</td></tr>
</table>


### Value

For arithmetic operators: <br />
A complex array as a result of the broadcasted arithmetic operation. <br />
<br />
For relational operators: <br />
A logical array as a result of the broadcasted relational comparison. <br />
<br />



### Examples
```{r, warning=FALSE, message=FALSE, eval=TRUE}
library("broadcast")

x.dim <- c(10:8)
x.len <- prod(x.dim)
gen <- function() sample(c(rnorm(10), NA, NA, NaN, NaN, Inf, Inf, -Inf, -Inf))
x <- array(gen() + gen() * -1i, x.dim)
y <- array(gen() + gen() * -1i, c(10,1,1))

bc.cplx(x, y, "==")
bc.cplx(x, y, "!=")

bc.cplx(x, y, "+")

bc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), "==")
bc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), "!=")

x <- gen() + gen() * -1i
y <- gen() + gen() * -1i
out <- bc.cplx(array(x), array(y), "*")
cbind(x, y, x*y, out)


```
