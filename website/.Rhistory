broadcast = bc.num(a, b, "+"),
check = FALSE,
min_iterations = 200
)
bc_all <- get_times(res, "broadcast")
if(length(bc_all) < 100) {
stop("too few benchmarks for 'R'")
}
median_bc[counter] <- median(bc_all)
q1_bc[counter] <- quantile(bc_all, 0.25)
q3_bc[counter] <- quantile(bc_all, 0.75)
counter <- counter + 1L
}
save(
dimsizes, median_bc, q1_bc, q3_bc,
file = "benchmarks/bm_bc_6d.RData"
)
# loop 7d ====
gc()
dimsizes <- seq(1L, 10L,  by = 1L)
niter <- length(dimsizes)
median_bc <- median_np <- q1_bc <- q1_np <- q3_bc <- q3_np <- vector("numeric", niter)
counter <- 1L
for(i in seq_along(dimsizes)) {
print(i)
n <- dimsizes[i]
x.dims <- rep(c(n, 1L), 4)[1:7]
y.dims <- rep(c(1L, n), 4)[1:7]
a <- array(runif(100), x.dims)
b <- array(runif(100), y.dims)
res <- bench::mark(
broadcast = bc.num(a, b, "+"),
check = FALSE,
min_iterations = 200
)
bc_all <- get_times(res, "broadcast")
if(length(bc_all) < 100) {
stop("too few benchmarks for 'R'")
}
median_bc[counter] <- median(bc_all)
q1_bc[counter] <- quantile(bc_all, 0.25)
q3_bc[counter] <- quantile(bc_all, 0.75)
counter <- counter + 1L
}
save(
dimsizes, median_bc, q1_bc, q3_bc,
file = "benchmarks/bm_bc_7d.RData"
)
setwd("D:/D Desktop/Publications/R package broadcast/broadcast/website/vignettes")
load("benchmarks/bm_bc_3d.RData")
median_np = scan("benchmarks/bm_py_median_3d.txt")
q1_np = scan("benchmarks/bm_py_q1_3d.txt")
median_np = scan("benchmarks/bm_py_3d_median.txt")
q1_np = scan("benchmarks/bm_py_3d_q1.txt")
q3_np = scan("benchmarks/bm_py_3d_q3.txt")
setwd("D:/D Desktop/Publications/R package broadcast/broadcast/website/vignettes")
# set-up ====
library(broadcast)
get_times <- function(obj, j) {
nms <- names(res$expression)
j <- which(nms == j)
idx <- rowSums(obj$gc[[j]][, 2:3]) == 0
times <- obj$time[[j]][idx]
return(times)
}
# loop 2d ====
gc()
dimsizes <- seq(1000L, 3000L,  by = 200L)
niter <- length(dimsizes)
median_bc <- median_np <- q1_bc <- q1_np <- q3_bc <- q3_np <- vector("numeric", niter)
counter <- 1L
for(i in seq_along(dimsizes)) {
print(i)
n <- dimsizes[i]
x.dims <- c(n, 1L)
y.dims <- c(1L, n)
a <- array(runif(100), x.dims)
b <- array(runif(100), y.dims)
res <- bench::mark(
broadcast = bc.num(a, b, "+"),
check = FALSE,
min_iterations = 200
)
bc_all <- get_times(res, "broadcast")
if(length(bc_all) < 100) {
stop("too few benchmarks for 'R'")
}
median_bc[counter] <- median(bc_all)
q1_bc[counter] <- quantile(bc_all, 0.25)
q3_bc[counter] <- quantile(bc_all, 0.75)
counter <- counter + 1L
}
median_bc <- median_bc * 1000
q1_bc <- q1_bc * 1000
q3_bc <- q3_bc * 1000
save(
dimsizes, median_bc, q1_bc, q3_bc,
file = "benchmarks/bm_bc_2d.RData"
)
# loop 3d ====
gc()
dimsizes <- seq(50L, 200L,  by = 10L)
niter <- length(dimsizes)
median_bc <- median_np <- q1_bc <- q1_np <- q3_bc <- q3_np <- vector("numeric", niter)
counter <- 1L
for(i in seq_along(dimsizes)) {
print(i)
n <- dimsizes[i]
x.dims <- rep(c(n, 1L), 2)[1:3]
y.dims <- rep(c(1L, n), 2)[1:3]
a <- array(runif(100), x.dims)
b <- array(runif(100), y.dims)
res <- bench::mark(
broadcast = bc.num(a, b, "+"),
check = FALSE,
min_iterations = 200
)
bc_all <- get_times(res, "broadcast")
if(length(bc_all) < 100) {
stop("too few benchmarks for 'R'")
}
median_bc[counter] <- median(bc_all)
q1_bc[counter] <- quantile(bc_all, 0.25)
q3_bc[counter] <- quantile(bc_all, 0.75)
counter <- counter + 1L
}
median_bc <- median_bc * 1000
q1_bc <- q1_bc * 1000
q3_bc <- q3_bc * 1000
save(
dimsizes, median_bc, q1_bc, q3_bc,
file = "benchmarks/bm_bc_3d.RData"
)
# loop 4d ====
gc()
dimsizes <- seq(10L, 55L,  by = 5L)
niter <- length(dimsizes)
median_bc <- median_np <- q1_bc <- q1_np <- q3_bc <- q3_np <- vector("numeric", niter)
counter <- 1L
for(i in seq_along(dimsizes)) {
print(i)
n <- dimsizes[i]
x.dims <- rep(c(n, 1L), 2)[1:4]
y.dims <- rep(c(1L, n), 2)[1:4]
a <- array(runif(100), x.dims)
b <- array(runif(100), y.dims)
res <- bench::mark(
broadcast = bc.num(a, b, "+"),
check = FALSE,
min_iterations = 200
)
bc_all <- get_times(res, "broadcast")
if(length(bc_all) < 100) {
stop("too few benchmarks for 'R'")
}
median_bc[counter] <- median(bc_all)
q1_bc[counter] <- quantile(bc_all, 0.25)
q3_bc[counter] <- quantile(bc_all, 0.75)
counter <- counter + 1L
}
median_bc <- median_bc * 1000
q1_bc <- q1_bc * 1000
q3_bc <- q3_bc * 1000
save(
dimsizes, median_bc, q1_bc, q3_bc,
file = "benchmarks/bm_bc_4d.RData"
)
# loop 5d ====
gc()
dimsizes <- seq(5L, 25L,  by = 5L)
niter <- length(dimsizes)
median_bc <- median_np <- q1_bc <- q1_np <- q3_bc <- q3_np <- vector("numeric", niter)
counter <- 1L
for(i in seq_along(dimsizes)) {
print(i)
n <- dimsizes[i]
x.dims <- rep(c(n, 1L), 3)[1:5]
y.dims <- rep(c(1L, n), 3)[1:5]
a <- array(runif(100), x.dims)
b <- array(runif(100), y.dims)
res <- bench::mark(
broadcast = bc.num(a, b, "+"),
check = FALSE,
min_iterations = 200
)
bc_all <- get_times(res, "broadcast")
if(length(bc_all) < 100) {
stop("too few benchmarks for 'R'")
}
median_bc[counter] <- median(bc_all)
q1_bc[counter] <- quantile(bc_all, 0.25)
q3_bc[counter] <- quantile(bc_all, 0.75)
counter <- counter + 1L
}
median_bc <- median_bc * 1000
q1_bc <- q1_bc * 1000
q3_bc <- q3_bc * 1000
save(
dimsizes, median_bc, q1_bc, q3_bc,
file = "benchmarks/bm_bc_5d.RData"
)
# loop 6d ====
gc()
dimsizes <- seq(1L, 15L,  by = 2L)
niter <- length(dimsizes)
median_bc <- median_np <- q1_bc <- q1_np <- q3_bc <- q3_np <- vector("numeric", niter)
counter <- 1L
for(i in seq_along(dimsizes)) {
print(i)
n <- dimsizes[i]
x.dims <- rep(c(n, 1L), 3)[1:6]
y.dims <- rep(c(1L, n), 3)[1:6]
a <- array(runif(100), x.dims)
b <- array(runif(100), y.dims)
res <- bench::mark(
broadcast = bc.num(a, b, "+"),
check = FALSE,
min_iterations = 200
)
bc_all <- get_times(res, "broadcast")
if(length(bc_all) < 100) {
stop("too few benchmarks for 'R'")
}
median_bc[counter] <- median(bc_all)
q1_bc[counter] <- quantile(bc_all, 0.25)
q3_bc[counter] <- quantile(bc_all, 0.75)
counter <- counter + 1L
}
median_bc <- median_bc * 1000
q1_bc <- q1_bc * 1000
q3_bc <- q3_bc * 1000
save(
dimsizes, median_bc, q1_bc, q3_bc,
file = "benchmarks/bm_bc_6d.RData"
)
# loop 7d ====
gc()
dimsizes <- seq(1L, 10L,  by = 1L)
niter <- length(dimsizes)
median_bc <- median_np <- q1_bc <- q1_np <- q3_bc <- q3_np <- vector("numeric", niter)
counter <- 1L
for(i in seq_along(dimsizes)) {
print(i)
n <- dimsizes[i]
x.dims <- rep(c(n, 1L), 4)[1:7]
y.dims <- rep(c(1L, n), 4)[1:7]
a <- array(runif(100), x.dims)
b <- array(runif(100), y.dims)
res <- bench::mark(
broadcast = bc.num(a, b, "+"),
check = FALSE,
min_iterations = 200
)
bc_all <- get_times(res, "broadcast")
if(length(bc_all) < 100) {
stop("too few benchmarks for 'R'")
}
median_bc[counter] <- median(bc_all)
q1_bc[counter] <- quantile(bc_all, 0.25)
q3_bc[counter] <- quantile(bc_all, 0.75)
counter <- counter + 1L
}
median_bc <- median_bc * 1000
q1_bc <- q1_bc * 1000
q3_bc <- q3_bc * 1000
save(
dimsizes, median_bc, q1_bc, q3_bc,
file = "benchmarks/bm_bc_7d.RData"
)
setwd("D:/D Desktop/Publications/R package broadcast/broadcast/website/vignettes")
load("benchmarks/bm_bc_3d.RData")
median_np = scan("benchmarks/bm_py_3d_median.txt")
q1_np = scan("benchmarks/bm_py_3d_q1.txt")
q3_np = scan("benchmarks/bm_py_3d_q3.txt")
library(tinyplot) |> suppressWarnings()
df1 <- data.frame(
broadcast = median_bc, numpy = median_np, i = dimsizes
)
df1 <- tidyr::pivot_longer(df1, 1:2, values_to = "median")
df2 <- data.frame(
q1_bc, q1_np, i = dimsizes
)
df2 <- tidyr::pivot_longer(df2, 1:2, values_to = "q1")
df3 <- data.frame(
q3_bc, q3_np, i = dimsizes
)
df3 <- tidyr::pivot_longer(df3, 1:2, values_to = "q3")
df <- cbind(df1, df2[, 3], df3[, 3])
module <- df$name
tinytheme("minimal")
tinyplot(
df$i, df$median, by = module, type = "l",
main = "benchmarks",
xlab = "size of each dimension",
ylab = "median time (ms)"
)
tinyplot_add(
min = df$q1, ymax = df$q3, by = module,
type = type_ribbon(alpha = 0.25)
)
load("benchmarks/bm_bc_4d.RData")
median_np = scan("benchmarks/bm_py_4d_median.txt")
q1_np = scan("benchmarks/bm_py_4d_q1.txt")
q3_np = scan("benchmarks/bm_py_4d_q3.txt")
library(tinyplot) |> suppressWarnings()
df1 <- data.frame(
broadcast = median_bc, numpy = median_np, i = dimsizes
)
df1 <- tidyr::pivot_longer(df1, 1:2, values_to = "median")
df2 <- data.frame(
q1_bc, q1_np, i = dimsizes
)
df2 <- tidyr::pivot_longer(df2, 1:2, values_to = "q1")
df3 <- data.frame(
q3_bc, q3_np, i = dimsizes
)
df3 <- tidyr::pivot_longer(df3, 1:2, values_to = "q3")
df <- cbind(df1, df2[, 3], df3[, 3])
module <- df$name
tinytheme("minimal")
tinyplot(
df$i, df$median, by = module, type = "l",
main = "benchmarks",
xlab = "size of each dimension",
ylab = "median time (ms)"
)
tinyplot_add(
min = df$q1, ymax = df$q3, by = module,
type = type_ribbon(alpha = 0.25)
)
load("benchmarks/bm_bc_5d.RData")
median_np = scan("benchmarks/bm_py_5d_median.txt")
q1_np = scan("benchmarks/bm_py_5d_q1.txt")
q3_np = scan("benchmarks/bm_py_5d_q3.txt")
library(tinyplot) |> suppressWarnings()
df1 <- data.frame(
broadcast = median_bc, numpy = median_np, i = dimsizes
)
df1 <- tidyr::pivot_longer(df1, 1:2, values_to = "median")
df2 <- data.frame(
q1_bc, q1_np, i = dimsizes
)
df2 <- tidyr::pivot_longer(df2, 1:2, values_to = "q1")
df3 <- data.frame(
q3_bc, q3_np, i = dimsizes
)
df3 <- tidyr::pivot_longer(df3, 1:2, values_to = "q3")
df <- cbind(df1, df2[, 3], df3[, 3])
module <- df$name
tinytheme("minimal")
tinyplot(
df$i, df$median, by = module, type = "l",
main = "benchmarks",
xlab = "size of each dimension",
ylab = "median time (ms)"
)
tinyplot_add(
min = df$q1, ymax = df$q3, by = module,
type = type_ribbon(alpha = 0.25)
)
load("benchmarks/bm_bc_6d.RData")
median_np = scan("benchmarks/bm_py_6d_median.txt")
q1_np = scan("benchmarks/bm_py_6d_q1.txt")
q3_np = scan("benchmarks/bm_py_6d_q3.txt")
library(tinyplot) |> suppressWarnings()
df1 <- data.frame(
broadcast = median_bc, numpy = median_np, i = dimsizes
)
df1 <- tidyr::pivot_longer(df1, 1:2, values_to = "median")
df2 <- data.frame(
q1_bc, q1_np, i = dimsizes
)
df2 <- tidyr::pivot_longer(df2, 1:2, values_to = "q1")
df3 <- data.frame(
q3_bc, q3_np, i = dimsizes
)
df3 <- tidyr::pivot_longer(df3, 1:2, values_to = "q3")
df <- cbind(df1, df2[, 3], df3[, 3])
module <- df$name
tinytheme("minimal")
tinyplot(
df$i, df$median, by = module, type = "l",
main = "benchmarks",
xlab = "size of each dimension",
ylab = "median time (ms)"
)
tinyplot_add(
min = df$q1, ymax = df$q3, by = module,
type = type_ribbon(alpha = 0.25)
)
load("benchmarks/bm_bc_7d.RData")
library(tinyplot) |> suppressWarnings()
df1 <- data.frame(
broadcast = median_bc, numpy = median_np, i = dimsizes
)
df1 <- tidyr::pivot_longer(df1, 1:2, values_to = "median")
df2 <- data.frame(
q1_bc, q1_np, i = dimsizes
)
load("benchmarks/bm_bc_7d.RData")
median_np = scan("benchmarks/bm_py_7d_median.txt")
q1_np = scan("benchmarks/bm_py_7d_q1.txt")
q3_np = scan("benchmarks/bm_py_7d_q3.txt")
library(tinyplot) |> suppressWarnings()
df1 <- data.frame(
broadcast = median_bc, numpy = median_np, i = dimsizes
)
df1 <- tidyr::pivot_longer(df1, 1:2, values_to = "median")
df2 <- data.frame(
q1_bc, q1_np, i = dimsizes
)
df2 <- tidyr::pivot_longer(df2, 1:2, values_to = "q1")
load("benchmarks/bm_bc_7d.RData")
median_np = scan("benchmarks/bm_py_7d_median.txt")
q1_np = scan("benchmarks/bm_py_7d_q1.txt")
q3_np = scan("benchmarks/bm_py_7d_q3.txt")
setwd("D:/D Desktop/Publications/R package broadcast/broadcast/website/vignettes")
reticulate::repl_python()
load("benchmarks/bm_bc_7d.RData")
median_np = scan("benchmarks/bm_py_7d_median.txt")
q1_np = scan("benchmarks/bm_py_7d_q1.txt")
q3_np = scan("benchmarks/bm_py_7d_q3.txt")
library(tinyplot) |> suppressWarnings()
df1 <- data.frame(
broadcast = median_bc, numpy = median_np, i = dimsizes
)
df1 <- tidyr::pivot_longer(df1, 1:2, values_to = "median")
df2 <- data.frame(
q1_bc, q1_np, i = dimsizes
)
df2 <- tidyr::pivot_longer(df2, 1:2, values_to = "q1")
df3 <- data.frame(
q3_bc, q3_np, i = dimsizes
)
df3 <- tidyr::pivot_longer(df3, 1:2, values_to = "q3")
df <- cbind(df1, df2[, 3], df3[, 3])
module <- df$name
tinytheme("minimal")
tinyplot(
df$i, df$median, by = module, type = "l",
main = "benchmarks",
xlab = "size of each dimension",
ylab = "median time (ms)"
)
tinyplot_add(
min = df$q1, ymax = df$q3, by = module,
type = type_ribbon(alpha = 0.25)
)
load("benchmarks/bm_bc_2d.RData")
median_np = scan("benchmarks/bm_py_2d_median.txt")
q1_np = scan("benchmarks/bm_py_2d_q1.txt")
q3_np = scan("benchmarks/bm_py_2d_q3.txt")
library(tinyplot) |> suppressWarnings()
df1 <- data.frame(
broadcast = median_bc, numpy = median_np, i = dimsizes
)
df1 <- tidyr::pivot_longer(df1, 1:2, values_to = "median")
df2 <- data.frame(
q1_bc, q1_np, i = dimsizes
)
reticulate::repl_python()
x <- array(1:20, c(4, 5))
y <- array(1:5*10, c(1, 5))
print(x)
print(y)
abind(x, y)
abind::abind(x, y)
abind::abind(x, y, 2)
abind::abind(x, y, along = 2)
bind_array(list(x, y))
library(broadcast)
bind_array(list(x, y))
bind_array(list(x, y), 2L)
x <- array(1:20, c(4, 5, 3))
x
bind_array(list(x, y), 2L, ndim2bc = 0)
x <- array(1:20, c(4, 5, 3))
print(x)
bind_array(list(x, y), 2L)
bind_array(list(x, y), 2L, ndim2bc = 3L)
x <- array(1:20, c(5, 3), list(NULL, LETTERS[1:3]))
y <- array(-1:-20, c(5, 3))
z <- array(-1:-20, c(5, 3))
input <- list(a = x, b = y, c = z)
bind_array(input, 2L)
library(broadcast)
bind_array(input, 2L)
input <- list(a = x, b = y, z)
bind_array(input, 2L)
bind_array(unname(input), 2L)
unname(input)
bind_array(list(a = unname(x), b = y, c = z), 2L)
bind_array(list(a = x, b = y, z), 2L)
bind_array(list(x, y, z), 2L)
bind_array(list(a = unname(x), b = y, c = z), 2L)
setwd("D:/D Desktop/Publications/R package broadcast/broadcast/website")
library(quarto)
# wait until render is done!
quarto_preview()
bind_array(list(x, a = y, b = z), 2L)
x <- array(1:20, c(5, 3), list(NULL, LETTERS[1:3]))
y <- array(-1:-20, c(5, 3))
z <- array(-1:-20, c(5, 1))
bind_array(list(a = x, b = y, z), 2L)
bind_array(list(x, y, z), 2L)
x <- array(1:20, c(5, 3), list(NULL, LETTERS[1:3]))
y <- array(-1:-20, c(5, 3))
z <- array(-1:-20, c(5, 3))
bind_array(list(a = x, b = y, z), 2L)
bind_array(list(x, y, z), 2L)
bind_array(list(a = unname(x), b = y, c = z), 2L)
bind_array(list(x, a = y, b = z), 2L)
