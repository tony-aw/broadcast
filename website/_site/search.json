[
  {
    "objectID": "vignettes/e_benchmarks.html",
    "href": "vignettes/e_benchmarks.html",
    "title": "Benchmarks with Numpy+reticulate",
    "section": "",
    "text": "1 Introduction\nIn this article, the speed of ‘broadcast’ is compared to the speed of ‘Numpy’ via {reticulate}.\n \n\n\n2 Keeping comparisons fair\nTo keep the comparisons between ‘broadcast’ and ‘Numpy’+‘reticulate’ fair, a number of measures have been taken:\n\nconversion from Numpy to ‘R’ is DISABLED; this allows for comparing the speed more fairly. When conversion would be enabled, precious time would be wasted to convert from Numpy structures to comparable ‘R’ structures.\ngarbage collection is disabled in reticulate’s Python. In ‘R’, only benchmarks with no garbage collection, or level 0 garbage collection, is used. I feel this keeps the comparisons relatively fair (but it’s not perfect).\n‘R’ has more support for missing values than ‘Numpy’, which also leads to a difference in speed. But both ‘R’ and ‘Numpy’ handle missing values equally in decimal numbers ( 64bit floats in Numpy and 64bit doubles in ‘R’ ), through the NaN construct. Therefore, only operations on decimal numbers are compared.\n\n \n\n\n3 Many Orthogonal Arrays\n8 pairs of decimal number arrays are created in both ‘R’ and ‘Numpy’. They all have a length of (approximately) 9*10^6 elements. Each pair will have a different number of dimensions, from 2 to 9 (hence 8 pairs of arrays). I.e. a pair of 2d arrays, a pair of 3d arrays, etc.\nThese pairs of arrays are fully orthogonal, thus the maximum amount of broadcasting will be employed.\nFor each pair of array the outer sum is computed using ‘broadcast’ and ‘Numpy’. This computation is repeated 100 times, and the median result is taken.\nThus we get the following code:\n\n# set-up ====\nlibrary(broadcast)\nlibrary(tinycodet)\nimport_as(~rt, \"reticulate\")\nnp &lt;- rt$import(\"numpy\", convert = FALSE)\ngc &lt;- rt$import(\"gc\", convert = FALSE)\nget_times &lt;- function(obj, j) {\n  nms &lt;- names(res$expression)\n  j &lt;- which(nms == j)\n  idx &lt;- rowSums(obj$gc[[j]][, 2:3]) == 0\n  times &lt;- obj$time[[j]][idx]\n  return(times)\n}\ngc$disable()\n\n# loop\nmedian_bc &lt;- median_np &lt;- q1_bc &lt;- q1_np &lt;- q3_bc &lt;- q3_np &lt;- vector(\"numeric\", 8)\ncounter &lt;- 1L\ntarget_len &lt;- 9e6\n\nfor(i in 2:9) {\n  print(i)\n  n &lt;- round(target_len^(1/i)) |&gt; as.integer()\n  len &lt;- n^i\n  cat(\"i = \", i, \"\\n\")\n  cat(\"n = \", n, \"\\n\")\n  cat(\"len = \", len, \"\\n\")\n  x.dims &lt;- rep(c(n, 1L), i - 1)[1:i]\n  y.dims &lt;- rep(c(1L, n), i - 1)[1:i]\n  a.dims &lt;- rt$r_to_py(as.list(x.dims))\n  b.dims &lt;- rt$r_to_py(as.list(y.dims))\n  \n  npa &lt;- np$random$random_sample(a.dims)\n  npb &lt;- np$random$random_sample(b.dims)\n  a &lt;- array(runif(100), x.dims)\n  b &lt;- array(runif(100), y.dims)\n  \n  res &lt;- bench::mark(\n    broadcast = bc.num(a, b, \"+\"),\n    `numpy (NO conversion to R)` = npa + npb,\n    check = FALSE,\n    min_iterations = 100\n  )\n  bc_all &lt;- get_times(res, \"broadcast\")\n  np_all &lt;- get_times(res, \"numpy (NO conversion to R)\")\n  median_bc[counter] &lt;- median(bc_all)\n  median_np[counter] &lt;- median(np_all)\n  q1_bc[counter] &lt;- quantile(bc_all, 0.25)\n  q3_bc[counter] &lt;- quantile(bc_all, 0.75)\n  q1_np[counter] &lt;- quantile(np_all, 0.25)\n  q3_np[counter] &lt;- quantile(np_all, 0.75)\n  \n  counter &lt;- counter + 1L\n}\n\nUsing {tinyplot}, the median, first quartile, and third quartile of the bench-marked computation times are presented in the following graph:\n\n\n\n\n\n \n\n\n4 Large non-orthogonal arrays comparisons\nHow about arrays that are not fully orthogonal, but still require a lot of broadcasting in pari-wise computations?\nHere is the benchmark:\n\n\nlibrary(broadcast)\nlibrary(tinycodet)\nimport_as(~rt, \"reticulate\")\nnp &lt;- rt$import(\"numpy\", convert = FALSE)\ngc &lt;- rt$import(\"gc\", convert = FALSE)\ngc$disable()\n\nn &lt;- 26L\nnpa &lt;- np$random$rand(n, 1L, n, 1L, n)\nnpb &lt;- np$random$rand(n, n, 1L, n, 1L)\n\na.dim &lt;- c(n, rep(c(1L, n), 2))\nb.dim &lt;- c(n, rep(c(n, 1L), 2))\na &lt;- array(rnorm(100), a.dim)\nb &lt;- array(rnorm(100), b.dim)\n\nbm_numpy_large &lt;- bench::mark(\n  broadcast = bc.num(a, b, \"+\"),\n  `numpy (no conversion to R)` = npa + npb,\n  check = FALSE,\n  min_iterations = 200,\n)\nsummary(bm_numpy_large)\nggplot2::autoplot(bm_numpy_large)\n\n\n#&gt; # A tibble: 2 × 6\n#&gt;   expression                      min   median `itr/sec` mem_alloc `gc/sec`\n#&gt;   &lt;bch:expr&gt;                 &lt;bch:tm&gt; &lt;bch:tm&gt;     &lt;dbl&gt; &lt;bch:byt&gt;    &lt;dbl&gt;\n#&gt; 1 broadcast                    16.6ms   17.6ms      55.4    90.6MB     27.3\n#&gt; 2 numpy (no conversion to R)   25.4ms   30.9ms      32.4        0B      0"
  },
  {
    "objectID": "vignettes/c_broadcasting_explained.html",
    "href": "vignettes/c_broadcasting_explained.html",
    "title": "Broadcasting Explained",
    "section": "",
    "text": "#&gt; Warning: package 'kableExtra' was built under R version 4.4.1"
  },
  {
    "objectID": "vignettes/c_broadcasting_explained.html#introducing-broadcasting",
    "href": "vignettes/c_broadcasting_explained.html#introducing-broadcasting",
    "title": "Broadcasting Explained",
    "section": "2.3 Introducing Broadcasting",
    "text": "2.3 Introducing Broadcasting\nIn an operation like outer(x, y, \"+\"), x and y are replicated to become the same size. The thing is, physical replication - and thus copying - of the dimensions of x and y should not be necessary; they only need to be recycled virtually.\nVirtual recycling does not actually physically replicate x and y. Instead, nested loops in ‘C’ and ‘C++’ are used to simulate a recycled array.\nThis is similar to how ‘R’ recycles regular vectors.\nVirtual recycling requires no additional memory (apart from allocating the final end result); it is much faster and much more memory efficient than using the outer() function or something similar.\nAnd that is what broadcasting does: broadcasting provides fast virtual recycling of array dimensions in the context of operations involving 2 (or more) arrays without allocating additional memory.\nIn the earlier example, we used:\n\nx[, rep(1L, 5L)] + y[rep(1L, 5L),]\n#&gt;      [,1] [,2] [,3] [,4] [,5]\n#&gt; [1,]   11   21   31   41   51\n#&gt; [2,]   12   22   32   42   52\n#&gt; [3,]   13   23   33   43   53\n#&gt; [4,]   14   24   34   44   54\n#&gt; [5,]   15   25   35   45   55\n\nouter(x, y, \"+\") |&gt; drop()\n#&gt;      [,1] [,2] [,3] [,4] [,5]\n#&gt; [1,]   11   21   31   41   51\n#&gt; [2,]   12   22   32   42   52\n#&gt; [3,]   13   23   33   43   53\n#&gt; [4,]   14   24   34   44   54\n#&gt; [5,]   15   25   35   45   55\n\nTo compute the outer sum using broadcasting through the ‘broadcast’ package, we can do the following:\n\nlibrary(broadcast)\n\nbc.num(x, y, \"+\")\n#&gt;      [,1] [,2] [,3] [,4] [,5]\n#&gt; [1,]   11   21   31   41   51\n#&gt; [2,]   12   22   32   42   52\n#&gt; [3,]   13   23   33   43   53\n#&gt; [4,]   14   24   34   44   54\n#&gt; [5,]   15   25   35   45   55\n\nThe result is the same (as it should). But as the size of the resulting array increases, the broadcasted functions become more and more efficient in terms of both speed and memory, in comparison with base ‘R’ approaches.\nBenchmarks can be found on the website."
  },
  {
    "objectID": "vignettes/c_broadcasting_explained.html#conformability",
    "href": "vignettes/c_broadcasting_explained.html#conformability",
    "title": "Broadcasting Explained",
    "section": "4.1 Conformability",
    "text": "4.1 Conformability\nBroadcasted operations only work when 2 arrays are conformable for broadcasting.\nConsider again 2 arrays x and y, and their dimensions given by dim(x) and dim(y), respectively.\n‘broadcast’ goes through dim(x) and dim(y), from left (i.e. first dimension / rows) to right (i.e. the last dimension), and checks for each axis i if at least one of the following conditions is TRUE:\n\ndim(x)[i] and dim(y)[i] are equal;\neither dim(x)[i] or dim(y)[i] is 1;\neither dim(x)[i] or dim(y)[i] is non-existing.\n\nif at least one of the above conditions is true for each and every one of the dimensions of x and y, the 2 arrays are compatible for broadcasted operations. If not, they are not compatible, and attempting to perform a broadcasted operations results in an error.\nTo illustrate, let’s check 2 arrays to see if they are compatible:\n\nx &lt;- array(rnorm(10), c(10, 1, 9, 6))\ny &lt;- array(rnorm(10), c(10, 5, 1))\n\n\n\n\n\n\ndim(x)\ndim(y)\ncompatible\nreason\n\n\n\n\n10\n10\nTRUE\nequal\n\n\n1\n5\nTRUE\neither is 1\n\n\n9\n1\nTRUE\neither is 1\n\n\n6\nNA\nTRUE\neither is missing\n\n\n\n\n\n\n\nAs shown in the data.frame above, all dimensions of x and y are compatible.\nTherefore, broadcasted binary operations involving x and y can be performed.\n \nNow let’s look at another 2 arrays, and see if they are compatible:\n\nx &lt;- array(rnorm(10), c(10, 1, 9, 6))\ny &lt;- array(rnorm(10), c(10, 5, 2))\n\n\n\n\n\n\ndim(x)\ndim(y)\ncompatible\nreason\n\n\n\n\n10\n10\nTRUE\nequal\n\n\n1\n5\nTRUE\neither is 1\n\n\n9\n2\nFALSE\nnot equal & neither is 1/missing\n\n\n6\nNA\nTRUE\neither is missing\n\n\n\n\n\n\n\nOne of the dimensions, namely the third dimension, is not compatible. Therefore, these 2 arrays are not conformable for broadcasted operations."
  },
  {
    "objectID": "vignettes/c_broadcasting_explained.html#which-dimensions-are-broadcasted",
    "href": "vignettes/c_broadcasting_explained.html#which-dimensions-are-broadcasted",
    "title": "Broadcasting Explained",
    "section": "4.2 Which dimensions are broadcasted",
    "text": "4.2 Which dimensions are broadcasted\nIn the context of an operation involving exactly 2 arrays, this sub-section explains which dimensions of which array is broadcasted, and which dimension of which array is left as-is.\nThere are 3 scenarios relevant for this explanation.\n \nScenario 1:\nFor some dimension i, dim(x)[i] and dim(y)[i] are equal.\nIn this scenario, no broadcasting needs to occur on that dimension for either array.\n \nScenario 2:\nFor some dimension i, suppose dim(x)[i] == 1 and dim(y)[i] &gt; 1.\nThen dimension dim(x)[i] is broadcasted to size dim(y)[i].\nSimilarly, if dim(x)[i] &gt; 1 and dim(y)[i] == 1, dimension dim(y)[i] is broadcasted to size dim(x)[i].\n \nScenario 3:\nFinally, suppose for some dimension i, dim(x)[i] &gt; 1, and dim(y)[i] is non-existing.\nI.e., x has more dimensions than y.\nIn this case, the missing dimension in y is replaced with a dimensions of size 1, and scenario 2 is used.\nSimilarly, if dim(y)[i] &gt; 1 and dim(x)[i] is non-existing, the missing dimension in x is replaced with a dimension of size 1 and we get back to scenario 2.\nIt does not matter how much difference there is between the number of dimensions of x and the number of dimensions of y: any number of missing dimensions will be replaced with 1, as long as the total number of dimensions for each array does not exceed 16.\n \nIllustration\nTo illustrate, let’s check 2 conformable arrays, and see which dimension of which array is broadcasted by how much\n\nx &lt;- array(rnorm(10), c(10, 1, 1, 9, 6))\ny &lt;- array(rnorm(10), c(10, 1, 5, 1))\n\n\n\n\n\n\ni\ndim(x)\ndim(y)\nbroadcasted\nreason\nnote\n\n\n\n\n1\n10\n10\nneither\ndims equal\n\n\n\n2\n1\n1\nneither\ndims equal\n\n\n\n3\n1\n5\nx\ndim(x)[i] == 1\ndim(x)[i] recycled to size 5\n\n\n4\n9\n1\ny\ndim(y)[i] == 1\ndim(y)[i] recycled to size 9\n\n\n5\n6\nNA\ny\ndim(y)[i] is missing\ndim(y) extended by 1"
  },
  {
    "objectID": "vignettes/a_readme.html#overview",
    "href": "vignettes/a_readme.html#overview",
    "title": "1 Introduction",
    "section": "1.1 🗺️Overview",
    "text": "1.1 🗺️Overview\nThe ‘broadcast’ package, as the name suggests, performs “broadcasting” (similar to broadcasting in the ‘Numpy’ module for ‘Python’).\nIn the context of operations involving 2 (or more) arrays, “broadcasting” refers to recycling array dimensions without allocating additional memory, which is considerably faster and more memory-efficient than R’s regular dimensions repetition mechanism.\nPlease read the article “Broadcasting explained” for a more complete explanation of what “broadcasting” is.\n \nAt its core, the ‘broadcast’ package provides 3 functionalities, all 3 related to “broadcasting”:\n \nFirst, ‘broadcast’ provides functions for element-wise outer computations between any 2 arrays.\nThese are similar to base R’s outer() function, but using broadcasting, which is faster and more efficient than the mechanism employed by outer().\nThe outer-like functions provided by ‘broadcast’ are optimised for a large set of operations, including, but not limited to, the following:\n\nrelational operations (like ==, !=, &lt;, &gt;, &lt;=, &gt;=, etc.);\narithmetic operations (like +, -, *, /, ^, etc.);\nBoolean combiner operations (like &, |, xor, etc.);\nstring concatenation, string (in)equality, and string distance (Levenshtein) operations.\n\nBase ‘R’ outer() function has some sloppy rules regarding the dimensions of the output, making it hard to predict the output shape.\nThe outer-like functions provided by ‘broadcast’ have very strict broadcasting rules, making it easy to accurately predict the dimensions of the result.\n \nSecond, ‘broadcast’ provides the bind_array() function, which is an broadcasted and enhanced form of the fantastic abind::abind() function:\n\nbind_array() allows for broadcasting (obviously), whereas abind::abind() does not.\nbind_array() is significantly faster and uses less memory than abind::abind().\nbind_array() also differs from abind::abind() in that it can handle recursive arrays properly; abind::abind() unlists everything to atomic arrays, ruining the structure.\n\n \nThird, ‘broadcast’ provides several generic functions for broadcasting:\n\nbcapply(): a broadcasted apply-like function that works on pairs of arrays.\nbc_ifelse(): a broadcasted ifelse() function. Broadcasts between the yes and no arguments."
  },
  {
    "objectID": "vignettes/a_readme.html#why-use-broadcast",
    "href": "vignettes/a_readme.html#why-use-broadcast",
    "title": "1 Introduction",
    "section": "1.2 🤷🏽Why use ‘broadcast’",
    "text": "1.2 🤷🏽Why use ‘broadcast’\nEfficiency\nBroadcasting dimensions is faster and more memory efficient than repeating dimensions.\nThis is not simply a need for speed.\nEfficient programs use less energy and resources, and is thus better for the environment.\nAs a favoured language for the sciences, ‘R’ should not throw away an opportunity to become more efficient.\nThe Benchmarks show that ‘broadcast’ has a somewhat similar speed as equivalent operations in ‘Numpy’.\n \nConvenience\nBroadcasting can make many applications much easier to write.\nFor Example: Suppose you want to compute some metric on all possible pair-wise combinations of the elements of 2 vectors.\nYou could write slow and ugly nested for-loops…\nBut you can instead also make the vectors orthogonal, and perform the broadcasting computation on the 2 orthogonal vectors.\nThe broadcasted method runs much faster, is faster to type, and easier to reason about, than using the clumsy nested for-loops.\nFor more practical examples, see Examples of Practical Applictaions.\n \nHigh Test Coverage\nThe ‘broadcast’ package has been developed with a set of unit tests that have high (&gt; 95%) coverage.\n \nMinimal Dependencies\nBesides linking to ‘Rcpp’, ‘broadcast’ does not depend on, vendor, link to, include, or otherwise use any external libraries; ‘broadcast’ was essentially made from scratch and can be installed out-of-the-box.\nNot using external libraries brings a number of advantages:\n\nAvoid dependency hell: Every dependency that is added to a software package increases the likelihood of something breaking (AKA “dependency hell”). ‘broadcast’ thus avoids this.\nAvoid wasting resources for translations: Using libraries from other languages, such as ‘xtensor’ (‘C++’) or ‘Numpy’ (‘Python’) means that - at some point - one needs to convert between the structure of R to that of the other language, and vice-versa, which wastes precious time and memory. ‘broadcast’ requires no such translations of structures, and thus does not waste precious time and memory.\nEnsure consistent behaviour: Using libraries from other languages also means one cannot always guarantee consistent behaviour of some operations. For example: both ‘Numpy’ and ‘xtensor’ have only limited support for missing values, whereas ‘R’ supports missing values for both atomic and recursive array/vector types (except type of ‘Raw’). Since ‘broadcast’ does not rely on external libraries, it can ensure consistent behaviour."
  },
  {
    "objectID": "vignettes/a_readme.html#documentation",
    "href": "vignettes/a_readme.html#documentation",
    "title": "1 Introduction",
    "section": "1.3 📖Documentation",
    "text": "1.3 📖Documentation\n\nInstallation:\nBroadcasting Explained:\nExamples of Practical Applications:\nComparisons & Benchmarks:"
  },
  {
    "objectID": "man/outer-like functions/bc.str.html",
    "href": "man/outer-like functions/bc.str.html",
    "title": "bc.str",
    "section": "",
    "text": "The bc.str() function performs broadcasted string operations on pairs of arrays.  \n\n\n\nbc.str(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable atomic arrays of typee character.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported concatenation operators: +.  Supported relational operators: ==, !=.  Supported distance operators: levenshtein. \n\n\n\n\n\n\n\nFor concatenation operation:  A character array as a result of the broadcasted concatenation operation.   For relational operation:  A logical array as a result of the broadcasted relational comparison.   For distance operation:  An integer array as a result of the broadcasted distance measurement.  \n\n\n\n\nlibrary(\"broadcast\")\n\n\n# string concatenation:\nx &lt;- array(letters, c(10, 2, 1))\ny &lt;- array(letters, c(10,1,1))\nbc.str(x, y, \"+\")\n\n, , 1\n\n      [,1] [,2]\n [1,] \"aa\" \"ka\"\n [2,] \"bb\" \"lb\"\n [3,] \"cc\" \"mc\"\n [4,] \"dd\" \"nd\"\n [5,] \"ee\" \"oe\"\n [6,] \"ff\" \"pf\"\n [7,] \"gg\" \"qg\"\n [8,] \"hh\" \"rh\"\n [9,] \"ii\" \"si\"\n[10,] \"jj\" \"tj\"\n\n# string (in)equality:\nbc.str(array(letters), array(letters), \"==\")\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.str(array(letters), array(letters), \"!=\")\n\n [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[25] FALSE FALSE\n\n# string distance (Levenshtein):\nx &lt;- array(month.name, c(12, 1))\ny &lt;- array(month.abb, c(1, 12))\nout &lt;- bc.str(x, y, \"levenshtein\")\ndimnames(out) &lt;- list(month.name, month.abb)\nprint(out)\n\n          Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\nJanuary     4   7   5   6   5   5   5   6   7   7   7   7\nFebruary    7   5   6   7   6   7   7   7   7   8   8   7\nMarch       4   5   2   4   3   5   5   5   5   4   5   4\nApril       5   5   4   2   5   5   4   4   5   5   5   5\nMay         2   3   1   3   0   3   3   3   3   3   3   3\nJune        2   4   4   4   4   1   2   3   4   4   4   4\nJuly        3   4   4   4   3   2   1   3   4   4   4   4\nAugust      6   6   6   5   6   5   5   3   6   5   6   6\nSeptember   9   7   8   7   9   9   9   9   6   8   9   8\nOctober     7   6   6   6   7   7   7   7   6   4   6   6\nNovember    8   6   7   7   8   8   8   8   7   8   5   7\nDecember    8   6   7   7   8   8   8   8   7   7   8   5"
  },
  {
    "objectID": "man/outer-like functions/bc.str.html#broadcasted-string-operations",
    "href": "man/outer-like functions/bc.str.html#broadcasted-string-operations",
    "title": "bc.str",
    "section": "",
    "text": "The bc.str() function performs broadcasted string operations on pairs of arrays.  \n\n\n\nbc.str(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable atomic arrays of typee character.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported concatenation operators: +.  Supported relational operators: ==, !=.  Supported distance operators: levenshtein. \n\n\n\n\n\n\n\nFor concatenation operation:  A character array as a result of the broadcasted concatenation operation.   For relational operation:  A logical array as a result of the broadcasted relational comparison.   For distance operation:  An integer array as a result of the broadcasted distance measurement.  \n\n\n\n\nlibrary(\"broadcast\")\n\n\n# string concatenation:\nx &lt;- array(letters, c(10, 2, 1))\ny &lt;- array(letters, c(10,1,1))\nbc.str(x, y, \"+\")\n\n, , 1\n\n      [,1] [,2]\n [1,] \"aa\" \"ka\"\n [2,] \"bb\" \"lb\"\n [3,] \"cc\" \"mc\"\n [4,] \"dd\" \"nd\"\n [5,] \"ee\" \"oe\"\n [6,] \"ff\" \"pf\"\n [7,] \"gg\" \"qg\"\n [8,] \"hh\" \"rh\"\n [9,] \"ii\" \"si\"\n[10,] \"jj\" \"tj\"\n\n# string (in)equality:\nbc.str(array(letters), array(letters), \"==\")\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.str(array(letters), array(letters), \"!=\")\n\n [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[25] FALSE FALSE\n\n# string distance (Levenshtein):\nx &lt;- array(month.name, c(12, 1))\ny &lt;- array(month.abb, c(1, 12))\nout &lt;- bc.str(x, y, \"levenshtein\")\ndimnames(out) &lt;- list(month.name, month.abb)\nprint(out)\n\n          Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\nJanuary     4   7   5   6   5   5   5   6   7   7   7   7\nFebruary    7   5   6   7   6   7   7   7   7   8   8   7\nMarch       4   5   2   4   3   5   5   5   5   4   5   4\nApril       5   5   4   2   5   5   4   4   5   5   5   5\nMay         2   3   1   3   0   3   3   3   3   3   3   3\nJune        2   4   4   4   4   1   2   3   4   4   4   4\nJuly        3   4   4   4   3   2   1   3   4   4   4   4\nAugust      6   6   6   5   6   5   5   3   6   5   6   6\nSeptember   9   7   8   7   9   9   9   9   6   8   9   8\nOctober     7   6   6   6   7   7   7   7   6   4   6   6\nNovember    8   6   7   7   8   8   8   8   7   8   5   7\nDecember    8   6   7   7   8   8   8   8   7   7   8   5"
  },
  {
    "objectID": "man/outer-like functions/bc.i.html",
    "href": "man/outer-like functions/bc.i.html",
    "title": "bc.i",
    "section": "",
    "text": "The bc.i() function performs broadcasted integer numeric operations on 2 numeric or logical arrays.   Please note that these operations will treat the input as 53bit integers, and will efficiently truncate when necessary.  Therefore, something like bc.i(1, 1.5, “==”) returns TRUE, because trunc(1.5) equals 1.  \n\n\n\nbc.i(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable logical or numeric arrays.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported arithmetic operators: +, -, *, gcd, ^, pmin, pmax.  Supported relational operators: ==, !=, &lt;, &gt;, &lt;=, &gt;=. \n\n\n\n\n\n\n\nFor arithmetic operators:  A numeric array of whole numbers, as a result of the broadcasted arithmetic operation.  Base ‘R’ supports 53 bit integers, which thus range from approximately -9 quadrillion to +9 quadrillion.  Values outside of this range will be returned as -Inf or Inf, as an extra protection against integer overflow.   For relational operators:  A logical array as a result of the broadcasted integer relational comparison.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(NA, 1.1:1000.1), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\nbc.i(x, y, \"+\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  955  457  673  379  361  826  218  369   98\n [2,]  497  820  501  759  459  302  795  262   64\n [3,]  990  350  239  579  704  172  732  899  777\n [4,]  213   42  848  136  882  933  746  339  360\n [5,]  433  540  819  363   59  751  718  410  206\n [6,]  229  118  253  306  808  440  458  123  227\n [7,]  903  636  608  867  867  223   78  203  935\n [8,]  408  564  612   23  917  294  713  634  718\n [9,]  141  567   34  935  374  837  766  954  925\n[10,]  827  933 1002  356  154  713  214  185  815\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  428  629  607  190  652  502  398  546  630\n [2,]  290  696  492  914  853  357  784  286  379\n [3,]  255  720  286  132  454  115  551  222  157\n [4,]  621  217  767  608  598  644  383  821  509\n [5,]  955   43  294  509  233  198   42  817  804\n [6,]  361  409  243  739  417  849  243   88  827\n [7,]  230  561  811  574  608   42  371  590  692\n [8,]   47  691  477  396  850  175  612  978  308\n [9,]  510  609  254  221   89   64  656  768   80\n[10,]  924  271  263  230   23  234  954  691   67\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  873  562  674  624  439  594  508  481  476\n [2,]  230  106  323  585  737  675  825  472  997\n [3,]  368  268   92  916  565  229  164  489  420\n [4,]  565   69  264  719  977  710  764  962  189\n [5,]  910  354  982  188  946  177  552  740  699\n [6,]  192  783   24  784  899   23   78  723  853\n [7,]  199  197  262  800  436  653  620  301  309\n [8,]  257  778  329  490  392  758  250  895  788\n [9,]  237   33  376  703  989  252  538  210  351\n[10,]  805   12  410  261  858  320  608  903  655\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  862  476  761   78  832  188  189   22  337\n [2,]  142  534  547  605  806  756  394  698  211\n [3,]  460  927  378  725  557  993  911   84  138\n [4,]  606  556  360  935  871  761  366  116  423\n [5,]  763  316   55  212   19  910  236  870  559\n [6,]  102  520  980  841  398  378  740  854  931\n [7,]  683  431  144  588   98  693   55   22  845\n [8,]  245  910  187  545  784  779  814  151  740\n [9,]  325  483  328  724  369  868  581  744  569\n[10,]  246  719  316  695   15  233  476  674  161\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  374  710  992  665  321  710  945  556  958\n [2,]  246  783  782  703  346  980  750  314  252\n [3,]  368  322  726  229  693  762  215  548  977\n [4,]  813  762  556   72  491  517  699  231  748\n [5,]  795  856  518  723  970   49  707  431  123\n [6,]   89  355   95  685  960  642  592  775  581\n [7,]  235  427  266  674  121  907  748  899  409\n [8,]   32  514  689 1008  269  688  124 1007  472\n [9,]  745  331  756  775   28  666   67  867  945\n[10,]  148  953  645  343  964   87  329  582  329\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  293  738  780  662  566  528  717  179  521\n [2,]  946  569  288  541  263  296  258  161  741\n [3,]  136  183  137  221  897  147  495  227  287\n [4,]  614  952  441  902  631  749  485  605  748\n [5,]  253  164  490  496  168  979  602  286  441\n [6,]  913  781   49   83  772  725  502    8  222\n [7,]  110  952  348  505  244  487  622  491  949\n [8,]  648  309  185  785  776  490  864  304  560\n [9,]  457  791 1002  758  874  104  606  245  581\n[10,]  480  716   53  930  183  253  280  161  170\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  115  638  547  253  262  706  996  541  600\n [2,]  140  617  102  907  577   84   18  116  360\n [3,]  922   69  980  120  826  752  317  702  708\n [4,]   76  488  651  183  719   24  973  294  854\n [5,]  545  449  916  287  214  168  585  472  335\n [6,]  835  153  495  120  399  586  208  649  475\n [7,]  714  112  748  401  408  356  413  379  902\n [8,]  375  151   53  700   56  966  294  923  663\n [9,]  975  193  641  959  922  365  680  725  468\n[10,]  395  241  827  267  351  468  112  958  357\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  717  365  697  160  533  340  917  722  339\n [2,]  616  586  235  365  935  739  357  437  689\n [3,]  506  132  742   24   27   18  738  863  541\n [4,]  525  168  234  644  963  130  655  320  535\n [5,]  919  412  157  976  537  742  244  761  928\n [6,]  514  871  977  969  247  427  549  569  599\n [7,]  972  688  915  766  319  474  880  501  951\n [8,]  985  520  483  123  942  907  316  660  358\n [9,]  493  940  320   74  999  558  151  733  773\n[10,]  185   69  139  327  560  659  958  742  274\n\nbc.i(x, y, \"-\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  953  455  671  377  359  824  216  367   96\n [2,]  493  816  497  755  455  298  791  258   60\n [3,]  984  344  233  573  698  166  726  893  771\n [4,]  205   34  840  128  874  925  738  331  352\n [5,]  423  530  809  353   49  741  708  400  196\n [6,]  217  106  241  294  796  428  446  111  215\n [7,]  889  622  594  853  853  209   64  189  921\n [8,]  392  548  596    7  901  278  697  618  702\n [9,]  123  549   16  917  356  819  748  936  907\n[10,]  807  913  982  336  134  693  194  165  795\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  426  627  605  188  650  500  396  544  628\n [2,]  286  692  488  910  849  353  780  282  375\n [3,]  249  714  280  126  448  109  545  216  151\n [4,]  613  209  759  600  590  636  375  813  501\n [5,]  945   33  284  499  223  188   32  807  794\n [6,]  349  397  231  727  405  837  231   76  815\n [7,]  216  547  797  560  594   28  357  576  678\n [8,]   31  675  461  380  834  159  596  962  292\n [9,]  492  591  236  203   71   46  638  750   62\n[10,]  904  251  243  210    3  214  934  671   47\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  871  560  672  622  437  592  506  479  474\n [2,]  226  102  319  581  733  671  821  468  993\n [3,]  362  262   86  910  559  223  158  483  414\n [4,]  557   61  256  711  969  702  756  954  181\n [5,]  900  344  972  178  936  167  542  730  689\n [6,]  180  771   12  772  887   11   66  711  841\n [7,]  185  183  248  786  422  639  606  287  295\n [8,]  241  762  313  474  376  742  234  879  772\n [9,]  219   15  358  685  971  234  520  192  333\n[10,]  785   -8  390  241  838  300  588  883  635\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  860  474  759   76  830  186  187   20  335\n [2,]  138  530  543  601  802  752  390  694  207\n [3,]  454  921  372  719  551  987  905   78  132\n [4,]  598  548  352  927  863  753  358  108  415\n [5,]  753  306   45  202    9  900  226  860  549\n [6,]   90  508  968  829  386  366  728  842  919\n [7,]  669  417  130  574   84  679   41    8  831\n [8,]  229  894  171  529  768  763  798  135  724\n [9,]  307  465  310  706  351  850  563  726  551\n[10,]  226  699  296  675   -5  213  456  654  141\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  372  708  990  663  319  708  943  554  956\n [2,]  242  779  778  699  342  976  746  310  248\n [3,]  362  316  720  223  687  756  209  542  971\n [4,]  805  754  548   64  483  509  691  223  740\n [5,]  785  846  508  713  960   39  697  421  113\n [6,]   77  343   83  673  948  630  580  763  569\n [7,]  221  413  252  660  107  893  734  885  395\n [8,]   16  498  673  992  253  672  108  991  456\n [9,]  727  313  738  757   10  648   49  849  927\n[10,]  128  933  625  323  944   67  309  562  309\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  291  736  778  660  564  526  715  177  519\n [2,]  942  565  284  537  259  292  254  157  737\n [3,]  130  177  131  215  891  141  489  221  281\n [4,]  606  944  433  894  623  741  477  597  740\n [5,]  243  154  480  486  158  969  592  276  431\n [6,]  901  769   37   71  760  713  490   -4  210\n [7,]   96  938  334  491  230  473  608  477  935\n [8,]  632  293  169  769  760  474  848  288  544\n [9,]  439  773  984  740  856   86  588  227  563\n[10,]  460  696   33  910  163  233  260  141  150\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  113  636  545  251  260  704  994  539  598\n [2,]  136  613   98  903  573   80   14  112  356\n [3,]  916   63  974  114  820  746  311  696  702\n [4,]   68  480  643  175  711   16  965  286  846\n [5,]  535  439  906  277  204  158  575  462  325\n [6,]  823  141  483  108  387  574  196  637  463\n [7,]  700   98  734  387  394  342  399  365  888\n [8,]  359  135   37  684   40  950  278  907  647\n [9,]  957  175  623  941  904  347  662  707  450\n[10,]  375  221  807  247  331  448   92  938  337\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  715  363  695  158  531  338  915  720  337\n [2,]  612  582  231  361  931  735  353  433  685\n [3,]  500  126  736   18   21   12  732  857  535\n [4,]  517  160  226  636  955  122  647  312  527\n [5,]  909  402  147  966  527  732  234  751  918\n [6,]  502  859  965  957  235  415  537  557  587\n [7,]  958  674  901  752  305  460  866  487  937\n [8,]  969  504  467  107  926  891  300  644  342\n [9,]  475  922  302   56  981  540  133  715  755\n[10,]  165   49  119  307  540  639  938  722  254\n\nbc.i(x, y, \"*\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  954  456  672  378  360  825  217  368   97\n [2,]  990 1636  998 1514  914  600 1586  520  124\n [3,] 2961 1041  708 1728 2103  507 2187 2688 2322\n [4,]  836  152 3376  528 3512 3716 2968 1340 1424\n [5,] 2140 2675 4070 1790  270 3730 3565 2025 1005\n [6,] 1338  672 1482 1800 4812 2604 2712  702 1326\n [7,] 6272 4403 4207 6020 6020 1512  497 1372 6496\n [8,] 3200 4448 4832  120 7272 2288 5640 5008 5680\n [9,] 1188 5022  225 8334 3285 7452 6813 8505 8244\n[10,] 8170 9230 9920 3460 1440 7030 2040 1750 8050\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  427  628  606  189  651  501  397  545  629\n [2,]  576 1388  980 1824 1702  710 1564  568  754\n [3,]  756 2151  849  387 1353  336 1644  657  462\n [4,] 2468  852 3052 2416 2376 2560 1516 3268 2020\n [5,] 4750  190 1445 2520 1140  965  185 4060 3995\n [6,] 2130 2418 1422 4398 2466 5058 1422  492 4926\n [7,] 1561 3878 5628 3969 4207  245 2548 4081 4795\n [8,]  312 5464 3752 3104 6736 1336 4832 7760 2400\n [9,] 4509 5400 2205 1908  720  495 5823 6831  639\n[10,] 9140 2610 2530 2200  130 2240 9440 6810  570\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  872  561  673  623  438  593  507  480  475\n [2,]  456  208  642 1166 1470 1346 1646  940 1990\n [3,] 1095  795  267 2739 1686  678  483 1458 1251\n [4,] 2244  260 1040 2860 3892 2824 3040 3832  740\n [5,] 4525 1745 4885  915 4705  860 2735 3675 3470\n [6,] 1116 4662  108 4668 5358  102  432 4302 5082\n [7,] 1344 1330 1785 5551 3003 4522 4291 2058 2114\n [8,] 1992 6160 2568 3856 3072 6000 1936 7096 6240\n [9,] 2052  216 3303 6246 8820 2187 4761 1809 3078\n[10,] 7950   20 4000 2510 8480 3100 5980 8930 6450\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  861  475  760   77  831  187  188   21  336\n [2,]  280 1064 1090 1206 1608 1508  784 1392  418\n [3,] 1371 2772 1125 2166 1662 2970 2724  243  405\n [4,] 2408 2208 1424 3724 3468 3028 1448  448 1676\n [5,] 3790 1555  250 1035   70 4525 1155 4325 2770\n [6,]  576 3084 5844 5010 2352 2232 4404 5088 5550\n [7,] 4732 2968  959 4067  637 4802  336  105 5866\n [8,] 1896 7216 1432 4296 6208 6168 6448 1144 5856\n [9,] 2844 4266 2871 6435 3240 7731 5148 6615 5040\n[10,] 2360 7090 3060 6850   50 2230 4660 6640 1510\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  373  709  991  664  320  709  944  555  957\n [2,]  488 1562 1560 1402  688 1956 1496  624  500\n [3,] 1095  957 2169  678 2070 2277  636 1635 2922\n [4,] 3236 3032 2208  272 1948 2052 2780  908 2976\n [5,] 3950 4255 2565 3590 4825  220 3510 2130  590\n [6,]  498 2094  534 4074 5724 3816 3516 4614 3450\n [7,] 1596 2940 1813 4669  798 6300 5187 6244 2814\n [8,]  192 4048 5448 8000 2088 5440  928 7992 3712\n [9,] 6624 2898 6723 6894  171 5913  522 7722 8424\n[10,] 1380 9430 6350 3330 9540  770 3190 5720 3190\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  292  737  779  661  565  527  716  178  520\n [2,] 1888 1134  572 1078  522  588  512  318 1478\n [3,]  399  540  402  654 2682  432 1476  672  852\n [4,] 2440 3792 1748 3592 2508 2980 1924 2404 2976\n [5,] 1240  795 2425 2455  815 4870 2985 1405 2180\n [6,] 5442 4650  258  462 4596 4314 2976   12 1296\n [7,]  721 6615 2387 3486 1659 3360 4305 3388 6594\n [8,] 5120 2408 1416 6216 6144 3856 6848 2368 4416\n [9,] 4032 7038 8937 6741 7785  855 5373 2124 5148\n[10,] 4700 7060  430 9200 1730 2430 2700 1510 1600\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  114  637  546  252  261  705  995  540  599\n [2,]  276 1230  200 1810 1150  164   32  228  716\n [3,] 2757  198 2931  351 2469 2247  942 2097 2115\n [4,]  288 1936 2588  716 2860   80 3876 1160 3400\n [5,] 2700 2220 4555 1410 1045  815 2900 2335 1650\n [6,] 4974  882 2934  684 2358 3480 1212 3858 2814\n [7,] 4949  735 5187 2758 2807 2443 2842 2604 6265\n [8,] 2936 1144  360 5536  384 7664 2288 7320 5240\n [9,] 8694 1656 5688 8550 8217 3204 6039 6444 4131\n[10,] 3850 2310 8170 2570 3410 4580 1020 9480 3470\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  716  364  696  159  532  339  916  721  338\n [2,] 1228 1168  466  726 1866 1474  710  870 1374\n [3,] 1509  387 2217   63   72   45 2205 2580 1614\n [4,] 2084  656  920 2560 3836  504 2604 1264 2124\n [5,] 4570 2035  760 4855 2660 3685 1195 3780 4615\n [6,] 3048 5190 5826 5778 1446 2526 3258 3378 3558\n [7,] 6755 4767 6356 5313 2184 3269 6111 3458 6608\n [8,] 7816 4096 3800  920 7472 7192 2464 5216 2800\n [9,] 4356 8379 2799  585 8910 4941 1278 6516 6876\n[10,] 1750  590 1290 3170 5500 6490 9480 7320 2640\n\nbc.i(x, y, \"gcd\") # greatest common divisor\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    1    2    1    1    1    2    1    2    2\n [3,]    3    1    1    3    1    1    3    1    3\n [4,]    1    2    4    4    2    1    2    1    4\n [5,]    1    5    1    1    1    1    1    5    1\n [6,]    1    2    1    6    2    2    2    3    1\n [7,]    7    1    1    1    1    1    1    7    1\n [8,]    8    4    4    1    1    2    1    2    2\n [9,]    3    9    1    1    1    9    1    9    1\n[10,]    1    1    2    2    2    1    2    5    5\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    2    2    1    1    2    2    1\n [3,]    3    3    1    3    1    1    1    3    1\n [4,]    1    1    1    4    2    4    1    1    1\n [5,]    5    1    1    1    1    1    1    1    1\n [6,]    1    1    3    1    3    3    3    2    1\n [7,]    1    1    1    7    1    7    7    1    1\n [8,]    1    1    1    4    2    1    4    2    4\n [9,]    3    3    1    1    1    1    1    3    1\n[10,]    2    1    1   10    1    2    2    1    1\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    1    1    1    1    1    2    1\n [3,]    1    1    1    1    1    1    1    3    3\n [4,]    1    1    4    1    1    2    4    2    1\n [5,]    5    1    1    1    1    1    1    5    1\n [6,]    6    3    6    2    1    1    6    3    1\n [7,]    1    1    1    1    1    1    1    7    1\n [8,]    1    2    1    2    8    2    2    1    4\n [9,]    3    3    1    1    1    9    1    3    9\n[10,]    5    2   10    1    2   10    2    1    5\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    1    1    2    2    2    2    1\n [3,]    1    3    3    1    1    3    1    3    3\n [4,]    2    4    4    1    1    1    2    4    1\n [5,]    1    1    5    1    1    5    1    5    1\n [6,]    6    2    2    1    2    6    2    2    1\n [7,]    1    1    1    7    7    7    1    1    1\n [8,]    1    2    1    1    8    1    2    1    4\n [9,]    1    3    1    1    9    1    1    3    1\n[10,]    2    1    2    5    5    1    2    2    1\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    1    2    1    2    2    2    2    2\n [3,]    1    1    3    1    3    3    1    1    1\n [4,]    1    2    4    4    1    1    1    1    4\n [5,]    5    1    1    1    5    1    1    1    1\n [6,]    1    1    1    1    6    6    2    1    1\n [7,]    1    7    7    1    1    1    1    1    1\n [8,]    8    2    1    8    1    8    4    1    8\n [9,]    1    1    9    1    1    9    1    3    9\n[10,]    2    1    5    1    2    1    1    2    1\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    1    2    1    1    2    2    1    1\n [3,]    1    3    1    1    3    3    3    1    1\n [4,]    2    4    1    2    1    1    1    1    4\n [5,]    1    1    5    1    1    1    1    1    1\n [6,]    1    1    1    1    2    1    2    2    6\n [7,]    1    7    1    1    1    1    1    1    1\n [8,]    8    1    1    1    8    2    8    8    8\n [9,]    1    1    3    1    1    1    3    1    1\n[10,]   10    2    1   10    1    1   10    1   10\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    1    2    1    1    2    2    2    2\n [3,]    1    3    1    3    1    1    1    3    3\n [4,]    4    4    1    1    1    4    1    2    2\n [5,]    5    1    1    1    1    1    5    1    5\n [6,]    1    3    3    6    3    2    2    1    1\n [7,]    7    7    1    1    1    1    7    1    1\n [8,]    1    1    1    4    8    2    2    1    1\n [9,]    3    1    1    1    1    1    1    1    9\n[10,]    5    1    1    1    1    2    2    2    1\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    1    1    1    1    1    1    1\n [3,]    1    3    1    3    3    3    3    1    1\n [4,]    1    4    2    4    1    2    1    4    1\n [5,]    1    1    1    1    1    1    1    1    1\n [6,]    2    1    1    3    1    1    3    1    1\n [7,]    1    1    1    1    1    1    1    1    1\n [8,]    1    8    1    1    2    1    4    4    2\n [9,]    1    1    1    1    9    9    1    1    1\n[10,]    5    1    1    1   10    1    2    2    2\n\nbc.i(x, y, \"^\")\n\n, , 1\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 9.540000e+02 4.560000e+02 6.720000e+02 3.780000e+02          360\n [2,] 2.450250e+05 6.691240e+05 2.490010e+05 5.730490e+05       208849\n [3,] 9.615048e+08 4.178192e+07 1.314426e+07 1.911030e+08    344472101\n [4,] 1.908030e+09 2.085136e+06 5.074226e+11 3.035958e+08 594262141456\n [5,] 1.436213e+13 4.382974e+13 3.573732e+14 5.880512e+12    459165024\n [6,] 1.229785e+14 1.973823e+12 2.270815e+14 7.290000e+14          Inf\n [7,]          Inf          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf 2.562891e+09          Inf\n [9,]          Inf          Inf 3.814697e+12          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 8.250000e+02 2.170000e+02 3.680000e+02 9.700000e+01\n [2,] 9.000000e+04 6.288490e+05 6.760000e+04 3.844000e+03\n [3,] 4.826809e+06 3.874205e+08 7.193231e+08 4.636848e+08\n [4,] 7.448398e+11 3.031207e+11 1.259445e+10 1.606201e+10\n [5,] 2.310437e+14 1.842670e+14 1.089620e+13 3.280804e+11\n [6,] 6.682491e+15 8.527674e+15 2.565164e+12 1.165074e+14\n [7,]          Inf 9.095120e+12          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 2\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 4.270000e+02 6.280000e+02 6.060000e+02 1.890000e+02 6.510000e+02\n [2,] 8.294400e+04 4.816360e+05 2.401000e+05 8.317440e+05 7.242010e+05\n [3,] 1.600301e+07 3.686018e+08 2.266519e+07 2.146689e+06 9.173385e+07\n [4,] 1.449241e+11 2.058346e+09 3.389207e+11 1.330907e+11 1.244932e+11\n [5,] 7.737809e+14 7.923517e+07 2.015994e+12 3.252016e+13 6.161327e+11\n [6,] 2.001567e+15 4.283811e+15 1.772108e+14          Inf 4.820043e+15\n [7,]          Inf          Inf          Inf          Inf          Inf\n [8,] 5.352009e+12          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf 1.378585e+11\n              [,6]         [,7]         [,8]         [,9]\n [1,] 5.010000e+02 3.970000e+02 5.450000e+02 6.290000e+02\n [2,] 1.260250e+05 6.115240e+05 8.065600e+04 1.421290e+05\n [3,] 1.404928e+06 1.645666e+08 1.050346e+07 3.652264e+06\n [4,] 1.677722e+11 2.063274e+10 4.455416e+11 6.503775e+10\n [5,] 2.677852e+11 6.934396e+07 3.530044e+14 3.256371e+14\n [6,]          Inf 1.772108e+14 3.040067e+11          Inf\n [7,] 6.433930e+10          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,] 4.605367e+15          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 3\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 8.720000e+02 5.610000e+02 6.730000e+02          623 4.380000e+02\n [2,] 5.198400e+04 1.081600e+04 1.030410e+05       339889 5.402250e+05\n [3,] 4.862712e+07 1.860962e+07 7.049690e+05    761048497 1.775043e+08\n [4,] 9.904931e+10 1.785062e+07 4.569760e+09 261351000625 8.962958e+11\n [5,] 6.070758e+14 5.177584e+12 8.901697e+14 205236901143 7.378161e+14\n [6,] 4.140737e+13          Inf 3.401222e+07          Inf          Inf\n [7,]          Inf 8.938717e+15          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf 2.641808e+12          Inf          Inf          Inf\n[10,]          Inf 1.024000e+03          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,]          593 5.070000e+02 4.800000e+02 4.750000e+02\n [2,]       452929 6.773290e+05 2.209000e+05 9.900250e+05\n [3,]     11543176 4.173281e+06 1.147913e+08 7.251171e+07\n [4,] 248438446096 3.336218e+11 8.422908e+11 1.171351e+09\n [5,] 150536645632 4.897074e+13 2.145046e+14 1.609894e+14\n [6,]     24137569 1.393141e+11          Inf          Inf\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 4\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 8.610000e+02 4.750000e+02 7.600000e+02           77 8.310000e+02\n [2,] 1.960000e+04 2.830240e+05 2.970250e+05       363609 6.464160e+05\n [3,] 9.544399e+07 7.888890e+08 5.273438e+07    376367048 1.700315e+08\n [4,] 1.313367e+11 9.284453e+10 1.606201e+10 751274631121 5.650364e+11\n [5,] 2.502338e+14 2.909390e+12 3.125000e+08 380059617807 5.378240e+05\n [6,] 7.827578e+11          Inf          Inf          Inf 3.628410e+15\n [7,]          Inf          Inf 9.058243e+14          Inf 5.167610e+13\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf 9.765625e+06\n              [,6]         [,7]         [,8]         [,9]\n [1,] 1.870000e+02          188 2.100000e+01 3.360000e+02\n [2,] 5.685160e+05       153664 4.844160e+05 4.368100e+04\n [3,] 9.702990e+08    748613312 5.314410e+05 2.460375e+06\n [4,] 3.283852e+11  17172529936 1.573519e+08 3.082166e+10\n [5,] 6.070758e+14 657748550151 4.842622e+14 5.218538e+13\n [6,] 2.650072e+15          Inf          Inf          Inf\n [7,]          Inf 587068342272 1.708594e+08          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 5\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 3.730000e+02 7.090000e+02 9.910000e+02 6.640000e+02 3.200000e+02\n [2,] 5.953600e+04 6.099610e+05 6.084000e+05 4.914010e+05 1.183360e+05\n [3,] 4.862712e+07 3.246176e+07 3.779331e+08 1.154318e+07 3.285090e+08\n [4,] 4.283454e+11 3.301238e+11 9.284453e+10 2.138138e+07 5.624913e+10\n [5,] 3.077056e+14 4.463215e+14 3.552931e+13 1.908193e+14 8.368287e+14\n [6,] 3.269404e+11 1.806977e+15 4.969813e+11          Inf          Inf\n [7,]          Inf          Inf          Inf          Inf 2.502269e+14\n [8,] 1.100753e+11          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf 3.226877e+11\n[10,]          Inf          Inf          Inf          Inf          Inf\n             [,6]         [,7]         [,8]         [,9]\n [1,]         709 9.440000e+02 5.550000e+02          957\n [2,]      956484 5.595040e+05 9.734400e+04        62500\n [3,]   437245479 9.528128e+06 1.618786e+08    924010424\n [4,] 69257922561 2.333132e+11 2.655238e+09 306402103296\n [5,]   164916224 1.704848e+14 1.402969e+13  22877577568\n [6,]         Inf          Inf          Inf          Inf\n [7,]         Inf          Inf          Inf          Inf\n [8,]         Inf          Inf          Inf          Inf\n [9,]         Inf 7.427659e+15          Inf          Inf\n[10,]         Inf          Inf          Inf          Inf\n\n, , 6\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 2.920000e+02          737 7.790000e+02 6.610000e+02          565\n [2,] 8.911360e+05       321489 8.179600e+04 2.905210e+05        68121\n [3,] 2.352637e+06      5832000 2.406104e+06 1.036023e+07    714516984\n [4,] 1.384584e+11 807668879616 3.646916e+10 6.502874e+11 154550410641\n [5,] 9.381200e+11 101621504799 2.683544e+13 2.853694e+13 115063617043\n [6,]          Inf          Inf 6.321363e+09 2.084224e+11          Inf\n [7,] 1.229874e+14          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 5.270000e+02 7.160000e+02 1.780000e+02 5.200000e+02\n [2,] 8.643600e+04 6.553600e+04 2.528100e+04 5.461210e+05\n [3,] 2.985984e+06 1.190955e+08 1.123942e+07 2.290630e+07\n [4,] 3.080528e+11 5.352791e+10 1.304662e+11 3.064021e+11\n [5,] 8.765865e+14 7.583534e+13 1.751990e+12 1.575551e+13\n [6,]          Inf          Inf 6.400000e+01 1.015600e+14\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 7\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 1.140000e+02 6.370000e+02 5.460000e+02 2.520000e+02 2.610000e+02\n [2,] 1.904400e+04 3.782250e+05 1.000000e+04 8.190250e+05 3.306250e+05\n [3,] 7.761516e+08 2.874960e+05 9.325748e+08 1.601613e+06 5.574418e+08\n [4,] 2.687386e+07 5.487587e+10 1.752335e+11 1.026626e+09 2.613510e+11\n [5,] 4.591650e+13 1.725500e+13 6.274684e+14 1.783387e+12 3.987782e+11\n [6,]          Inf 1.009030e+13          Inf 2.194973e+12 3.684303e+15\n [7,]          Inf 1.407100e+14          Inf          Inf          Inf\n [8,]          Inf          Inf 1.681513e+13          Inf 2.817928e+13\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,]          705 9.950000e+02 5.400000e+02 5.990000e+02\n [2,]         6724 2.560000e+02 1.299600e+04 1.281640e+05\n [3,]    420189749 3.095914e+07 3.415321e+08 3.504026e+08\n [4,]       160000 8.816478e+11 7.072810e+09 5.220062e+11\n [5,] 115063617043 6.563568e+13 2.221183e+13 3.913539e+12\n [6,]          Inf 6.793729e+13          Inf          Inf\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 8\n\n              [,1]         [,2]        [,3]         [,4]         [,5]\n [1,] 7.160000e+02 3.640000e+02         696 1.590000e+02 5.320000e+02\n [2,] 3.769960e+05 3.410560e+05       54289 1.317690e+05 8.704890e+05\n [3,] 1.272635e+08 2.146689e+06   403583419 9.261000e+03 1.382400e+04\n [4,] 7.368022e+10 7.233948e+08  2798410000 1.677722e+11 8.458131e+11\n [5,] 6.378682e+14 1.116791e+13 81136812032 8.631696e+14 4.261457e+13\n [6,]          Inf          Inf         Inf          Inf 1.959306e+14\n [7,]          Inf          Inf         Inf          Inf          Inf\n [8,]          Inf          Inf         Inf          Inf          Inf\n [9,]          Inf          Inf         Inf          Inf          Inf\n[10,]          Inf          Inf         Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 3.390000e+02          916 7.210000e+02 3.380000e+02\n [2,] 5.431690e+05       126025 1.892250e+05 4.719690e+05\n [3,] 3.375000e+03    397065375 6.360560e+08 1.557209e+08\n [4,] 2.520474e+08 179607287601 9.971221e+09 7.950201e+10\n [5,] 2.174390e+14 779811265199 2.469500e+14 6.698977e+14\n [6,] 5.567915e+15          Inf          Inf          Inf\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\nbc.i(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.i(x, y, \"!=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.i(x, y, \"&lt;\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.i(x, y, \"&gt;\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1]  [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE FALSE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4]  [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7]  [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.i(x, y, \"&lt;=\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.i(x, y, \"&gt;=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1]  [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE FALSE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4]  [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7]  [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE"
  },
  {
    "objectID": "man/outer-like functions/bc.i.html#broadcasted-integer-numeric-operations-with-extra-overflow-protection",
    "href": "man/outer-like functions/bc.i.html#broadcasted-integer-numeric-operations-with-extra-overflow-protection",
    "title": "bc.i",
    "section": "",
    "text": "The bc.i() function performs broadcasted integer numeric operations on 2 numeric or logical arrays.   Please note that these operations will treat the input as 53bit integers, and will efficiently truncate when necessary.  Therefore, something like bc.i(1, 1.5, “==”) returns TRUE, because trunc(1.5) equals 1.  \n\n\n\nbc.i(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable logical or numeric arrays.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported arithmetic operators: +, -, *, gcd, ^, pmin, pmax.  Supported relational operators: ==, !=, &lt;, &gt;, &lt;=, &gt;=. \n\n\n\n\n\n\n\nFor arithmetic operators:  A numeric array of whole numbers, as a result of the broadcasted arithmetic operation.  Base ‘R’ supports 53 bit integers, which thus range from approximately -9 quadrillion to +9 quadrillion.  Values outside of this range will be returned as -Inf or Inf, as an extra protection against integer overflow.   For relational operators:  A logical array as a result of the broadcasted integer relational comparison.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(NA, 1.1:1000.1), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\nbc.i(x, y, \"+\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  955  457  673  379  361  826  218  369   98\n [2,]  497  820  501  759  459  302  795  262   64\n [3,]  990  350  239  579  704  172  732  899  777\n [4,]  213   42  848  136  882  933  746  339  360\n [5,]  433  540  819  363   59  751  718  410  206\n [6,]  229  118  253  306  808  440  458  123  227\n [7,]  903  636  608  867  867  223   78  203  935\n [8,]  408  564  612   23  917  294  713  634  718\n [9,]  141  567   34  935  374  837  766  954  925\n[10,]  827  933 1002  356  154  713  214  185  815\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  428  629  607  190  652  502  398  546  630\n [2,]  290  696  492  914  853  357  784  286  379\n [3,]  255  720  286  132  454  115  551  222  157\n [4,]  621  217  767  608  598  644  383  821  509\n [5,]  955   43  294  509  233  198   42  817  804\n [6,]  361  409  243  739  417  849  243   88  827\n [7,]  230  561  811  574  608   42  371  590  692\n [8,]   47  691  477  396  850  175  612  978  308\n [9,]  510  609  254  221   89   64  656  768   80\n[10,]  924  271  263  230   23  234  954  691   67\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  873  562  674  624  439  594  508  481  476\n [2,]  230  106  323  585  737  675  825  472  997\n [3,]  368  268   92  916  565  229  164  489  420\n [4,]  565   69  264  719  977  710  764  962  189\n [5,]  910  354  982  188  946  177  552  740  699\n [6,]  192  783   24  784  899   23   78  723  853\n [7,]  199  197  262  800  436  653  620  301  309\n [8,]  257  778  329  490  392  758  250  895  788\n [9,]  237   33  376  703  989  252  538  210  351\n[10,]  805   12  410  261  858  320  608  903  655\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  862  476  761   78  832  188  189   22  337\n [2,]  142  534  547  605  806  756  394  698  211\n [3,]  460  927  378  725  557  993  911   84  138\n [4,]  606  556  360  935  871  761  366  116  423\n [5,]  763  316   55  212   19  910  236  870  559\n [6,]  102  520  980  841  398  378  740  854  931\n [7,]  683  431  144  588   98  693   55   22  845\n [8,]  245  910  187  545  784  779  814  151  740\n [9,]  325  483  328  724  369  868  581  744  569\n[10,]  246  719  316  695   15  233  476  674  161\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  374  710  992  665  321  710  945  556  958\n [2,]  246  783  782  703  346  980  750  314  252\n [3,]  368  322  726  229  693  762  215  548  977\n [4,]  813  762  556   72  491  517  699  231  748\n [5,]  795  856  518  723  970   49  707  431  123\n [6,]   89  355   95  685  960  642  592  775  581\n [7,]  235  427  266  674  121  907  748  899  409\n [8,]   32  514  689 1008  269  688  124 1007  472\n [9,]  745  331  756  775   28  666   67  867  945\n[10,]  148  953  645  343  964   87  329  582  329\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  293  738  780  662  566  528  717  179  521\n [2,]  946  569  288  541  263  296  258  161  741\n [3,]  136  183  137  221  897  147  495  227  287\n [4,]  614  952  441  902  631  749  485  605  748\n [5,]  253  164  490  496  168  979  602  286  441\n [6,]  913  781   49   83  772  725  502    8  222\n [7,]  110  952  348  505  244  487  622  491  949\n [8,]  648  309  185  785  776  490  864  304  560\n [9,]  457  791 1002  758  874  104  606  245  581\n[10,]  480  716   53  930  183  253  280  161  170\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  115  638  547  253  262  706  996  541  600\n [2,]  140  617  102  907  577   84   18  116  360\n [3,]  922   69  980  120  826  752  317  702  708\n [4,]   76  488  651  183  719   24  973  294  854\n [5,]  545  449  916  287  214  168  585  472  335\n [6,]  835  153  495  120  399  586  208  649  475\n [7,]  714  112  748  401  408  356  413  379  902\n [8,]  375  151   53  700   56  966  294  923  663\n [9,]  975  193  641  959  922  365  680  725  468\n[10,]  395  241  827  267  351  468  112  958  357\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  717  365  697  160  533  340  917  722  339\n [2,]  616  586  235  365  935  739  357  437  689\n [3,]  506  132  742   24   27   18  738  863  541\n [4,]  525  168  234  644  963  130  655  320  535\n [5,]  919  412  157  976  537  742  244  761  928\n [6,]  514  871  977  969  247  427  549  569  599\n [7,]  972  688  915  766  319  474  880  501  951\n [8,]  985  520  483  123  942  907  316  660  358\n [9,]  493  940  320   74  999  558  151  733  773\n[10,]  185   69  139  327  560  659  958  742  274\n\nbc.i(x, y, \"-\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  953  455  671  377  359  824  216  367   96\n [2,]  493  816  497  755  455  298  791  258   60\n [3,]  984  344  233  573  698  166  726  893  771\n [4,]  205   34  840  128  874  925  738  331  352\n [5,]  423  530  809  353   49  741  708  400  196\n [6,]  217  106  241  294  796  428  446  111  215\n [7,]  889  622  594  853  853  209   64  189  921\n [8,]  392  548  596    7  901  278  697  618  702\n [9,]  123  549   16  917  356  819  748  936  907\n[10,]  807  913  982  336  134  693  194  165  795\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  426  627  605  188  650  500  396  544  628\n [2,]  286  692  488  910  849  353  780  282  375\n [3,]  249  714  280  126  448  109  545  216  151\n [4,]  613  209  759  600  590  636  375  813  501\n [5,]  945   33  284  499  223  188   32  807  794\n [6,]  349  397  231  727  405  837  231   76  815\n [7,]  216  547  797  560  594   28  357  576  678\n [8,]   31  675  461  380  834  159  596  962  292\n [9,]  492  591  236  203   71   46  638  750   62\n[10,]  904  251  243  210    3  214  934  671   47\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  871  560  672  622  437  592  506  479  474\n [2,]  226  102  319  581  733  671  821  468  993\n [3,]  362  262   86  910  559  223  158  483  414\n [4,]  557   61  256  711  969  702  756  954  181\n [5,]  900  344  972  178  936  167  542  730  689\n [6,]  180  771   12  772  887   11   66  711  841\n [7,]  185  183  248  786  422  639  606  287  295\n [8,]  241  762  313  474  376  742  234  879  772\n [9,]  219   15  358  685  971  234  520  192  333\n[10,]  785   -8  390  241  838  300  588  883  635\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  860  474  759   76  830  186  187   20  335\n [2,]  138  530  543  601  802  752  390  694  207\n [3,]  454  921  372  719  551  987  905   78  132\n [4,]  598  548  352  927  863  753  358  108  415\n [5,]  753  306   45  202    9  900  226  860  549\n [6,]   90  508  968  829  386  366  728  842  919\n [7,]  669  417  130  574   84  679   41    8  831\n [8,]  229  894  171  529  768  763  798  135  724\n [9,]  307  465  310  706  351  850  563  726  551\n[10,]  226  699  296  675   -5  213  456  654  141\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  372  708  990  663  319  708  943  554  956\n [2,]  242  779  778  699  342  976  746  310  248\n [3,]  362  316  720  223  687  756  209  542  971\n [4,]  805  754  548   64  483  509  691  223  740\n [5,]  785  846  508  713  960   39  697  421  113\n [6,]   77  343   83  673  948  630  580  763  569\n [7,]  221  413  252  660  107  893  734  885  395\n [8,]   16  498  673  992  253  672  108  991  456\n [9,]  727  313  738  757   10  648   49  849  927\n[10,]  128  933  625  323  944   67  309  562  309\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  291  736  778  660  564  526  715  177  519\n [2,]  942  565  284  537  259  292  254  157  737\n [3,]  130  177  131  215  891  141  489  221  281\n [4,]  606  944  433  894  623  741  477  597  740\n [5,]  243  154  480  486  158  969  592  276  431\n [6,]  901  769   37   71  760  713  490   -4  210\n [7,]   96  938  334  491  230  473  608  477  935\n [8,]  632  293  169  769  760  474  848  288  544\n [9,]  439  773  984  740  856   86  588  227  563\n[10,]  460  696   33  910  163  233  260  141  150\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  113  636  545  251  260  704  994  539  598\n [2,]  136  613   98  903  573   80   14  112  356\n [3,]  916   63  974  114  820  746  311  696  702\n [4,]   68  480  643  175  711   16  965  286  846\n [5,]  535  439  906  277  204  158  575  462  325\n [6,]  823  141  483  108  387  574  196  637  463\n [7,]  700   98  734  387  394  342  399  365  888\n [8,]  359  135   37  684   40  950  278  907  647\n [9,]  957  175  623  941  904  347  662  707  450\n[10,]  375  221  807  247  331  448   92  938  337\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  715  363  695  158  531  338  915  720  337\n [2,]  612  582  231  361  931  735  353  433  685\n [3,]  500  126  736   18   21   12  732  857  535\n [4,]  517  160  226  636  955  122  647  312  527\n [5,]  909  402  147  966  527  732  234  751  918\n [6,]  502  859  965  957  235  415  537  557  587\n [7,]  958  674  901  752  305  460  866  487  937\n [8,]  969  504  467  107  926  891  300  644  342\n [9,]  475  922  302   56  981  540  133  715  755\n[10,]  165   49  119  307  540  639  938  722  254\n\nbc.i(x, y, \"*\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  954  456  672  378  360  825  217  368   97\n [2,]  990 1636  998 1514  914  600 1586  520  124\n [3,] 2961 1041  708 1728 2103  507 2187 2688 2322\n [4,]  836  152 3376  528 3512 3716 2968 1340 1424\n [5,] 2140 2675 4070 1790  270 3730 3565 2025 1005\n [6,] 1338  672 1482 1800 4812 2604 2712  702 1326\n [7,] 6272 4403 4207 6020 6020 1512  497 1372 6496\n [8,] 3200 4448 4832  120 7272 2288 5640 5008 5680\n [9,] 1188 5022  225 8334 3285 7452 6813 8505 8244\n[10,] 8170 9230 9920 3460 1440 7030 2040 1750 8050\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  427  628  606  189  651  501  397  545  629\n [2,]  576 1388  980 1824 1702  710 1564  568  754\n [3,]  756 2151  849  387 1353  336 1644  657  462\n [4,] 2468  852 3052 2416 2376 2560 1516 3268 2020\n [5,] 4750  190 1445 2520 1140  965  185 4060 3995\n [6,] 2130 2418 1422 4398 2466 5058 1422  492 4926\n [7,] 1561 3878 5628 3969 4207  245 2548 4081 4795\n [8,]  312 5464 3752 3104 6736 1336 4832 7760 2400\n [9,] 4509 5400 2205 1908  720  495 5823 6831  639\n[10,] 9140 2610 2530 2200  130 2240 9440 6810  570\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  872  561  673  623  438  593  507  480  475\n [2,]  456  208  642 1166 1470 1346 1646  940 1990\n [3,] 1095  795  267 2739 1686  678  483 1458 1251\n [4,] 2244  260 1040 2860 3892 2824 3040 3832  740\n [5,] 4525 1745 4885  915 4705  860 2735 3675 3470\n [6,] 1116 4662  108 4668 5358  102  432 4302 5082\n [7,] 1344 1330 1785 5551 3003 4522 4291 2058 2114\n [8,] 1992 6160 2568 3856 3072 6000 1936 7096 6240\n [9,] 2052  216 3303 6246 8820 2187 4761 1809 3078\n[10,] 7950   20 4000 2510 8480 3100 5980 8930 6450\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  861  475  760   77  831  187  188   21  336\n [2,]  280 1064 1090 1206 1608 1508  784 1392  418\n [3,] 1371 2772 1125 2166 1662 2970 2724  243  405\n [4,] 2408 2208 1424 3724 3468 3028 1448  448 1676\n [5,] 3790 1555  250 1035   70 4525 1155 4325 2770\n [6,]  576 3084 5844 5010 2352 2232 4404 5088 5550\n [7,] 4732 2968  959 4067  637 4802  336  105 5866\n [8,] 1896 7216 1432 4296 6208 6168 6448 1144 5856\n [9,] 2844 4266 2871 6435 3240 7731 5148 6615 5040\n[10,] 2360 7090 3060 6850   50 2230 4660 6640 1510\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  373  709  991  664  320  709  944  555  957\n [2,]  488 1562 1560 1402  688 1956 1496  624  500\n [3,] 1095  957 2169  678 2070 2277  636 1635 2922\n [4,] 3236 3032 2208  272 1948 2052 2780  908 2976\n [5,] 3950 4255 2565 3590 4825  220 3510 2130  590\n [6,]  498 2094  534 4074 5724 3816 3516 4614 3450\n [7,] 1596 2940 1813 4669  798 6300 5187 6244 2814\n [8,]  192 4048 5448 8000 2088 5440  928 7992 3712\n [9,] 6624 2898 6723 6894  171 5913  522 7722 8424\n[10,] 1380 9430 6350 3330 9540  770 3190 5720 3190\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  292  737  779  661  565  527  716  178  520\n [2,] 1888 1134  572 1078  522  588  512  318 1478\n [3,]  399  540  402  654 2682  432 1476  672  852\n [4,] 2440 3792 1748 3592 2508 2980 1924 2404 2976\n [5,] 1240  795 2425 2455  815 4870 2985 1405 2180\n [6,] 5442 4650  258  462 4596 4314 2976   12 1296\n [7,]  721 6615 2387 3486 1659 3360 4305 3388 6594\n [8,] 5120 2408 1416 6216 6144 3856 6848 2368 4416\n [9,] 4032 7038 8937 6741 7785  855 5373 2124 5148\n[10,] 4700 7060  430 9200 1730 2430 2700 1510 1600\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  114  637  546  252  261  705  995  540  599\n [2,]  276 1230  200 1810 1150  164   32  228  716\n [3,] 2757  198 2931  351 2469 2247  942 2097 2115\n [4,]  288 1936 2588  716 2860   80 3876 1160 3400\n [5,] 2700 2220 4555 1410 1045  815 2900 2335 1650\n [6,] 4974  882 2934  684 2358 3480 1212 3858 2814\n [7,] 4949  735 5187 2758 2807 2443 2842 2604 6265\n [8,] 2936 1144  360 5536  384 7664 2288 7320 5240\n [9,] 8694 1656 5688 8550 8217 3204 6039 6444 4131\n[10,] 3850 2310 8170 2570 3410 4580 1020 9480 3470\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  716  364  696  159  532  339  916  721  338\n [2,] 1228 1168  466  726 1866 1474  710  870 1374\n [3,] 1509  387 2217   63   72   45 2205 2580 1614\n [4,] 2084  656  920 2560 3836  504 2604 1264 2124\n [5,] 4570 2035  760 4855 2660 3685 1195 3780 4615\n [6,] 3048 5190 5826 5778 1446 2526 3258 3378 3558\n [7,] 6755 4767 6356 5313 2184 3269 6111 3458 6608\n [8,] 7816 4096 3800  920 7472 7192 2464 5216 2800\n [9,] 4356 8379 2799  585 8910 4941 1278 6516 6876\n[10,] 1750  590 1290 3170 5500 6490 9480 7320 2640\n\nbc.i(x, y, \"gcd\") # greatest common divisor\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    1    2    1    1    1    2    1    2    2\n [3,]    3    1    1    3    1    1    3    1    3\n [4,]    1    2    4    4    2    1    2    1    4\n [5,]    1    5    1    1    1    1    1    5    1\n [6,]    1    2    1    6    2    2    2    3    1\n [7,]    7    1    1    1    1    1    1    7    1\n [8,]    8    4    4    1    1    2    1    2    2\n [9,]    3    9    1    1    1    9    1    9    1\n[10,]    1    1    2    2    2    1    2    5    5\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    2    2    1    1    2    2    1\n [3,]    3    3    1    3    1    1    1    3    1\n [4,]    1    1    1    4    2    4    1    1    1\n [5,]    5    1    1    1    1    1    1    1    1\n [6,]    1    1    3    1    3    3    3    2    1\n [7,]    1    1    1    7    1    7    7    1    1\n [8,]    1    1    1    4    2    1    4    2    4\n [9,]    3    3    1    1    1    1    1    3    1\n[10,]    2    1    1   10    1    2    2    1    1\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    1    1    1    1    1    2    1\n [3,]    1    1    1    1    1    1    1    3    3\n [4,]    1    1    4    1    1    2    4    2    1\n [5,]    5    1    1    1    1    1    1    5    1\n [6,]    6    3    6    2    1    1    6    3    1\n [7,]    1    1    1    1    1    1    1    7    1\n [8,]    1    2    1    2    8    2    2    1    4\n [9,]    3    3    1    1    1    9    1    3    9\n[10,]    5    2   10    1    2   10    2    1    5\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    1    1    2    2    2    2    1\n [3,]    1    3    3    1    1    3    1    3    3\n [4,]    2    4    4    1    1    1    2    4    1\n [5,]    1    1    5    1    1    5    1    5    1\n [6,]    6    2    2    1    2    6    2    2    1\n [7,]    1    1    1    7    7    7    1    1    1\n [8,]    1    2    1    1    8    1    2    1    4\n [9,]    1    3    1    1    9    1    1    3    1\n[10,]    2    1    2    5    5    1    2    2    1\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    1    2    1    2    2    2    2    2\n [3,]    1    1    3    1    3    3    1    1    1\n [4,]    1    2    4    4    1    1    1    1    4\n [5,]    5    1    1    1    5    1    1    1    1\n [6,]    1    1    1    1    6    6    2    1    1\n [7,]    1    7    7    1    1    1    1    1    1\n [8,]    8    2    1    8    1    8    4    1    8\n [9,]    1    1    9    1    1    9    1    3    9\n[10,]    2    1    5    1    2    1    1    2    1\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    1    2    1    1    2    2    1    1\n [3,]    1    3    1    1    3    3    3    1    1\n [4,]    2    4    1    2    1    1    1    1    4\n [5,]    1    1    5    1    1    1    1    1    1\n [6,]    1    1    1    1    2    1    2    2    6\n [7,]    1    7    1    1    1    1    1    1    1\n [8,]    8    1    1    1    8    2    8    8    8\n [9,]    1    1    3    1    1    1    3    1    1\n[10,]   10    2    1   10    1    1   10    1   10\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    1    2    1    1    2    2    2    2\n [3,]    1    3    1    3    1    1    1    3    3\n [4,]    4    4    1    1    1    4    1    2    2\n [5,]    5    1    1    1    1    1    5    1    5\n [6,]    1    3    3    6    3    2    2    1    1\n [7,]    7    7    1    1    1    1    7    1    1\n [8,]    1    1    1    4    8    2    2    1    1\n [9,]    3    1    1    1    1    1    1    1    9\n[10,]    5    1    1    1    1    2    2    2    1\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    1    1    1    1    1    1    1\n [3,]    1    3    1    3    3    3    3    1    1\n [4,]    1    4    2    4    1    2    1    4    1\n [5,]    1    1    1    1    1    1    1    1    1\n [6,]    2    1    1    3    1    1    3    1    1\n [7,]    1    1    1    1    1    1    1    1    1\n [8,]    1    8    1    1    2    1    4    4    2\n [9,]    1    1    1    1    9    9    1    1    1\n[10,]    5    1    1    1   10    1    2    2    2\n\nbc.i(x, y, \"^\")\n\n, , 1\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 9.540000e+02 4.560000e+02 6.720000e+02 3.780000e+02          360\n [2,] 2.450250e+05 6.691240e+05 2.490010e+05 5.730490e+05       208849\n [3,] 9.615048e+08 4.178192e+07 1.314426e+07 1.911030e+08    344472101\n [4,] 1.908030e+09 2.085136e+06 5.074226e+11 3.035958e+08 594262141456\n [5,] 1.436213e+13 4.382974e+13 3.573732e+14 5.880512e+12    459165024\n [6,] 1.229785e+14 1.973823e+12 2.270815e+14 7.290000e+14          Inf\n [7,]          Inf          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf 2.562891e+09          Inf\n [9,]          Inf          Inf 3.814697e+12          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 8.250000e+02 2.170000e+02 3.680000e+02 9.700000e+01\n [2,] 9.000000e+04 6.288490e+05 6.760000e+04 3.844000e+03\n [3,] 4.826809e+06 3.874205e+08 7.193231e+08 4.636848e+08\n [4,] 7.448398e+11 3.031207e+11 1.259445e+10 1.606201e+10\n [5,] 2.310437e+14 1.842670e+14 1.089620e+13 3.280804e+11\n [6,] 6.682491e+15 8.527674e+15 2.565164e+12 1.165074e+14\n [7,]          Inf 9.095120e+12          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 2\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 4.270000e+02 6.280000e+02 6.060000e+02 1.890000e+02 6.510000e+02\n [2,] 8.294400e+04 4.816360e+05 2.401000e+05 8.317440e+05 7.242010e+05\n [3,] 1.600301e+07 3.686018e+08 2.266519e+07 2.146689e+06 9.173385e+07\n [4,] 1.449241e+11 2.058346e+09 3.389207e+11 1.330907e+11 1.244932e+11\n [5,] 7.737809e+14 7.923517e+07 2.015994e+12 3.252016e+13 6.161327e+11\n [6,] 2.001567e+15 4.283811e+15 1.772108e+14          Inf 4.820043e+15\n [7,]          Inf          Inf          Inf          Inf          Inf\n [8,] 5.352009e+12          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf 1.378585e+11\n              [,6]         [,7]         [,8]         [,9]\n [1,] 5.010000e+02 3.970000e+02 5.450000e+02 6.290000e+02\n [2,] 1.260250e+05 6.115240e+05 8.065600e+04 1.421290e+05\n [3,] 1.404928e+06 1.645666e+08 1.050346e+07 3.652264e+06\n [4,] 1.677722e+11 2.063274e+10 4.455416e+11 6.503775e+10\n [5,] 2.677852e+11 6.934396e+07 3.530044e+14 3.256371e+14\n [6,]          Inf 1.772108e+14 3.040067e+11          Inf\n [7,] 6.433930e+10          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,] 4.605367e+15          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 3\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 8.720000e+02 5.610000e+02 6.730000e+02          623 4.380000e+02\n [2,] 5.198400e+04 1.081600e+04 1.030410e+05       339889 5.402250e+05\n [3,] 4.862712e+07 1.860962e+07 7.049690e+05    761048497 1.775043e+08\n [4,] 9.904931e+10 1.785062e+07 4.569760e+09 261351000625 8.962958e+11\n [5,] 6.070758e+14 5.177584e+12 8.901697e+14 205236901143 7.378161e+14\n [6,] 4.140737e+13          Inf 3.401222e+07          Inf          Inf\n [7,]          Inf 8.938717e+15          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf 2.641808e+12          Inf          Inf          Inf\n[10,]          Inf 1.024000e+03          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,]          593 5.070000e+02 4.800000e+02 4.750000e+02\n [2,]       452929 6.773290e+05 2.209000e+05 9.900250e+05\n [3,]     11543176 4.173281e+06 1.147913e+08 7.251171e+07\n [4,] 248438446096 3.336218e+11 8.422908e+11 1.171351e+09\n [5,] 150536645632 4.897074e+13 2.145046e+14 1.609894e+14\n [6,]     24137569 1.393141e+11          Inf          Inf\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 4\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 8.610000e+02 4.750000e+02 7.600000e+02           77 8.310000e+02\n [2,] 1.960000e+04 2.830240e+05 2.970250e+05       363609 6.464160e+05\n [3,] 9.544399e+07 7.888890e+08 5.273438e+07    376367048 1.700315e+08\n [4,] 1.313367e+11 9.284453e+10 1.606201e+10 751274631121 5.650364e+11\n [5,] 2.502338e+14 2.909390e+12 3.125000e+08 380059617807 5.378240e+05\n [6,] 7.827578e+11          Inf          Inf          Inf 3.628410e+15\n [7,]          Inf          Inf 9.058243e+14          Inf 5.167610e+13\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf 9.765625e+06\n              [,6]         [,7]         [,8]         [,9]\n [1,] 1.870000e+02          188 2.100000e+01 3.360000e+02\n [2,] 5.685160e+05       153664 4.844160e+05 4.368100e+04\n [3,] 9.702990e+08    748613312 5.314410e+05 2.460375e+06\n [4,] 3.283852e+11  17172529936 1.573519e+08 3.082166e+10\n [5,] 6.070758e+14 657748550151 4.842622e+14 5.218538e+13\n [6,] 2.650072e+15          Inf          Inf          Inf\n [7,]          Inf 587068342272 1.708594e+08          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 5\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 3.730000e+02 7.090000e+02 9.910000e+02 6.640000e+02 3.200000e+02\n [2,] 5.953600e+04 6.099610e+05 6.084000e+05 4.914010e+05 1.183360e+05\n [3,] 4.862712e+07 3.246176e+07 3.779331e+08 1.154318e+07 3.285090e+08\n [4,] 4.283454e+11 3.301238e+11 9.284453e+10 2.138138e+07 5.624913e+10\n [5,] 3.077056e+14 4.463215e+14 3.552931e+13 1.908193e+14 8.368287e+14\n [6,] 3.269404e+11 1.806977e+15 4.969813e+11          Inf          Inf\n [7,]          Inf          Inf          Inf          Inf 2.502269e+14\n [8,] 1.100753e+11          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf 3.226877e+11\n[10,]          Inf          Inf          Inf          Inf          Inf\n             [,6]         [,7]         [,8]         [,9]\n [1,]         709 9.440000e+02 5.550000e+02          957\n [2,]      956484 5.595040e+05 9.734400e+04        62500\n [3,]   437245479 9.528128e+06 1.618786e+08    924010424\n [4,] 69257922561 2.333132e+11 2.655238e+09 306402103296\n [5,]   164916224 1.704848e+14 1.402969e+13  22877577568\n [6,]         Inf          Inf          Inf          Inf\n [7,]         Inf          Inf          Inf          Inf\n [8,]         Inf          Inf          Inf          Inf\n [9,]         Inf 7.427659e+15          Inf          Inf\n[10,]         Inf          Inf          Inf          Inf\n\n, , 6\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 2.920000e+02          737 7.790000e+02 6.610000e+02          565\n [2,] 8.911360e+05       321489 8.179600e+04 2.905210e+05        68121\n [3,] 2.352637e+06      5832000 2.406104e+06 1.036023e+07    714516984\n [4,] 1.384584e+11 807668879616 3.646916e+10 6.502874e+11 154550410641\n [5,] 9.381200e+11 101621504799 2.683544e+13 2.853694e+13 115063617043\n [6,]          Inf          Inf 6.321363e+09 2.084224e+11          Inf\n [7,] 1.229874e+14          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 5.270000e+02 7.160000e+02 1.780000e+02 5.200000e+02\n [2,] 8.643600e+04 6.553600e+04 2.528100e+04 5.461210e+05\n [3,] 2.985984e+06 1.190955e+08 1.123942e+07 2.290630e+07\n [4,] 3.080528e+11 5.352791e+10 1.304662e+11 3.064021e+11\n [5,] 8.765865e+14 7.583534e+13 1.751990e+12 1.575551e+13\n [6,]          Inf          Inf 6.400000e+01 1.015600e+14\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 7\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 1.140000e+02 6.370000e+02 5.460000e+02 2.520000e+02 2.610000e+02\n [2,] 1.904400e+04 3.782250e+05 1.000000e+04 8.190250e+05 3.306250e+05\n [3,] 7.761516e+08 2.874960e+05 9.325748e+08 1.601613e+06 5.574418e+08\n [4,] 2.687386e+07 5.487587e+10 1.752335e+11 1.026626e+09 2.613510e+11\n [5,] 4.591650e+13 1.725500e+13 6.274684e+14 1.783387e+12 3.987782e+11\n [6,]          Inf 1.009030e+13          Inf 2.194973e+12 3.684303e+15\n [7,]          Inf 1.407100e+14          Inf          Inf          Inf\n [8,]          Inf          Inf 1.681513e+13          Inf 2.817928e+13\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,]          705 9.950000e+02 5.400000e+02 5.990000e+02\n [2,]         6724 2.560000e+02 1.299600e+04 1.281640e+05\n [3,]    420189749 3.095914e+07 3.415321e+08 3.504026e+08\n [4,]       160000 8.816478e+11 7.072810e+09 5.220062e+11\n [5,] 115063617043 6.563568e+13 2.221183e+13 3.913539e+12\n [6,]          Inf 6.793729e+13          Inf          Inf\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 8\n\n              [,1]         [,2]        [,3]         [,4]         [,5]\n [1,] 7.160000e+02 3.640000e+02         696 1.590000e+02 5.320000e+02\n [2,] 3.769960e+05 3.410560e+05       54289 1.317690e+05 8.704890e+05\n [3,] 1.272635e+08 2.146689e+06   403583419 9.261000e+03 1.382400e+04\n [4,] 7.368022e+10 7.233948e+08  2798410000 1.677722e+11 8.458131e+11\n [5,] 6.378682e+14 1.116791e+13 81136812032 8.631696e+14 4.261457e+13\n [6,]          Inf          Inf         Inf          Inf 1.959306e+14\n [7,]          Inf          Inf         Inf          Inf          Inf\n [8,]          Inf          Inf         Inf          Inf          Inf\n [9,]          Inf          Inf         Inf          Inf          Inf\n[10,]          Inf          Inf         Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 3.390000e+02          916 7.210000e+02 3.380000e+02\n [2,] 5.431690e+05       126025 1.892250e+05 4.719690e+05\n [3,] 3.375000e+03    397065375 6.360560e+08 1.557209e+08\n [4,] 2.520474e+08 179607287601 9.971221e+09 7.950201e+10\n [5,] 2.174390e+14 779811265199 2.469500e+14 6.698977e+14\n [6,] 5.567915e+15          Inf          Inf          Inf\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\nbc.i(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.i(x, y, \"!=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.i(x, y, \"&lt;\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.i(x, y, \"&gt;\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1]  [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE FALSE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4]  [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7]  [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.i(x, y, \"&lt;=\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.i(x, y, \"&gt;=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1]  [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE FALSE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4]  [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7]  [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE"
  },
  {
    "objectID": "man/outer-like functions/bc.cplx.html",
    "href": "man/outer-like functions/bc.cplx.html",
    "title": "bc.cplx",
    "section": "",
    "text": "The bc.cplx() function performs broadcasted complex numeric operations pairs of arrays.   Note that bc.cplx() uses more strict NA checks than base ‘R’:  If for an element of either x or y, either the real or imaginary part is NA or NaN, than the result of the operation for that element is necessarily NA. \n\n\n\nbc.cplx(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable atomic arrays of type complex.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported arithmetic operators: +, -, *, /.  Supported relational operators: ==, !=. \n\n\n\n\n\n\n\nFor arithmetic operators:  A complex array as a result of the broadcasted arithmetic operation.   For relational operators:  A logical array as a result of the broadcasted relational comparison.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\ngen &lt;- function() sample(c(rnorm(10), NA, NA, NaN, NaN, Inf, Inf, -Inf, -Inf))\nx &lt;- array(gen() + gen() * -1i, x.dim)\ny &lt;- array(gen() + gen() * -1i, c(10,1,1))\n\nbc.cplx(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE FALSE    NA    NA FALSE    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA FALSE FALSE    NA    NA FALSE    NA    NA FALSE\n [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [5,] FALSE    NA    NA FALSE    NA    NA FALSE    NA FALSE\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [8,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n[10,]    NA    NA FALSE FALSE    NA    NA    NA FALSE    NA\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE FALSE    NA    NA FALSE    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA FALSE FALSE    NA    NA FALSE    NA    NA FALSE\n [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [5,] FALSE    NA    NA FALSE    NA    NA FALSE    NA FALSE\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [8,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n[10,]    NA    NA FALSE FALSE    NA    NA    NA FALSE    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE FALSE    NA    NA FALSE    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA FALSE FALSE    NA    NA FALSE    NA    NA FALSE\n [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [5,] FALSE    NA    NA FALSE    NA    NA FALSE    NA FALSE\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [8,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n[10,]    NA    NA FALSE FALSE    NA    NA    NA FALSE    NA\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE FALSE    NA    NA FALSE    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA FALSE FALSE    NA    NA FALSE    NA    NA FALSE\n [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [5,] FALSE    NA    NA FALSE    NA    NA FALSE    NA FALSE\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [8,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n[10,]    NA    NA FALSE FALSE    NA    NA    NA FALSE    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE FALSE    NA    NA FALSE    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA FALSE FALSE    NA    NA FALSE    NA    NA FALSE\n [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [5,] FALSE    NA    NA FALSE    NA    NA FALSE    NA FALSE\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [8,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n[10,]    NA    NA FALSE FALSE    NA    NA    NA FALSE    NA\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE FALSE    NA    NA FALSE    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA FALSE FALSE    NA    NA FALSE    NA    NA FALSE\n [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [5,] FALSE    NA    NA FALSE    NA    NA FALSE    NA FALSE\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [8,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n[10,]    NA    NA FALSE FALSE    NA    NA    NA FALSE    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE FALSE    NA    NA FALSE    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA FALSE FALSE    NA    NA FALSE    NA    NA FALSE\n [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [5,] FALSE    NA    NA FALSE    NA    NA FALSE    NA FALSE\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [8,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n[10,]    NA    NA FALSE FALSE    NA    NA    NA FALSE    NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE FALSE    NA    NA FALSE    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA FALSE FALSE    NA    NA FALSE    NA    NA FALSE\n [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [5,] FALSE    NA    NA FALSE    NA    NA FALSE    NA FALSE\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [8,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n[10,]    NA    NA FALSE FALSE    NA    NA    NA FALSE    NA\n\nbc.cplx(x, y, \"!=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA TRUE   NA TRUE TRUE   NA   NA TRUE   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA TRUE TRUE   NA   NA TRUE   NA   NA TRUE\n [4,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5,] TRUE   NA   NA TRUE   NA   NA TRUE   NA TRUE\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE   NA   NA   NA TRUE   NA\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA TRUE   NA TRUE TRUE   NA   NA TRUE   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA TRUE TRUE   NA   NA TRUE   NA   NA TRUE\n [4,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5,] TRUE   NA   NA TRUE   NA   NA TRUE   NA TRUE\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE   NA   NA   NA TRUE   NA\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA TRUE   NA TRUE TRUE   NA   NA TRUE   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA TRUE TRUE   NA   NA TRUE   NA   NA TRUE\n [4,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5,] TRUE   NA   NA TRUE   NA   NA TRUE   NA TRUE\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE   NA   NA   NA TRUE   NA\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA TRUE   NA TRUE TRUE   NA   NA TRUE   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA TRUE TRUE   NA   NA TRUE   NA   NA TRUE\n [4,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5,] TRUE   NA   NA TRUE   NA   NA TRUE   NA TRUE\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE   NA   NA   NA TRUE   NA\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA TRUE   NA TRUE TRUE   NA   NA TRUE   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA TRUE TRUE   NA   NA TRUE   NA   NA TRUE\n [4,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5,] TRUE   NA   NA TRUE   NA   NA TRUE   NA TRUE\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE   NA   NA   NA TRUE   NA\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA TRUE   NA TRUE TRUE   NA   NA TRUE   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA TRUE TRUE   NA   NA TRUE   NA   NA TRUE\n [4,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5,] TRUE   NA   NA TRUE   NA   NA TRUE   NA TRUE\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE   NA   NA   NA TRUE   NA\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA TRUE   NA TRUE TRUE   NA   NA TRUE   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA TRUE TRUE   NA   NA TRUE   NA   NA TRUE\n [4,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5,] TRUE   NA   NA TRUE   NA   NA TRUE   NA TRUE\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE   NA   NA   NA TRUE   NA\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA TRUE   NA TRUE TRUE   NA   NA TRUE   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA TRUE TRUE   NA   NA TRUE   NA   NA TRUE\n [4,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5,] TRUE   NA   NA TRUE   NA   NA TRUE   NA TRUE\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE   NA   NA   NA TRUE   NA\n\nbc.cplx(x, y, \"+\")\n\n, , 1\n\n                       [,1]                [,2]                     [,3]\n [1,]                    NA -2.348917-1.327225i                       NA\n [2,]                    NA                  NA                       NA\n [3,]                    NA  2.883525-1.168312i -0.007619888-0.03244127i\n [4,]                    NA                  NA                       NA\n [5,] -0.03693928-0.174701i                  NA                       NA\n [6,]                    NA                  NA                       NA\n [7,]                    NA                  NA                       NA\n [8,]                    NA                  NA                       NA\n [9,]                    NA                  NA                       NA\n[10,]                    NA                  NA         -Inf-1.61894158i\n                       [,4]                 [,5]                 [,6]\n [1,]  0.8371037-1.4491301i -2.054041-0.3132595i                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA -1.974965-0.0356001i\n [4,]                    NA                   NA                   NA\n [5,] -2.0042840-0.1778599i                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA                   NA\n [8,]                    NA                   NA                   NA\n [9,]                    NA                   NA                   NA\n[10,] -1.6255125+0.1637041i                   NA                   NA\n                      [,7]                 [,8]                 [,9]\n [1,]                   NA -4.021385-0.3164183i                   NA\n [2,]                   NA                   NA                   NA\n [3,]                   NA                   NA -0.3024959-1.046406i\n [4,]                   NA                   NA                   NA\n [5,] -0.3318153-1.188666i                   NA  2.8542052-1.310572i\n [6,]                   NA                   NA                   NA\n [7,]                   NA                   NA                   NA\n [8,]                   NA                   NA                   NA\n [9,]                   NA                   NA                   NA\n[10,]                   NA       Inf-0.9547368i                   NA\n\n, , 2\n\n                       [,1]                [,2]                     [,3]\n [1,]                    NA -2.348917-1.327225i                       NA\n [2,]                    NA                  NA                       NA\n [3,]                    NA  2.883525-1.168312i -0.007619888-0.03244127i\n [4,]                    NA                  NA                       NA\n [5,] -0.03693928-0.174701i                  NA                       NA\n [6,]                    NA                  NA                       NA\n [7,]                    NA                  NA                       NA\n [8,]                    NA                  NA                       NA\n [9,]                    NA                  NA                       NA\n[10,]                    NA                  NA         -Inf-1.61894158i\n                       [,4]                 [,5]                 [,6]\n [1,]  0.8371037-1.4491301i -2.054041-0.3132595i                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA -1.974965-0.0356001i\n [4,]                    NA                   NA                   NA\n [5,] -2.0042840-0.1778599i                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA                   NA\n [8,]                    NA                   NA                   NA\n [9,]                    NA                   NA                   NA\n[10,] -1.6255125+0.1637041i                   NA                   NA\n                      [,7]                 [,8]                 [,9]\n [1,]                   NA -4.021385-0.3164183i                   NA\n [2,]                   NA                   NA                   NA\n [3,]                   NA                   NA -0.3024959-1.046406i\n [4,]                   NA                   NA                   NA\n [5,] -0.3318153-1.188666i                   NA  2.8542052-1.310572i\n [6,]                   NA                   NA                   NA\n [7,]                   NA                   NA                   NA\n [8,]                   NA                   NA                   NA\n [9,]                   NA                   NA                   NA\n[10,]                   NA       Inf-0.9547368i                   NA\n\n, , 3\n\n                       [,1]                [,2]                     [,3]\n [1,]                    NA -2.348917-1.327225i                       NA\n [2,]                    NA                  NA                       NA\n [3,]                    NA  2.883525-1.168312i -0.007619888-0.03244127i\n [4,]                    NA                  NA                       NA\n [5,] -0.03693928-0.174701i                  NA                       NA\n [6,]                    NA                  NA                       NA\n [7,]                    NA                  NA                       NA\n [8,]                    NA                  NA                       NA\n [9,]                    NA                  NA                       NA\n[10,]                    NA                  NA         -Inf-1.61894158i\n                       [,4]                 [,5]                 [,6]\n [1,]  0.8371037-1.4491301i -2.054041-0.3132595i                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA -1.974965-0.0356001i\n [4,]                    NA                   NA                   NA\n [5,] -2.0042840-0.1778599i                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA                   NA\n [8,]                    NA                   NA                   NA\n [9,]                    NA                   NA                   NA\n[10,] -1.6255125+0.1637041i                   NA                   NA\n                      [,7]                 [,8]                 [,9]\n [1,]                   NA -4.021385-0.3164183i                   NA\n [2,]                   NA                   NA                   NA\n [3,]                   NA                   NA -0.3024959-1.046406i\n [4,]                   NA                   NA                   NA\n [5,] -0.3318153-1.188666i                   NA  2.8542052-1.310572i\n [6,]                   NA                   NA                   NA\n [7,]                   NA                   NA                   NA\n [8,]                   NA                   NA                   NA\n [9,]                   NA                   NA                   NA\n[10,]                   NA       Inf-0.9547368i                   NA\n\n, , 4\n\n                       [,1]                [,2]                     [,3]\n [1,]                    NA -2.348917-1.327225i                       NA\n [2,]                    NA                  NA                       NA\n [3,]                    NA  2.883525-1.168312i -0.007619888-0.03244127i\n [4,]                    NA                  NA                       NA\n [5,] -0.03693928-0.174701i                  NA                       NA\n [6,]                    NA                  NA                       NA\n [7,]                    NA                  NA                       NA\n [8,]                    NA                  NA                       NA\n [9,]                    NA                  NA                       NA\n[10,]                    NA                  NA         -Inf-1.61894158i\n                       [,4]                 [,5]                 [,6]\n [1,]  0.8371037-1.4491301i -2.054041-0.3132595i                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA -1.974965-0.0356001i\n [4,]                    NA                   NA                   NA\n [5,] -2.0042840-0.1778599i                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA                   NA\n [8,]                    NA                   NA                   NA\n [9,]                    NA                   NA                   NA\n[10,] -1.6255125+0.1637041i                   NA                   NA\n                      [,7]                 [,8]                 [,9]\n [1,]                   NA -4.021385-0.3164183i                   NA\n [2,]                   NA                   NA                   NA\n [3,]                   NA                   NA -0.3024959-1.046406i\n [4,]                   NA                   NA                   NA\n [5,] -0.3318153-1.188666i                   NA  2.8542052-1.310572i\n [6,]                   NA                   NA                   NA\n [7,]                   NA                   NA                   NA\n [8,]                   NA                   NA                   NA\n [9,]                   NA                   NA                   NA\n[10,]                   NA       Inf-0.9547368i                   NA\n\n, , 5\n\n                       [,1]                [,2]                     [,3]\n [1,]                    NA -2.348917-1.327225i                       NA\n [2,]                    NA                  NA                       NA\n [3,]                    NA  2.883525-1.168312i -0.007619888-0.03244127i\n [4,]                    NA                  NA                       NA\n [5,] -0.03693928-0.174701i                  NA                       NA\n [6,]                    NA                  NA                       NA\n [7,]                    NA                  NA                       NA\n [8,]                    NA                  NA                       NA\n [9,]                    NA                  NA                       NA\n[10,]                    NA                  NA         -Inf-1.61894158i\n                       [,4]                 [,5]                 [,6]\n [1,]  0.8371037-1.4491301i -2.054041-0.3132595i                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA -1.974965-0.0356001i\n [4,]                    NA                   NA                   NA\n [5,] -2.0042840-0.1778599i                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA                   NA\n [8,]                    NA                   NA                   NA\n [9,]                    NA                   NA                   NA\n[10,] -1.6255125+0.1637041i                   NA                   NA\n                      [,7]                 [,8]                 [,9]\n [1,]                   NA -4.021385-0.3164183i                   NA\n [2,]                   NA                   NA                   NA\n [3,]                   NA                   NA -0.3024959-1.046406i\n [4,]                   NA                   NA                   NA\n [5,] -0.3318153-1.188666i                   NA  2.8542052-1.310572i\n [6,]                   NA                   NA                   NA\n [7,]                   NA                   NA                   NA\n [8,]                   NA                   NA                   NA\n [9,]                   NA                   NA                   NA\n[10,]                   NA       Inf-0.9547368i                   NA\n\n, , 6\n\n                       [,1]                [,2]                     [,3]\n [1,]                    NA -2.348917-1.327225i                       NA\n [2,]                    NA                  NA                       NA\n [3,]                    NA  2.883525-1.168312i -0.007619888-0.03244127i\n [4,]                    NA                  NA                       NA\n [5,] -0.03693928-0.174701i                  NA                       NA\n [6,]                    NA                  NA                       NA\n [7,]                    NA                  NA                       NA\n [8,]                    NA                  NA                       NA\n [9,]                    NA                  NA                       NA\n[10,]                    NA                  NA         -Inf-1.61894158i\n                       [,4]                 [,5]                 [,6]\n [1,]  0.8371037-1.4491301i -2.054041-0.3132595i                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA -1.974965-0.0356001i\n [4,]                    NA                   NA                   NA\n [5,] -2.0042840-0.1778599i                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA                   NA\n [8,]                    NA                   NA                   NA\n [9,]                    NA                   NA                   NA\n[10,] -1.6255125+0.1637041i                   NA                   NA\n                      [,7]                 [,8]                 [,9]\n [1,]                   NA -4.021385-0.3164183i                   NA\n [2,]                   NA                   NA                   NA\n [3,]                   NA                   NA -0.3024959-1.046406i\n [4,]                   NA                   NA                   NA\n [5,] -0.3318153-1.188666i                   NA  2.8542052-1.310572i\n [6,]                   NA                   NA                   NA\n [7,]                   NA                   NA                   NA\n [8,]                   NA                   NA                   NA\n [9,]                   NA                   NA                   NA\n[10,]                   NA       Inf-0.9547368i                   NA\n\n, , 7\n\n                       [,1]                [,2]                     [,3]\n [1,]                    NA -2.348917-1.327225i                       NA\n [2,]                    NA                  NA                       NA\n [3,]                    NA  2.883525-1.168312i -0.007619888-0.03244127i\n [4,]                    NA                  NA                       NA\n [5,] -0.03693928-0.174701i                  NA                       NA\n [6,]                    NA                  NA                       NA\n [7,]                    NA                  NA                       NA\n [8,]                    NA                  NA                       NA\n [9,]                    NA                  NA                       NA\n[10,]                    NA                  NA         -Inf-1.61894158i\n                       [,4]                 [,5]                 [,6]\n [1,]  0.8371037-1.4491301i -2.054041-0.3132595i                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA -1.974965-0.0356001i\n [4,]                    NA                   NA                   NA\n [5,] -2.0042840-0.1778599i                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA                   NA\n [8,]                    NA                   NA                   NA\n [9,]                    NA                   NA                   NA\n[10,] -1.6255125+0.1637041i                   NA                   NA\n                      [,7]                 [,8]                 [,9]\n [1,]                   NA -4.021385-0.3164183i                   NA\n [2,]                   NA                   NA                   NA\n [3,]                   NA                   NA -0.3024959-1.046406i\n [4,]                   NA                   NA                   NA\n [5,] -0.3318153-1.188666i                   NA  2.8542052-1.310572i\n [6,]                   NA                   NA                   NA\n [7,]                   NA                   NA                   NA\n [8,]                   NA                   NA                   NA\n [9,]                   NA                   NA                   NA\n[10,]                   NA       Inf-0.9547368i                   NA\n\n, , 8\n\n                       [,1]                [,2]                     [,3]\n [1,]                    NA -2.348917-1.327225i                       NA\n [2,]                    NA                  NA                       NA\n [3,]                    NA  2.883525-1.168312i -0.007619888-0.03244127i\n [4,]                    NA                  NA                       NA\n [5,] -0.03693928-0.174701i                  NA                       NA\n [6,]                    NA                  NA                       NA\n [7,]                    NA                  NA                       NA\n [8,]                    NA                  NA                       NA\n [9,]                    NA                  NA                       NA\n[10,]                    NA                  NA         -Inf-1.61894158i\n                       [,4]                 [,5]                 [,6]\n [1,]  0.8371037-1.4491301i -2.054041-0.3132595i                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA -1.974965-0.0356001i\n [4,]                    NA                   NA                   NA\n [5,] -2.0042840-0.1778599i                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA                   NA\n [8,]                    NA                   NA                   NA\n [9,]                    NA                   NA                   NA\n[10,] -1.6255125+0.1637041i                   NA                   NA\n                      [,7]                 [,8]                 [,9]\n [1,]                   NA -4.021385-0.3164183i                   NA\n [2,]                   NA                   NA                   NA\n [3,]                   NA                   NA -0.3024959-1.046406i\n [4,]                   NA                   NA                   NA\n [5,] -0.3318153-1.188666i                   NA  2.8542052-1.310572i\n [6,]                   NA                   NA                   NA\n [7,]                   NA                   NA                   NA\n [8,]                   NA                   NA                   NA\n [9,]                   NA                   NA                   NA\n[10,]                   NA       Inf-0.9547368i                   NA\n\nbc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), \"==\")\n\n [1]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA FALSE\n[13]    NA FALSE FALSE    NA    NA    NA\n\nbc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), \"!=\")\n\n [1]   NA   NA   NA   NA   NA   NA TRUE TRUE   NA   NA   NA   NA   NA   NA   NA\n[16]   NA   NA   NA\n\nx &lt;- gen() + gen() * -1i\ny &lt;- gen() + gen() * -1i\nout &lt;- bc.cplx(array(x), array(y), \"*\")\ncbind(x, y, x*y, out)\n\n                          x                      y                   \n [1,]        NaN+      Infi                     NA      NaN+     NaNi\n [2,]        NaN+      NaNi         NaN-      Infi      NaN+     NaNi\n [3,]        NaN-      Infi                     NA      NaN+     NaNi\n [4,]  1.1495825-0.3441187i         NaN-0.7936862i      NaN+     NaNi\n [5,]        NaN+      Infi 1.048605756+1.1063365i     -Inf+     Infi\n [6,]        Inf-0.5862748i         NaN+      NaNi      NaN+     NaNi\n [7,]                    NA                     NA      NaN+     NaNi\n [8,]  0.2181776+2.2267679i         Inf-0.6789272i      Inf+     Infi\n [9,] -0.7183708+0.6186997i                     NA     -Inf-     Infi\n[10,]  0.3551730+0.4834502i         Inf-0.4870274i      Inf+     Infi\n[11,]                    NA         NaN-      Infi     -Inf+     NaNi\n[12,]        NaN-2.5601133i        -Inf-2.5710354i      NaN+     Infi\n[13,]       -Inf+1.0621046i 0.607486813-0.4657690i     -Inf+     Infi\n[14,]  0.6150991-0.9499401i        -Inf+0.4066136i     -Inf+     Infi\n[15,]                    NA         NaN+      NaNi      NaN+     NaNi\n[16,]        NaN+      NaNi 0.652287922+1.1048377i      NaN+     NaNi\n[17,]                    NA 0.004954468-0.6741292i                 NA\n[18,]  0.3727857-2.7616268i 0.013885700+0.3773781i 1.047354+0.102334i\n                     out\n [1,]                 NA\n [2,]                 NA\n [3,]                 NA\n [4,]                 NA\n [5,]                 NA\n [6,]                 NA\n [7,]                 NA\n [8,]      Inf+     Infi\n [9,]                 NA\n[10,]      Inf+     Infi\n[11,]                 NA\n[12,]                 NA\n[13,]     -Inf+     Infi\n[14,]     -Inf+     Infi\n[15,]                 NA\n[16,]                 NA\n[17,]                 NA\n[18,] 1.047354+0.102334i"
  },
  {
    "objectID": "man/outer-like functions/bc.cplx.html#broadcasted-complex-numeric-operations",
    "href": "man/outer-like functions/bc.cplx.html#broadcasted-complex-numeric-operations",
    "title": "bc.cplx",
    "section": "",
    "text": "The bc.cplx() function performs broadcasted complex numeric operations pairs of arrays.   Note that bc.cplx() uses more strict NA checks than base ‘R’:  If for an element of either x or y, either the real or imaginary part is NA or NaN, than the result of the operation for that element is necessarily NA. \n\n\n\nbc.cplx(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable atomic arrays of type complex.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported arithmetic operators: +, -, *, /.  Supported relational operators: ==, !=. \n\n\n\n\n\n\n\nFor arithmetic operators:  A complex array as a result of the broadcasted arithmetic operation.   For relational operators:  A logical array as a result of the broadcasted relational comparison.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\ngen &lt;- function() sample(c(rnorm(10), NA, NA, NaN, NaN, Inf, Inf, -Inf, -Inf))\nx &lt;- array(gen() + gen() * -1i, x.dim)\ny &lt;- array(gen() + gen() * -1i, c(10,1,1))\n\nbc.cplx(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE FALSE    NA    NA FALSE    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA FALSE FALSE    NA    NA FALSE    NA    NA FALSE\n [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [5,] FALSE    NA    NA FALSE    NA    NA FALSE    NA FALSE\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [8,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n[10,]    NA    NA FALSE FALSE    NA    NA    NA FALSE    NA\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE FALSE    NA    NA FALSE    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA FALSE FALSE    NA    NA FALSE    NA    NA FALSE\n [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [5,] FALSE    NA    NA FALSE    NA    NA FALSE    NA FALSE\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [8,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n[10,]    NA    NA FALSE FALSE    NA    NA    NA FALSE    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE FALSE    NA    NA FALSE    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA FALSE FALSE    NA    NA FALSE    NA    NA FALSE\n [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [5,] FALSE    NA    NA FALSE    NA    NA FALSE    NA FALSE\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [8,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n[10,]    NA    NA FALSE FALSE    NA    NA    NA FALSE    NA\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE FALSE    NA    NA FALSE    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA FALSE FALSE    NA    NA FALSE    NA    NA FALSE\n [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [5,] FALSE    NA    NA FALSE    NA    NA FALSE    NA FALSE\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [8,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n[10,]    NA    NA FALSE FALSE    NA    NA    NA FALSE    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE FALSE    NA    NA FALSE    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA FALSE FALSE    NA    NA FALSE    NA    NA FALSE\n [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [5,] FALSE    NA    NA FALSE    NA    NA FALSE    NA FALSE\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [8,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n[10,]    NA    NA FALSE FALSE    NA    NA    NA FALSE    NA\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE FALSE    NA    NA FALSE    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA FALSE FALSE    NA    NA FALSE    NA    NA FALSE\n [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [5,] FALSE    NA    NA FALSE    NA    NA FALSE    NA FALSE\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [8,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n[10,]    NA    NA FALSE FALSE    NA    NA    NA FALSE    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE FALSE    NA    NA FALSE    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA FALSE FALSE    NA    NA FALSE    NA    NA FALSE\n [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [5,] FALSE    NA    NA FALSE    NA    NA FALSE    NA FALSE\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [8,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n[10,]    NA    NA FALSE FALSE    NA    NA    NA FALSE    NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE FALSE    NA    NA FALSE    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA FALSE FALSE    NA    NA FALSE    NA    NA FALSE\n [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [5,] FALSE    NA    NA FALSE    NA    NA FALSE    NA FALSE\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [8,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n[10,]    NA    NA FALSE FALSE    NA    NA    NA FALSE    NA\n\nbc.cplx(x, y, \"!=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA TRUE   NA TRUE TRUE   NA   NA TRUE   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA TRUE TRUE   NA   NA TRUE   NA   NA TRUE\n [4,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5,] TRUE   NA   NA TRUE   NA   NA TRUE   NA TRUE\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE   NA   NA   NA TRUE   NA\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA TRUE   NA TRUE TRUE   NA   NA TRUE   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA TRUE TRUE   NA   NA TRUE   NA   NA TRUE\n [4,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5,] TRUE   NA   NA TRUE   NA   NA TRUE   NA TRUE\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE   NA   NA   NA TRUE   NA\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA TRUE   NA TRUE TRUE   NA   NA TRUE   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA TRUE TRUE   NA   NA TRUE   NA   NA TRUE\n [4,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5,] TRUE   NA   NA TRUE   NA   NA TRUE   NA TRUE\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE   NA   NA   NA TRUE   NA\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA TRUE   NA TRUE TRUE   NA   NA TRUE   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA TRUE TRUE   NA   NA TRUE   NA   NA TRUE\n [4,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5,] TRUE   NA   NA TRUE   NA   NA TRUE   NA TRUE\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE   NA   NA   NA TRUE   NA\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA TRUE   NA TRUE TRUE   NA   NA TRUE   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA TRUE TRUE   NA   NA TRUE   NA   NA TRUE\n [4,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5,] TRUE   NA   NA TRUE   NA   NA TRUE   NA TRUE\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE   NA   NA   NA TRUE   NA\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA TRUE   NA TRUE TRUE   NA   NA TRUE   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA TRUE TRUE   NA   NA TRUE   NA   NA TRUE\n [4,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5,] TRUE   NA   NA TRUE   NA   NA TRUE   NA TRUE\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE   NA   NA   NA TRUE   NA\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA TRUE   NA TRUE TRUE   NA   NA TRUE   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA TRUE TRUE   NA   NA TRUE   NA   NA TRUE\n [4,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5,] TRUE   NA   NA TRUE   NA   NA TRUE   NA TRUE\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE   NA   NA   NA TRUE   NA\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA TRUE   NA TRUE TRUE   NA   NA TRUE   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA TRUE TRUE   NA   NA TRUE   NA   NA TRUE\n [4,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [5,] TRUE   NA   NA TRUE   NA   NA TRUE   NA TRUE\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE   NA   NA   NA TRUE   NA\n\nbc.cplx(x, y, \"+\")\n\n, , 1\n\n                       [,1]                [,2]                     [,3]\n [1,]                    NA -2.348917-1.327225i                       NA\n [2,]                    NA                  NA                       NA\n [3,]                    NA  2.883525-1.168312i -0.007619888-0.03244127i\n [4,]                    NA                  NA                       NA\n [5,] -0.03693928-0.174701i                  NA                       NA\n [6,]                    NA                  NA                       NA\n [7,]                    NA                  NA                       NA\n [8,]                    NA                  NA                       NA\n [9,]                    NA                  NA                       NA\n[10,]                    NA                  NA         -Inf-1.61894158i\n                       [,4]                 [,5]                 [,6]\n [1,]  0.8371037-1.4491301i -2.054041-0.3132595i                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA -1.974965-0.0356001i\n [4,]                    NA                   NA                   NA\n [5,] -2.0042840-0.1778599i                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA                   NA\n [8,]                    NA                   NA                   NA\n [9,]                    NA                   NA                   NA\n[10,] -1.6255125+0.1637041i                   NA                   NA\n                      [,7]                 [,8]                 [,9]\n [1,]                   NA -4.021385-0.3164183i                   NA\n [2,]                   NA                   NA                   NA\n [3,]                   NA                   NA -0.3024959-1.046406i\n [4,]                   NA                   NA                   NA\n [5,] -0.3318153-1.188666i                   NA  2.8542052-1.310572i\n [6,]                   NA                   NA                   NA\n [7,]                   NA                   NA                   NA\n [8,]                   NA                   NA                   NA\n [9,]                   NA                   NA                   NA\n[10,]                   NA       Inf-0.9547368i                   NA\n\n, , 2\n\n                       [,1]                [,2]                     [,3]\n [1,]                    NA -2.348917-1.327225i                       NA\n [2,]                    NA                  NA                       NA\n [3,]                    NA  2.883525-1.168312i -0.007619888-0.03244127i\n [4,]                    NA                  NA                       NA\n [5,] -0.03693928-0.174701i                  NA                       NA\n [6,]                    NA                  NA                       NA\n [7,]                    NA                  NA                       NA\n [8,]                    NA                  NA                       NA\n [9,]                    NA                  NA                       NA\n[10,]                    NA                  NA         -Inf-1.61894158i\n                       [,4]                 [,5]                 [,6]\n [1,]  0.8371037-1.4491301i -2.054041-0.3132595i                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA -1.974965-0.0356001i\n [4,]                    NA                   NA                   NA\n [5,] -2.0042840-0.1778599i                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA                   NA\n [8,]                    NA                   NA                   NA\n [9,]                    NA                   NA                   NA\n[10,] -1.6255125+0.1637041i                   NA                   NA\n                      [,7]                 [,8]                 [,9]\n [1,]                   NA -4.021385-0.3164183i                   NA\n [2,]                   NA                   NA                   NA\n [3,]                   NA                   NA -0.3024959-1.046406i\n [4,]                   NA                   NA                   NA\n [5,] -0.3318153-1.188666i                   NA  2.8542052-1.310572i\n [6,]                   NA                   NA                   NA\n [7,]                   NA                   NA                   NA\n [8,]                   NA                   NA                   NA\n [9,]                   NA                   NA                   NA\n[10,]                   NA       Inf-0.9547368i                   NA\n\n, , 3\n\n                       [,1]                [,2]                     [,3]\n [1,]                    NA -2.348917-1.327225i                       NA\n [2,]                    NA                  NA                       NA\n [3,]                    NA  2.883525-1.168312i -0.007619888-0.03244127i\n [4,]                    NA                  NA                       NA\n [5,] -0.03693928-0.174701i                  NA                       NA\n [6,]                    NA                  NA                       NA\n [7,]                    NA                  NA                       NA\n [8,]                    NA                  NA                       NA\n [9,]                    NA                  NA                       NA\n[10,]                    NA                  NA         -Inf-1.61894158i\n                       [,4]                 [,5]                 [,6]\n [1,]  0.8371037-1.4491301i -2.054041-0.3132595i                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA -1.974965-0.0356001i\n [4,]                    NA                   NA                   NA\n [5,] -2.0042840-0.1778599i                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA                   NA\n [8,]                    NA                   NA                   NA\n [9,]                    NA                   NA                   NA\n[10,] -1.6255125+0.1637041i                   NA                   NA\n                      [,7]                 [,8]                 [,9]\n [1,]                   NA -4.021385-0.3164183i                   NA\n [2,]                   NA                   NA                   NA\n [3,]                   NA                   NA -0.3024959-1.046406i\n [4,]                   NA                   NA                   NA\n [5,] -0.3318153-1.188666i                   NA  2.8542052-1.310572i\n [6,]                   NA                   NA                   NA\n [7,]                   NA                   NA                   NA\n [8,]                   NA                   NA                   NA\n [9,]                   NA                   NA                   NA\n[10,]                   NA       Inf-0.9547368i                   NA\n\n, , 4\n\n                       [,1]                [,2]                     [,3]\n [1,]                    NA -2.348917-1.327225i                       NA\n [2,]                    NA                  NA                       NA\n [3,]                    NA  2.883525-1.168312i -0.007619888-0.03244127i\n [4,]                    NA                  NA                       NA\n [5,] -0.03693928-0.174701i                  NA                       NA\n [6,]                    NA                  NA                       NA\n [7,]                    NA                  NA                       NA\n [8,]                    NA                  NA                       NA\n [9,]                    NA                  NA                       NA\n[10,]                    NA                  NA         -Inf-1.61894158i\n                       [,4]                 [,5]                 [,6]\n [1,]  0.8371037-1.4491301i -2.054041-0.3132595i                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA -1.974965-0.0356001i\n [4,]                    NA                   NA                   NA\n [5,] -2.0042840-0.1778599i                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA                   NA\n [8,]                    NA                   NA                   NA\n [9,]                    NA                   NA                   NA\n[10,] -1.6255125+0.1637041i                   NA                   NA\n                      [,7]                 [,8]                 [,9]\n [1,]                   NA -4.021385-0.3164183i                   NA\n [2,]                   NA                   NA                   NA\n [3,]                   NA                   NA -0.3024959-1.046406i\n [4,]                   NA                   NA                   NA\n [5,] -0.3318153-1.188666i                   NA  2.8542052-1.310572i\n [6,]                   NA                   NA                   NA\n [7,]                   NA                   NA                   NA\n [8,]                   NA                   NA                   NA\n [9,]                   NA                   NA                   NA\n[10,]                   NA       Inf-0.9547368i                   NA\n\n, , 5\n\n                       [,1]                [,2]                     [,3]\n [1,]                    NA -2.348917-1.327225i                       NA\n [2,]                    NA                  NA                       NA\n [3,]                    NA  2.883525-1.168312i -0.007619888-0.03244127i\n [4,]                    NA                  NA                       NA\n [5,] -0.03693928-0.174701i                  NA                       NA\n [6,]                    NA                  NA                       NA\n [7,]                    NA                  NA                       NA\n [8,]                    NA                  NA                       NA\n [9,]                    NA                  NA                       NA\n[10,]                    NA                  NA         -Inf-1.61894158i\n                       [,4]                 [,5]                 [,6]\n [1,]  0.8371037-1.4491301i -2.054041-0.3132595i                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA -1.974965-0.0356001i\n [4,]                    NA                   NA                   NA\n [5,] -2.0042840-0.1778599i                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA                   NA\n [8,]                    NA                   NA                   NA\n [9,]                    NA                   NA                   NA\n[10,] -1.6255125+0.1637041i                   NA                   NA\n                      [,7]                 [,8]                 [,9]\n [1,]                   NA -4.021385-0.3164183i                   NA\n [2,]                   NA                   NA                   NA\n [3,]                   NA                   NA -0.3024959-1.046406i\n [4,]                   NA                   NA                   NA\n [5,] -0.3318153-1.188666i                   NA  2.8542052-1.310572i\n [6,]                   NA                   NA                   NA\n [7,]                   NA                   NA                   NA\n [8,]                   NA                   NA                   NA\n [9,]                   NA                   NA                   NA\n[10,]                   NA       Inf-0.9547368i                   NA\n\n, , 6\n\n                       [,1]                [,2]                     [,3]\n [1,]                    NA -2.348917-1.327225i                       NA\n [2,]                    NA                  NA                       NA\n [3,]                    NA  2.883525-1.168312i -0.007619888-0.03244127i\n [4,]                    NA                  NA                       NA\n [5,] -0.03693928-0.174701i                  NA                       NA\n [6,]                    NA                  NA                       NA\n [7,]                    NA                  NA                       NA\n [8,]                    NA                  NA                       NA\n [9,]                    NA                  NA                       NA\n[10,]                    NA                  NA         -Inf-1.61894158i\n                       [,4]                 [,5]                 [,6]\n [1,]  0.8371037-1.4491301i -2.054041-0.3132595i                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA -1.974965-0.0356001i\n [4,]                    NA                   NA                   NA\n [5,] -2.0042840-0.1778599i                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA                   NA\n [8,]                    NA                   NA                   NA\n [9,]                    NA                   NA                   NA\n[10,] -1.6255125+0.1637041i                   NA                   NA\n                      [,7]                 [,8]                 [,9]\n [1,]                   NA -4.021385-0.3164183i                   NA\n [2,]                   NA                   NA                   NA\n [3,]                   NA                   NA -0.3024959-1.046406i\n [4,]                   NA                   NA                   NA\n [5,] -0.3318153-1.188666i                   NA  2.8542052-1.310572i\n [6,]                   NA                   NA                   NA\n [7,]                   NA                   NA                   NA\n [8,]                   NA                   NA                   NA\n [9,]                   NA                   NA                   NA\n[10,]                   NA       Inf-0.9547368i                   NA\n\n, , 7\n\n                       [,1]                [,2]                     [,3]\n [1,]                    NA -2.348917-1.327225i                       NA\n [2,]                    NA                  NA                       NA\n [3,]                    NA  2.883525-1.168312i -0.007619888-0.03244127i\n [4,]                    NA                  NA                       NA\n [5,] -0.03693928-0.174701i                  NA                       NA\n [6,]                    NA                  NA                       NA\n [7,]                    NA                  NA                       NA\n [8,]                    NA                  NA                       NA\n [9,]                    NA                  NA                       NA\n[10,]                    NA                  NA         -Inf-1.61894158i\n                       [,4]                 [,5]                 [,6]\n [1,]  0.8371037-1.4491301i -2.054041-0.3132595i                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA -1.974965-0.0356001i\n [4,]                    NA                   NA                   NA\n [5,] -2.0042840-0.1778599i                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA                   NA\n [8,]                    NA                   NA                   NA\n [9,]                    NA                   NA                   NA\n[10,] -1.6255125+0.1637041i                   NA                   NA\n                      [,7]                 [,8]                 [,9]\n [1,]                   NA -4.021385-0.3164183i                   NA\n [2,]                   NA                   NA                   NA\n [3,]                   NA                   NA -0.3024959-1.046406i\n [4,]                   NA                   NA                   NA\n [5,] -0.3318153-1.188666i                   NA  2.8542052-1.310572i\n [6,]                   NA                   NA                   NA\n [7,]                   NA                   NA                   NA\n [8,]                   NA                   NA                   NA\n [9,]                   NA                   NA                   NA\n[10,]                   NA       Inf-0.9547368i                   NA\n\n, , 8\n\n                       [,1]                [,2]                     [,3]\n [1,]                    NA -2.348917-1.327225i                       NA\n [2,]                    NA                  NA                       NA\n [3,]                    NA  2.883525-1.168312i -0.007619888-0.03244127i\n [4,]                    NA                  NA                       NA\n [5,] -0.03693928-0.174701i                  NA                       NA\n [6,]                    NA                  NA                       NA\n [7,]                    NA                  NA                       NA\n [8,]                    NA                  NA                       NA\n [9,]                    NA                  NA                       NA\n[10,]                    NA                  NA         -Inf-1.61894158i\n                       [,4]                 [,5]                 [,6]\n [1,]  0.8371037-1.4491301i -2.054041-0.3132595i                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA -1.974965-0.0356001i\n [4,]                    NA                   NA                   NA\n [5,] -2.0042840-0.1778599i                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA                   NA\n [8,]                    NA                   NA                   NA\n [9,]                    NA                   NA                   NA\n[10,] -1.6255125+0.1637041i                   NA                   NA\n                      [,7]                 [,8]                 [,9]\n [1,]                   NA -4.021385-0.3164183i                   NA\n [2,]                   NA                   NA                   NA\n [3,]                   NA                   NA -0.3024959-1.046406i\n [4,]                   NA                   NA                   NA\n [5,] -0.3318153-1.188666i                   NA  2.8542052-1.310572i\n [6,]                   NA                   NA                   NA\n [7,]                   NA                   NA                   NA\n [8,]                   NA                   NA                   NA\n [9,]                   NA                   NA                   NA\n[10,]                   NA       Inf-0.9547368i                   NA\n\nbc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), \"==\")\n\n [1]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA FALSE\n[13]    NA FALSE FALSE    NA    NA    NA\n\nbc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), \"!=\")\n\n [1]   NA   NA   NA   NA   NA   NA TRUE TRUE   NA   NA   NA   NA   NA   NA   NA\n[16]   NA   NA   NA\n\nx &lt;- gen() + gen() * -1i\ny &lt;- gen() + gen() * -1i\nout &lt;- bc.cplx(array(x), array(y), \"*\")\ncbind(x, y, x*y, out)\n\n                          x                      y                   \n [1,]        NaN+      Infi                     NA      NaN+     NaNi\n [2,]        NaN+      NaNi         NaN-      Infi      NaN+     NaNi\n [3,]        NaN-      Infi                     NA      NaN+     NaNi\n [4,]  1.1495825-0.3441187i         NaN-0.7936862i      NaN+     NaNi\n [5,]        NaN+      Infi 1.048605756+1.1063365i     -Inf+     Infi\n [6,]        Inf-0.5862748i         NaN+      NaNi      NaN+     NaNi\n [7,]                    NA                     NA      NaN+     NaNi\n [8,]  0.2181776+2.2267679i         Inf-0.6789272i      Inf+     Infi\n [9,] -0.7183708+0.6186997i                     NA     -Inf-     Infi\n[10,]  0.3551730+0.4834502i         Inf-0.4870274i      Inf+     Infi\n[11,]                    NA         NaN-      Infi     -Inf+     NaNi\n[12,]        NaN-2.5601133i        -Inf-2.5710354i      NaN+     Infi\n[13,]       -Inf+1.0621046i 0.607486813-0.4657690i     -Inf+     Infi\n[14,]  0.6150991-0.9499401i        -Inf+0.4066136i     -Inf+     Infi\n[15,]                    NA         NaN+      NaNi      NaN+     NaNi\n[16,]        NaN+      NaNi 0.652287922+1.1048377i      NaN+     NaNi\n[17,]                    NA 0.004954468-0.6741292i                 NA\n[18,]  0.3727857-2.7616268i 0.013885700+0.3773781i 1.047354+0.102334i\n                     out\n [1,]                 NA\n [2,]                 NA\n [3,]                 NA\n [4,]                 NA\n [5,]                 NA\n [6,]                 NA\n [7,]                 NA\n [8,]      Inf+     Infi\n [9,]                 NA\n[10,]      Inf+     Infi\n[11,]                 NA\n[12,]                 NA\n[13,]     -Inf+     Infi\n[14,]     -Inf+     Infi\n[15,]                 NA\n[16,]                 NA\n[17,]                 NA\n[18,] 1.047354+0.102334i"
  },
  {
    "objectID": "man/helper functions/typecast.html",
    "href": "man/helper functions/typecast.html",
    "title": "typecast",
    "section": "",
    "text": "Type casting usually strips away attributes of objects.  The functions provided here preserve dimensions, dimnames, and names, which may be more convenient for arrays and array-like objects.   The functions are as follows: \n\n\nas_bool(): converts object to atomic type logical (TRUE, FALSE, NA).\n\n\nas_int(): converts object to atomic type integer.\n\n\nas_dbl(): converts object to atomic type double (AKA numeric).\n\n\nas_chr(): converts object to atomic type character.\n\n\nas_cplx(): converts object to atomic type complex.\n\n\nas_raw(): converts object to atomic type raw.\n\n\nas_list(): converts object to recursive type list. \n\n\nas_num() is an alias for as_dbl().  as_str() is an alias for as_chr().   See also typeof.  \n\n\n\nas_bool(x, ...)\n\nas_int(x, ...)\n\nas_dbl(x, ...)\n\nas_num(x, ...)\n\nas_chr(x, ...)\n\nas_str(x, ...)\n\nas_cplx(x, ...)\n\nas_raw(x, ...)\n\nas_list(x, ...)\n\n\n\n\n\n\n\n\nx\n\n\nan R object.\n\n\n\n\n…\n\n\nfurther arguments passed to or from other methods.\n\n\n\n\n\n\n\nThe converted object.  \n\n\n\n\nlibrary(\"broadcast\")\n\n\n# matrix example ====\nx &lt;- matrix(sample(-1:28), ncol = 5)\ncolnames(x) &lt;- month.name[1:5]\nrownames(x) &lt;- month.abb[1:6]\nnames(x) &lt;- c(letters[1:20], LETTERS[1:10])\nprint(x)\n\n    January February March April May\nJan      14        6     9    27  15\nFeb      23        4    24     0  26\nMar      25        3    17     2  12\nApr      10       13    28     1  21\nMay      16       -1    19    22  20\nJun       5       18     7    11   8\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_bool(x)\n\n    January February March April  May\nJan    TRUE     TRUE  TRUE  TRUE TRUE\nFeb    TRUE     TRUE  TRUE FALSE TRUE\nMar    TRUE     TRUE  TRUE  TRUE TRUE\nApr    TRUE     TRUE  TRUE  TRUE TRUE\nMay    TRUE     TRUE  TRUE  TRUE TRUE\nJun    TRUE     TRUE  TRUE  TRUE TRUE\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_int(x)\n\n    January February March April May\nJan      14        6     9    27  15\nFeb      23        4    24     0  26\nMar      25        3    17     2  12\nApr      10       13    28     1  21\nMay      16       -1    19    22  20\nJun       5       18     7    11   8\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_dbl(x)\n\n    January February March April May\nJan      14        6     9    27  15\nFeb      23        4    24     0  26\nMar      25        3    17     2  12\nApr      10       13    28     1  21\nMay      16       -1    19    22  20\nJun       5       18     7    11   8\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_chr(x)\n\n    January February March April May \nJan \"14\"    \"6\"      \"9\"   \"27\"  \"15\"\nFeb \"23\"    \"4\"      \"24\"  \"0\"   \"26\"\nMar \"25\"    \"3\"      \"17\"  \"2\"   \"12\"\nApr \"10\"    \"13\"     \"28\"  \"1\"   \"21\"\nMay \"16\"    \"-1\"     \"19\"  \"22\"  \"20\"\nJun \"5\"     \"18\"     \"7\"   \"11\"  \"8\" \nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_cplx(x)\n\n    January February March April   May\nJan   14+0i     6+0i  9+0i 27+0i 15+0i\nFeb   23+0i     4+0i 24+0i  0+0i 26+0i\nMar   25+0i     3+0i 17+0i  2+0i 12+0i\nApr   10+0i    13+0i 28+0i  1+0i 21+0i\nMay   16+0i    -1+0i 19+0i 22+0i 20+0i\nJun    5+0i    18+0i  7+0i 11+0i  8+0i\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_raw(x)\n\n    January February March April May\nJan      0e       06    09    1b  0f\nFeb      17       04    18    00  1a\nMar      19       03    11    02  0c\nApr      0a       0d    1c    01  15\nMay      10       00    13    16  14\nJun      05       12    07    0b  08\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\n################################################################################\n\n# factor example ====\nx &lt;- factor(month.abb, levels = month.abb)\nnames(x) &lt;- month.name\nprint(x)\n\n  January  February     March     April       May      June      July    August \n      Jan       Feb       Mar       Apr       May       Jun       Jul       Aug \nSeptember   October  November  December \n      Sep       Oct       Nov       Dec \nLevels: Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n\nas_bool(as_int(x) &gt; 6)\n\n  January  February     March     April       May      June      July    August \n    FALSE     FALSE     FALSE     FALSE     FALSE     FALSE      TRUE      TRUE \nSeptember   October  November  December \n     TRUE      TRUE      TRUE      TRUE \n\nas_int(x)\n\n  January  February     March     April       May      June      July    August \n        1         2         3         4         5         6         7         8 \nSeptember   October  November  December \n        9        10        11        12 \n\nas_dbl(x)\n\n  January  February     March     April       May      June      July    August \n        1         2         3         4         5         6         7         8 \nSeptember   October  November  December \n        9        10        11        12 \n\nas_chr(x)\n\n  January  February     March     April       May      June      July    August \n    \"Jan\"     \"Feb\"     \"Mar\"     \"Apr\"     \"May\"     \"Jun\"     \"Jul\"     \"Aug\" \nSeptember   October  November  December \n    \"Sep\"     \"Oct\"     \"Nov\"     \"Dec\" \n\nas_cplx(x)\n\n  January  February     March     April       May      June      July    August \n 1+0i  2+0i  3+0i  4+0i  5+0i  6+0i  7+0i  8+0i\nSeptember   October  November  December \n 9+0i 10+0i 11+0i 12+0i\n\nas_raw(x)\n\n  January  February     March     April       May      June      July    August \n       01        02        03        04        05        06        07        08 \nSeptember   October  November  December \n       09        0a        0b        0c"
  },
  {
    "objectID": "man/helper functions/typecast.html#atomic-and-list-type-casting-with-names-and-dimensions-preserved",
    "href": "man/helper functions/typecast.html#atomic-and-list-type-casting-with-names-and-dimensions-preserved",
    "title": "typecast",
    "section": "",
    "text": "Type casting usually strips away attributes of objects.  The functions provided here preserve dimensions, dimnames, and names, which may be more convenient for arrays and array-like objects.   The functions are as follows: \n\n\nas_bool(): converts object to atomic type logical (TRUE, FALSE, NA).\n\n\nas_int(): converts object to atomic type integer.\n\n\nas_dbl(): converts object to atomic type double (AKA numeric).\n\n\nas_chr(): converts object to atomic type character.\n\n\nas_cplx(): converts object to atomic type complex.\n\n\nas_raw(): converts object to atomic type raw.\n\n\nas_list(): converts object to recursive type list. \n\n\nas_num() is an alias for as_dbl().  as_str() is an alias for as_chr().   See also typeof.  \n\n\n\nas_bool(x, ...)\n\nas_int(x, ...)\n\nas_dbl(x, ...)\n\nas_num(x, ...)\n\nas_chr(x, ...)\n\nas_str(x, ...)\n\nas_cplx(x, ...)\n\nas_raw(x, ...)\n\nas_list(x, ...)\n\n\n\n\n\n\n\n\nx\n\n\nan R object.\n\n\n\n\n…\n\n\nfurther arguments passed to or from other methods.\n\n\n\n\n\n\n\nThe converted object.  \n\n\n\n\nlibrary(\"broadcast\")\n\n\n# matrix example ====\nx &lt;- matrix(sample(-1:28), ncol = 5)\ncolnames(x) &lt;- month.name[1:5]\nrownames(x) &lt;- month.abb[1:6]\nnames(x) &lt;- c(letters[1:20], LETTERS[1:10])\nprint(x)\n\n    January February March April May\nJan      14        6     9    27  15\nFeb      23        4    24     0  26\nMar      25        3    17     2  12\nApr      10       13    28     1  21\nMay      16       -1    19    22  20\nJun       5       18     7    11   8\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_bool(x)\n\n    January February March April  May\nJan    TRUE     TRUE  TRUE  TRUE TRUE\nFeb    TRUE     TRUE  TRUE FALSE TRUE\nMar    TRUE     TRUE  TRUE  TRUE TRUE\nApr    TRUE     TRUE  TRUE  TRUE TRUE\nMay    TRUE     TRUE  TRUE  TRUE TRUE\nJun    TRUE     TRUE  TRUE  TRUE TRUE\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_int(x)\n\n    January February March April May\nJan      14        6     9    27  15\nFeb      23        4    24     0  26\nMar      25        3    17     2  12\nApr      10       13    28     1  21\nMay      16       -1    19    22  20\nJun       5       18     7    11   8\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_dbl(x)\n\n    January February March April May\nJan      14        6     9    27  15\nFeb      23        4    24     0  26\nMar      25        3    17     2  12\nApr      10       13    28     1  21\nMay      16       -1    19    22  20\nJun       5       18     7    11   8\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_chr(x)\n\n    January February March April May \nJan \"14\"    \"6\"      \"9\"   \"27\"  \"15\"\nFeb \"23\"    \"4\"      \"24\"  \"0\"   \"26\"\nMar \"25\"    \"3\"      \"17\"  \"2\"   \"12\"\nApr \"10\"    \"13\"     \"28\"  \"1\"   \"21\"\nMay \"16\"    \"-1\"     \"19\"  \"22\"  \"20\"\nJun \"5\"     \"18\"     \"7\"   \"11\"  \"8\" \nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_cplx(x)\n\n    January February March April   May\nJan   14+0i     6+0i  9+0i 27+0i 15+0i\nFeb   23+0i     4+0i 24+0i  0+0i 26+0i\nMar   25+0i     3+0i 17+0i  2+0i 12+0i\nApr   10+0i    13+0i 28+0i  1+0i 21+0i\nMay   16+0i    -1+0i 19+0i 22+0i 20+0i\nJun    5+0i    18+0i  7+0i 11+0i  8+0i\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_raw(x)\n\n    January February March April May\nJan      0e       06    09    1b  0f\nFeb      17       04    18    00  1a\nMar      19       03    11    02  0c\nApr      0a       0d    1c    01  15\nMay      10       00    13    16  14\nJun      05       12    07    0b  08\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\n################################################################################\n\n# factor example ====\nx &lt;- factor(month.abb, levels = month.abb)\nnames(x) &lt;- month.name\nprint(x)\n\n  January  February     March     April       May      June      July    August \n      Jan       Feb       Mar       Apr       May       Jun       Jul       Aug \nSeptember   October  November  December \n      Sep       Oct       Nov       Dec \nLevels: Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n\nas_bool(as_int(x) &gt; 6)\n\n  January  February     March     April       May      June      July    August \n    FALSE     FALSE     FALSE     FALSE     FALSE     FALSE      TRUE      TRUE \nSeptember   October  November  December \n     TRUE      TRUE      TRUE      TRUE \n\nas_int(x)\n\n  January  February     March     April       May      June      July    August \n        1         2         3         4         5         6         7         8 \nSeptember   October  November  December \n        9        10        11        12 \n\nas_dbl(x)\n\n  January  February     March     April       May      June      July    August \n        1         2         3         4         5         6         7         8 \nSeptember   October  November  December \n        9        10        11        12 \n\nas_chr(x)\n\n  January  February     March     April       May      June      July    August \n    \"Jan\"     \"Feb\"     \"Mar\"     \"Apr\"     \"May\"     \"Jun\"     \"Jul\"     \"Aug\" \nSeptember   October  November  December \n    \"Sep\"     \"Oct\"     \"Nov\"     \"Dec\" \n\nas_cplx(x)\n\n  January  February     March     April       May      June      July    August \n 1+0i  2+0i  3+0i  4+0i  5+0i  6+0i  7+0i  8+0i\nSeptember   October  November  December \n 9+0i 10+0i 11+0i 12+0i\n\nas_raw(x)\n\n  January  February     March     April       May      June      July    August \n       01        02        03        04        05        06        07        08 \nSeptember   October  November  December \n       09        0a        0b        0c"
  },
  {
    "objectID": "man/helper functions/bc_dim.html",
    "href": "man/helper functions/bc_dim.html",
    "title": "bc_dim",
    "section": "",
    "text": "bc_dim(x, y) gives the dimensions an array would have, as the result of an broadcasted binary element-wise operation between 2 arrays x and y.\n\n\n\nbc_dim(x, y)\n\n\n\n\n\n\n\n\nx, y\n\n\nan atomic or recursive array.\n\n\n\n\n\n\n\nReturns the recycled array.\n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(TRUE, FALSE, NA), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\ndim(bc.b(x, y, \"&\")) == bc_dim(x, y)\n\n[1] TRUE TRUE TRUE\n\ndim(bc.b(x, y, \"|\")) == bc_dim(x, y)\n\n[1] TRUE TRUE TRUE"
  },
  {
    "objectID": "man/helper functions/bc_dim.html#predict-broadcasted-dimensions",
    "href": "man/helper functions/bc_dim.html#predict-broadcasted-dimensions",
    "title": "bc_dim",
    "section": "",
    "text": "bc_dim(x, y) gives the dimensions an array would have, as the result of an broadcasted binary element-wise operation between 2 arrays x and y.\n\n\n\nbc_dim(x, y)\n\n\n\n\n\n\n\n\nx, y\n\n\nan atomic or recursive array.\n\n\n\n\n\n\n\nReturns the recycled array.\n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(TRUE, FALSE, NA), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\ndim(bc.b(x, y, \"&\")) == bc_dim(x, y)\n\n[1] TRUE TRUE TRUE\n\ndim(bc.b(x, y, \"|\")) == bc_dim(x, y)\n\n[1] TRUE TRUE TRUE"
  },
  {
    "objectID": "man/generic functions/bc_ifelse.html",
    "href": "man/generic functions/bc_ifelse.html",
    "title": "bc_ifelse",
    "section": "",
    "text": "The bc_ifelse() S4 generic method performs a broadcasted form of ifelse. \n\n\n\nbc_ifelse(cond, yes, no)\n\n\n\n\n\n\n\n\ncond\n\n\nlogical vector or array with the length equal to prod(bc_dim(yes, no)).\n\n\n\n\nyes, no\n\n\nconformable arrays of the same type.  All atomic types (see atomic) are supported.  Recursive arrays of type list are also supported.  since bc_ifelse() is an S4 generic, it can be extended to support special array classes. \n\n\n\n\n\n\n\nThe ouput, here referred to as out, will be an array of the same type as yes and no.  After broadcasting yes against no, given any element index i, the following will hold for the output:\n\n\nwhen cond[i] == TRUE, out[i] is yes[i];\n\n\nwhen cond[i] == FALSE, out[i] is no[i];\n\n\nwhen cond[i] is NA, out[i] is NA when yes and no are atomic, and out[i] is list(NULL) when yes and no are recursive.  \n\n\n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(c(10, 2,2))\nx.len &lt;- prod(x.dim)\n\ngen &lt;- function(n) sample(list(letters, month.abb, 1:10), n, TRUE)\n\nx &lt;- array(gen(10), x.dim)\ny &lt;- array(gen(10), c(10,1,1))\n\ncond &lt;- bc.list(\n  x, y,\n  \\(x, y)c(length(x) == length(y) && typeof(x) == typeof(y))\n) |&gt; as_bool()\n\nbc_ifelse(cond, yes = x, no = y)\n\n, , 1\n\n      [,1]         [,2]        \n [1,] integer,10   integer,10  \n [2,] character,26 character,26\n [3,] character,12 character,12\n [4,] character,26 character,26\n [5,] character,26 character,26\n [6,] character,12 character,12\n [7,] integer,10   integer,10  \n [8,] character,12 character,12\n [9,] integer,10   integer,10  \n[10,] integer,10   integer,10  \n\n, , 2\n\n      [,1]         [,2]        \n [1,] integer,10   integer,10  \n [2,] character,26 character,26\n [3,] character,12 character,12\n [4,] character,26 character,26\n [5,] character,26 character,26\n [6,] character,12 character,12\n [7,] integer,10   integer,10  \n [8,] character,12 character,12\n [9,] integer,10   integer,10  \n[10,] integer,10   integer,10"
  },
  {
    "objectID": "man/generic functions/bc_ifelse.html#broadcasted-ifelse",
    "href": "man/generic functions/bc_ifelse.html#broadcasted-ifelse",
    "title": "bc_ifelse",
    "section": "",
    "text": "The bc_ifelse() S4 generic method performs a broadcasted form of ifelse. \n\n\n\nbc_ifelse(cond, yes, no)\n\n\n\n\n\n\n\n\ncond\n\n\nlogical vector or array with the length equal to prod(bc_dim(yes, no)).\n\n\n\n\nyes, no\n\n\nconformable arrays of the same type.  All atomic types (see atomic) are supported.  Recursive arrays of type list are also supported.  since bc_ifelse() is an S4 generic, it can be extended to support special array classes. \n\n\n\n\n\n\n\nThe ouput, here referred to as out, will be an array of the same type as yes and no.  After broadcasting yes against no, given any element index i, the following will hold for the output:\n\n\nwhen cond[i] == TRUE, out[i] is yes[i];\n\n\nwhen cond[i] == FALSE, out[i] is no[i];\n\n\nwhen cond[i] is NA, out[i] is NA when yes and no are atomic, and out[i] is list(NULL) when yes and no are recursive.  \n\n\n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(c(10, 2,2))\nx.len &lt;- prod(x.dim)\n\ngen &lt;- function(n) sample(list(letters, month.abb, 1:10), n, TRUE)\n\nx &lt;- array(gen(10), x.dim)\ny &lt;- array(gen(10), c(10,1,1))\n\ncond &lt;- bc.list(\n  x, y,\n  \\(x, y)c(length(x) == length(y) && typeof(x) == typeof(y))\n) |&gt; as_bool()\n\nbc_ifelse(cond, yes = x, no = y)\n\n, , 1\n\n      [,1]         [,2]        \n [1,] integer,10   integer,10  \n [2,] character,26 character,26\n [3,] character,12 character,12\n [4,] character,26 character,26\n [5,] character,26 character,26\n [6,] character,12 character,12\n [7,] integer,10   integer,10  \n [8,] character,12 character,12\n [9,] integer,10   integer,10  \n[10,] integer,10   integer,10  \n\n, , 2\n\n      [,1]         [,2]        \n [1,] integer,10   integer,10  \n [2,] character,26 character,26\n [3,] character,12 character,12\n [4,] character,26 character,26\n [5,] character,26 character,26\n [6,] character,12 character,12\n [7,] integer,10   integer,10  \n [8,] character,12 character,12\n [9,] integer,10   integer,10  \n[10,] integer,10   integer,10"
  },
  {
    "objectID": "man/binding implementations/bind.html",
    "href": "man/binding implementations/bind.html",
    "title": "bind",
    "section": "",
    "text": "The bind_implementations provide dimensional binding functionalities.   The following implementations are available:\n\n\nbind_mat() binds dimensionless (atomic/recursive) vectors and (atomic/recursive) matrices row- or column-wise.  Allows for recycling.\n\n\nbind_array() binds (atomic/recursive) arrays and (atomic/recursive) matrices.  Allows for broadcasting.\n\n\nbind_dt() binds data.tables and other data.frame-like objects.  This function is only available if the ‘data.table’ package is installed.  Returns a data.table.  Faster than do.call(cbind, …) or do.call(rbind, …) for regular data.frame objects. \n\n\nNote that the naming convention of the binding implementations here is \"bind_\" followed by the resulting class (abbreviated).  I.e. bind_mat returns a matrix, but can bind both matrices and vectors.  And bind_array returns an array, but can bind both arrays and matrices.  And bind_dt returns a data.table, but can bind not only data.tables, but also most other data.frame-like objects.  \n\n\n\nbind_mat(input, along, name_deparse = TRUE, comnames_from = 1L)\n\nbind_array(\n  input,\n  along,\n  revalong,\n  max_bc = 1L,\n  name_along = TRUE,\n  comnames_from = 1L\n)\n\nbind_dt(input, along, ...)\n\n\n\n\n\n\n\n\ninput\n\n\na list of only the appropriate objects.  If input is named, its names will be used for the names of dimension along of the output, as far as possible.\n\n\n\n\nalong\n\n\na single integer, indicating the dimension along which to bind the dimensions.  I.e. use along = 1 for row-binding, along = 2 for column-binding, etc.  For arrays, additional flexibility is available:\n\n\nSpecifying along = 0 will bind the arrays on a new dimension before the first, making along the new first dimension.\n\n\nSpecifying along = N + 1, with N = max(lst.ndim(input)), will create an additional dimension (N + 1) and bind the arrays along that new dimension.\n\n\n\n\n\n\nname_deparse\n\n\nBoolean, for bind_mat().  Indicates if dimension along should be named.  Uses the naming method from rbind/cbind itself.\n\n\n\n\ncomnames_from\n\n\neither integer scalar or NULL, for bind_mat() and bind_array().  Indicates which object in input should be used for naming the shared dimension.  If NULL, no communal names will be given.  For example:  When binding columns of matrices, the matrices will share the same rownames.  Using comnames_from = 10 will then result in bind_array() using rownames(input[[10]]) for the rownames of the output.\n\n\n\n\nrevalong\n\n\nfor bind_array() only.  Same as along, but counting backwards.  I.e. revalong = 0 is equivalent to along = N+1, and revalong = N+1 is equivalent to along = 0;  with N = max(lst.ndim(input)).\n\n\n\n\nmax_bc\n\n\ninteger, for bind_array only.  Specify here the number of dimensions that are allowed to be broadcasted when binding arrays.  If max_bc = 0L, no broadcasting will be allowed at all.\n\n\n\n\nname_along\n\n\nBoolean, for bind_array().  Indicates if dimension along should be named.\n\n\n\n\n…\n\n\narguments to be passed to rbindlist.  \n\n\n\n\n\n\n\nFor in-depth information about the binding implentations in the ‘broadcast’ package, please refer to broadcast_bind.  \n\n\n\nThe bound object.\n\n\n\nPlate T, Heiberger R (2016). abind: Combine Multidimensional Arrays. R package version 1.4-5, https://CRAN.R-project.org/package=abind.\n\n\n\n\nlibrary(\"broadcast\")\n\n\n# bind_array ====\n\n# here, atomic and recursive arrays are mixed,\n# resulting in recursive arrays\n\n# creating the arrays\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\n# binding the arrays\ninput &lt;- list(x = x, y = y)\nbind_array(input, along = 0L) # binds on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\nbind_array(input, along = 1L) # binds on first dimension (i.e. rows)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, along = 2L)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, along = 3L) # bind on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 0L) # binds on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 1L) # binds on last dimension (i.e. columns)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, revalong = 2L)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, revalong = 3L) # bind on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\n# binding, with empty arrays\nemptyarray &lt;- array(numeric(0L), c(0L, 3L))\ndimnames(emptyarray) &lt;- list(NULL, paste(\"empty\", 1:3))\nprint(emptyarray)\n\n     empty 1 empty 2 empty 3\n\ninput &lt;- list(x = x, y = emptyarray)\nbind_array(input, along = 1L, comnames_from = 2L) # row-bind\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n################################################################################\n\n# bind_mat ====\n\n# here, atomic and recursive matrices are mixed,\n# resulting in a recursive matrix\n\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\nbind_mat(list(x = x, y = y), 2L)\n\n  A            B            C                  \na logical,3    logical,3    logical,3    1 5 9 \nb integer,10   integer,10   integer,10   2 6 10\nc numeric,10   numeric,10   numeric,10   3 7 11\nd character,26 character,26 character,26 4 8 12\n\n################################################################################\n\n# bind_dt ====\n\n\nx &lt;- data.frame(a = 1:12, b = month.abb) # data.frame\ny &lt;- data.table::data.table(a = 1:12, b = month.abb) # data.table\n\nbind_dt(list(x = x, y = y), 2L) # column bind\n\n      x.a    x.b   y.a    y.b\n    &lt;int&gt; &lt;char&gt; &lt;int&gt; &lt;char&gt;\n 1:     1    Jan     1    Jan\n 2:     2    Feb     2    Feb\n 3:     3    Mar     3    Mar\n 4:     4    Apr     4    Apr\n 5:     5    May     5    May\n 6:     6    Jun     6    Jun\n 7:     7    Jul     7    Jul\n 8:     8    Aug     8    Aug\n 9:     9    Sep     9    Sep\n10:    10    Oct    10    Oct\n11:    11    Nov    11    Nov\n12:    12    Dec    12    Dec\n\nbind_dt(list(x = x, y = y), 1L) # row bind\n\n        a      b\n    &lt;int&gt; &lt;char&gt;\n 1:     1    Jan\n 2:     2    Feb\n 3:     3    Mar\n 4:     4    Apr\n 5:     5    May\n 6:     6    Jun\n 7:     7    Jul\n 8:     8    Aug\n 9:     9    Sep\n10:    10    Oct\n11:    11    Nov\n12:    12    Dec\n13:     1    Jan\n14:     2    Feb\n15:     3    Mar\n16:     4    Apr\n17:     5    May\n18:     6    Jun\n19:     7    Jul\n20:     8    Aug\n21:     9    Sep\n22:    10    Oct\n23:    11    Nov\n24:    12    Dec\n        a      b"
  },
  {
    "objectID": "man/binding implementations/bind.html#dimensional-binding-of-objects",
    "href": "man/binding implementations/bind.html#dimensional-binding-of-objects",
    "title": "bind",
    "section": "",
    "text": "The bind_implementations provide dimensional binding functionalities.   The following implementations are available:\n\n\nbind_mat() binds dimensionless (atomic/recursive) vectors and (atomic/recursive) matrices row- or column-wise.  Allows for recycling.\n\n\nbind_array() binds (atomic/recursive) arrays and (atomic/recursive) matrices.  Allows for broadcasting.\n\n\nbind_dt() binds data.tables and other data.frame-like objects.  This function is only available if the ‘data.table’ package is installed.  Returns a data.table.  Faster than do.call(cbind, …) or do.call(rbind, …) for regular data.frame objects. \n\n\nNote that the naming convention of the binding implementations here is \"bind_\" followed by the resulting class (abbreviated).  I.e. bind_mat returns a matrix, but can bind both matrices and vectors.  And bind_array returns an array, but can bind both arrays and matrices.  And bind_dt returns a data.table, but can bind not only data.tables, but also most other data.frame-like objects.  \n\n\n\nbind_mat(input, along, name_deparse = TRUE, comnames_from = 1L)\n\nbind_array(\n  input,\n  along,\n  revalong,\n  max_bc = 1L,\n  name_along = TRUE,\n  comnames_from = 1L\n)\n\nbind_dt(input, along, ...)\n\n\n\n\n\n\n\n\ninput\n\n\na list of only the appropriate objects.  If input is named, its names will be used for the names of dimension along of the output, as far as possible.\n\n\n\n\nalong\n\n\na single integer, indicating the dimension along which to bind the dimensions.  I.e. use along = 1 for row-binding, along = 2 for column-binding, etc.  For arrays, additional flexibility is available:\n\n\nSpecifying along = 0 will bind the arrays on a new dimension before the first, making along the new first dimension.\n\n\nSpecifying along = N + 1, with N = max(lst.ndim(input)), will create an additional dimension (N + 1) and bind the arrays along that new dimension.\n\n\n\n\n\n\nname_deparse\n\n\nBoolean, for bind_mat().  Indicates if dimension along should be named.  Uses the naming method from rbind/cbind itself.\n\n\n\n\ncomnames_from\n\n\neither integer scalar or NULL, for bind_mat() and bind_array().  Indicates which object in input should be used for naming the shared dimension.  If NULL, no communal names will be given.  For example:  When binding columns of matrices, the matrices will share the same rownames.  Using comnames_from = 10 will then result in bind_array() using rownames(input[[10]]) for the rownames of the output.\n\n\n\n\nrevalong\n\n\nfor bind_array() only.  Same as along, but counting backwards.  I.e. revalong = 0 is equivalent to along = N+1, and revalong = N+1 is equivalent to along = 0;  with N = max(lst.ndim(input)).\n\n\n\n\nmax_bc\n\n\ninteger, for bind_array only.  Specify here the number of dimensions that are allowed to be broadcasted when binding arrays.  If max_bc = 0L, no broadcasting will be allowed at all.\n\n\n\n\nname_along\n\n\nBoolean, for bind_array().  Indicates if dimension along should be named.\n\n\n\n\n…\n\n\narguments to be passed to rbindlist.  \n\n\n\n\n\n\n\nFor in-depth information about the binding implentations in the ‘broadcast’ package, please refer to broadcast_bind.  \n\n\n\nThe bound object.\n\n\n\nPlate T, Heiberger R (2016). abind: Combine Multidimensional Arrays. R package version 1.4-5, https://CRAN.R-project.org/package=abind.\n\n\n\n\nlibrary(\"broadcast\")\n\n\n# bind_array ====\n\n# here, atomic and recursive arrays are mixed,\n# resulting in recursive arrays\n\n# creating the arrays\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\n# binding the arrays\ninput &lt;- list(x = x, y = y)\nbind_array(input, along = 0L) # binds on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\nbind_array(input, along = 1L) # binds on first dimension (i.e. rows)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, along = 2L)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, along = 3L) # bind on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 0L) # binds on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 1L) # binds on last dimension (i.e. columns)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, revalong = 2L)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, revalong = 3L) # bind on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\n# binding, with empty arrays\nemptyarray &lt;- array(numeric(0L), c(0L, 3L))\ndimnames(emptyarray) &lt;- list(NULL, paste(\"empty\", 1:3))\nprint(emptyarray)\n\n     empty 1 empty 2 empty 3\n\ninput &lt;- list(x = x, y = emptyarray)\nbind_array(input, along = 1L, comnames_from = 2L) # row-bind\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n################################################################################\n\n# bind_mat ====\n\n# here, atomic and recursive matrices are mixed,\n# resulting in a recursive matrix\n\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\nbind_mat(list(x = x, y = y), 2L)\n\n  A            B            C                  \na logical,3    logical,3    logical,3    1 5 9 \nb integer,10   integer,10   integer,10   2 6 10\nc numeric,10   numeric,10   numeric,10   3 7 11\nd character,26 character,26 character,26 4 8 12\n\n################################################################################\n\n# bind_dt ====\n\n\nx &lt;- data.frame(a = 1:12, b = month.abb) # data.frame\ny &lt;- data.table::data.table(a = 1:12, b = month.abb) # data.table\n\nbind_dt(list(x = x, y = y), 2L) # column bind\n\n      x.a    x.b   y.a    y.b\n    &lt;int&gt; &lt;char&gt; &lt;int&gt; &lt;char&gt;\n 1:     1    Jan     1    Jan\n 2:     2    Feb     2    Feb\n 3:     3    Mar     3    Mar\n 4:     4    Apr     4    Apr\n 5:     5    May     5    May\n 6:     6    Jun     6    Jun\n 7:     7    Jul     7    Jul\n 8:     8    Aug     8    Aug\n 9:     9    Sep     9    Sep\n10:    10    Oct    10    Oct\n11:    11    Nov    11    Nov\n12:    12    Dec    12    Dec\n\nbind_dt(list(x = x, y = y), 1L) # row bind\n\n        a      b\n    &lt;int&gt; &lt;char&gt;\n 1:     1    Jan\n 2:     2    Feb\n 3:     3    Mar\n 4:     4    Apr\n 5:     5    May\n 6:     6    Jun\n 7:     7    Jul\n 8:     8    Aug\n 9:     9    Sep\n10:    10    Oct\n11:    11    Nov\n12:    12    Dec\n13:     1    Jan\n14:     2    Feb\n15:     3    Mar\n16:     4    Apr\n17:     5    May\n18:     6    Jun\n19:     7    Jul\n20:     8    Aug\n21:     9    Sep\n22:    10    Oct\n23:    11    Nov\n24:    12    Dec\n        a      b"
  },
  {
    "objectID": "man/aaa00_broadcast_help.html",
    "href": "man/aaa00_broadcast_help.html",
    "title": "broadcast",
    "section": "",
    "text": "broadcast:  Simple Broadcasted Binding and Binary Operations for Atomic and Recursive Arrays with Minimal Dependencies.   Implements simple broadcasted operations for atomic and recursive arrays.\nBesides linking to ‘Rcpp’, ‘broadcast’ does not depend on, vendor, link to, include, or otherwise use any external libraries; ‘broadcast’ was essentially made from scratch and can be installed out-of-the-box.\nThe broadcasted implementations include, but are not limited to, the following:\n\n\nA more efficient and broadcasted version of abind(), for binding arrays along an arbitrary dimension;\n\n\nRelational operations (like ==, !=, &lt;, &gt;, &lt;=, &gt;=; can also take into account Machine precision);\n\n\nArithmetic operations (like +, -, *, /, \"gcd\", ^, pmin(), pmax());\n\n\nBoolean combiner operations (like &, |, xor(), \"nand\");\n\n\nString distance, (in)equality, and concatenation operations;\n\n\nA Broadcasted implementation of ifelse();\n\n\nA Broadcasted apply-like function; The broadcasted implementations strive to minimize computation time and memory usage (which is not just good for computer efficiency, but also for the environment).\n\n\n\n\n\nAn introduction and overview of the package can be found on the website.  \n\n\n\nOuter-like functions  ‘broadcast’ provides a set of functions for binary, element-wise, outer operations with broadcasting.  These functions use an API similar to the outer and sweep functions.   The following functions for type-specific binary operations are available:\n\n\nbc.d: decimal (64bit) arithmetic and relational operations;\n\n\nbc.i: integer (53bit) arithmetic and relational operations;\n\n\nbc.b: Boolean operations;\n\n\nbc.cplx: complex arithmetic and (in)equality operations;\n\n\nbc.str: string (in)equality, concatenation, and distance operations;\n\n\nbc.list: apply any ‘R’ function to 2 recursive arrays with broadcasting.  \n\n\nBinding Implementations  ‘broadcast’ provides 3 binding implementations:  bind_mat, bind_array, and bind_dt.  \nGeneral functions  ‘broadcast’ also comes with 2 general broadcasted functions:\n\n\nbc_ifelse: Broadcasted version of ifelse.\n\n\nbcapply: Broadcasted apply-like function.  \n\n\nOther functions  ‘broadcast’ also provides type-casting functions, which preserve names and dimensions - convenient for arrays.  \n\n\n\nAuthor, Maintainer: Tony Wilkes tony_a_wilkes@outlook.com (ORCID)\n\n\n\nThe badges shown in the documentation of this R-package were made using the services of: https://shields.io/"
  },
  {
    "objectID": "man/aaa00_broadcast_help.html#broadcast-simple-broadcasted-operations-for-atomic-and-recursive-arrays-with-minimal-dependencies",
    "href": "man/aaa00_broadcast_help.html#broadcast-simple-broadcasted-operations-for-atomic-and-recursive-arrays-with-minimal-dependencies",
    "title": "broadcast",
    "section": "",
    "text": "broadcast:  Simple Broadcasted Binding and Binary Operations for Atomic and Recursive Arrays with Minimal Dependencies.   Implements simple broadcasted operations for atomic and recursive arrays.\nBesides linking to ‘Rcpp’, ‘broadcast’ does not depend on, vendor, link to, include, or otherwise use any external libraries; ‘broadcast’ was essentially made from scratch and can be installed out-of-the-box.\nThe broadcasted implementations include, but are not limited to, the following:\n\n\nA more efficient and broadcasted version of abind(), for binding arrays along an arbitrary dimension;\n\n\nRelational operations (like ==, !=, &lt;, &gt;, &lt;=, &gt;=; can also take into account Machine precision);\n\n\nArithmetic operations (like +, -, *, /, \"gcd\", ^, pmin(), pmax());\n\n\nBoolean combiner operations (like &, |, xor(), \"nand\");\n\n\nString distance, (in)equality, and concatenation operations;\n\n\nA Broadcasted implementation of ifelse();\n\n\nA Broadcasted apply-like function; The broadcasted implementations strive to minimize computation time and memory usage (which is not just good for computer efficiency, but also for the environment).\n\n\n\n\n\nAn introduction and overview of the package can be found on the website.  \n\n\n\nOuter-like functions  ‘broadcast’ provides a set of functions for binary, element-wise, outer operations with broadcasting.  These functions use an API similar to the outer and sweep functions.   The following functions for type-specific binary operations are available:\n\n\nbc.d: decimal (64bit) arithmetic and relational operations;\n\n\nbc.i: integer (53bit) arithmetic and relational operations;\n\n\nbc.b: Boolean operations;\n\n\nbc.cplx: complex arithmetic and (in)equality operations;\n\n\nbc.str: string (in)equality, concatenation, and distance operations;\n\n\nbc.list: apply any ‘R’ function to 2 recursive arrays with broadcasting.  \n\n\nBinding Implementations  ‘broadcast’ provides 3 binding implementations:  bind_mat, bind_array, and bind_dt.  \nGeneral functions  ‘broadcast’ also comes with 2 general broadcasted functions:\n\n\nbc_ifelse: Broadcasted version of ifelse.\n\n\nbcapply: Broadcasted apply-like function.  \n\n\nOther functions  ‘broadcast’ also provides type-casting functions, which preserve names and dimensions - convenient for arrays.  \n\n\n\nAuthor, Maintainer: Tony Wilkes tony_a_wilkes@outlook.com (ORCID)\n\n\n\nThe badges shown in the documentation of this R-package were made using the services of: https://shields.io/"
  },
  {
    "objectID": "about/NEWS.html",
    "href": "about/NEWS.html",
    "title": "Changelog",
    "section": "",
    "text": "…still testing…"
  },
  {
    "objectID": "about/LICENSE.html",
    "href": "about/LICENSE.html",
    "title": "License",
    "section": "",
    "text": "1.1. “Contributor” means each individual or legal entity that creates, contributes to the creation of, or owns Covered Software.\n1.2. “Contributor Version” means the combination of the Contributions of others (if any) used by a Contributor and that particular Contributor’s Contribution.\n1.3. “Contribution” means Covered Software of a particular Contributor.\n1.4. “Covered Software” means Source Code Form to which the initial Contributor has attached the notice in Exhibit A, the Executable Form of such Source Code Form, and Modifications of such Source Code Form, in each case including portions thereof.\n1.5. “Incompatible With Secondary Licenses” means\n(a) that the initial Contributor has attached the notice described\n    in Exhibit B to the Covered Software; or\n\n(b) that the Covered Software was made available under the terms of\n    version 1.1 or earlier of the License, but not also under the\n    terms of a Secondary License.\n1.6. “Executable Form” means any form of the work other than Source Code Form.\n1.7. “Larger Work” means a work that combines Covered Software with other material, in a separate file or files, that is not Covered Software.\n1.8. “License” means this document.\n1.9. “Licensable” means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently, any and all of the rights conveyed by this License.\n1.10. “Modifications” means any of the following:\n(a) any file in Source Code Form that results from an addition to,\n    deletion from, or modification of the contents of Covered\n    Software; or\n\n(b) any new file in Source Code Form that contains any Covered\n    Software.\n1.11. “Patent Claims” of a Contributor means any patent claim(s), including without limitation, method, process, and apparatus claims, in any patent Licensable by such Contributor that would be infringed, but for the grant of the License, by the making, using, selling, offering for sale, having made, import, or transfer of either its Contributions or its Contributor Version.\n1.12. “Secondary License” means either the GNU General Public License, Version 2.0, the GNU Lesser General Public License, Version 2.1, the GNU Affero General Public License, Version 3.0, or any later versions of those licenses.\n1.13. “Source Code Form” means the form of the work preferred for making modifications.\n1.14. “You” (or “Your”) means an individual or a legal entity exercising rights under this License. For legal entities, “You” includes any entity that controls, is controlled by, or is under common control with You. For purposes of this definition, “control” means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.\n\n\n\n2.1. Grants\nEach Contributor hereby grants You a world-wide, royalty-free, non-exclusive license:\n\nunder intellectual property rights (other than patent or trademark) Licensable by such Contributor to use, reproduce, make available, modify, display, perform, distribute, and otherwise exploit its Contributions, either on an unmodified basis, with Modifications, or as part of a Larger Work; and\nunder Patent Claims of such Contributor to make, use, sell, offer for sale, have made, import, and otherwise transfer either its Contributions or its Contributor Version.\n\n2.2. Effective Date\nThe licenses granted in Section 2.1 with respect to any Contribution become effective for each Contribution on the date the Contributor first distributes such Contribution.\n2.3. Limitations on Grant Scope\nThe licenses granted in this Section 2 are the only rights granted under this License. No additional rights or licenses will be implied from the distribution or licensing of Covered Software under this License. Notwithstanding Section 2.1(b) above, no patent license is granted by a Contributor:\n\nfor any code that a Contributor has removed from Covered Software; or\nfor infringements caused by: (i) Your and any other third party’s modifications of Covered Software, or (ii) the combination of its Contributions with other software (except as part of its Contributor Version); or\nunder Patent Claims infringed by Covered Software in the absence of its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks, or logos of any Contributor (except as may be necessary to comply with the notice requirements in Section 3.4).\n2.4. Subsequent Licenses\nNo Contributor makes additional grants as a result of Your choice to distribute the Covered Software under a subsequent version of this License (see Section 10.2) or under the terms of a Secondary License (if permitted under the terms of Section 3.3).\n2.5. Representation\nEach Contributor represents that the Contributor believes its Contributions are its original creation(s) or it has sufficient rights to grant the rights to its Contributions conveyed by this License.\n2.6. Fair Use\nThis License is not intended to limit any rights You have under applicable copyright doctrines of fair use, fair dealing, or other equivalents.\n2.7. Conditions\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in Section 2.1.\n\n\n\n3.1. Distribution of Source Form\nAll distribution of Covered Software in Source Code Form, including any Modifications that You create or to which You contribute, must be under the terms of this License. You must inform recipients that the Source Code Form of the Covered Software is governed by the terms of this License, and how they can obtain a copy of this License. You may not attempt to alter or restrict the recipients’ rights in the Source Code Form.\n3.2. Distribution of Executable Form\nIf You distribute Covered Software in Executable Form then:\n\nsuch Covered Software must also be made available in Source Code Form, as described in Section 3.1, and You must inform recipients of the Executable Form how they can obtain a copy of such Source Code Form by reasonable means in a timely manner, at a charge no more than the cost of distribution to the recipient; and\nYou may distribute such Executable Form under the terms of this License, or sublicense it under different terms, provided that the license for the Executable Form does not attempt to limit or alter the recipients’ rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\nYou may create and distribute a Larger Work under terms of Your choice, provided that You also comply with the requirements of this License for the Covered Software. If the Larger Work is a combination of Covered Software with a work governed by one or more Secondary Licenses, and the Covered Software is not Incompatible With Secondary Licenses, this License permits You to additionally distribute such Covered Software under the terms of such Secondary License(s), so that the recipient of the Larger Work may, at their option, further distribute the Covered Software under the terms of either this License or such Secondary License(s).\n3.4. Notices\nYou may not remove or alter the substance of any license notices (including copyright notices, patent notices, disclaimers of warranty, or limitations of liability) contained within the Source Code Form of the Covered Software, except that You may alter any license notices to the extent required to remedy known factual inaccuracies.\n3.5. Application of Additional Terms\nYou may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, You may do so only on Your own behalf, and not on behalf of any Contributor. You must make it absolutely clear that any such warranty, support, indemnity, or liability obligation is offered by You alone, and You hereby agree to indemnify every Contributor for any liability incurred by such Contributor as a result of warranty, support, indemnity or liability terms You offer. You may include additional disclaimers of warranty and limitations of liability specific to any jurisdiction.\n\n\n\nIf it is impossible for You to comply with any of the terms of this License with respect to some or all of the Covered Software due to statute, judicial order, or regulation then You must: (a) comply with the terms of this License to the maximum extent possible; and (b) describe the limitations and the code they affect. Such description must be placed in a text file included with all distributions of the Covered Software under this License. Except to the extent prohibited by statute or regulation, such description must be sufficiently detailed for a recipient of ordinary skill to be able to understand it.\n\n\n\n5.1. The rights granted under this License will terminate automatically if You fail to comply with any of its terms. However, if You become compliant, then the rights granted under this License from a particular Contributor are reinstated (a) provisionally, unless and until such Contributor explicitly and finally terminates Your grants, and (b) on an ongoing basis, if such Contributor fails to notify You of the non-compliance by some reasonable means prior to 60 days after You have come back into compliance. Moreover, Your grants from a particular Contributor are reinstated on an ongoing basis if such Contributor notifies You of the non-compliance by some reasonable means, this is the first time You have received notice of non-compliance with this License from such Contributor, and You become compliant prior to 30 days after Your receipt of the notice.\n5.2. If You initiate litigation against any entity by asserting a patent infringement claim (excluding declaratory judgment actions, counter-claims, and cross-claims) alleging that a Contributor Version directly or indirectly infringes any patent, then the rights granted to You by any and all Contributors for the Covered Software under Section 2.1 of this License shall terminate.\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all end user license agreements (excluding distributors and resellers) which have been validly granted by You or Your distributors under this License prior to termination shall survive termination.\n\n\n                                                                 *\n\nDisclaimer of Warranty *\n\n————————- *\n                                                                 *\nCovered Software is provided under this License on an “as is” *\nbasis, without warranty of any kind, either expressed, implied, or *\nstatutory, including, without limitation, warranties that the *\nCovered Software is free of defects, merchantable, fit for a *\nparticular purpose or non-infringing. The entire risk as to the *\nquality and performance of the Covered Software is with You. *\nShould any Covered Software prove defective in any respect, You *\n(not any Contributor) assume the cost of any necessary servicing, *\nrepair, or correction. This disclaimer of warranty constitutes an *\nessential part of this License. No use of any Covered Software is *\nauthorized under this License except under this disclaimer. *\n                                                                 *\n\n\n\n\n                                                                 *\n\nLimitation of Liability *\n\n————————– *\n                                                                 *\nUnder no circumstances and under no legal theory, whether tort *\n(including negligence), contract, or otherwise, shall any *\nContributor, or anyone who distributes Covered Software as *\npermitted above, be liable to You for any direct, indirect, *\nspecial, incidental, or consequential damages of any character *\nincluding, without limitation, damages for lost profits, loss of *\ngoodwill, work stoppage, computer failure or malfunction, or any *\nand all other commercial damages or losses, even if such party *\nshall have been informed of the possibility of such damages. This *\nlimitation of liability shall not apply to liability for death or *\npersonal injury resulting from such party’s negligence to the *\nextent applicable law prohibits such limitation. Some *\njurisdictions do not allow the exclusion or limitation of *\nincidental or consequential damages, so this exclusion and *\nlimitation may not apply to You. *\n                                                                 *\n\n\n\n\n\nAny litigation relating to this License may be brought only in the courts of a jurisdiction where the defendant maintains its principal place of business and such litigation shall be governed by laws of that jurisdiction, without reference to its conflict-of-law provisions. Nothing in this Section shall prevent a party’s ability to bring cross-claims or counter-claims.\n\n\n\nThis License represents the complete agreement concerning the subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not be used to construe this License against a Contributor.\n\n\n\n10.1. New Versions\nMozilla Foundation is the license steward. Except as provided in Section 10.3, no one other than the license steward has the right to modify or publish new versions of this License. Each version will be given a distinguishing version number.\n10.2. Effect of New Versions\nYou may distribute the Covered Software under the terms of the version of the License under which You originally received the Covered Software, or under the terms of any subsequent version published by the license steward.\n10.3. Modified Versions\nIf you create software not governed by this License, and you want to create a new license for such software, you may create and use a modified version of this License if you rename the license and remove any references to the name of the license steward (except to note that such modified license differs from this License).\n10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses\nIf You choose to distribute Source Code Form that is Incompatible With Secondary Licenses under the terms of this version of the License, the notice described in Exhibit B of this License must be attached.\n\n\n\nThis Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.\nIf it is not possible or desirable to put the notice in a particular file, then You may include the notice in a location (such as a LICENSE file in a relevant directory) where a recipient would be likely to look for such a notice.\nYou may add additional accurate notices of copyright ownership.\n\n\n\nThis Source Code Form is “Incompatible With Secondary Licenses”, as defined by the Mozilla Public License, v. 2.0."
  },
  {
    "objectID": "about/LICENSE.html#definitions",
    "href": "about/LICENSE.html#definitions",
    "title": "License",
    "section": "",
    "text": "1.1. “Contributor” means each individual or legal entity that creates, contributes to the creation of, or owns Covered Software.\n1.2. “Contributor Version” means the combination of the Contributions of others (if any) used by a Contributor and that particular Contributor’s Contribution.\n1.3. “Contribution” means Covered Software of a particular Contributor.\n1.4. “Covered Software” means Source Code Form to which the initial Contributor has attached the notice in Exhibit A, the Executable Form of such Source Code Form, and Modifications of such Source Code Form, in each case including portions thereof.\n1.5. “Incompatible With Secondary Licenses” means\n(a) that the initial Contributor has attached the notice described\n    in Exhibit B to the Covered Software; or\n\n(b) that the Covered Software was made available under the terms of\n    version 1.1 or earlier of the License, but not also under the\n    terms of a Secondary License.\n1.6. “Executable Form” means any form of the work other than Source Code Form.\n1.7. “Larger Work” means a work that combines Covered Software with other material, in a separate file or files, that is not Covered Software.\n1.8. “License” means this document.\n1.9. “Licensable” means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently, any and all of the rights conveyed by this License.\n1.10. “Modifications” means any of the following:\n(a) any file in Source Code Form that results from an addition to,\n    deletion from, or modification of the contents of Covered\n    Software; or\n\n(b) any new file in Source Code Form that contains any Covered\n    Software.\n1.11. “Patent Claims” of a Contributor means any patent claim(s), including without limitation, method, process, and apparatus claims, in any patent Licensable by such Contributor that would be infringed, but for the grant of the License, by the making, using, selling, offering for sale, having made, import, or transfer of either its Contributions or its Contributor Version.\n1.12. “Secondary License” means either the GNU General Public License, Version 2.0, the GNU Lesser General Public License, Version 2.1, the GNU Affero General Public License, Version 3.0, or any later versions of those licenses.\n1.13. “Source Code Form” means the form of the work preferred for making modifications.\n1.14. “You” (or “Your”) means an individual or a legal entity exercising rights under this License. For legal entities, “You” includes any entity that controls, is controlled by, or is under common control with You. For purposes of this definition, “control” means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity."
  },
  {
    "objectID": "about/LICENSE.html#license-grants-and-conditions",
    "href": "about/LICENSE.html#license-grants-and-conditions",
    "title": "License",
    "section": "",
    "text": "2.1. Grants\nEach Contributor hereby grants You a world-wide, royalty-free, non-exclusive license:\n\nunder intellectual property rights (other than patent or trademark) Licensable by such Contributor to use, reproduce, make available, modify, display, perform, distribute, and otherwise exploit its Contributions, either on an unmodified basis, with Modifications, or as part of a Larger Work; and\nunder Patent Claims of such Contributor to make, use, sell, offer for sale, have made, import, and otherwise transfer either its Contributions or its Contributor Version.\n\n2.2. Effective Date\nThe licenses granted in Section 2.1 with respect to any Contribution become effective for each Contribution on the date the Contributor first distributes such Contribution.\n2.3. Limitations on Grant Scope\nThe licenses granted in this Section 2 are the only rights granted under this License. No additional rights or licenses will be implied from the distribution or licensing of Covered Software under this License. Notwithstanding Section 2.1(b) above, no patent license is granted by a Contributor:\n\nfor any code that a Contributor has removed from Covered Software; or\nfor infringements caused by: (i) Your and any other third party’s modifications of Covered Software, or (ii) the combination of its Contributions with other software (except as part of its Contributor Version); or\nunder Patent Claims infringed by Covered Software in the absence of its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks, or logos of any Contributor (except as may be necessary to comply with the notice requirements in Section 3.4).\n2.4. Subsequent Licenses\nNo Contributor makes additional grants as a result of Your choice to distribute the Covered Software under a subsequent version of this License (see Section 10.2) or under the terms of a Secondary License (if permitted under the terms of Section 3.3).\n2.5. Representation\nEach Contributor represents that the Contributor believes its Contributions are its original creation(s) or it has sufficient rights to grant the rights to its Contributions conveyed by this License.\n2.6. Fair Use\nThis License is not intended to limit any rights You have under applicable copyright doctrines of fair use, fair dealing, or other equivalents.\n2.7. Conditions\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in Section 2.1."
  },
  {
    "objectID": "about/LICENSE.html#responsibilities",
    "href": "about/LICENSE.html#responsibilities",
    "title": "License",
    "section": "",
    "text": "3.1. Distribution of Source Form\nAll distribution of Covered Software in Source Code Form, including any Modifications that You create or to which You contribute, must be under the terms of this License. You must inform recipients that the Source Code Form of the Covered Software is governed by the terms of this License, and how they can obtain a copy of this License. You may not attempt to alter or restrict the recipients’ rights in the Source Code Form.\n3.2. Distribution of Executable Form\nIf You distribute Covered Software in Executable Form then:\n\nsuch Covered Software must also be made available in Source Code Form, as described in Section 3.1, and You must inform recipients of the Executable Form how they can obtain a copy of such Source Code Form by reasonable means in a timely manner, at a charge no more than the cost of distribution to the recipient; and\nYou may distribute such Executable Form under the terms of this License, or sublicense it under different terms, provided that the license for the Executable Form does not attempt to limit or alter the recipients’ rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\nYou may create and distribute a Larger Work under terms of Your choice, provided that You also comply with the requirements of this License for the Covered Software. If the Larger Work is a combination of Covered Software with a work governed by one or more Secondary Licenses, and the Covered Software is not Incompatible With Secondary Licenses, this License permits You to additionally distribute such Covered Software under the terms of such Secondary License(s), so that the recipient of the Larger Work may, at their option, further distribute the Covered Software under the terms of either this License or such Secondary License(s).\n3.4. Notices\nYou may not remove or alter the substance of any license notices (including copyright notices, patent notices, disclaimers of warranty, or limitations of liability) contained within the Source Code Form of the Covered Software, except that You may alter any license notices to the extent required to remedy known factual inaccuracies.\n3.5. Application of Additional Terms\nYou may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, You may do so only on Your own behalf, and not on behalf of any Contributor. You must make it absolutely clear that any such warranty, support, indemnity, or liability obligation is offered by You alone, and You hereby agree to indemnify every Contributor for any liability incurred by such Contributor as a result of warranty, support, indemnity or liability terms You offer. You may include additional disclaimers of warranty and limitations of liability specific to any jurisdiction."
  },
  {
    "objectID": "about/LICENSE.html#inability-to-comply-due-to-statute-or-regulation",
    "href": "about/LICENSE.html#inability-to-comply-due-to-statute-or-regulation",
    "title": "License",
    "section": "",
    "text": "If it is impossible for You to comply with any of the terms of this License with respect to some or all of the Covered Software due to statute, judicial order, or regulation then You must: (a) comply with the terms of this License to the maximum extent possible; and (b) describe the limitations and the code they affect. Such description must be placed in a text file included with all distributions of the Covered Software under this License. Except to the extent prohibited by statute or regulation, such description must be sufficiently detailed for a recipient of ordinary skill to be able to understand it."
  },
  {
    "objectID": "about/LICENSE.html#termination",
    "href": "about/LICENSE.html#termination",
    "title": "License",
    "section": "",
    "text": "5.1. The rights granted under this License will terminate automatically if You fail to comply with any of its terms. However, if You become compliant, then the rights granted under this License from a particular Contributor are reinstated (a) provisionally, unless and until such Contributor explicitly and finally terminates Your grants, and (b) on an ongoing basis, if such Contributor fails to notify You of the non-compliance by some reasonable means prior to 60 days after You have come back into compliance. Moreover, Your grants from a particular Contributor are reinstated on an ongoing basis if such Contributor notifies You of the non-compliance by some reasonable means, this is the first time You have received notice of non-compliance with this License from such Contributor, and You become compliant prior to 30 days after Your receipt of the notice.\n5.2. If You initiate litigation against any entity by asserting a patent infringement claim (excluding declaratory judgment actions, counter-claims, and cross-claims) alleging that a Contributor Version directly or indirectly infringes any patent, then the rights granted to You by any and all Contributors for the Covered Software under Section 2.1 of this License shall terminate.\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all end user license agreements (excluding distributors and resellers) which have been validly granted by You or Your distributors under this License prior to termination shall survive termination.\n\n\n                                                                 *\n\nDisclaimer of Warranty *\n\n————————- *\n                                                                 *\nCovered Software is provided under this License on an “as is” *\nbasis, without warranty of any kind, either expressed, implied, or *\nstatutory, including, without limitation, warranties that the *\nCovered Software is free of defects, merchantable, fit for a *\nparticular purpose or non-infringing. The entire risk as to the *\nquality and performance of the Covered Software is with You. *\nShould any Covered Software prove defective in any respect, You *\n(not any Contributor) assume the cost of any necessary servicing, *\nrepair, or correction. This disclaimer of warranty constitutes an *\nessential part of this License. No use of any Covered Software is *\nauthorized under this License except under this disclaimer. *\n                                                                 *\n\n\n\n\n                                                                 *\n\nLimitation of Liability *\n\n————————– *\n                                                                 *\nUnder no circumstances and under no legal theory, whether tort *\n(including negligence), contract, or otherwise, shall any *\nContributor, or anyone who distributes Covered Software as *\npermitted above, be liable to You for any direct, indirect, *\nspecial, incidental, or consequential damages of any character *\nincluding, without limitation, damages for lost profits, loss of *\ngoodwill, work stoppage, computer failure or malfunction, or any *\nand all other commercial damages or losses, even if such party *\nshall have been informed of the possibility of such damages. This *\nlimitation of liability shall not apply to liability for death or *\npersonal injury resulting from such party’s negligence to the *\nextent applicable law prohibits such limitation. Some *\njurisdictions do not allow the exclusion or limitation of *\nincidental or consequential damages, so this exclusion and *\nlimitation may not apply to You. *\n                                                                 *"
  },
  {
    "objectID": "about/LICENSE.html#litigation",
    "href": "about/LICENSE.html#litigation",
    "title": "License",
    "section": "",
    "text": "Any litigation relating to this License may be brought only in the courts of a jurisdiction where the defendant maintains its principal place of business and such litigation shall be governed by laws of that jurisdiction, without reference to its conflict-of-law provisions. Nothing in this Section shall prevent a party’s ability to bring cross-claims or counter-claims."
  },
  {
    "objectID": "about/LICENSE.html#miscellaneous",
    "href": "about/LICENSE.html#miscellaneous",
    "title": "License",
    "section": "",
    "text": "This License represents the complete agreement concerning the subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not be used to construe this License against a Contributor."
  },
  {
    "objectID": "about/LICENSE.html#versions-of-the-license",
    "href": "about/LICENSE.html#versions-of-the-license",
    "title": "License",
    "section": "",
    "text": "10.1. New Versions\nMozilla Foundation is the license steward. Except as provided in Section 10.3, no one other than the license steward has the right to modify or publish new versions of this License. Each version will be given a distinguishing version number.\n10.2. Effect of New Versions\nYou may distribute the Covered Software under the terms of the version of the License under which You originally received the Covered Software, or under the terms of any subsequent version published by the license steward.\n10.3. Modified Versions\nIf you create software not governed by this License, and you want to create a new license for such software, you may create and use a modified version of this License if you rename the license and remove any references to the name of the license steward (except to note that such modified license differs from this License).\n10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses\nIf You choose to distribute Source Code Form that is Incompatible With Secondary Licenses under the terms of this version of the License, the notice described in Exhibit B of this License must be attached."
  },
  {
    "objectID": "about/LICENSE.html#exhibit-a---source-code-form-license-notice",
    "href": "about/LICENSE.html#exhibit-a---source-code-form-license-notice",
    "title": "License",
    "section": "",
    "text": "This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.\nIf it is not possible or desirable to put the notice in a particular file, then You may include the notice in a location (such as a LICENSE file in a relevant directory) where a recipient would be likely to look for such a notice.\nYou may add additional accurate notices of copyright ownership."
  },
  {
    "objectID": "about/LICENSE.html#exhibit-b---incompatible-with-secondary-licenses-notice",
    "href": "about/LICENSE.html#exhibit-b---incompatible-with-secondary-licenses-notice",
    "title": "License",
    "section": "",
    "text": "This Source Code Form is “Incompatible With Secondary Licenses”, as defined by the Mozilla Public License, v. 2.0."
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "1 Introduction",
    "section": "1.1 🗺️Overview",
    "text": "1.1 🗺️Overview\nThe ‘broadcast’ package, as the name suggests, performs “broadcasting” (similar to broadcasting in the ‘Numpy’ module for ‘Python’).\nIn the context of operations involving 2 (or more) arrays, “broadcasting” refers to recycling array dimensions without allocating additional memory, which is considerably faster and more memory-efficient than R’s regular dimensions repetition mechanism.\nPlease read the article “Broadcasting explained” for a more complete explanation of what “broadcasting” is.\n \nAt its core, the ‘broadcast’ package provides 3 functionalities, all 3 related to “broadcasting”:\n \nFirst, ‘broadcast’ provides functions for element-wise outer computations between any 2 arrays.\nThese are similar to base R’s outer() function, but using broadcasting, which is faster and more efficient than the mechanism employed by outer().\nThe outer-like functions provided by ‘broadcast’ are optimised for a large set of operations, including, but not limited to, the following:\n\nrelational operations (like ==, !=, &lt;, &gt;, &lt;=, &gt;=, etc.);\narithmetic operations (like +, -, *, /, ^, etc.);\nBoolean combiner operations (like &, |, xor, etc.);\nstring concatenation, string (in)equality, and string distance (Levenshtein) operations.\n\nBase ‘R’ outer() function has some sloppy rules regarding the dimensions of the output, making it hard to predict the output shape.\nThe outer-like functions provided by ‘broadcast’ have very strict broadcasting rules, making it easy to accurately predict the dimensions of the result.\n \nSecond, ‘broadcast’ provides the bind_array() function, which is an broadcasted and enhanced form of the fantastic abind::abind() function:\n\nbind_array() allows for broadcasting (obviously), whereas abind::abind() does not.\nbind_array() is significantly faster and uses less memory than abind::abind().\nbind_array() also differs from abind::abind() in that it can handle recursive arrays properly; abind::abind() unlists everything to atomic arrays, ruining the structure.\n\n \nThird, ‘broadcast’ provides several generic functions for broadcasting:\n\nbcapply(): a broadcasted apply-like function that works on pairs of arrays.\nbc_ifelse(): a broadcasted ifelse() function. Broadcasts between the yes and no arguments."
  },
  {
    "objectID": "index.html#why-use-broadcast",
    "href": "index.html#why-use-broadcast",
    "title": "1 Introduction",
    "section": "1.2 🤷🏽Why use ‘broadcast’",
    "text": "1.2 🤷🏽Why use ‘broadcast’\nEfficiency\nBroadcasting dimensions is faster and more memory efficient than repeating dimensions.\nThis is not simply a need for speed.\nEfficient programs use less energy and resources, and is thus better for the environment.\nAs a favoured language for the sciences, ‘R’ should not throw away an opportunity to become more efficient.\nThe Benchmarks show that ‘broadcast’ has a somewhat similar speed as equivalent operations in ‘Numpy’.\n \nConvenience\nBroadcasting can make many applications much easier to write.\nFor Example: Suppose you want to compute some metric on all possible pair-wise combinations of the elements of 2 vectors.\nYou could write slow and ugly nested for-loops…\nBut you can instead also make the vectors orthogonal, and perform the broadcasting computation on the 2 orthogonal vectors.\nThe broadcasted method runs much faster, is faster to type, and easier to reason about, than using the clumsy nested for-loops.\nFor more practical examples, see Examples of Practical Applictaions.\n \nHigh Test Coverage\nThe ‘broadcast’ package has been developed with a set of unit tests that have high (&gt; 95%) coverage.\n \nMinimal Dependencies\nBesides linking to ‘Rcpp’, ‘broadcast’ does not depend on, vendor, link to, include, or otherwise use any external libraries; ‘broadcast’ was essentially made from scratch and can be installed out-of-the-box.\nNot using external libraries brings a number of advantages:\n\nAvoid dependency hell: Every dependency that is added to a software package increases the likelihood of something breaking (AKA “dependency hell”). ‘broadcast’ thus avoids this.\nAvoid wasting resources for translations: Using libraries from other languages, such as ‘xtensor’ (‘C++’) or ‘Numpy’ (‘Python’) means that - at some point - one needs to convert between the structure of R to that of the other language, and vice-versa, which wastes precious time and memory. ‘broadcast’ requires no such translations of structures, and thus does not waste precious time and memory.\nEnsure consistent behaviour: Using libraries from other languages also means one cannot always guarantee consistent behaviour of some operations. For example: both ‘Numpy’ and ‘xtensor’ have only limited support for missing values, whereas ‘R’ supports missing values for both atomic and recursive array/vector types (except type of ‘Raw’). Since ‘broadcast’ does not rely on external libraries, it can ensure consistent behaviour."
  },
  {
    "objectID": "index.html#documentation",
    "href": "index.html#documentation",
    "title": "1 Introduction",
    "section": "1.3 📖Documentation",
    "text": "1.3 📖Documentation\n\nInstallation:\nBroadcasting Explained:\nExamples of Practical Applications:\nComparisons & Benchmarks:"
  },
  {
    "objectID": "man/binding implementations/aaa01_broadcast_bind.html",
    "href": "man/binding implementations/aaa01_broadcast_bind.html",
    "title": "broadcast",
    "section": "",
    "text": "This help page gives additional details on the binding implementations in the ‘broadcast’ package.  \n\n\n\nIf argument input has length 0, or it contains exclusively objects where one or more dimensions are 0, an error is returned.   If input has length 1, these functions simply return input[[1L]].  \n\n\n\nThe API of bind_array() is inspired by the fantastic abind::abind function by Tony Plare & Richard Heiberger (2016).  But bind_array() differs considerably from abind::abind in the following ways:\n\n\nbind_array() differs from abind::abind in that it can handle recursive arrays properly  (the abind::abind function would unlist everything to atomic arrays, ruining the structure).\n\n\nbind_array() allows for broadcasting, while abind::abind does not support broadcasting.\n\n\nbind_array() is generally faster than abind::abind, as bind_array() relies heavily on ‘C’ and ‘C++’ code.\n\n\nunlike abind::abind, bind_array() only binds (atomic/recursive) arrays and matrices.  bind_array()does not attempt to convert things to arrays when they are not arrays, but will give an error instead.  This saves computation time and prevents unexpected results.\n\n\nbind_array() has more streamlined naming options, compared to abind::abind.  \n\n\nbind_mat() is a modified version of rbind/cbind.  bind_mat() differs from rbind/cbind in the following ways:\n\n\nit has more streamlined naming options/\n\n\nbind_mat() gives an error when fractional recycling is attempted (like binding 1:3 with 1:10).\n\n\nbind The primary differences is that   \n\n\n\n\n\n…"
  },
  {
    "objectID": "man/binding implementations/aaa01_broadcast_bind.html#details-on-the-binding-implementations-in-broadcast",
    "href": "man/binding implementations/aaa01_broadcast_bind.html#details-on-the-binding-implementations-in-broadcast",
    "title": "broadcast",
    "section": "",
    "text": "This help page gives additional details on the binding implementations in the ‘broadcast’ package.  \n\n\n\nIf argument input has length 0, or it contains exclusively objects where one or more dimensions are 0, an error is returned.   If input has length 1, these functions simply return input[[1L]].  \n\n\n\nThe API of bind_array() is inspired by the fantastic abind::abind function by Tony Plare & Richard Heiberger (2016).  But bind_array() differs considerably from abind::abind in the following ways:\n\n\nbind_array() differs from abind::abind in that it can handle recursive arrays properly  (the abind::abind function would unlist everything to atomic arrays, ruining the structure).\n\n\nbind_array() allows for broadcasting, while abind::abind does not support broadcasting.\n\n\nbind_array() is generally faster than abind::abind, as bind_array() relies heavily on ‘C’ and ‘C++’ code.\n\n\nunlike abind::abind, bind_array() only binds (atomic/recursive) arrays and matrices.  bind_array()does not attempt to convert things to arrays when they are not arrays, but will give an error instead.  This saves computation time and prevents unexpected results.\n\n\nbind_array() has more streamlined naming options, compared to abind::abind.  \n\n\nbind_mat() is a modified version of rbind/cbind.  bind_mat() differs from rbind/cbind in the following ways:\n\n\nit has more streamlined naming options/\n\n\nbind_mat() gives an error when fractional recycling is attempted (like binding 1:3 with 1:10).\n\n\nbind The primary differences is that   \n\n\n\n\n\n…"
  },
  {
    "objectID": "man/generic functions/bcapply.html",
    "href": "man/generic functions/bcapply.html",
    "title": "bcapply",
    "section": "",
    "text": "The bcapply() function applies a function to 2 arrays with broadcasting. \n\n\n\nbcapply(x, y, f, v = \"list\")\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable atomic or recursive arrays.\n\n\n\n\nf\n\n\na function that takes in exactly 2 arguments, and returns a result that can be stored in a single element of a recursive or atomic array.\n\n\n\n\nv\n\n\na single string, giving the scalar type for a single iteration.  If NULL or “list” (default), the result will be a recursive array.  If it is certain that, for every iteration, f() always results in a single atomic scalar, the user can specify the type in v to pre-allocate the result.  Pre-allocating the results leads to slightly faster and more memory efficient code.  NOTE: Incorrectly specifying v leads to undefined behaviour. \n\n\n\n\n\n\n\nAn atomic or recursive array with dimensions bc_dim(x, y). \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(c(10, 2,2))\nx.len &lt;- prod(x.dim)\n\ngen &lt;- function(n) sample(list(letters, month.abb, 1:10), n, TRUE)\n\nx &lt;- array(gen(10), x.dim)\ny &lt;- array(gen(10), c(10,1,1))\n\nf &lt;- function(x, y) list(x, y)\nbcapply(x, y, f)\n\n, , 1\n\n      [,1]   [,2]  \n [1,] list,2 list,2\n [2,] list,2 list,2\n [3,] list,2 list,2\n [4,] list,2 list,2\n [5,] list,2 list,2\n [6,] list,2 list,2\n [7,] list,2 list,2\n [8,] list,2 list,2\n [9,] list,2 list,2\n[10,] list,2 list,2\n\n, , 2\n\n      [,1]   [,2]  \n [1,] list,2 list,2\n [2,] list,2 list,2\n [3,] list,2 list,2\n [4,] list,2 list,2\n [5,] list,2 list,2\n [6,] list,2 list,2\n [7,] list,2 list,2\n [8,] list,2 list,2\n [9,] list,2 list,2\n[10,] list,2 list,2"
  },
  {
    "objectID": "man/generic functions/bcapply.html#apply-a-function-to-2-broadcasted-arrays",
    "href": "man/generic functions/bcapply.html#apply-a-function-to-2-broadcasted-arrays",
    "title": "bcapply",
    "section": "",
    "text": "The bcapply() function applies a function to 2 arrays with broadcasting. \n\n\n\nbcapply(x, y, f, v = \"list\")\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable atomic or recursive arrays.\n\n\n\n\nf\n\n\na function that takes in exactly 2 arguments, and returns a result that can be stored in a single element of a recursive or atomic array.\n\n\n\n\nv\n\n\na single string, giving the scalar type for a single iteration.  If NULL or “list” (default), the result will be a recursive array.  If it is certain that, for every iteration, f() always results in a single atomic scalar, the user can specify the type in v to pre-allocate the result.  Pre-allocating the results leads to slightly faster and more memory efficient code.  NOTE: Incorrectly specifying v leads to undefined behaviour. \n\n\n\n\n\n\n\nAn atomic or recursive array with dimensions bc_dim(x, y). \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(c(10, 2,2))\nx.len &lt;- prod(x.dim)\n\ngen &lt;- function(n) sample(list(letters, month.abb, 1:10), n, TRUE)\n\nx &lt;- array(gen(10), x.dim)\ny &lt;- array(gen(10), c(10,1,1))\n\nf &lt;- function(x, y) list(x, y)\nbcapply(x, y, f)\n\n, , 1\n\n      [,1]   [,2]  \n [1,] list,2 list,2\n [2,] list,2 list,2\n [3,] list,2 list,2\n [4,] list,2 list,2\n [5,] list,2 list,2\n [6,] list,2 list,2\n [7,] list,2 list,2\n [8,] list,2 list,2\n [9,] list,2 list,2\n[10,] list,2 list,2\n\n, , 2\n\n      [,1]   [,2]  \n [1,] list,2 list,2\n [2,] list,2 list,2\n [3,] list,2 list,2\n [4,] list,2 list,2\n [5,] list,2 list,2\n [6,] list,2 list,2\n [7,] list,2 list,2\n [8,] list,2 list,2\n [9,] list,2 list,2\n[10,] list,2 list,2"
  },
  {
    "objectID": "man/helper functions/array_replicate.html",
    "href": "man/helper functions/array_replicate.html",
    "title": "array_replicate",
    "section": "",
    "text": "The array_replicate() function replicates array dimensions until the specified dimension sizes are reached, and returns the array.   The various broadcasting functions recycle array dimensions virtually, meaning little to no additional memory is needed.  The array_replicate() function, however, physically replicates the dimensions of an array (and thus actually occupies additional memory space).  \n\n\n\narray_replicate(x, tdim)\n\n\n\n\n\n\n\n\nx\n\n\nan atomic or recursive array or matrix.\n\n\n\n\ntdim\n\n\nan integer vector, giving the target dimension to reach.\n\n\n\n\n\n\n\nReturns the replicated array.\n\n\n\n\nlibrary(\"broadcast\")\n\n\nx &lt;- matrix(1:9, 3,3)\ncolnames(x) &lt;- LETTERS[1:3]\nrownames(x) &lt;- letters[1:3]\nnames(x) &lt;- month.abb[1:9]\nprint(x)\n\n  A B C\na 1 4 7\nb 2 5 8\nc 3 6 9\nattr(,\"names\")\n[1] \"Jan\" \"Feb\" \"Mar\" \"Apr\" \"May\" \"Jun\" \"Jul\" \"Aug\" \"Sep\"\n\narray_replicate(x, c(3,3,2)) # replicate to larger size\n\n, , 1\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n, , 2\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9"
  },
  {
    "objectID": "man/helper functions/array_replicate.html#recycle-array-dimensions",
    "href": "man/helper functions/array_replicate.html#recycle-array-dimensions",
    "title": "array_replicate",
    "section": "",
    "text": "The array_replicate() function replicates array dimensions until the specified dimension sizes are reached, and returns the array.   The various broadcasting functions recycle array dimensions virtually, meaning little to no additional memory is needed.  The array_replicate() function, however, physically replicates the dimensions of an array (and thus actually occupies additional memory space).  \n\n\n\narray_replicate(x, tdim)\n\n\n\n\n\n\n\n\nx\n\n\nan atomic or recursive array or matrix.\n\n\n\n\ntdim\n\n\nan integer vector, giving the target dimension to reach.\n\n\n\n\n\n\n\nReturns the replicated array.\n\n\n\n\nlibrary(\"broadcast\")\n\n\nx &lt;- matrix(1:9, 3,3)\ncolnames(x) &lt;- LETTERS[1:3]\nrownames(x) &lt;- letters[1:3]\nnames(x) &lt;- month.abb[1:9]\nprint(x)\n\n  A B C\na 1 4 7\nb 2 5 8\nc 3 6 9\nattr(,\"names\")\n[1] \"Jan\" \"Feb\" \"Mar\" \"Apr\" \"May\" \"Jun\" \"Jul\" \"Aug\" \"Sep\"\n\narray_replicate(x, c(3,3,2)) # replicate to larger size\n\n, , 1\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n, , 2\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9"
  },
  {
    "objectID": "man/helper functions/properties.html",
    "href": "man/helper functions/properties.html",
    "title": "properties",
    "section": "",
    "text": "ndim() returns the number of dimensions of an object.  lst.ndim() returns the number of dimensions of every list-element.  lst.typeof() returns the (internal) type of every list-element.  len() is an alias for length.  lst.len() is an alias for lengths.   These functions were all designed to be efficient.  \n\n\n\nndim(x)\n\nlst.ndim(x)\n\nlst.typeof(x)\n\n\n\n\n\n\n\n\nx\n\n\nan object. For functions starting with lst., x must be a list (i.e. recursive vector or recursive array). \n\n\n\n\n\n\n\nAn integer scalar\n\n\n\n\nlibrary(\"broadcast\")\n\n\n# bind_array ====\n\n# here, atomic and recursive arrays are mixed,\n# resulting in recursive arrays\n\n# creating the arrays\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\n# binding the arrays\ninput &lt;- list(x = x, y = y)\nbind_array(input, along = 0L) # binds on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\nbind_array(input, along = 1L) # binds on first dimension (i.e. rows)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, along = 2L)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, along = 3L) # bind on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 0L) # binds on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 1L) # binds on last dimension (i.e. columns)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, revalong = 2L)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, revalong = 3L) # bind on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\n# binding, with empty arrays\nemptyarray &lt;- array(numeric(0L), c(0L, 3L))\ndimnames(emptyarray) &lt;- list(NULL, paste(\"empty\", 1:3))\nprint(emptyarray)\n\n     empty 1 empty 2 empty 3\n\ninput &lt;- list(x = x, y = emptyarray)\nbind_array(input, along = 1L, comnames_from = 2L) # row-bind\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n################################################################################\n\n# bind_mat ====\n\n# here, atomic and recursive matrices are mixed,\n# resulting in a recursive matrix\n\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\nbind_mat(list(x = x, y = y), 2L)\n\n  A            B            C                  \na logical,3    logical,3    logical,3    1 5 9 \nb integer,10   integer,10   integer,10   2 6 10\nc numeric,10   numeric,10   numeric,10   3 7 11\nd character,26 character,26 character,26 4 8 12\n\n################################################################################\n\n# bind_dt ====\n\n\nx &lt;- data.frame(a = 1:12, b = month.abb) # data.frame\ny &lt;- data.table::data.table(a = 1:12, b = month.abb) # data.table\n\nbind_dt(list(x = x, y = y), 2L) # column bind\n\n      x.a    x.b   y.a    y.b\n    &lt;int&gt; &lt;char&gt; &lt;int&gt; &lt;char&gt;\n 1:     1    Jan     1    Jan\n 2:     2    Feb     2    Feb\n 3:     3    Mar     3    Mar\n 4:     4    Apr     4    Apr\n 5:     5    May     5    May\n 6:     6    Jun     6    Jun\n 7:     7    Jul     7    Jul\n 8:     8    Aug     8    Aug\n 9:     9    Sep     9    Sep\n10:    10    Oct    10    Oct\n11:    11    Nov    11    Nov\n12:    12    Dec    12    Dec\n\nbind_dt(list(x = x, y = y), 1L) # row bind\n\n        a      b\n    &lt;int&gt; &lt;char&gt;\n 1:     1    Jan\n 2:     2    Feb\n 3:     3    Mar\n 4:     4    Apr\n 5:     5    May\n 6:     6    Jun\n 7:     7    Jul\n 8:     8    Aug\n 9:     9    Sep\n10:    10    Oct\n11:    11    Nov\n12:    12    Dec\n13:     1    Jan\n14:     2    Feb\n15:     3    Mar\n16:     4    Apr\n17:     5    May\n18:     6    Jun\n19:     7    Jul\n20:     8    Aug\n21:     9    Sep\n22:    10    Oct\n23:    11    Nov\n24:    12    Dec\n        a      b"
  },
  {
    "objectID": "man/helper functions/properties.html#small-property-functions",
    "href": "man/helper functions/properties.html#small-property-functions",
    "title": "properties",
    "section": "",
    "text": "ndim() returns the number of dimensions of an object.  lst.ndim() returns the number of dimensions of every list-element.  lst.typeof() returns the (internal) type of every list-element.  len() is an alias for length.  lst.len() is an alias for lengths.   These functions were all designed to be efficient.  \n\n\n\nndim(x)\n\nlst.ndim(x)\n\nlst.typeof(x)\n\n\n\n\n\n\n\n\nx\n\n\nan object. For functions starting with lst., x must be a list (i.e. recursive vector or recursive array). \n\n\n\n\n\n\n\nAn integer scalar\n\n\n\n\nlibrary(\"broadcast\")\n\n\n# bind_array ====\n\n# here, atomic and recursive arrays are mixed,\n# resulting in recursive arrays\n\n# creating the arrays\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\n# binding the arrays\ninput &lt;- list(x = x, y = y)\nbind_array(input, along = 0L) # binds on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\nbind_array(input, along = 1L) # binds on first dimension (i.e. rows)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, along = 2L)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, along = 3L) # bind on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 0L) # binds on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 1L) # binds on last dimension (i.e. columns)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, revalong = 2L)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, revalong = 3L) # bind on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\n# binding, with empty arrays\nemptyarray &lt;- array(numeric(0L), c(0L, 3L))\ndimnames(emptyarray) &lt;- list(NULL, paste(\"empty\", 1:3))\nprint(emptyarray)\n\n     empty 1 empty 2 empty 3\n\ninput &lt;- list(x = x, y = emptyarray)\nbind_array(input, along = 1L, comnames_from = 2L) # row-bind\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n################################################################################\n\n# bind_mat ====\n\n# here, atomic and recursive matrices are mixed,\n# resulting in a recursive matrix\n\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\nbind_mat(list(x = x, y = y), 2L)\n\n  A            B            C                  \na logical,3    logical,3    logical,3    1 5 9 \nb integer,10   integer,10   integer,10   2 6 10\nc numeric,10   numeric,10   numeric,10   3 7 11\nd character,26 character,26 character,26 4 8 12\n\n################################################################################\n\n# bind_dt ====\n\n\nx &lt;- data.frame(a = 1:12, b = month.abb) # data.frame\ny &lt;- data.table::data.table(a = 1:12, b = month.abb) # data.table\n\nbind_dt(list(x = x, y = y), 2L) # column bind\n\n      x.a    x.b   y.a    y.b\n    &lt;int&gt; &lt;char&gt; &lt;int&gt; &lt;char&gt;\n 1:     1    Jan     1    Jan\n 2:     2    Feb     2    Feb\n 3:     3    Mar     3    Mar\n 4:     4    Apr     4    Apr\n 5:     5    May     5    May\n 6:     6    Jun     6    Jun\n 7:     7    Jul     7    Jul\n 8:     8    Aug     8    Aug\n 9:     9    Sep     9    Sep\n10:    10    Oct    10    Oct\n11:    11    Nov    11    Nov\n12:    12    Dec    12    Dec\n\nbind_dt(list(x = x, y = y), 1L) # row bind\n\n        a      b\n    &lt;int&gt; &lt;char&gt;\n 1:     1    Jan\n 2:     2    Feb\n 3:     3    Mar\n 4:     4    Apr\n 5:     5    May\n 6:     6    Jun\n 7:     7    Jul\n 8:     8    Aug\n 9:     9    Sep\n10:    10    Oct\n11:    11    Nov\n12:    12    Dec\n13:     1    Jan\n14:     2    Feb\n15:     3    Mar\n16:     4    Apr\n17:     5    May\n18:     6    Jun\n19:     7    Jul\n20:     8    Aug\n21:     9    Sep\n22:    10    Oct\n23:    11    Nov\n24:    12    Dec\n        a      b"
  },
  {
    "objectID": "man/outer-like functions/bc.b.html",
    "href": "man/outer-like functions/bc.b.html",
    "title": "bd.b",
    "section": "",
    "text": "The bc.b() function performs broadcasted Boolean operations on 2 logical (or 32bit integer) arrays.   Please note that these operations will treat the input as Boolean.  Therefore, something like bc.b(1, 2, “==”) returns TRUE, because both 1 and 2 are TRUE when cast as Boolean.  \n\n\n\nbc.b(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable logical (or 32bit integer) arrays.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported Boolean operators: &, |, xor, nand, ==, !=, &lt;, &gt;, &lt;=, &gt;=. \n\n\n\n\n\n\n\nA logical array as a result of the broadcasted Boolean operation.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(TRUE, FALSE, NA), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\nbc.b(x, y, \"&\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA FALSE    NA FALSE    NA    NA  TRUE    NA\n [2,] FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE    NA  TRUE\n [3,]    NA    NA FALSE    NA    NA  TRUE    NA FALSE  TRUE\n [4,]    NA FALSE  TRUE    NA    NA    NA    NA    NA    NA\n [5,]    NA FALSE  TRUE FALSE    NA    NA    NA  TRUE    NA\n [6,]  TRUE  TRUE    NA    NA  TRUE FALSE    NA  TRUE  TRUE\n [7,] FALSE FALSE FALSE    NA FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE    NA    NA    NA FALSE  TRUE FALSE  TRUE    NA\n [9,] FALSE FALSE FALSE  TRUE    NA    NA FALSE FALSE    NA\n[10,] FALSE    NA    NA    NA    NA FALSE  TRUE FALSE    NA\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE FALSE  TRUE    NA FALSE FALSE  TRUE FALSE\n [2,]    NA FALSE    NA    NA  TRUE  TRUE FALSE  TRUE  TRUE\n [3,] FALSE FALSE  TRUE    NA    NA FALSE FALSE FALSE FALSE\n [4,]  TRUE    NA    NA  TRUE FALSE    NA FALSE    NA FALSE\n [5,]  TRUE    NA  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE\n [6,] FALSE    NA    NA  TRUE FALSE  TRUE FALSE  TRUE    NA\n [7,] FALSE    NA    NA  TRUE  TRUE    NA  TRUE    NA    NA\n [8,]  TRUE    NA  TRUE FALSE  TRUE    NA  TRUE    NA  TRUE\n [9,] FALSE    NA    NA FALSE  TRUE    NA    NA  TRUE    NA\n[10,]  TRUE    NA  TRUE    NA FALSE FALSE    NA    NA  TRUE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA    NA  TRUE    NA FALSE  TRUE  TRUE    NA\n [2,]    NA  TRUE FALSE    NA FALSE  TRUE FALSE FALSE FALSE\n [3,]  TRUE    NA  TRUE  TRUE FALSE    NA  TRUE    NA FALSE\n [4,] FALSE FALSE FALSE FALSE    NA    NA  TRUE    NA  TRUE\n [5,]  TRUE FALSE FALSE  TRUE    NA    NA    NA    NA    NA\n [6,] FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE    NA    NA\n [7,] FALSE FALSE  TRUE  TRUE FALSE    NA    NA    NA  TRUE\n [8,] FALSE  TRUE FALSE    NA FALSE  TRUE  TRUE  TRUE FALSE\n [9,] FALSE    NA    NA  TRUE  TRUE    NA  TRUE  TRUE    NA\n[10,] FALSE    NA  TRUE    NA FALSE  TRUE  TRUE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA FALSE FALSE    NA    NA  TRUE FALSE  TRUE\n [2,]    NA    NA    NA  TRUE  TRUE FALSE FALSE FALSE  TRUE\n [3,]    NA    NA  TRUE  TRUE FALSE    NA    NA    NA  TRUE\n [4,]    NA FALSE  TRUE    NA FALSE    NA FALSE    NA  TRUE\n [5,]    NA    NA  TRUE  TRUE  TRUE FALSE  TRUE FALSE    NA\n [6,]  TRUE    NA FALSE  TRUE FALSE    NA    NA FALSE  TRUE\n [7,]    NA FALSE    NA  TRUE FALSE  TRUE FALSE  TRUE FALSE\n [8,]  TRUE    NA  TRUE    NA FALSE    NA    NA    NA    NA\n [9,] FALSE  TRUE    NA  TRUE FALSE    NA    NA  TRUE  TRUE\n[10,]    NA    NA    NA FALSE  TRUE FALSE FALSE FALSE    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA  TRUE FALSE FALSE    NA  TRUE  TRUE\n [2,]    NA FALSE FALSE    NA  TRUE    NA FALSE  TRUE    NA\n [3,] FALSE    NA    NA FALSE  TRUE    NA FALSE  TRUE FALSE\n [4,] FALSE    NA FALSE    NA  TRUE FALSE    NA    NA FALSE\n [5,] FALSE  TRUE  TRUE  TRUE    NA  TRUE    NA  TRUE  TRUE\n [6,] FALSE FALSE FALSE    NA  TRUE FALSE    NA FALSE    NA\n [7,]    NA    NA FALSE    NA    NA    NA FALSE  TRUE  TRUE\n [8,]  TRUE    NA  TRUE FALSE FALSE    NA  TRUE  TRUE FALSE\n [9,]    NA FALSE FALSE    NA    NA  TRUE  TRUE  TRUE FALSE\n[10,]  TRUE  TRUE FALSE FALSE    NA FALSE    NA    NA  TRUE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE\n [2,]    NA FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE    NA\n [3,]  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE    NA\n [4,]    NA    NA FALSE  TRUE    NA    NA FALSE  TRUE  TRUE\n [5,]  TRUE  TRUE FALSE FALSE FALSE    NA    NA    NA  TRUE\n [6,]    NA    NA  TRUE    NA  TRUE  TRUE  TRUE    NA  TRUE\n [7,] FALSE    NA  TRUE    NA  TRUE FALSE FALSE  TRUE    NA\n [8,] FALSE    NA    NA FALSE FALSE FALSE    NA  TRUE FALSE\n [9,]    NA FALSE    NA    NA    NA    NA FALSE    NA    NA\n[10,]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE FALSE  TRUE    NA    NA FALSE  TRUE    NA FALSE\n [2,] FALSE    NA    NA FALSE    NA FALSE    NA FALSE  TRUE\n [3,] FALSE    NA    NA FALSE  TRUE FALSE    NA FALSE FALSE\n [4,] FALSE    NA FALSE    NA    NA    NA  TRUE  TRUE    NA\n [5,]  TRUE  TRUE  TRUE  TRUE FALSE FALSE    NA    NA  TRUE\n [6,]    NA  TRUE FALSE FALSE FALSE  TRUE FALSE    NA  TRUE\n [7,]  TRUE FALSE FALSE    NA  TRUE FALSE FALSE  TRUE    NA\n [8,]    NA FALSE    NA    NA  TRUE    NA FALSE    NA  TRUE\n [9,]    NA    NA  TRUE    NA    NA  TRUE  TRUE FALSE  TRUE\n[10,] FALSE    NA FALSE  TRUE FALSE    NA FALSE    NA FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8] [,9]\n [1,]  TRUE FALSE    NA    NA  TRUE    NA  TRUE    NA TRUE\n [2,]    NA  TRUE    NA    NA  TRUE    NA FALSE    NA   NA\n [3,]  TRUE    NA  TRUE FALSE  TRUE    NA    NA    NA   NA\n [4,] FALSE FALSE FALSE    NA FALSE  TRUE    NA FALSE   NA\n [5,]    NA FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE   NA\n [6,]    NA    NA  TRUE FALSE FALSE FALSE    NA    NA   NA\n [7,]  TRUE  TRUE    NA    NA FALSE  TRUE    NA    NA TRUE\n [8,]  TRUE  TRUE    NA    NA FALSE FALSE    NA  TRUE   NA\n [9,]    NA    NA    NA FALSE    NA FALSE FALSE    NA TRUE\n[10,] FALSE    NA    NA    NA  TRUE  TRUE    NA FALSE TRUE\n\nbc.b(x, y, \"|\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.b(x, y, \"xor\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA  TRUE    NA  TRUE    NA    NA FALSE    NA\n [2,]  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE    NA FALSE\n [3,]    NA    NA  TRUE    NA    NA FALSE    NA  TRUE FALSE\n [4,]    NA  TRUE FALSE    NA    NA    NA    NA    NA    NA\n [5,]    NA  TRUE FALSE  TRUE    NA    NA    NA FALSE    NA\n [6,] FALSE FALSE    NA    NA FALSE  TRUE    NA FALSE FALSE\n [7,]  TRUE  TRUE  TRUE    NA  TRUE  TRUE  TRUE  TRUE  TRUE\n [8,]  TRUE    NA    NA    NA  TRUE FALSE  TRUE FALSE    NA\n [9,]  TRUE  TRUE  TRUE FALSE    NA    NA  TRUE  TRUE    NA\n[10,]  TRUE    NA    NA    NA    NA  TRUE FALSE  TRUE    NA\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE  TRUE FALSE    NA  TRUE  TRUE FALSE  TRUE\n [2,]    NA  TRUE    NA    NA FALSE FALSE  TRUE FALSE FALSE\n [3,]  TRUE  TRUE FALSE    NA    NA  TRUE  TRUE  TRUE  TRUE\n [4,] FALSE    NA    NA FALSE  TRUE    NA  TRUE    NA  TRUE\n [5,] FALSE    NA FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE\n [6,]  TRUE    NA    NA FALSE  TRUE FALSE  TRUE FALSE    NA\n [7,]  TRUE    NA    NA FALSE FALSE    NA FALSE    NA    NA\n [8,] FALSE    NA FALSE  TRUE FALSE    NA FALSE    NA FALSE\n [9,]  TRUE    NA    NA  TRUE FALSE    NA    NA FALSE    NA\n[10,] FALSE    NA FALSE    NA  TRUE  TRUE    NA    NA FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA    NA FALSE    NA  TRUE FALSE FALSE    NA\n [2,]    NA FALSE  TRUE    NA  TRUE FALSE  TRUE  TRUE  TRUE\n [3,] FALSE    NA FALSE FALSE  TRUE    NA FALSE    NA  TRUE\n [4,]  TRUE  TRUE  TRUE  TRUE    NA    NA FALSE    NA FALSE\n [5,] FALSE  TRUE  TRUE FALSE    NA    NA    NA    NA    NA\n [6,]  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE    NA    NA\n [7,]  TRUE  TRUE FALSE FALSE  TRUE    NA    NA    NA FALSE\n [8,]  TRUE FALSE  TRUE    NA  TRUE FALSE FALSE FALSE  TRUE\n [9,]  TRUE    NA    NA FALSE FALSE    NA FALSE FALSE    NA\n[10,]  TRUE    NA FALSE    NA  TRUE FALSE FALSE  TRUE  TRUE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA  TRUE  TRUE    NA    NA FALSE  TRUE FALSE\n [2,]    NA    NA    NA FALSE FALSE  TRUE  TRUE  TRUE FALSE\n [3,]    NA    NA FALSE FALSE  TRUE    NA    NA    NA FALSE\n [4,]    NA  TRUE FALSE    NA  TRUE    NA  TRUE    NA FALSE\n [5,]    NA    NA FALSE FALSE FALSE  TRUE FALSE  TRUE    NA\n [6,] FALSE    NA  TRUE FALSE  TRUE    NA    NA  TRUE FALSE\n [7,]    NA  TRUE    NA FALSE  TRUE FALSE  TRUE FALSE  TRUE\n [8,] FALSE    NA FALSE    NA  TRUE    NA    NA    NA    NA\n [9,]  TRUE FALSE    NA FALSE  TRUE    NA    NA FALSE FALSE\n[10,]    NA    NA    NA  TRUE FALSE  TRUE  TRUE  TRUE    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE    NA FALSE  TRUE  TRUE    NA FALSE FALSE\n [2,]    NA  TRUE  TRUE    NA FALSE    NA  TRUE FALSE    NA\n [3,]  TRUE    NA    NA  TRUE FALSE    NA  TRUE FALSE  TRUE\n [4,]  TRUE    NA  TRUE    NA FALSE  TRUE    NA    NA  TRUE\n [5,]  TRUE FALSE FALSE FALSE    NA FALSE    NA FALSE FALSE\n [6,]  TRUE  TRUE  TRUE    NA FALSE  TRUE    NA  TRUE    NA\n [7,]    NA    NA  TRUE    NA    NA    NA  TRUE FALSE FALSE\n [8,] FALSE    NA FALSE  TRUE  TRUE    NA FALSE FALSE  TRUE\n [9,]    NA  TRUE  TRUE    NA    NA FALSE FALSE FALSE  TRUE\n[10,] FALSE FALSE  TRUE  TRUE    NA  TRUE    NA    NA FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE\n [2,]    NA  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE    NA\n [3,] FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE    NA\n [4,]    NA    NA  TRUE FALSE    NA    NA  TRUE FALSE FALSE\n [5,] FALSE FALSE  TRUE  TRUE  TRUE    NA    NA    NA FALSE\n [6,]    NA    NA FALSE    NA FALSE FALSE FALSE    NA FALSE\n [7,]  TRUE    NA FALSE    NA FALSE  TRUE  TRUE FALSE    NA\n [8,]  TRUE    NA    NA  TRUE  TRUE  TRUE    NA FALSE  TRUE\n [9,]    NA  TRUE    NA    NA    NA    NA  TRUE    NA    NA\n[10,] FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE FALSE    NA    NA  TRUE FALSE    NA  TRUE\n [2,]  TRUE    NA    NA  TRUE    NA  TRUE    NA  TRUE FALSE\n [3,]  TRUE    NA    NA  TRUE FALSE  TRUE    NA  TRUE  TRUE\n [4,]  TRUE    NA  TRUE    NA    NA    NA FALSE FALSE    NA\n [5,] FALSE FALSE FALSE FALSE  TRUE  TRUE    NA    NA FALSE\n [6,]    NA FALSE  TRUE  TRUE  TRUE FALSE  TRUE    NA FALSE\n [7,] FALSE  TRUE  TRUE    NA FALSE  TRUE  TRUE FALSE    NA\n [8,]    NA  TRUE    NA    NA FALSE    NA  TRUE    NA FALSE\n [9,]    NA    NA FALSE    NA    NA FALSE FALSE  TRUE FALSE\n[10,]  TRUE    NA  TRUE FALSE  TRUE    NA  TRUE    NA  TRUE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE    NA    NA FALSE    NA FALSE    NA FALSE\n [2,]    NA FALSE    NA    NA FALSE    NA  TRUE    NA    NA\n [3,] FALSE    NA FALSE  TRUE FALSE    NA    NA    NA    NA\n [4,]  TRUE  TRUE  TRUE    NA  TRUE FALSE    NA  TRUE    NA\n [5,]    NA  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE    NA\n [6,]    NA    NA FALSE  TRUE  TRUE  TRUE    NA    NA    NA\n [7,] FALSE FALSE    NA    NA  TRUE FALSE    NA    NA FALSE\n [8,] FALSE FALSE    NA    NA  TRUE  TRUE    NA FALSE    NA\n [9,]    NA    NA    NA  TRUE    NA  TRUE  TRUE    NA FALSE\n[10,]  TRUE    NA    NA    NA FALSE FALSE    NA  TRUE FALSE\n\nbc.b(x, y, \"nand\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.b(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA FALSE    NA FALSE    NA    NA  TRUE    NA\n [2,] FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE    NA  TRUE\n [3,]    NA    NA FALSE    NA    NA  TRUE    NA FALSE  TRUE\n [4,]    NA FALSE  TRUE    NA    NA    NA    NA    NA    NA\n [5,]    NA FALSE  TRUE FALSE    NA    NA    NA  TRUE    NA\n [6,]  TRUE  TRUE    NA    NA  TRUE FALSE    NA  TRUE  TRUE\n [7,] FALSE FALSE FALSE    NA FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE    NA    NA    NA FALSE  TRUE FALSE  TRUE    NA\n [9,] FALSE FALSE FALSE  TRUE    NA    NA FALSE FALSE    NA\n[10,] FALSE    NA    NA    NA    NA FALSE  TRUE FALSE    NA\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE FALSE  TRUE    NA FALSE FALSE  TRUE FALSE\n [2,]    NA FALSE    NA    NA  TRUE  TRUE FALSE  TRUE  TRUE\n [3,] FALSE FALSE  TRUE    NA    NA FALSE FALSE FALSE FALSE\n [4,]  TRUE    NA    NA  TRUE FALSE    NA FALSE    NA FALSE\n [5,]  TRUE    NA  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE\n [6,] FALSE    NA    NA  TRUE FALSE  TRUE FALSE  TRUE    NA\n [7,] FALSE    NA    NA  TRUE  TRUE    NA  TRUE    NA    NA\n [8,]  TRUE    NA  TRUE FALSE  TRUE    NA  TRUE    NA  TRUE\n [9,] FALSE    NA    NA FALSE  TRUE    NA    NA  TRUE    NA\n[10,]  TRUE    NA  TRUE    NA FALSE FALSE    NA    NA  TRUE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA    NA  TRUE    NA FALSE  TRUE  TRUE    NA\n [2,]    NA  TRUE FALSE    NA FALSE  TRUE FALSE FALSE FALSE\n [3,]  TRUE    NA  TRUE  TRUE FALSE    NA  TRUE    NA FALSE\n [4,] FALSE FALSE FALSE FALSE    NA    NA  TRUE    NA  TRUE\n [5,]  TRUE FALSE FALSE  TRUE    NA    NA    NA    NA    NA\n [6,] FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE    NA    NA\n [7,] FALSE FALSE  TRUE  TRUE FALSE    NA    NA    NA  TRUE\n [8,] FALSE  TRUE FALSE    NA FALSE  TRUE  TRUE  TRUE FALSE\n [9,] FALSE    NA    NA  TRUE  TRUE    NA  TRUE  TRUE    NA\n[10,] FALSE    NA  TRUE    NA FALSE  TRUE  TRUE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA FALSE FALSE    NA    NA  TRUE FALSE  TRUE\n [2,]    NA    NA    NA  TRUE  TRUE FALSE FALSE FALSE  TRUE\n [3,]    NA    NA  TRUE  TRUE FALSE    NA    NA    NA  TRUE\n [4,]    NA FALSE  TRUE    NA FALSE    NA FALSE    NA  TRUE\n [5,]    NA    NA  TRUE  TRUE  TRUE FALSE  TRUE FALSE    NA\n [6,]  TRUE    NA FALSE  TRUE FALSE    NA    NA FALSE  TRUE\n [7,]    NA FALSE    NA  TRUE FALSE  TRUE FALSE  TRUE FALSE\n [8,]  TRUE    NA  TRUE    NA FALSE    NA    NA    NA    NA\n [9,] FALSE  TRUE    NA  TRUE FALSE    NA    NA  TRUE  TRUE\n[10,]    NA    NA    NA FALSE  TRUE FALSE FALSE FALSE    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA  TRUE FALSE FALSE    NA  TRUE  TRUE\n [2,]    NA FALSE FALSE    NA  TRUE    NA FALSE  TRUE    NA\n [3,] FALSE    NA    NA FALSE  TRUE    NA FALSE  TRUE FALSE\n [4,] FALSE    NA FALSE    NA  TRUE FALSE    NA    NA FALSE\n [5,] FALSE  TRUE  TRUE  TRUE    NA  TRUE    NA  TRUE  TRUE\n [6,] FALSE FALSE FALSE    NA  TRUE FALSE    NA FALSE    NA\n [7,]    NA    NA FALSE    NA    NA    NA FALSE  TRUE  TRUE\n [8,]  TRUE    NA  TRUE FALSE FALSE    NA  TRUE  TRUE FALSE\n [9,]    NA FALSE FALSE    NA    NA  TRUE  TRUE  TRUE FALSE\n[10,]  TRUE  TRUE FALSE FALSE    NA FALSE    NA    NA  TRUE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE\n [2,]    NA FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE    NA\n [3,]  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE    NA\n [4,]    NA    NA FALSE  TRUE    NA    NA FALSE  TRUE  TRUE\n [5,]  TRUE  TRUE FALSE FALSE FALSE    NA    NA    NA  TRUE\n [6,]    NA    NA  TRUE    NA  TRUE  TRUE  TRUE    NA  TRUE\n [7,] FALSE    NA  TRUE    NA  TRUE FALSE FALSE  TRUE    NA\n [8,] FALSE    NA    NA FALSE FALSE FALSE    NA  TRUE FALSE\n [9,]    NA FALSE    NA    NA    NA    NA FALSE    NA    NA\n[10,]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE FALSE  TRUE    NA    NA FALSE  TRUE    NA FALSE\n [2,] FALSE    NA    NA FALSE    NA FALSE    NA FALSE  TRUE\n [3,] FALSE    NA    NA FALSE  TRUE FALSE    NA FALSE FALSE\n [4,] FALSE    NA FALSE    NA    NA    NA  TRUE  TRUE    NA\n [5,]  TRUE  TRUE  TRUE  TRUE FALSE FALSE    NA    NA  TRUE\n [6,]    NA  TRUE FALSE FALSE FALSE  TRUE FALSE    NA  TRUE\n [7,]  TRUE FALSE FALSE    NA  TRUE FALSE FALSE  TRUE    NA\n [8,]    NA FALSE    NA    NA  TRUE    NA FALSE    NA  TRUE\n [9,]    NA    NA  TRUE    NA    NA  TRUE  TRUE FALSE  TRUE\n[10,] FALSE    NA FALSE  TRUE FALSE    NA FALSE    NA FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8] [,9]\n [1,]  TRUE FALSE    NA    NA  TRUE    NA  TRUE    NA TRUE\n [2,]    NA  TRUE    NA    NA  TRUE    NA FALSE    NA   NA\n [3,]  TRUE    NA  TRUE FALSE  TRUE    NA    NA    NA   NA\n [4,] FALSE FALSE FALSE    NA FALSE  TRUE    NA FALSE   NA\n [5,]    NA FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE   NA\n [6,]    NA    NA  TRUE FALSE FALSE FALSE    NA    NA   NA\n [7,]  TRUE  TRUE    NA    NA FALSE  TRUE    NA    NA TRUE\n [8,]  TRUE  TRUE    NA    NA FALSE FALSE    NA  TRUE   NA\n [9,]    NA    NA    NA FALSE    NA FALSE FALSE    NA TRUE\n[10,] FALSE    NA    NA    NA  TRUE  TRUE    NA FALSE TRUE\n\nbc.b(x, y, \"!=\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA  TRUE    NA  TRUE    NA    NA FALSE    NA\n [2,]  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE    NA FALSE\n [3,]    NA    NA  TRUE    NA    NA FALSE    NA  TRUE FALSE\n [4,]    NA  TRUE FALSE    NA    NA    NA    NA    NA    NA\n [5,]    NA  TRUE FALSE  TRUE    NA    NA    NA FALSE    NA\n [6,] FALSE FALSE    NA    NA FALSE  TRUE    NA FALSE FALSE\n [7,]  TRUE  TRUE  TRUE    NA  TRUE  TRUE  TRUE  TRUE  TRUE\n [8,]  TRUE    NA    NA    NA  TRUE FALSE  TRUE FALSE    NA\n [9,]  TRUE  TRUE  TRUE FALSE    NA    NA  TRUE  TRUE    NA\n[10,]  TRUE    NA    NA    NA    NA  TRUE FALSE  TRUE    NA\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE  TRUE FALSE    NA  TRUE  TRUE FALSE  TRUE\n [2,]    NA  TRUE    NA    NA FALSE FALSE  TRUE FALSE FALSE\n [3,]  TRUE  TRUE FALSE    NA    NA  TRUE  TRUE  TRUE  TRUE\n [4,] FALSE    NA    NA FALSE  TRUE    NA  TRUE    NA  TRUE\n [5,] FALSE    NA FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE\n [6,]  TRUE    NA    NA FALSE  TRUE FALSE  TRUE FALSE    NA\n [7,]  TRUE    NA    NA FALSE FALSE    NA FALSE    NA    NA\n [8,] FALSE    NA FALSE  TRUE FALSE    NA FALSE    NA FALSE\n [9,]  TRUE    NA    NA  TRUE FALSE    NA    NA FALSE    NA\n[10,] FALSE    NA FALSE    NA  TRUE  TRUE    NA    NA FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA    NA FALSE    NA  TRUE FALSE FALSE    NA\n [2,]    NA FALSE  TRUE    NA  TRUE FALSE  TRUE  TRUE  TRUE\n [3,] FALSE    NA FALSE FALSE  TRUE    NA FALSE    NA  TRUE\n [4,]  TRUE  TRUE  TRUE  TRUE    NA    NA FALSE    NA FALSE\n [5,] FALSE  TRUE  TRUE FALSE    NA    NA    NA    NA    NA\n [6,]  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE    NA    NA\n [7,]  TRUE  TRUE FALSE FALSE  TRUE    NA    NA    NA FALSE\n [8,]  TRUE FALSE  TRUE    NA  TRUE FALSE FALSE FALSE  TRUE\n [9,]  TRUE    NA    NA FALSE FALSE    NA FALSE FALSE    NA\n[10,]  TRUE    NA FALSE    NA  TRUE FALSE FALSE  TRUE  TRUE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA  TRUE  TRUE    NA    NA FALSE  TRUE FALSE\n [2,]    NA    NA    NA FALSE FALSE  TRUE  TRUE  TRUE FALSE\n [3,]    NA    NA FALSE FALSE  TRUE    NA    NA    NA FALSE\n [4,]    NA  TRUE FALSE    NA  TRUE    NA  TRUE    NA FALSE\n [5,]    NA    NA FALSE FALSE FALSE  TRUE FALSE  TRUE    NA\n [6,] FALSE    NA  TRUE FALSE  TRUE    NA    NA  TRUE FALSE\n [7,]    NA  TRUE    NA FALSE  TRUE FALSE  TRUE FALSE  TRUE\n [8,] FALSE    NA FALSE    NA  TRUE    NA    NA    NA    NA\n [9,]  TRUE FALSE    NA FALSE  TRUE    NA    NA FALSE FALSE\n[10,]    NA    NA    NA  TRUE FALSE  TRUE  TRUE  TRUE    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE    NA FALSE  TRUE  TRUE    NA FALSE FALSE\n [2,]    NA  TRUE  TRUE    NA FALSE    NA  TRUE FALSE    NA\n [3,]  TRUE    NA    NA  TRUE FALSE    NA  TRUE FALSE  TRUE\n [4,]  TRUE    NA  TRUE    NA FALSE  TRUE    NA    NA  TRUE\n [5,]  TRUE FALSE FALSE FALSE    NA FALSE    NA FALSE FALSE\n [6,]  TRUE  TRUE  TRUE    NA FALSE  TRUE    NA  TRUE    NA\n [7,]    NA    NA  TRUE    NA    NA    NA  TRUE FALSE FALSE\n [8,] FALSE    NA FALSE  TRUE  TRUE    NA FALSE FALSE  TRUE\n [9,]    NA  TRUE  TRUE    NA    NA FALSE FALSE FALSE  TRUE\n[10,] FALSE FALSE  TRUE  TRUE    NA  TRUE    NA    NA FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE\n [2,]    NA  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE    NA\n [3,] FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE    NA\n [4,]    NA    NA  TRUE FALSE    NA    NA  TRUE FALSE FALSE\n [5,] FALSE FALSE  TRUE  TRUE  TRUE    NA    NA    NA FALSE\n [6,]    NA    NA FALSE    NA FALSE FALSE FALSE    NA FALSE\n [7,]  TRUE    NA FALSE    NA FALSE  TRUE  TRUE FALSE    NA\n [8,]  TRUE    NA    NA  TRUE  TRUE  TRUE    NA FALSE  TRUE\n [9,]    NA  TRUE    NA    NA    NA    NA  TRUE    NA    NA\n[10,] FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE FALSE    NA    NA  TRUE FALSE    NA  TRUE\n [2,]  TRUE    NA    NA  TRUE    NA  TRUE    NA  TRUE FALSE\n [3,]  TRUE    NA    NA  TRUE FALSE  TRUE    NA  TRUE  TRUE\n [4,]  TRUE    NA  TRUE    NA    NA    NA FALSE FALSE    NA\n [5,] FALSE FALSE FALSE FALSE  TRUE  TRUE    NA    NA FALSE\n [6,]    NA FALSE  TRUE  TRUE  TRUE FALSE  TRUE    NA FALSE\n [7,] FALSE  TRUE  TRUE    NA FALSE  TRUE  TRUE FALSE    NA\n [8,]    NA  TRUE    NA    NA FALSE    NA  TRUE    NA FALSE\n [9,]    NA    NA FALSE    NA    NA FALSE FALSE  TRUE FALSE\n[10,]  TRUE    NA  TRUE FALSE  TRUE    NA  TRUE    NA  TRUE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE    NA    NA FALSE    NA FALSE    NA FALSE\n [2,]    NA FALSE    NA    NA FALSE    NA  TRUE    NA    NA\n [3,] FALSE    NA FALSE  TRUE FALSE    NA    NA    NA    NA\n [4,]  TRUE  TRUE  TRUE    NA  TRUE FALSE    NA  TRUE    NA\n [5,]    NA  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE    NA\n [6,]    NA    NA FALSE  TRUE  TRUE  TRUE    NA    NA    NA\n [7,] FALSE FALSE    NA    NA  TRUE FALSE    NA    NA FALSE\n [8,] FALSE FALSE    NA    NA  TRUE  TRUE    NA FALSE    NA\n [9,]    NA    NA    NA  TRUE    NA  TRUE  TRUE    NA FALSE\n[10,]  TRUE    NA    NA    NA FALSE FALSE    NA  TRUE FALSE"
  },
  {
    "objectID": "man/outer-like functions/bc.b.html#broadcasted-boolean-operations",
    "href": "man/outer-like functions/bc.b.html#broadcasted-boolean-operations",
    "title": "bd.b",
    "section": "",
    "text": "The bc.b() function performs broadcasted Boolean operations on 2 logical (or 32bit integer) arrays.   Please note that these operations will treat the input as Boolean.  Therefore, something like bc.b(1, 2, “==”) returns TRUE, because both 1 and 2 are TRUE when cast as Boolean.  \n\n\n\nbc.b(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable logical (or 32bit integer) arrays.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported Boolean operators: &, |, xor, nand, ==, !=, &lt;, &gt;, &lt;=, &gt;=. \n\n\n\n\n\n\n\nA logical array as a result of the broadcasted Boolean operation.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(TRUE, FALSE, NA), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\nbc.b(x, y, \"&\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA FALSE    NA FALSE    NA    NA  TRUE    NA\n [2,] FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE    NA  TRUE\n [3,]    NA    NA FALSE    NA    NA  TRUE    NA FALSE  TRUE\n [4,]    NA FALSE  TRUE    NA    NA    NA    NA    NA    NA\n [5,]    NA FALSE  TRUE FALSE    NA    NA    NA  TRUE    NA\n [6,]  TRUE  TRUE    NA    NA  TRUE FALSE    NA  TRUE  TRUE\n [7,] FALSE FALSE FALSE    NA FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE    NA    NA    NA FALSE  TRUE FALSE  TRUE    NA\n [9,] FALSE FALSE FALSE  TRUE    NA    NA FALSE FALSE    NA\n[10,] FALSE    NA    NA    NA    NA FALSE  TRUE FALSE    NA\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE FALSE  TRUE    NA FALSE FALSE  TRUE FALSE\n [2,]    NA FALSE    NA    NA  TRUE  TRUE FALSE  TRUE  TRUE\n [3,] FALSE FALSE  TRUE    NA    NA FALSE FALSE FALSE FALSE\n [4,]  TRUE    NA    NA  TRUE FALSE    NA FALSE    NA FALSE\n [5,]  TRUE    NA  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE\n [6,] FALSE    NA    NA  TRUE FALSE  TRUE FALSE  TRUE    NA\n [7,] FALSE    NA    NA  TRUE  TRUE    NA  TRUE    NA    NA\n [8,]  TRUE    NA  TRUE FALSE  TRUE    NA  TRUE    NA  TRUE\n [9,] FALSE    NA    NA FALSE  TRUE    NA    NA  TRUE    NA\n[10,]  TRUE    NA  TRUE    NA FALSE FALSE    NA    NA  TRUE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA    NA  TRUE    NA FALSE  TRUE  TRUE    NA\n [2,]    NA  TRUE FALSE    NA FALSE  TRUE FALSE FALSE FALSE\n [3,]  TRUE    NA  TRUE  TRUE FALSE    NA  TRUE    NA FALSE\n [4,] FALSE FALSE FALSE FALSE    NA    NA  TRUE    NA  TRUE\n [5,]  TRUE FALSE FALSE  TRUE    NA    NA    NA    NA    NA\n [6,] FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE    NA    NA\n [7,] FALSE FALSE  TRUE  TRUE FALSE    NA    NA    NA  TRUE\n [8,] FALSE  TRUE FALSE    NA FALSE  TRUE  TRUE  TRUE FALSE\n [9,] FALSE    NA    NA  TRUE  TRUE    NA  TRUE  TRUE    NA\n[10,] FALSE    NA  TRUE    NA FALSE  TRUE  TRUE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA FALSE FALSE    NA    NA  TRUE FALSE  TRUE\n [2,]    NA    NA    NA  TRUE  TRUE FALSE FALSE FALSE  TRUE\n [3,]    NA    NA  TRUE  TRUE FALSE    NA    NA    NA  TRUE\n [4,]    NA FALSE  TRUE    NA FALSE    NA FALSE    NA  TRUE\n [5,]    NA    NA  TRUE  TRUE  TRUE FALSE  TRUE FALSE    NA\n [6,]  TRUE    NA FALSE  TRUE FALSE    NA    NA FALSE  TRUE\n [7,]    NA FALSE    NA  TRUE FALSE  TRUE FALSE  TRUE FALSE\n [8,]  TRUE    NA  TRUE    NA FALSE    NA    NA    NA    NA\n [9,] FALSE  TRUE    NA  TRUE FALSE    NA    NA  TRUE  TRUE\n[10,]    NA    NA    NA FALSE  TRUE FALSE FALSE FALSE    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA  TRUE FALSE FALSE    NA  TRUE  TRUE\n [2,]    NA FALSE FALSE    NA  TRUE    NA FALSE  TRUE    NA\n [3,] FALSE    NA    NA FALSE  TRUE    NA FALSE  TRUE FALSE\n [4,] FALSE    NA FALSE    NA  TRUE FALSE    NA    NA FALSE\n [5,] FALSE  TRUE  TRUE  TRUE    NA  TRUE    NA  TRUE  TRUE\n [6,] FALSE FALSE FALSE    NA  TRUE FALSE    NA FALSE    NA\n [7,]    NA    NA FALSE    NA    NA    NA FALSE  TRUE  TRUE\n [8,]  TRUE    NA  TRUE FALSE FALSE    NA  TRUE  TRUE FALSE\n [9,]    NA FALSE FALSE    NA    NA  TRUE  TRUE  TRUE FALSE\n[10,]  TRUE  TRUE FALSE FALSE    NA FALSE    NA    NA  TRUE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE\n [2,]    NA FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE    NA\n [3,]  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE    NA\n [4,]    NA    NA FALSE  TRUE    NA    NA FALSE  TRUE  TRUE\n [5,]  TRUE  TRUE FALSE FALSE FALSE    NA    NA    NA  TRUE\n [6,]    NA    NA  TRUE    NA  TRUE  TRUE  TRUE    NA  TRUE\n [7,] FALSE    NA  TRUE    NA  TRUE FALSE FALSE  TRUE    NA\n [8,] FALSE    NA    NA FALSE FALSE FALSE    NA  TRUE FALSE\n [9,]    NA FALSE    NA    NA    NA    NA FALSE    NA    NA\n[10,]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE FALSE  TRUE    NA    NA FALSE  TRUE    NA FALSE\n [2,] FALSE    NA    NA FALSE    NA FALSE    NA FALSE  TRUE\n [3,] FALSE    NA    NA FALSE  TRUE FALSE    NA FALSE FALSE\n [4,] FALSE    NA FALSE    NA    NA    NA  TRUE  TRUE    NA\n [5,]  TRUE  TRUE  TRUE  TRUE FALSE FALSE    NA    NA  TRUE\n [6,]    NA  TRUE FALSE FALSE FALSE  TRUE FALSE    NA  TRUE\n [7,]  TRUE FALSE FALSE    NA  TRUE FALSE FALSE  TRUE    NA\n [8,]    NA FALSE    NA    NA  TRUE    NA FALSE    NA  TRUE\n [9,]    NA    NA  TRUE    NA    NA  TRUE  TRUE FALSE  TRUE\n[10,] FALSE    NA FALSE  TRUE FALSE    NA FALSE    NA FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8] [,9]\n [1,]  TRUE FALSE    NA    NA  TRUE    NA  TRUE    NA TRUE\n [2,]    NA  TRUE    NA    NA  TRUE    NA FALSE    NA   NA\n [3,]  TRUE    NA  TRUE FALSE  TRUE    NA    NA    NA   NA\n [4,] FALSE FALSE FALSE    NA FALSE  TRUE    NA FALSE   NA\n [5,]    NA FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE   NA\n [6,]    NA    NA  TRUE FALSE FALSE FALSE    NA    NA   NA\n [7,]  TRUE  TRUE    NA    NA FALSE  TRUE    NA    NA TRUE\n [8,]  TRUE  TRUE    NA    NA FALSE FALSE    NA  TRUE   NA\n [9,]    NA    NA    NA FALSE    NA FALSE FALSE    NA TRUE\n[10,] FALSE    NA    NA    NA  TRUE  TRUE    NA FALSE TRUE\n\nbc.b(x, y, \"|\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.b(x, y, \"xor\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA  TRUE    NA  TRUE    NA    NA FALSE    NA\n [2,]  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE    NA FALSE\n [3,]    NA    NA  TRUE    NA    NA FALSE    NA  TRUE FALSE\n [4,]    NA  TRUE FALSE    NA    NA    NA    NA    NA    NA\n [5,]    NA  TRUE FALSE  TRUE    NA    NA    NA FALSE    NA\n [6,] FALSE FALSE    NA    NA FALSE  TRUE    NA FALSE FALSE\n [7,]  TRUE  TRUE  TRUE    NA  TRUE  TRUE  TRUE  TRUE  TRUE\n [8,]  TRUE    NA    NA    NA  TRUE FALSE  TRUE FALSE    NA\n [9,]  TRUE  TRUE  TRUE FALSE    NA    NA  TRUE  TRUE    NA\n[10,]  TRUE    NA    NA    NA    NA  TRUE FALSE  TRUE    NA\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE  TRUE FALSE    NA  TRUE  TRUE FALSE  TRUE\n [2,]    NA  TRUE    NA    NA FALSE FALSE  TRUE FALSE FALSE\n [3,]  TRUE  TRUE FALSE    NA    NA  TRUE  TRUE  TRUE  TRUE\n [4,] FALSE    NA    NA FALSE  TRUE    NA  TRUE    NA  TRUE\n [5,] FALSE    NA FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE\n [6,]  TRUE    NA    NA FALSE  TRUE FALSE  TRUE FALSE    NA\n [7,]  TRUE    NA    NA FALSE FALSE    NA FALSE    NA    NA\n [8,] FALSE    NA FALSE  TRUE FALSE    NA FALSE    NA FALSE\n [9,]  TRUE    NA    NA  TRUE FALSE    NA    NA FALSE    NA\n[10,] FALSE    NA FALSE    NA  TRUE  TRUE    NA    NA FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA    NA FALSE    NA  TRUE FALSE FALSE    NA\n [2,]    NA FALSE  TRUE    NA  TRUE FALSE  TRUE  TRUE  TRUE\n [3,] FALSE    NA FALSE FALSE  TRUE    NA FALSE    NA  TRUE\n [4,]  TRUE  TRUE  TRUE  TRUE    NA    NA FALSE    NA FALSE\n [5,] FALSE  TRUE  TRUE FALSE    NA    NA    NA    NA    NA\n [6,]  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE    NA    NA\n [7,]  TRUE  TRUE FALSE FALSE  TRUE    NA    NA    NA FALSE\n [8,]  TRUE FALSE  TRUE    NA  TRUE FALSE FALSE FALSE  TRUE\n [9,]  TRUE    NA    NA FALSE FALSE    NA FALSE FALSE    NA\n[10,]  TRUE    NA FALSE    NA  TRUE FALSE FALSE  TRUE  TRUE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA  TRUE  TRUE    NA    NA FALSE  TRUE FALSE\n [2,]    NA    NA    NA FALSE FALSE  TRUE  TRUE  TRUE FALSE\n [3,]    NA    NA FALSE FALSE  TRUE    NA    NA    NA FALSE\n [4,]    NA  TRUE FALSE    NA  TRUE    NA  TRUE    NA FALSE\n [5,]    NA    NA FALSE FALSE FALSE  TRUE FALSE  TRUE    NA\n [6,] FALSE    NA  TRUE FALSE  TRUE    NA    NA  TRUE FALSE\n [7,]    NA  TRUE    NA FALSE  TRUE FALSE  TRUE FALSE  TRUE\n [8,] FALSE    NA FALSE    NA  TRUE    NA    NA    NA    NA\n [9,]  TRUE FALSE    NA FALSE  TRUE    NA    NA FALSE FALSE\n[10,]    NA    NA    NA  TRUE FALSE  TRUE  TRUE  TRUE    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE    NA FALSE  TRUE  TRUE    NA FALSE FALSE\n [2,]    NA  TRUE  TRUE    NA FALSE    NA  TRUE FALSE    NA\n [3,]  TRUE    NA    NA  TRUE FALSE    NA  TRUE FALSE  TRUE\n [4,]  TRUE    NA  TRUE    NA FALSE  TRUE    NA    NA  TRUE\n [5,]  TRUE FALSE FALSE FALSE    NA FALSE    NA FALSE FALSE\n [6,]  TRUE  TRUE  TRUE    NA FALSE  TRUE    NA  TRUE    NA\n [7,]    NA    NA  TRUE    NA    NA    NA  TRUE FALSE FALSE\n [8,] FALSE    NA FALSE  TRUE  TRUE    NA FALSE FALSE  TRUE\n [9,]    NA  TRUE  TRUE    NA    NA FALSE FALSE FALSE  TRUE\n[10,] FALSE FALSE  TRUE  TRUE    NA  TRUE    NA    NA FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE\n [2,]    NA  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE    NA\n [3,] FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE    NA\n [4,]    NA    NA  TRUE FALSE    NA    NA  TRUE FALSE FALSE\n [5,] FALSE FALSE  TRUE  TRUE  TRUE    NA    NA    NA FALSE\n [6,]    NA    NA FALSE    NA FALSE FALSE FALSE    NA FALSE\n [7,]  TRUE    NA FALSE    NA FALSE  TRUE  TRUE FALSE    NA\n [8,]  TRUE    NA    NA  TRUE  TRUE  TRUE    NA FALSE  TRUE\n [9,]    NA  TRUE    NA    NA    NA    NA  TRUE    NA    NA\n[10,] FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE FALSE    NA    NA  TRUE FALSE    NA  TRUE\n [2,]  TRUE    NA    NA  TRUE    NA  TRUE    NA  TRUE FALSE\n [3,]  TRUE    NA    NA  TRUE FALSE  TRUE    NA  TRUE  TRUE\n [4,]  TRUE    NA  TRUE    NA    NA    NA FALSE FALSE    NA\n [5,] FALSE FALSE FALSE FALSE  TRUE  TRUE    NA    NA FALSE\n [6,]    NA FALSE  TRUE  TRUE  TRUE FALSE  TRUE    NA FALSE\n [7,] FALSE  TRUE  TRUE    NA FALSE  TRUE  TRUE FALSE    NA\n [8,]    NA  TRUE    NA    NA FALSE    NA  TRUE    NA FALSE\n [9,]    NA    NA FALSE    NA    NA FALSE FALSE  TRUE FALSE\n[10,]  TRUE    NA  TRUE FALSE  TRUE    NA  TRUE    NA  TRUE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE    NA    NA FALSE    NA FALSE    NA FALSE\n [2,]    NA FALSE    NA    NA FALSE    NA  TRUE    NA    NA\n [3,] FALSE    NA FALSE  TRUE FALSE    NA    NA    NA    NA\n [4,]  TRUE  TRUE  TRUE    NA  TRUE FALSE    NA  TRUE    NA\n [5,]    NA  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE    NA\n [6,]    NA    NA FALSE  TRUE  TRUE  TRUE    NA    NA    NA\n [7,] FALSE FALSE    NA    NA  TRUE FALSE    NA    NA FALSE\n [8,] FALSE FALSE    NA    NA  TRUE  TRUE    NA FALSE    NA\n [9,]    NA    NA    NA  TRUE    NA  TRUE  TRUE    NA FALSE\n[10,]  TRUE    NA    NA    NA FALSE FALSE    NA  TRUE FALSE\n\nbc.b(x, y, \"nand\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.b(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA FALSE    NA FALSE    NA    NA  TRUE    NA\n [2,] FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE    NA  TRUE\n [3,]    NA    NA FALSE    NA    NA  TRUE    NA FALSE  TRUE\n [4,]    NA FALSE  TRUE    NA    NA    NA    NA    NA    NA\n [5,]    NA FALSE  TRUE FALSE    NA    NA    NA  TRUE    NA\n [6,]  TRUE  TRUE    NA    NA  TRUE FALSE    NA  TRUE  TRUE\n [7,] FALSE FALSE FALSE    NA FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE    NA    NA    NA FALSE  TRUE FALSE  TRUE    NA\n [9,] FALSE FALSE FALSE  TRUE    NA    NA FALSE FALSE    NA\n[10,] FALSE    NA    NA    NA    NA FALSE  TRUE FALSE    NA\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE FALSE  TRUE    NA FALSE FALSE  TRUE FALSE\n [2,]    NA FALSE    NA    NA  TRUE  TRUE FALSE  TRUE  TRUE\n [3,] FALSE FALSE  TRUE    NA    NA FALSE FALSE FALSE FALSE\n [4,]  TRUE    NA    NA  TRUE FALSE    NA FALSE    NA FALSE\n [5,]  TRUE    NA  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE\n [6,] FALSE    NA    NA  TRUE FALSE  TRUE FALSE  TRUE    NA\n [7,] FALSE    NA    NA  TRUE  TRUE    NA  TRUE    NA    NA\n [8,]  TRUE    NA  TRUE FALSE  TRUE    NA  TRUE    NA  TRUE\n [9,] FALSE    NA    NA FALSE  TRUE    NA    NA  TRUE    NA\n[10,]  TRUE    NA  TRUE    NA FALSE FALSE    NA    NA  TRUE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA    NA  TRUE    NA FALSE  TRUE  TRUE    NA\n [2,]    NA  TRUE FALSE    NA FALSE  TRUE FALSE FALSE FALSE\n [3,]  TRUE    NA  TRUE  TRUE FALSE    NA  TRUE    NA FALSE\n [4,] FALSE FALSE FALSE FALSE    NA    NA  TRUE    NA  TRUE\n [5,]  TRUE FALSE FALSE  TRUE    NA    NA    NA    NA    NA\n [6,] FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE    NA    NA\n [7,] FALSE FALSE  TRUE  TRUE FALSE    NA    NA    NA  TRUE\n [8,] FALSE  TRUE FALSE    NA FALSE  TRUE  TRUE  TRUE FALSE\n [9,] FALSE    NA    NA  TRUE  TRUE    NA  TRUE  TRUE    NA\n[10,] FALSE    NA  TRUE    NA FALSE  TRUE  TRUE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA FALSE FALSE    NA    NA  TRUE FALSE  TRUE\n [2,]    NA    NA    NA  TRUE  TRUE FALSE FALSE FALSE  TRUE\n [3,]    NA    NA  TRUE  TRUE FALSE    NA    NA    NA  TRUE\n [4,]    NA FALSE  TRUE    NA FALSE    NA FALSE    NA  TRUE\n [5,]    NA    NA  TRUE  TRUE  TRUE FALSE  TRUE FALSE    NA\n [6,]  TRUE    NA FALSE  TRUE FALSE    NA    NA FALSE  TRUE\n [7,]    NA FALSE    NA  TRUE FALSE  TRUE FALSE  TRUE FALSE\n [8,]  TRUE    NA  TRUE    NA FALSE    NA    NA    NA    NA\n [9,] FALSE  TRUE    NA  TRUE FALSE    NA    NA  TRUE  TRUE\n[10,]    NA    NA    NA FALSE  TRUE FALSE FALSE FALSE    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA  TRUE FALSE FALSE    NA  TRUE  TRUE\n [2,]    NA FALSE FALSE    NA  TRUE    NA FALSE  TRUE    NA\n [3,] FALSE    NA    NA FALSE  TRUE    NA FALSE  TRUE FALSE\n [4,] FALSE    NA FALSE    NA  TRUE FALSE    NA    NA FALSE\n [5,] FALSE  TRUE  TRUE  TRUE    NA  TRUE    NA  TRUE  TRUE\n [6,] FALSE FALSE FALSE    NA  TRUE FALSE    NA FALSE    NA\n [7,]    NA    NA FALSE    NA    NA    NA FALSE  TRUE  TRUE\n [8,]  TRUE    NA  TRUE FALSE FALSE    NA  TRUE  TRUE FALSE\n [9,]    NA FALSE FALSE    NA    NA  TRUE  TRUE  TRUE FALSE\n[10,]  TRUE  TRUE FALSE FALSE    NA FALSE    NA    NA  TRUE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE\n [2,]    NA FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE    NA\n [3,]  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE    NA\n [4,]    NA    NA FALSE  TRUE    NA    NA FALSE  TRUE  TRUE\n [5,]  TRUE  TRUE FALSE FALSE FALSE    NA    NA    NA  TRUE\n [6,]    NA    NA  TRUE    NA  TRUE  TRUE  TRUE    NA  TRUE\n [7,] FALSE    NA  TRUE    NA  TRUE FALSE FALSE  TRUE    NA\n [8,] FALSE    NA    NA FALSE FALSE FALSE    NA  TRUE FALSE\n [9,]    NA FALSE    NA    NA    NA    NA FALSE    NA    NA\n[10,]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE FALSE  TRUE    NA    NA FALSE  TRUE    NA FALSE\n [2,] FALSE    NA    NA FALSE    NA FALSE    NA FALSE  TRUE\n [3,] FALSE    NA    NA FALSE  TRUE FALSE    NA FALSE FALSE\n [4,] FALSE    NA FALSE    NA    NA    NA  TRUE  TRUE    NA\n [5,]  TRUE  TRUE  TRUE  TRUE FALSE FALSE    NA    NA  TRUE\n [6,]    NA  TRUE FALSE FALSE FALSE  TRUE FALSE    NA  TRUE\n [7,]  TRUE FALSE FALSE    NA  TRUE FALSE FALSE  TRUE    NA\n [8,]    NA FALSE    NA    NA  TRUE    NA FALSE    NA  TRUE\n [9,]    NA    NA  TRUE    NA    NA  TRUE  TRUE FALSE  TRUE\n[10,] FALSE    NA FALSE  TRUE FALSE    NA FALSE    NA FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8] [,9]\n [1,]  TRUE FALSE    NA    NA  TRUE    NA  TRUE    NA TRUE\n [2,]    NA  TRUE    NA    NA  TRUE    NA FALSE    NA   NA\n [3,]  TRUE    NA  TRUE FALSE  TRUE    NA    NA    NA   NA\n [4,] FALSE FALSE FALSE    NA FALSE  TRUE    NA FALSE   NA\n [5,]    NA FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE   NA\n [6,]    NA    NA  TRUE FALSE FALSE FALSE    NA    NA   NA\n [7,]  TRUE  TRUE    NA    NA FALSE  TRUE    NA    NA TRUE\n [8,]  TRUE  TRUE    NA    NA FALSE FALSE    NA  TRUE   NA\n [9,]    NA    NA    NA FALSE    NA FALSE FALSE    NA TRUE\n[10,] FALSE    NA    NA    NA  TRUE  TRUE    NA FALSE TRUE\n\nbc.b(x, y, \"!=\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA  TRUE    NA  TRUE    NA    NA FALSE    NA\n [2,]  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE    NA FALSE\n [3,]    NA    NA  TRUE    NA    NA FALSE    NA  TRUE FALSE\n [4,]    NA  TRUE FALSE    NA    NA    NA    NA    NA    NA\n [5,]    NA  TRUE FALSE  TRUE    NA    NA    NA FALSE    NA\n [6,] FALSE FALSE    NA    NA FALSE  TRUE    NA FALSE FALSE\n [7,]  TRUE  TRUE  TRUE    NA  TRUE  TRUE  TRUE  TRUE  TRUE\n [8,]  TRUE    NA    NA    NA  TRUE FALSE  TRUE FALSE    NA\n [9,]  TRUE  TRUE  TRUE FALSE    NA    NA  TRUE  TRUE    NA\n[10,]  TRUE    NA    NA    NA    NA  TRUE FALSE  TRUE    NA\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE  TRUE FALSE    NA  TRUE  TRUE FALSE  TRUE\n [2,]    NA  TRUE    NA    NA FALSE FALSE  TRUE FALSE FALSE\n [3,]  TRUE  TRUE FALSE    NA    NA  TRUE  TRUE  TRUE  TRUE\n [4,] FALSE    NA    NA FALSE  TRUE    NA  TRUE    NA  TRUE\n [5,] FALSE    NA FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE\n [6,]  TRUE    NA    NA FALSE  TRUE FALSE  TRUE FALSE    NA\n [7,]  TRUE    NA    NA FALSE FALSE    NA FALSE    NA    NA\n [8,] FALSE    NA FALSE  TRUE FALSE    NA FALSE    NA FALSE\n [9,]  TRUE    NA    NA  TRUE FALSE    NA    NA FALSE    NA\n[10,] FALSE    NA FALSE    NA  TRUE  TRUE    NA    NA FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA    NA FALSE    NA  TRUE FALSE FALSE    NA\n [2,]    NA FALSE  TRUE    NA  TRUE FALSE  TRUE  TRUE  TRUE\n [3,] FALSE    NA FALSE FALSE  TRUE    NA FALSE    NA  TRUE\n [4,]  TRUE  TRUE  TRUE  TRUE    NA    NA FALSE    NA FALSE\n [5,] FALSE  TRUE  TRUE FALSE    NA    NA    NA    NA    NA\n [6,]  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE    NA    NA\n [7,]  TRUE  TRUE FALSE FALSE  TRUE    NA    NA    NA FALSE\n [8,]  TRUE FALSE  TRUE    NA  TRUE FALSE FALSE FALSE  TRUE\n [9,]  TRUE    NA    NA FALSE FALSE    NA FALSE FALSE    NA\n[10,]  TRUE    NA FALSE    NA  TRUE FALSE FALSE  TRUE  TRUE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA  TRUE  TRUE    NA    NA FALSE  TRUE FALSE\n [2,]    NA    NA    NA FALSE FALSE  TRUE  TRUE  TRUE FALSE\n [3,]    NA    NA FALSE FALSE  TRUE    NA    NA    NA FALSE\n [4,]    NA  TRUE FALSE    NA  TRUE    NA  TRUE    NA FALSE\n [5,]    NA    NA FALSE FALSE FALSE  TRUE FALSE  TRUE    NA\n [6,] FALSE    NA  TRUE FALSE  TRUE    NA    NA  TRUE FALSE\n [7,]    NA  TRUE    NA FALSE  TRUE FALSE  TRUE FALSE  TRUE\n [8,] FALSE    NA FALSE    NA  TRUE    NA    NA    NA    NA\n [9,]  TRUE FALSE    NA FALSE  TRUE    NA    NA FALSE FALSE\n[10,]    NA    NA    NA  TRUE FALSE  TRUE  TRUE  TRUE    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE    NA FALSE  TRUE  TRUE    NA FALSE FALSE\n [2,]    NA  TRUE  TRUE    NA FALSE    NA  TRUE FALSE    NA\n [3,]  TRUE    NA    NA  TRUE FALSE    NA  TRUE FALSE  TRUE\n [4,]  TRUE    NA  TRUE    NA FALSE  TRUE    NA    NA  TRUE\n [5,]  TRUE FALSE FALSE FALSE    NA FALSE    NA FALSE FALSE\n [6,]  TRUE  TRUE  TRUE    NA FALSE  TRUE    NA  TRUE    NA\n [7,]    NA    NA  TRUE    NA    NA    NA  TRUE FALSE FALSE\n [8,] FALSE    NA FALSE  TRUE  TRUE    NA FALSE FALSE  TRUE\n [9,]    NA  TRUE  TRUE    NA    NA FALSE FALSE FALSE  TRUE\n[10,] FALSE FALSE  TRUE  TRUE    NA  TRUE    NA    NA FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE\n [2,]    NA  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE    NA\n [3,] FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE    NA\n [4,]    NA    NA  TRUE FALSE    NA    NA  TRUE FALSE FALSE\n [5,] FALSE FALSE  TRUE  TRUE  TRUE    NA    NA    NA FALSE\n [6,]    NA    NA FALSE    NA FALSE FALSE FALSE    NA FALSE\n [7,]  TRUE    NA FALSE    NA FALSE  TRUE  TRUE FALSE    NA\n [8,]  TRUE    NA    NA  TRUE  TRUE  TRUE    NA FALSE  TRUE\n [9,]    NA  TRUE    NA    NA    NA    NA  TRUE    NA    NA\n[10,] FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE FALSE    NA    NA  TRUE FALSE    NA  TRUE\n [2,]  TRUE    NA    NA  TRUE    NA  TRUE    NA  TRUE FALSE\n [3,]  TRUE    NA    NA  TRUE FALSE  TRUE    NA  TRUE  TRUE\n [4,]  TRUE    NA  TRUE    NA    NA    NA FALSE FALSE    NA\n [5,] FALSE FALSE FALSE FALSE  TRUE  TRUE    NA    NA FALSE\n [6,]    NA FALSE  TRUE  TRUE  TRUE FALSE  TRUE    NA FALSE\n [7,] FALSE  TRUE  TRUE    NA FALSE  TRUE  TRUE FALSE    NA\n [8,]    NA  TRUE    NA    NA FALSE    NA  TRUE    NA FALSE\n [9,]    NA    NA FALSE    NA    NA FALSE FALSE  TRUE FALSE\n[10,]  TRUE    NA  TRUE FALSE  TRUE    NA  TRUE    NA  TRUE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE    NA    NA FALSE    NA FALSE    NA FALSE\n [2,]    NA FALSE    NA    NA FALSE    NA  TRUE    NA    NA\n [3,] FALSE    NA FALSE  TRUE FALSE    NA    NA    NA    NA\n [4,]  TRUE  TRUE  TRUE    NA  TRUE FALSE    NA  TRUE    NA\n [5,]    NA  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE    NA\n [6,]    NA    NA FALSE  TRUE  TRUE  TRUE    NA    NA    NA\n [7,] FALSE FALSE    NA    NA  TRUE FALSE    NA    NA FALSE\n [8,] FALSE FALSE    NA    NA  TRUE  TRUE    NA FALSE    NA\n [9,]    NA    NA    NA  TRUE    NA  TRUE  TRUE    NA FALSE\n[10,]  TRUE    NA    NA    NA FALSE FALSE    NA  TRUE FALSE"
  },
  {
    "objectID": "man/outer-like functions/bc.d.html",
    "href": "man/outer-like functions/bc.d.html",
    "title": "bc.d",
    "section": "",
    "text": "The bc.d() function performs broadcasted decimal numeric operations on 2 numeric or logical arrays.  bc.num() is an alias for bc.d().  \n\n\n\nbc.d(x, y, op, prec = sqrt(.Machine\\$double.eps))\n\nbc.num(x, y, op, prec = sqrt(.Machine\\$double.eps))\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable logical or numeric arrays.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported arithmetic operators: +, -, *, /, ^, pmin, pmax.  Supported relational operators: ==, !=, &lt;, &gt;, &lt;=, &gt;=, d==, d!=, d&lt;, d&gt;, d&lt;=, d&gt;=. \n\n\n\n\nprec\n\n\na single number between 0 and 0.1, giving the machine precision to use.  Only relevant for the following operators:  d==, d!=, d&lt;, d&gt;, d&lt;=, d&gt;=  See the d==, d!=, d&lt;, d&gt;, d&lt;=, d&gt;= operators from the ‘tinycodet’ package for details. \n\n\n\n\n\n\n\nFor arithmetic operators:  A numeric array as a result of the broadcasted decimal arithmetic operation.   For relational operators:  A logical array as a result of the broadcasted decimal relational comparison.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(NA, 1.1:1000.1), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\nbc.d(x, y, \"+\")\n\n, , 1\n\n       [,1]  [,2]   [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 369.1 283.1  216.1 703.1 668.1 640.1 709.1 445.1 324.1\n [2,] 935.1 538.1  746.1 641.1 953.1 428.1 202.1 689.1 631.1\n [3,] 731.1 505.1  794.1 664.1 539.1 483.1 510.1 860.1 963.1\n [4,] 905.1  98.1  407.1 879.1 615.1 961.1 952.1   8.1 728.1\n [5,] 455.1 828.1  905.1 717.1 576.1 751.1 334.1 513.1 461.1\n [6,] 912.1 157.1  417.1  10.1 326.1 266.1 637.1  70.1 108.1\n [7,] 764.1 567.1  828.1  35.1 249.1 979.1 644.1 426.1 341.1\n [8,] 137.1 162.1  864.1 711.1 461.1 784.1 272.1 449.1 724.1\n [9,] 179.1 370.1  947.1 231.1  78.1 414.1 865.1 347.1 268.1\n[10,] 670.1 621.1 1001.1 601.1 131.1 624.1 168.1 473.1 523.1\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]   [,6]  [,7]  [,8]  [,9]\n [1,] 790.1 442.1 510.1 867.1 790.1  763.1 806.1 557.1 823.1\n [2,] 411.1 856.1 542.1 472.1 562.1  995.1  84.1 891.1 520.1\n [3,] 114.1 810.1 623.1 356.1 602.1  141.1 191.1 419.1 792.1\n [4,] 555.1 444.1 777.1 423.1 192.1   33.1 804.1 661.1 957.1\n [5,]  95.1 951.1 318.1 474.1 287.1  404.1 900.1 656.1 362.1\n [6,] 771.1 108.1 245.1 618.1 883.1  255.1 191.1 696.1 246.1\n [7,] 660.1 428.1 454.1 556.1 954.1  440.1 440.1 141.1 928.1\n [8,] 403.1 291.1 450.1 465.1  54.1  322.1 699.1 399.1  34.1\n [9,]  75.1 124.1 167.1 247.1 223.1   68.1 346.1  77.1 994.1\n[10,] 145.1 620.1 625.1 166.1 334.1 1007.1 364.1 793.1 704.1\n\n, , 3\n\n       [,1]   [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 591.1  638.1 730.1 943.1 410.1 629.1 913.1 436.1 194.1\n [2,] 865.1  457.1  77.1 678.1 766.1  17.1 702.1 624.1 588.1\n [3,] 572.1   75.1 244.1 443.1  55.1 178.1 131.1 997.1 970.1\n [4,] 918.1 1004.1 740.1 617.1 288.1 161.1 974.1 715.1  20.1\n [5,] 496.1  865.1 872.1 197.1 889.1 957.1 698.1 141.1 183.1\n [6,] 130.1  639.1 149.1  58.1 535.1 407.1 468.1 394.1 965.1\n [7,] 256.1  321.1 646.1 674.1 882.1 457.1 350.1 956.1 654.1\n [8,] 389.1  973.1 203.1 683.1 841.1 194.1 416.1 999.1 247.1\n [9,] 229.1  638.1 751.1  54.1 692.1 463.1  59.1 886.1 721.1\n[10,] 297.1  407.1 571.1 539.1 767.1 734.1 181.1 167.1 609.1\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 934.1 968.1 864.1 828.1 403.1 558.1 113.1 584.1 306.1\n [2,] 363.1 741.1  91.1 634.1 159.1 139.1 321.1 393.1   5.1\n [3,] 340.1 957.1 322.1 249.1 159.1 421.1 714.1 685.1 732.1\n [4,] 608.1 820.1 757.1 266.1 709.1  18.1 543.1 317.1 161.1\n [5,] 938.1 235.1 530.1 826.1  57.1 449.1 610.1 225.1 706.1\n [6,] 939.1 577.1  44.1 929.1 868.1 547.1 661.1 714.1 252.1\n [7,] 326.1 489.1 717.1 893.1 809.1 624.1 190.1  51.1 241.1\n [8,] 139.1 779.1  51.1 837.1 861.1 675.1 520.1 310.1 485.1\n [9,] 110.1 900.1 128.1 866.1 716.1  70.1 467.1 257.1 107.1\n[10,] 926.1 330.1 981.1 944.1 993.1  62.1 548.1 750.1  49.1\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]   [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 741.1 337.1 261.1 237.1  934.1 291.1 949.1 593.1  20.1\n [2,] 893.1 300.1 931.1 550.1  114.1 969.1 679.1 513.1  17.1\n [3,] 884.1 648.1 855.1 259.1  981.1  55.1 852.1   9.1 309.1\n [4,] 723.1 236.1 464.1 207.1  216.1 405.1 103.1 307.1 419.1\n [5,] 621.1 418.1 743.1 281.1  881.1 261.1 146.1 359.1 493.1\n [6,] 176.1 407.1 117.1 933.1  829.1  64.1 673.1 652.1 741.1\n [7,]  10.1 721.1 515.1 292.1  686.1 959.1 897.1 868.1 289.1\n [8,]  17.1 399.1 391.1 512.1  570.1 272.1 266.1 281.1 782.1\n [9,] 943.1 766.1 358.1 294.1 1000.1 179.1 709.1 428.1 544.1\n[10,] 632.1 754.1 227.1 331.1   20.1 938.1 723.1 198.1 514.1\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  37.1 238.1 288.1 212.1 904.1 482.1 570.1 771.1 838.1\n [2,] 640.1 240.1 690.1 932.1 787.1 879.1 168.1 756.1 715.1\n [3,] 772.1 958.1 939.1 900.1 363.1 710.1 230.1 629.1 779.1\n [4,] 789.1 814.1 405.1 136.1 223.1 414.1 683.1 663.1 452.1\n [5,]  58.1 808.1 429.1 647.1 665.1 428.1 868.1 987.1 384.1\n [6,] 918.1 686.1 923.1 442.1 116.1 301.1 901.1 308.1 956.1\n [7,] 557.1 676.1 320.1 613.1  12.1 551.1 781.1 221.1 784.1\n [8,] 640.1 817.1 392.1 409.1 328.1  31.1 800.1 396.1  41.1\n [9,] 211.1 857.1 329.1 813.1 253.1 534.1 168.1  10.1 423.1\n[10,] 553.1  88.1 390.1 339.1 462.1 266.1 117.1 550.1 324.1\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]   [,9]\n [1,] 606.1 629.1 122.1 253.1 540.1 359.1 174.1 258.1  945.1\n [2,] 484.1 444.1 783.1  63.1 202.1 706.1 551.1 990.1  293.1\n [3,] 609.1 597.1 480.1 593.1 346.1 652.1 537.1 310.1  256.1\n [4,] 732.1 249.1 313.1 154.1 250.1 392.1 623.1 400.1 1000.1\n [5,] 804.1 897.1 822.1 406.1 353.1 777.1 119.1 920.1  369.1\n [6,] 912.1 870.1 834.1 858.1 582.1 616.1 184.1 982.1  378.1\n [7,] 797.1 443.1 356.1 677.1 845.1 882.1 395.1 758.1  382.1\n [8,] 184.1 928.1 181.1 127.1 612.1 569.1 902.1 176.1  700.1\n [9,] 728.1 630.1 961.1 551.1 260.1 133.1 542.1 424.1  318.1\n[10,] 887.1 304.1 598.1 536.1  48.1  62.1 279.1 561.1  402.1\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 951.1 845.1 579.1 556.1 986.1 654.1 532.1  69.1 783.1\n [2,] 302.1 604.1  37.1 472.1 237.1 949.1 391.1 848.1 246.1\n [3,] 859.1 151.1  33.1 575.1 356.1 164.1 668.1 292.1 305.1\n [4,] 652.1 172.1 896.1 670.1 918.1 702.1 680.1 262.1 543.1\n [5,] 207.1 748.1 763.1 399.1 441.1  85.1 213.1 208.1 214.1\n [6,] 851.1 450.1 546.1  32.1 989.1 155.1 131.1 419.1 556.1\n [7,] 472.1 592.1 170.1  49.1 636.1 161.1 729.1 237.1 211.1\n [8,] 144.1 560.1 524.1 802.1 996.1 238.1  10.1 577.1 859.1\n [9,] 224.1 487.1 305.1 314.1 488.1 708.1 664.1 129.1 858.1\n[10,]  66.1 242.1 305.1 357.1 475.1 194.1 512.1 693.1 112.1\n\nbc.d(x, y, \"-\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 367.1 281.1 214.1 701.1 666.1 638.1 707.1 443.1 322.1\n [2,] 931.1 534.1 742.1 637.1 949.1 424.1 198.1 685.1 627.1\n [3,] 725.1 499.1 788.1 658.1 533.1 477.1 504.1 854.1 957.1\n [4,] 897.1  90.1 399.1 871.1 607.1 953.1 944.1   0.1 720.1\n [5,] 445.1 818.1 895.1 707.1 566.1 741.1 324.1 503.1 451.1\n [6,] 900.1 145.1 405.1  -1.9 314.1 254.1 625.1  58.1  96.1\n [7,] 750.1 553.1 814.1  21.1 235.1 965.1 630.1 412.1 327.1\n [8,] 121.1 146.1 848.1 695.1 445.1 768.1 256.1 433.1 708.1\n [9,] 161.1 352.1 929.1 213.1  60.1 396.1 847.1 329.1 250.1\n[10,] 650.1 601.1 981.1 581.1 111.1 604.1 148.1 453.1 503.1\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 788.1 440.1 508.1 865.1 788.1 761.1 804.1 555.1 821.1\n [2,] 407.1 852.1 538.1 468.1 558.1 991.1  80.1 887.1 516.1\n [3,] 108.1 804.1 617.1 350.1 596.1 135.1 185.1 413.1 786.1\n [4,] 547.1 436.1 769.1 415.1 184.1  25.1 796.1 653.1 949.1\n [5,]  85.1 941.1 308.1 464.1 277.1 394.1 890.1 646.1 352.1\n [6,] 759.1  96.1 233.1 606.1 871.1 243.1 179.1 684.1 234.1\n [7,] 646.1 414.1 440.1 542.1 940.1 426.1 426.1 127.1 914.1\n [8,] 387.1 275.1 434.1 449.1  38.1 306.1 683.1 383.1  18.1\n [9,]  57.1 106.1 149.1 229.1 205.1  50.1 328.1  59.1 976.1\n[10,] 125.1 600.1 605.1 146.1 314.1 987.1 344.1 773.1 684.1\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 589.1 636.1 728.1 941.1 408.1 627.1 911.1 434.1 192.1\n [2,] 861.1 453.1  73.1 674.1 762.1  13.1 698.1 620.1 584.1\n [3,] 566.1  69.1 238.1 437.1  49.1 172.1 125.1 991.1 964.1\n [4,] 910.1 996.1 732.1 609.1 280.1 153.1 966.1 707.1  12.1\n [5,] 486.1 855.1 862.1 187.1 879.1 947.1 688.1 131.1 173.1\n [6,] 118.1 627.1 137.1  46.1 523.1 395.1 456.1 382.1 953.1\n [7,] 242.1 307.1 632.1 660.1 868.1 443.1 336.1 942.1 640.1\n [8,] 373.1 957.1 187.1 667.1 825.1 178.1 400.1 983.1 231.1\n [9,] 211.1 620.1 733.1  36.1 674.1 445.1  41.1 868.1 703.1\n[10,] 277.1 387.1 551.1 519.1 747.1 714.1 161.1 147.1 589.1\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 932.1 966.1 862.1 826.1 401.1 556.1 111.1 582.1 304.1\n [2,] 359.1 737.1  87.1 630.1 155.1 135.1 317.1 389.1   1.1\n [3,] 334.1 951.1 316.1 243.1 153.1 415.1 708.1 679.1 726.1\n [4,] 600.1 812.1 749.1 258.1 701.1  10.1 535.1 309.1 153.1\n [5,] 928.1 225.1 520.1 816.1  47.1 439.1 600.1 215.1 696.1\n [6,] 927.1 565.1  32.1 917.1 856.1 535.1 649.1 702.1 240.1\n [7,] 312.1 475.1 703.1 879.1 795.1 610.1 176.1  37.1 227.1\n [8,] 123.1 763.1  35.1 821.1 845.1 659.1 504.1 294.1 469.1\n [9,]  92.1 882.1 110.1 848.1 698.1  52.1 449.1 239.1  89.1\n[10,] 906.1 310.1 961.1 924.1 973.1  42.1 528.1 730.1  29.1\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 739.1 335.1 259.1 235.1 932.1 289.1 947.1 591.1  18.1\n [2,] 889.1 296.1 927.1 546.1 110.1 965.1 675.1 509.1  13.1\n [3,] 878.1 642.1 849.1 253.1 975.1  49.1 846.1   3.1 303.1\n [4,] 715.1 228.1 456.1 199.1 208.1 397.1  95.1 299.1 411.1\n [5,] 611.1 408.1 733.1 271.1 871.1 251.1 136.1 349.1 483.1\n [6,] 164.1 395.1 105.1 921.1 817.1  52.1 661.1 640.1 729.1\n [7,]  -3.9 707.1 501.1 278.1 672.1 945.1 883.1 854.1 275.1\n [8,]   1.1 383.1 375.1 496.1 554.1 256.1 250.1 265.1 766.1\n [9,] 925.1 748.1 340.1 276.1 982.1 161.1 691.1 410.1 526.1\n[10,] 612.1 734.1 207.1 311.1   0.1 918.1 703.1 178.1 494.1\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  35.1 236.1 286.1 210.1 902.1 480.1 568.1 769.1 836.1\n [2,] 636.1 236.1 686.1 928.1 783.1 875.1 164.1 752.1 711.1\n [3,] 766.1 952.1 933.1 894.1 357.1 704.1 224.1 623.1 773.1\n [4,] 781.1 806.1 397.1 128.1 215.1 406.1 675.1 655.1 444.1\n [5,]  48.1 798.1 419.1 637.1 655.1 418.1 858.1 977.1 374.1\n [6,] 906.1 674.1 911.1 430.1 104.1 289.1 889.1 296.1 944.1\n [7,] 543.1 662.1 306.1 599.1  -1.9 537.1 767.1 207.1 770.1\n [8,] 624.1 801.1 376.1 393.1 312.1  15.1 784.1 380.1  25.1\n [9,] 193.1 839.1 311.1 795.1 235.1 516.1 150.1  -7.9 405.1\n[10,] 533.1  68.1 370.1 319.1 442.1 246.1  97.1 530.1 304.1\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 604.1 627.1 120.1 251.1 538.1 357.1 172.1 256.1 943.1\n [2,] 480.1 440.1 779.1  59.1 198.1 702.1 547.1 986.1 289.1\n [3,] 603.1 591.1 474.1 587.1 340.1 646.1 531.1 304.1 250.1\n [4,] 724.1 241.1 305.1 146.1 242.1 384.1 615.1 392.1 992.1\n [5,] 794.1 887.1 812.1 396.1 343.1 767.1 109.1 910.1 359.1\n [6,] 900.1 858.1 822.1 846.1 570.1 604.1 172.1 970.1 366.1\n [7,] 783.1 429.1 342.1 663.1 831.1 868.1 381.1 744.1 368.1\n [8,] 168.1 912.1 165.1 111.1 596.1 553.1 886.1 160.1 684.1\n [9,] 710.1 612.1 943.1 533.1 242.1 115.1 524.1 406.1 300.1\n[10,] 867.1 284.1 578.1 516.1  28.1  42.1 259.1 541.1 382.1\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 949.1 843.1 577.1 554.1 984.1 652.1 530.1  67.1 781.1\n [2,] 298.1 600.1  33.1 468.1 233.1 945.1 387.1 844.1 242.1\n [3,] 853.1 145.1  27.1 569.1 350.1 158.1 662.1 286.1 299.1\n [4,] 644.1 164.1 888.1 662.1 910.1 694.1 672.1 254.1 535.1\n [5,] 197.1 738.1 753.1 389.1 431.1  75.1 203.1 198.1 204.1\n [6,] 839.1 438.1 534.1  20.1 977.1 143.1 119.1 407.1 544.1\n [7,] 458.1 578.1 156.1  35.1 622.1 147.1 715.1 223.1 197.1\n [8,] 128.1 544.1 508.1 786.1 980.1 222.1  -5.9 561.1 843.1\n [9,] 206.1 469.1 287.1 296.1 470.1 690.1 646.1 111.1 840.1\n[10,]  46.1 222.1 285.1 337.1 455.1 174.1 492.1 673.1  92.1\n\nbc.d(x, y, \"*\")\n\n, , 1\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  368.1  282.1  215.1  702.1  667.1  639.1  708.1  444.1  323.1\n [2,] 1866.2 1072.2 1488.2 1278.2 1902.2  852.2  400.2 1374.2 1258.2\n [3,] 2184.3 1506.3 2373.3 1983.3 1608.3 1440.3 1521.3 2571.3 2880.3\n [4,] 3604.4  376.4 1612.4 3500.4 2444.4 3828.4 3792.4   16.4 2896.4\n [5,] 2250.5 4115.5 4500.5 3560.5 2855.5 3730.5 1645.5 2540.5 2280.5\n [6,] 5436.6  906.6 2466.6   24.6 1920.6 1560.6 3786.6  384.6  612.6\n [7,] 5299.7 3920.7 5747.7  196.7 1694.7 6804.7 4459.7 2933.7 2338.7\n [8,] 1032.8 1232.8 6848.8 5624.8 3624.8 6208.8 2112.8 3528.8 5728.8\n [9,] 1530.9 3249.9 8442.9 1998.9  621.9 3645.9 7704.9 3042.9 2331.9\n[10,] 6601.0 6111.0 9911.0 5911.0 1211.0 6141.0 1581.0 4631.0 5131.0\n\n, , 2\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  789.1  441.1  509.1  866.1  789.1  762.1  805.1  556.1  822.1\n [2,]  818.2 1708.2 1080.2  940.2 1120.2 1986.2  164.2 1778.2 1036.2\n [3,]  333.3 2421.3 1860.3 1059.3 1797.3  414.3  564.3 1248.3 2367.3\n [4,] 2204.4 1760.4 3092.4 1676.4  752.4  116.4 3200.4 2628.4 3812.4\n [5,]  450.5 4730.5 1565.5 2345.5 1410.5 1995.5 4475.5 3255.5 1785.5\n [6,] 4590.6  612.6 1434.6 3672.6 5262.6 1494.6 1110.6 4140.6 1440.6\n [7,] 4571.7 2947.7 3129.7 3843.7 6629.7 3031.7 3031.7  938.7 6447.7\n [8,] 3160.8 2264.8 3536.8 3656.8  368.8 2512.8 5528.8 3128.8  208.8\n [9,]  594.9 1035.9 1422.9 2142.9 1926.9  531.9 3033.9  612.9 8865.9\n[10,] 1351.0 6101.0 6151.0 1561.0 3241.0 9971.0 3541.0 7831.0 6941.0\n\n, , 3\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  590.1  637.1  729.1  942.1  409.1  628.1  912.1  435.1  193.1\n [2,] 1726.2  910.2  150.2 1352.2 1528.2   30.2 1400.2 1244.2 1172.2\n [3,] 1707.3  216.3  723.3 1320.3  156.3  525.3  384.3 2982.3 2901.3\n [4,] 3656.4 4000.4 2944.4 2452.4 1136.4  628.4 3880.4 2844.4   64.4\n [5,] 2455.5 4300.5 4335.5  960.5 4420.5 4760.5 3465.5  680.5  890.5\n [6,]  744.6 3798.6  858.6  312.6 3174.6 2406.6 2772.6 2328.6 5754.6\n [7,] 1743.7 2198.7 4473.7 4669.7 6125.7 3150.7 2401.7 6643.7 4529.7\n [8,] 3048.8 7720.8 1560.8 5400.8 6664.8 1488.8 3264.8 7928.8 1912.8\n [9,] 1980.9 5661.9 6678.9  405.9 6147.9 4086.9  450.9 7893.9 6408.9\n[10,] 2871.0 3971.0 5611.0 5291.0 7571.0 7241.0 1711.0 1571.0 5991.0\n\n, , 4\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  933.1  967.1  863.1  827.1  402.1  557.1  112.1  583.1  305.1\n [2,]  722.2 1478.2  178.2 1264.2  314.2  274.2  638.2  782.2    6.2\n [3,] 1011.3 2862.3  957.3  738.3  468.3 1254.3 2133.3 2046.3 2187.3\n [4,] 2416.4 3264.4 3012.4 1048.4 2820.4   56.4 2156.4 1252.4  628.4\n [5,] 4665.5 1150.5 2625.5 4105.5  260.5 2220.5 3025.5 1100.5 3505.5\n [6,] 5598.6 3426.6  228.6 5538.6 5172.6 3246.6 3930.6 4248.6 1476.6\n [7,] 2233.7 3374.7 4970.7 6202.7 5614.7 4319.7 1281.7  308.7 1638.7\n [8,] 1048.8 6168.8  344.8 6632.8 6824.8 5336.8 4096.8 2416.8 3816.8\n [9,]  909.9 8019.9 1071.9 7713.9 6363.9  549.9 4122.9 2232.9  882.9\n[10,] 9161.0 3201.0 9711.0 9341.0 9831.0  521.0 5381.0 7401.0  391.0\n\n, , 5\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  740.1  336.1  260.1  236.1  933.1  290.1  948.1  592.1   19.1\n [2,] 1782.2  596.2 1858.2 1096.2  224.2 1934.2 1354.2 1022.2   30.2\n [3,] 2643.3 1935.3 2556.3  768.3 2934.3  156.3 2547.3   18.3  918.3\n [4,] 2876.4  928.4 1840.4  812.4  848.4 1604.4  396.4 1212.4 1660.4\n [5,] 3080.5 2065.5 3690.5 1380.5 4380.5 1280.5  705.5 1770.5 2440.5\n [6,] 1020.6 2406.6  666.6 5562.6 4938.6  348.6 4002.6 3876.6 4410.6\n [7,]   21.7 4998.7 3556.7 1995.7 4753.7 6664.7 6230.7 6027.7 1974.7\n [8,]   72.8 3128.8 3064.8 4032.8 4496.8 2112.8 2064.8 2184.8 6192.8\n [9,] 8406.9 6813.9 3141.9 2565.9 8919.9 1530.9 6300.9 3771.9 4815.9\n[10,] 6221.0 7441.0 2171.0 3211.0  101.0 9281.0 7131.0 1881.0 5041.0\n\n, , 6\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]   36.1  237.1  287.1  211.1  903.1  481.1  569.1  770.1  837.1\n [2,] 1276.2  476.2 1376.2 1860.2 1570.2 1754.2  332.2 1508.2 1426.2\n [3,] 2307.3 2865.3 2808.3 2691.3 1080.3 2121.3  681.3 1878.3 2328.3\n [4,] 3140.4 3240.4 1604.4  528.4  876.4 1640.4 2716.4 2636.4 1792.4\n [5,]  265.5 4015.5 2120.5 3210.5 3300.5 2115.5 4315.5 4910.5 1895.5\n [6,] 5472.6 4080.6 5502.6 2616.6  660.6 1770.6 5370.6 1812.6 5700.6\n [7,] 3850.7 4683.7 2191.7 4242.7   35.7 3808.7 5418.7 1498.7 5439.7\n [8,] 5056.8 6472.8 3072.8 3208.8 2560.8  184.8 6336.8 3104.8  264.8\n [9,] 1818.9 7632.9 2880.9 7236.9 2196.9 4725.9 1431.9    9.9 3726.9\n[10,] 5431.0  781.0 3801.0 3291.0 4521.0 2561.0 1071.0 5401.0 3141.0\n\n, , 7\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  605.1  628.1  121.1  252.1  539.1  358.1  173.1  257.1  944.1\n [2,]  964.2  884.2 1562.2  122.2  400.2 1408.2 1098.2 1976.2  582.2\n [3,] 1818.3 1782.3 1431.3 1770.3 1029.3 1947.3 1602.3  921.3  759.3\n [4,] 2912.4  980.4 1236.4  600.4  984.4 1552.4 2476.4 1584.4 3984.4\n [5,] 3995.5 4460.5 4085.5 2005.5 1740.5 3860.5  570.5 4575.5 1820.5\n [6,] 5436.6 5184.6 4968.6 5112.6 3456.6 3660.6 1068.6 5856.6 2232.6\n [7,] 5530.7 3052.7 2443.7 4690.7 5866.7 6125.7 2716.7 5257.7 2625.7\n [8,] 1408.8 7360.8 1384.8  952.8 4832.8 4488.8 7152.8 1344.8 5536.8\n [9,] 6471.9 5589.9 8568.9 4878.9 2259.9 1116.9 4797.9 3735.9 2781.9\n[10,] 8771.0 2941.0 5881.0 5261.0  381.0  521.0 2691.0 5511.0 3921.0\n\n, , 8\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  950.1  844.1  578.1  555.1  985.1  653.1  531.1   68.1  782.1\n [2,]  600.2 1204.2   70.2  940.2  470.2 1894.2  778.2 1692.2  488.2\n [3,] 2568.3  444.3   90.3 1716.3 1059.3  483.3 1995.3  867.3  906.3\n [4,] 2592.4  672.4 3568.4 2664.4 3656.4 2792.4 2704.4 1032.4 2156.4\n [5,] 1010.5 3715.5 3790.5 1970.5 2180.5  400.5 1040.5 1015.5 1045.5\n [6,] 5070.6 2664.6 3240.6  156.6 5898.6  894.6  750.6 2478.6 3300.6\n [7,] 3255.7 4095.7 1141.7  294.7 4403.7 1078.7 5054.7 1610.7 1428.7\n [8,] 1088.8 4416.8 4128.8 6352.8 7904.8 1840.8   16.8 4552.8 6808.8\n [9,] 1935.9 4302.9 2664.9 2745.9 4311.9 6291.9 5895.9 1080.9 7641.9\n[10,]  561.0 2321.0 2951.0 3471.0 4651.0 1841.0 5021.0 6831.0 1021.0\n\nbc.d(x, y, \"/\")\n\n, , 1\n\n          [,1]      [,2]      [,3]        [,4]       [,5]      [,6]      [,7]\n [1,] 368.1000 282.10000 215.10000 702.1000000 667.100000 639.10000 708.10000\n [2,] 466.5500 268.05000 372.05000 319.5500000 475.550000 213.05000 100.05000\n [3,] 242.7000 167.36667 263.70000 220.3666667 178.700000 160.03333 169.03333\n [4,] 225.2750  23.52500 100.77500 218.7750000 152.775000 239.27500 237.02500\n [5,]  90.0200 164.62000 180.02000 142.4200000 114.220000 149.22000  65.82000\n [6,] 151.0167  25.18333  68.51667   0.6833333  53.350000  43.35000 105.18333\n [7,] 108.1571  80.01429 117.30000   4.0142857  34.585714 138.87143  91.01429\n [8,]  16.1375  19.26250 107.01250  87.8875000  56.637500  97.01250  33.01250\n [9,]  18.9000  40.12222 104.23333  24.6777778   7.677778  45.01111  95.12222\n[10,]  66.0100  61.11000  99.11000  59.1100000  12.110000  61.41000  15.81000\n           [,8]      [,9]\n [1,] 444.10000 323.10000\n [2,] 343.55000 314.55000\n [3,] 285.70000 320.03333\n [4,]   1.02500 181.02500\n [5,] 101.62000  91.22000\n [6,]  10.68333  17.01667\n [7,]  59.87143  47.72857\n [8,]  55.13750  89.51250\n [9,]  37.56667  28.78889\n[10,]  46.31000  51.31000\n\n, , 2\n\n            [,1]      [,2]      [,3]      [,4]      [,5]       [,6]      [,7]\n [1,] 789.100000 441.10000 509.10000 866.10000 789.10000 762.100000 805.10000\n [2,] 204.550000 427.05000 270.05000 235.05000 280.05000 496.550000  41.05000\n [3,]  37.033333 269.03333 206.70000 117.70000 199.70000  46.033333  62.70000\n [4,] 137.775000 110.02500 193.27500 104.77500  47.02500   7.275000 200.02500\n [5,]  18.020000 189.22000  62.62000  93.82000  56.42000  79.820000 179.02000\n [6,] 127.516667  17.01667  39.85000 102.01667 146.18333  41.516667  30.85000\n [7,]  93.300000  60.15714  63.87143  78.44286 135.30000  61.871429  61.87143\n [8,]  49.387500  35.38750  55.26250  57.13750   5.76250  39.262500  86.38750\n [9,]   7.344444  12.78889  17.56667  26.45556  23.78889   6.566667  37.45556\n[10,]  13.510000  61.01000  61.51000  15.61000  32.41000  99.710000  35.41000\n            [,8]      [,9]\n [1,] 556.100000 822.10000\n [2,] 444.550000 259.05000\n [3,] 138.700000 263.03333\n [4,] 164.275000 238.27500\n [5,] 130.220000  71.42000\n [6,] 115.016667  40.01667\n [7,]  19.157143 131.58571\n [8,]  48.887500   3.26250\n [9,]   7.566667 109.45556\n[10,]  78.310000  69.41000\n\n, , 3\n\n           [,1]      [,2]      [,3]       [,4]      [,5]      [,6]       [,7]\n [1,] 590.10000 637.10000 729.10000 942.100000 409.10000 628.10000 912.100000\n [2,] 431.55000 227.55000  37.55000 338.050000 382.05000   7.55000 350.050000\n [3,] 189.70000  24.03333  80.36667 146.700000  17.36667  58.36667  42.700000\n [4,] 228.52500 250.02500 184.02500 153.275000  71.02500  39.27500 242.525000\n [5,]  98.22000 172.02000 173.42000  38.420000 176.82000 190.42000 138.620000\n [6,]  20.68333 105.51667  23.85000   8.683333  88.18333  66.85000  77.016667\n [7,]  35.58571  44.87143  91.30000  95.300000 125.01429  64.30000  49.014286\n [8,]  47.63750 120.63750  24.38750  84.387500 104.13750  23.26250  51.012500\n [9,]  24.45556  69.90000  82.45556   5.011111  75.90000  50.45556   5.566667\n[10,]  28.71000  39.71000  56.11000  52.910000  75.71000  72.41000  17.110000\n           [,8]      [,9]\n [1,] 435.10000 193.10000\n [2,] 311.05000 293.05000\n [3,] 331.36667 322.36667\n [4,] 177.77500   4.02500\n [5,]  27.22000  35.62000\n [6,]  64.68333 159.85000\n [7,] 135.58571  92.44286\n [8,] 123.88750  29.88750\n [9,]  97.45556  79.12222\n[10,]  15.71000  59.91000\n\n, , 4\n\n           [,1]      [,2]      [,3]      [,4]      [,5]       [,6]      [,7]\n [1,] 933.10000 967.10000 863.10000 827.10000 402.10000 557.100000 112.10000\n [2,] 180.55000 369.55000  44.55000 316.05000  78.55000  68.550000 159.55000\n [3,] 112.36667 318.03333 106.36667  82.03333  52.03333 139.366667 237.03333\n [4,] 151.02500 204.02500 188.27500  65.52500 176.27500   3.525000 134.77500\n [5,] 186.62000  46.02000 105.02000 164.22000  10.42000  88.820000 121.02000\n [6,] 155.51667  95.18333   6.35000 153.85000 143.68333  90.183333 109.18333\n [7,]  45.58571  68.87143 101.44286 126.58571 114.58571  88.157143  26.15714\n [8,]  16.38750  96.38750   5.38750 103.63750 106.63750  83.387500  64.01250\n [9,]  11.23333  99.01111  13.23333  95.23333  78.56667   6.788889  50.90000\n[10,]  91.61000  32.01000  97.11000  93.41000  98.31000   5.210000  53.81000\n           [,8]      [,9]\n [1,] 583.10000 305.10000\n [2,] 195.55000   1.55000\n [3,] 227.36667 243.03333\n [4,]  78.27500  39.27500\n [5,]  44.02000 140.22000\n [6,] 118.01667  41.01667\n [7,]   6.30000  33.44286\n [8,]  37.76250  59.63750\n [9,]  27.56667  10.90000\n[10,]  74.01000   3.91000\n\n, , 5\n\n             [,1]      [,2]      [,3]      [,4]      [,5]       [,6]      [,7]\n [1,] 740.1000000 336.10000 260.10000 236.10000 933.10000 290.100000 948.10000\n [2,] 445.5500000 149.05000 464.55000 274.05000  56.05000 483.550000 338.55000\n [3,] 293.7000000 215.03333 284.03333  85.36667 326.03333  17.366667 283.03333\n [4,] 179.7750000  58.02500 115.02500  50.77500  53.02500 100.275000  24.77500\n [5,] 123.2200000  82.62000 147.62000  55.22000 175.22000  51.220000  28.22000\n [6,]  28.3500000  66.85000  18.51667 154.51667 137.18333   9.683333 111.18333\n [7,]   0.4428571 102.01429  72.58571  40.72857  97.01429 136.014286 127.15714\n [8,]   1.1375000  48.88750  47.88750  63.01250  70.26250  33.012500  32.26250\n [9,] 103.7888889  84.12222  38.78889  31.67778 110.12222  18.900000  77.78889\n[10,]  62.2100000  74.41000  21.71000  32.11000   1.01000  92.810000  71.31000\n            [,8]      [,9]\n [1,] 592.100000  19.10000\n [2,] 255.550000   7.55000\n [3,]   2.033333 102.03333\n [4,]  75.775000 103.77500\n [5,]  70.820000  97.62000\n [6,] 107.683333 122.51667\n [7,] 123.014286  40.30000\n [8,]  34.137500  96.76250\n [9,]  46.566667  59.45556\n[10,]  18.810000  50.41000\n\n, , 6\n\n           [,1]      [,2]      [,3]      [,4]        [,5]      [,6]      [,7]\n [1,]  36.10000 237.10000 287.10000 211.10000 903.1000000 481.10000 569.10000\n [2,] 319.05000 119.05000 344.05000 465.05000 392.5500000 438.55000  83.05000\n [3,] 256.36667 318.36667 312.03333 299.03333 120.0333333 235.70000  75.70000\n [4,] 196.27500 202.52500 100.27500  33.02500  54.7750000 102.52500 169.77500\n [5,]  10.62000 160.62000  84.82000 128.42000 132.0200000  84.62000 172.62000\n [6,] 152.01667 113.35000 152.85000  72.68333  18.3500000  49.18333 149.18333\n [7,]  78.58571  95.58571  44.72857  86.58571   0.7285714  77.72857 110.58571\n [8,]  79.01250 101.13750  48.01250  50.13750  40.0125000   2.88750  99.01250\n [9,]  22.45556  94.23333  35.56667  89.34444  27.1222222  58.34444  17.67778\n[10,]  54.31000   7.81000  38.01000  32.91000  45.2100000  25.61000  10.71000\n             [,8]      [,9]\n [1,] 770.1000000 837.10000\n [2,] 377.0500000 356.55000\n [3,] 208.7000000 258.70000\n [4,] 164.7750000 112.02500\n [5,] 196.4200000  75.82000\n [6,]  50.3500000 158.35000\n [7,]  30.5857143 111.01429\n [8,]  48.5125000   4.13750\n [9,]   0.1222222  46.01111\n[10,]  54.0100000  31.41000\n\n, , 7\n\n          [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]\n [1,] 605.1000 628.10000 121.10000 252.10000 539.10000 358.10000 173.10000\n [2,] 241.0500 221.05000 390.55000  30.55000 100.05000 352.05000 274.55000\n [3,] 202.0333 198.03333 159.03333 196.70000 114.36667 216.36667 178.03333\n [4,] 182.0250  61.27500  77.27500  37.52500  61.52500  97.02500 154.77500\n [5,] 159.8200 178.42000 163.42000  80.22000  69.62000 154.42000  22.82000\n [6,] 151.0167 144.01667 138.01667 142.01667  96.01667 101.68333  29.68333\n [7,] 112.8714  62.30000  49.87143  95.72857 119.72857 125.01429  55.44286\n [8,]  22.0125 115.01250  21.63750  14.88750  75.51250  70.13750 111.76250\n [9,]  79.9000  69.01111 105.78889  60.23333  27.90000  13.78889  59.23333\n[10,]  87.7100  29.41000  58.81000  52.61000   3.81000   5.21000  26.91000\n           [,8]      [,9]\n [1,] 257.10000 944.10000\n [2,] 494.05000 145.55000\n [3,] 102.36667  84.36667\n [4,]  99.02500 249.02500\n [5,] 183.02000  72.82000\n [6,] 162.68333  62.01667\n [7,] 107.30000  53.58571\n [8,]  21.01250  86.51250\n [9,]  46.12222  34.34444\n[10,]  55.11000  39.21000\n\n, , 8\n\n           [,1]      [,2]      [,3]       [,4]      [,5]      [,6]      [,7]\n [1,] 950.10000 844.10000 578.10000 555.100000 985.10000 653.10000 531.10000\n [2,] 150.05000 301.05000  17.55000 235.050000 117.55000 473.55000 194.55000\n [3,] 285.36667  49.36667  10.03333 190.700000 117.70000  53.70000 221.70000\n [4,] 162.02500  42.02500 223.02500 166.525000 228.52500 174.52500 169.02500\n [5,]  40.42000 148.62000 151.62000  78.820000  87.22000  16.02000  41.62000\n [6,] 140.85000  74.01667  90.01667   4.350000 163.85000  24.85000  20.85000\n [7,]  66.44286  83.58571  23.30000   6.014286  89.87143  22.01429 103.15714\n [8,]  17.01250  69.01250  64.51250  99.262500 123.51250  28.76250   0.26250\n [9,]  23.90000  53.12222  32.90000  33.900000  53.23333  77.67778  72.78889\n[10,]   5.61000  23.21000  29.51000  34.710000  46.51000  18.41000  50.21000\n           [,8]      [,9]\n [1,]  68.10000 782.10000\n [2,] 423.05000 122.05000\n [3,]  96.36667 100.70000\n [4,]  64.52500 134.77500\n [5,]  40.62000  41.82000\n [6,]  68.85000  91.68333\n [7,]  32.87143  29.15714\n [8,]  71.13750 106.38750\n [9,]  13.34444  94.34444\n[10,]  68.31000  10.21000\n\nbc.d(x, y, \"^\")\n\n, , 1\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 3.681000e+02 2.821000e+02 2.151000e+02 7.021000e+02 6.671000e+02\n [2,] 8.706756e+05 2.874032e+05 5.536848e+05 4.084488e+05 9.045912e+05\n [3,] 3.859874e+08 1.265816e+08 4.951014e+08 2.889359e+08 1.540769e+08\n [4,] 6.593135e+11 7.840766e+07 2.640287e+10 5.864497e+11 1.394598e+11\n [5,] 1.847332e+13 3.778009e+14 5.908181e+14 1.831070e+14 6.075203e+13\n [6,] 5.534225e+17 1.190109e+13 4.827084e+15 4.750104e+03 1.075757e+15\n [7,] 1.425846e+20 1.729255e+19 2.516358e+20 1.383389e+10 4.874875e+16\n [8,] 7.716315e+16 3.179956e+17 2.885333e+23 5.972234e+22 1.776448e+21\n [9,] 1.192172e+20 1.043872e+23 5.626551e+26 1.315034e+21 3.591720e+16\n[10,] 1.570715e+28 7.263114e+27 9.144812e+29 5.207264e+27 6.783306e+20\n              [,6]         [,7]         [,8]         [,9]\n [1,] 6.391000e+02 7.081000e+02 4.441000e+02 3.231000e+02\n [2,] 1.815612e+05 4.004001e+04 4.721064e+05 3.957668e+05\n [3,] 1.106611e+08 1.304010e+08 6.296432e+08 8.850125e+08\n [4,] 8.391300e+11 8.080097e+11 2.825761e+02 2.749123e+11\n [5,] 2.311986e+14 3.860463e+12 3.386460e+13 1.973787e+13\n [6,] 3.096293e+14 6.318138e+16 6.936624e+10 1.132803e+12\n [7,] 8.203073e+20 4.260428e+19 2.271034e+18 4.646600e+17\n [8,] 1.316259e+23 2.366722e+19 1.433166e+21 6.914956e+22\n [9,] 2.938057e+23 2.470134e+26 5.773066e+22 5.262677e+21\n[10,] 7.627654e+27 9.757054e+21 4.536781e+26 1.264795e+27\n\n, , 2\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 7.891000e+02 4.411000e+02 5.091000e+02 8.661000e+02 7.891000e+02\n [2,] 1.673628e+05 7.294868e+05 2.917080e+05 2.209940e+05 3.137120e+05\n [3,] 1.371331e+06 5.257533e+08 2.384433e+08 4.402437e+07 2.150295e+08\n [4,] 9.224050e+10 3.751505e+10 3.572257e+11 3.085110e+10 1.251858e+09\n [5,] 5.937778e+09 7.580279e+14 3.008953e+12 2.271575e+13 1.786551e+12\n [6,] 2.005900e+17 1.132803e+12 1.868433e+14 5.259377e+16 4.552969e+17\n [7,] 5.068247e+19 2.347992e+18 3.571352e+18 1.505082e+19 6.835509e+20\n [8,] 5.938219e+20 4.125902e+19 1.459366e+21 1.905855e+21 2.039893e+13\n [9,] 2.408869e+16 3.545503e+18 6.171445e+19 2.459431e+21 9.452572e+20\n[10,] 2.025599e+21 7.145132e+27 7.752777e+27 8.590709e+21 1.278764e+25\n              [,6]         [,7]         [,8]         [,9]\n [1,] 7.621000e+02 8.051000e+02 5.561000e+02 8.221000e+02\n [2,] 9.862476e+05 6.740410e+03 7.904988e+05 2.684276e+05\n [3,] 2.633789e+06 6.655281e+06 7.204323e+07 4.913558e+08\n [4,] 7.170872e+05 4.098048e+11 1.864343e+11 8.251899e+11\n [5,] 1.012532e+13 5.745896e+14 1.170142e+14 5.806966e+12\n [6,] 2.389144e+14 4.021967e+13 1.080120e+17 1.915812e+14\n [7,] 2.858362e+18 2.858362e+18 7.798327e+14 5.625323e+20\n [8,] 9.474221e+19 5.203878e+22 5.473971e+20 2.153397e+11\n [9,] 8.796043e+15 5.621197e+22 3.150098e+16 8.736206e+26\n[10,] 9.713755e+29 3.099269e+25 8.673058e+28 2.595496e+28\n\n, , 3\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 5.901000e+02 6.371000e+02 7.291000e+02 9.421000e+02 4.091000e+02\n [2,] 7.449416e+05 2.071160e+05 5.640010e+03 4.571112e+05 5.838488e+05\n [3,] 1.843172e+08 3.748054e+05 1.401495e+07 8.524209e+07 1.414208e+05\n [4,] 6.981919e+11 1.000400e+12 2.935941e+11 1.412945e+11 6.514558e+09\n [5,] 2.856602e+13 4.707006e+14 4.901691e+14 2.615994e+11 5.401408e+14\n [6,] 3.652840e+12 6.439229e+16 8.586928e+12 1.999983e+10 2.193949e+16\n [7,] 5.951358e+16 3.016307e+17 4.354935e+19 5.879448e+19 3.930102e+20\n [8,] 4.449504e+20 7.526248e+23 2.099221e+18 4.314643e+22 2.320476e+23\n [9,] 1.212217e+21 1.543395e+25 6.825931e+25 7.719495e+14 3.238609e+25\n[10,] 3.804801e+24 9.749871e+25 3.093162e+27 1.719403e+27 6.187746e+28\n              [,6]         [,7]         [,8]         [,9]\n [1,] 6.281000e+02 9.121000e+02 4.351000e+02 1.931000e+02\n [2,] 2.280100e+02 4.901400e+05 3.870084e+05 3.435132e+05\n [3,] 5.368568e+06 2.102071e+06 9.824042e+08 9.045116e+08\n [4,] 6.091226e+08 8.856579e+11 2.556953e+11 6.718982e+04\n [5,] 7.823711e+14 1.599483e+14 4.669718e+10 1.791924e+11\n [6,] 4.164050e+15 9.736790e+15 3.417133e+15 7.783651e+17\n [7,] 3.742511e+18 5.596868e+17 6.937194e+20 4.751162e+19\n [8,] 1.438702e+18 7.693656e+20 9.309788e+23 1.068161e+19\n [9,] 8.210385e+23 1.988564e+15 3.072147e+26 4.708351e+25\n[10,] 3.962648e+28 2.150305e+22 9.157182e+21 5.956528e+27\n\n, , 4\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 9.331000e+02 9.671000e+02 8.631000e+02 8.271000e+02 4.021000e+02\n [2,] 1.303932e+05 5.462688e+05 7.938810e+03 3.995504e+05 2.468041e+04\n [3,] 3.830683e+07 8.685237e+08 3.249230e+07 1.490510e+07 3.803721e+06\n [4,] 1.331789e+11 4.435816e+11 3.216700e+11 4.719197e+09 2.471740e+11\n [5,] 7.073607e+14 6.450347e+11 3.992180e+13 3.732332e+14 3.838739e+08\n [6,] 6.600383e+17 3.469548e+16 3.058791e+09 6.187177e+17 4.105309e+17\n [7,] 3.368896e+17 6.052850e+18 9.104091e+19 4.289228e+20 2.135992e+20\n [8,] 8.726127e+16 1.249930e+23 1.190743e+13 2.232828e+23 2.805431e+23\n [9,] 1.103470e+18 3.542729e+26 4.821763e+18 2.496223e+26 4.419036e+25\n[10,] 4.163215e+29 1.129423e+25 7.458295e+29 5.057475e+29 8.432900e+29\n              [,6]         [,7]         [,8]         [,9]\n [1,] 5.571000e+02 1.121000e+02 5.831000e+02 3.051000e+02\n [2,] 1.879641e+04 1.018248e+05 1.529592e+05 9.610000e+00\n [3,] 7.308706e+07 3.595771e+08 3.173541e+08 3.875799e+08\n [4,] 3.952542e+04 8.446511e+10 9.610197e+09 6.091226e+08\n [5,] 1.727444e+13 8.112146e+13 5.165355e+11 1.693947e+14\n [6,] 2.509951e+16 7.903976e+16 1.260572e+17 2.221620e+14\n [7,] 3.407916e+19 6.899513e+15 3.243920e+11 3.853097e+16\n [8,] 3.922180e+22 4.729750e+21 6.937545e+19 2.684574e+21\n [9,] 1.186782e+16 8.884697e+23 3.561565e+21 8.414360e+17\n[10,] 1.473592e+17 2.035307e+27 4.930648e+28 8.351559e+15\n\n, , 5\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 7.401000e+02 3.361000e+02 2.601000e+02 2.361000e+02 9.331000e+02\n [2,] 7.940592e+05 8.886361e+04 8.632268e+05 3.004136e+05 1.256641e+04\n [3,] 6.840307e+08 2.684610e+08 6.186880e+08 1.679688e+07 9.357283e+08\n [4,] 2.673974e+11 2.902021e+09 4.481351e+10 1.701530e+09 2.023777e+09\n [5,] 8.876792e+13 1.203029e+13 2.190665e+14 1.604472e+12 5.161411e+14\n [6,] 2.422289e+13 4.164050e+15 1.880548e+12 6.349792e+17 3.109679e+17\n [7,] 2.751261e+03 9.469199e+19 8.742676e+18 1.531019e+17 6.660949e+19\n [8,] 4.702525e+07 5.473971e+20 4.639778e+20 4.169976e+21 9.965720e+21\n [9,] 5.414275e+26 8.172957e+25 7.701027e+22 1.244443e+22 9.226931e+26\n[10,] 8.681645e+27 5.203710e+28 2.325939e+23 1.165207e+25 1.104622e+10\n              [,6]         [,7]         [,8]         [,9]\n [1,] 2.901000e+02 9.481000e+02 5.921000e+02 1.910000e+01\n [2,] 9.352824e+05 4.584644e+05 2.612232e+05 2.280100e+02\n [3,] 1.414208e+05 6.121763e+08 2.269810e+02 2.868072e+07\n [4,] 2.588276e+10 9.644831e+07 8.440025e+09 2.969005e+10\n [5,] 1.101661e+12 5.592874e+10 5.567108e+12 2.770410e+13\n [6,] 3.846421e+10 8.813444e+16 7.274421e+16 1.577897e+17\n [7,] 7.092151e+20 4.426614e+20 3.510550e+20 1.421745e+17\n [8,] 2.366722e+19 1.969264e+19 3.094380e+19 1.289367e+23\n [9,] 1.192172e+20 4.040552e+25 3.988953e+23 3.596786e+24\n[10,] 4.741849e+29 3.400199e+28 5.544826e+22 1.059661e+27\n\n, , 6\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 3.610000e+01 2.371000e+02 2.871000e+02 2.111000e+02 9.031000e+02\n [2,] 4.071716e+05 5.669161e+04 4.734816e+05 8.650860e+05 6.163820e+05\n [3,] 4.549340e+08 8.712575e+08 8.202887e+08 7.219757e+08 4.669489e+07\n [4,] 3.799268e+11 4.306798e+11 2.588276e+10 3.045168e+08 2.304462e+09\n [5,] 4.221556e+08 3.340782e+14 1.371960e+13 1.091474e+14 1.253282e+14\n [6,] 5.757776e+17 9.895475e+16 5.949770e+17 6.878861e+15 1.781246e+12\n [7,] 1.524374e+19 6.003952e+19 2.949725e+17 3.004761e+19 8.974107e+04\n [8,] 2.548510e+22 1.836613e+23 4.737557e+20 6.699175e+20 1.102263e+20\n [9,] 5.624667e+20 2.269988e+26 3.528345e+22 1.405370e+26 3.076876e+21\n[10,] 2.232534e+27 8.443263e+18 6.294753e+25 1.490318e+25 3.567345e+26\n              [,6]         [,7]         [,8]         [,9]\n [1,] 4.811000e+02 5.691000e+02 7.701000e+02 8.371000e+02\n [2,] 7.693044e+05 2.758921e+04 5.686668e+05 5.085116e+05\n [3,] 3.535432e+08 1.171255e+07 2.454320e+08 4.674693e+08\n [4,] 2.828519e+10 2.126841e+11 1.887145e+11 4.031807e+10\n [5,] 1.355861e+13 4.789670e+14 9.136473e+14 7.830129e+12\n [6,] 6.604125e+14 5.143152e+17 7.601588e+14 7.355563e+17\n [7,] 1.411728e+19 1.665634e+20 2.062133e+16 1.711348e+20\n [8,] 8.107666e+10 1.549673e+23 5.146940e+20 1.440867e+12\n [9,] 3.035136e+24 6.531781e+19 2.357948e+00 3.580528e+23\n[10,] 1.213656e+24 1.985613e+20 2.112233e+27 9.347153e+24\n\n, , 7\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 6.051000e+02 6.281000e+02 1.211000e+02 2.521000e+02 5.391000e+02\n [2,] 2.324204e+05 1.954524e+05 6.101172e+05 3.733210e+03 4.004001e+04\n [3,] 2.226552e+08 2.096905e+08 1.085996e+08 2.054834e+08 4.038891e+07\n [4,] 2.810374e+11 3.608887e+09 9.128429e+09 5.076014e+08 3.668145e+09\n [5,] 3.258409e+14 5.650250e+14 3.642303e+14 1.038158e+13 5.111168e+12\n [6,] 5.534225e+17 4.162785e+17 3.224755e+17 3.827748e+17 3.655841e+16\n [7,] 1.922093e+20 2.999871e+18 6.319009e+17 6.067047e+19 2.904497e+20\n [8,] 9.248576e+17 5.136653e+23 8.060770e+17 4.048500e+16 1.773661e+22\n [9,] 5.141663e+25 1.375478e+25 6.428995e+26 4.043102e+24 3.968445e+21\n[10,] 2.694580e+29 4.841169e+24 4.948936e+27 1.624363e+27 6.445398e+15\n              [,6]         [,7]         [,8]         [,9]\n [1,] 3.581000e+02 1.731000e+02 2.571000e+02 9.441000e+02\n [2,] 4.957568e+05 3.015108e+05 9.763416e+05 8.473921e+04\n [3,] 2.734858e+08 1.523589e+08 2.896273e+07 1.621349e+07\n [4,] 2.268687e+10 1.469072e+11 2.461611e+10 9.844910e+11\n [5,] 2.743897e+14 1.933874e+10 6.417159e+14 6.398872e+12\n [6,] 5.157107e+16 3.191417e+13 8.649000e+17 2.654349e+15\n [7,] 3.930102e+20 1.326189e+18 1.348604e+20 1.044791e+18\n [8,] 9.824765e+21 4.084028e+23 6.375903e+17 5.264423e+22\n [9,] 6.981456e+18 3.477588e+24 3.659103e+23 2.575675e+22\n[10,] 1.473592e+17 1.991301e+24 2.584069e+27 8.589511e+25\n\n, , 8\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 9.501000e+02 8.441000e+02 5.781000e+02 5.551000e+02 9.851000e+02\n [2,] 9.006001e+04 3.625244e+05 1.232010e+03 2.209940e+05 5.527201e+04\n [3,] 6.274419e+08 3.248368e+06 2.727090e+04 1.872474e+08 4.402437e+07\n [4,] 1.764282e+11 7.984925e+08 6.333651e+11 1.968601e+11 6.981919e+11\n [5,] 3.371565e+11 2.265877e+14 2.503989e+14 9.506752e+12 1.577359e+13\n [6,] 3.642911e+17 7.671577e+15 2.482247e+16 3.161135e+08 9.027888e+17\n [7,] 4.707869e+18 2.347527e+19 3.070278e+15 2.344092e+11 3.899759e+19\n [8,] 1.177240e+17 8.632607e+21 5.033509e+21 1.581254e+23 9.086721e+23\n [9,] 9.857430e+20 1.305175e+24 1.749628e+22 2.290761e+22 1.329951e+24\n[10,] 3.087654e+17 4.536818e+23 5.008320e+24 2.538319e+25 4.736564e+26\n              [,6]         [,7]         [,8]         [,9]\n [1,] 6.531000e+02 5.311000e+02 6.810000e+01 7.821000e+02\n [2,] 8.969984e+05 1.513988e+05 7.158852e+05 5.958481e+04\n [3,] 4.181062e+06 2.942123e+08 2.416263e+07 2.757098e+07\n [4,] 2.375038e+11 2.089507e+11 4.437639e+09 8.446511e+10\n [5,] 3.297331e+09 3.902657e+11 3.455808e+11 3.997331e+11\n [6,] 1.098666e+13 3.833044e+12 4.969711e+15 2.771085e+16\n [7,] 2.063567e+15 1.023721e+20 3.415201e+16 1.475370e+16\n [8,] 7.858379e+18 3.782286e+02 1.100294e+22 2.753244e+23\n [9,] 3.988905e+25 2.222125e+25 5.198608e+18 2.294191e+26\n[10,] 4.472372e+22 1.018362e+27 2.212294e+28 1.230998e+20\n\nbc.d(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.d(x, y, \"!=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.d(x, y, \"&lt;\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.d(x, y, \"&gt;\")\n\n, , 1\n\n      [,1] [,2] [,3]  [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE FALSE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] FALSE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4]  [,5] [,6] [,7]  [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE FALSE TRUE TRUE  TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE FALSE TRUE\n[10,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6]  [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n\nbc.d(x, y, \"&lt;=\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.d(x, y, \"&gt;=\")\n\n, , 1\n\n      [,1] [,2] [,3]  [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE FALSE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] FALSE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4]  [,5] [,6] [,7]  [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE FALSE TRUE TRUE  TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE FALSE TRUE\n[10,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6]  [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE"
  },
  {
    "objectID": "man/outer-like functions/bc.d.html#broadcasted-decimal-numeric-operations",
    "href": "man/outer-like functions/bc.d.html#broadcasted-decimal-numeric-operations",
    "title": "bc.d",
    "section": "",
    "text": "The bc.d() function performs broadcasted decimal numeric operations on 2 numeric or logical arrays.  bc.num() is an alias for bc.d().  \n\n\n\nbc.d(x, y, op, prec = sqrt(.Machine\\$double.eps))\n\nbc.num(x, y, op, prec = sqrt(.Machine\\$double.eps))\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable logical or numeric arrays.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported arithmetic operators: +, -, *, /, ^, pmin, pmax.  Supported relational operators: ==, !=, &lt;, &gt;, &lt;=, &gt;=, d==, d!=, d&lt;, d&gt;, d&lt;=, d&gt;=. \n\n\n\n\nprec\n\n\na single number between 0 and 0.1, giving the machine precision to use.  Only relevant for the following operators:  d==, d!=, d&lt;, d&gt;, d&lt;=, d&gt;=  See the d==, d!=, d&lt;, d&gt;, d&lt;=, d&gt;= operators from the ‘tinycodet’ package for details. \n\n\n\n\n\n\n\nFor arithmetic operators:  A numeric array as a result of the broadcasted decimal arithmetic operation.   For relational operators:  A logical array as a result of the broadcasted decimal relational comparison.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(NA, 1.1:1000.1), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\nbc.d(x, y, \"+\")\n\n, , 1\n\n       [,1]  [,2]   [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 369.1 283.1  216.1 703.1 668.1 640.1 709.1 445.1 324.1\n [2,] 935.1 538.1  746.1 641.1 953.1 428.1 202.1 689.1 631.1\n [3,] 731.1 505.1  794.1 664.1 539.1 483.1 510.1 860.1 963.1\n [4,] 905.1  98.1  407.1 879.1 615.1 961.1 952.1   8.1 728.1\n [5,] 455.1 828.1  905.1 717.1 576.1 751.1 334.1 513.1 461.1\n [6,] 912.1 157.1  417.1  10.1 326.1 266.1 637.1  70.1 108.1\n [7,] 764.1 567.1  828.1  35.1 249.1 979.1 644.1 426.1 341.1\n [8,] 137.1 162.1  864.1 711.1 461.1 784.1 272.1 449.1 724.1\n [9,] 179.1 370.1  947.1 231.1  78.1 414.1 865.1 347.1 268.1\n[10,] 670.1 621.1 1001.1 601.1 131.1 624.1 168.1 473.1 523.1\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]   [,6]  [,7]  [,8]  [,9]\n [1,] 790.1 442.1 510.1 867.1 790.1  763.1 806.1 557.1 823.1\n [2,] 411.1 856.1 542.1 472.1 562.1  995.1  84.1 891.1 520.1\n [3,] 114.1 810.1 623.1 356.1 602.1  141.1 191.1 419.1 792.1\n [4,] 555.1 444.1 777.1 423.1 192.1   33.1 804.1 661.1 957.1\n [5,]  95.1 951.1 318.1 474.1 287.1  404.1 900.1 656.1 362.1\n [6,] 771.1 108.1 245.1 618.1 883.1  255.1 191.1 696.1 246.1\n [7,] 660.1 428.1 454.1 556.1 954.1  440.1 440.1 141.1 928.1\n [8,] 403.1 291.1 450.1 465.1  54.1  322.1 699.1 399.1  34.1\n [9,]  75.1 124.1 167.1 247.1 223.1   68.1 346.1  77.1 994.1\n[10,] 145.1 620.1 625.1 166.1 334.1 1007.1 364.1 793.1 704.1\n\n, , 3\n\n       [,1]   [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 591.1  638.1 730.1 943.1 410.1 629.1 913.1 436.1 194.1\n [2,] 865.1  457.1  77.1 678.1 766.1  17.1 702.1 624.1 588.1\n [3,] 572.1   75.1 244.1 443.1  55.1 178.1 131.1 997.1 970.1\n [4,] 918.1 1004.1 740.1 617.1 288.1 161.1 974.1 715.1  20.1\n [5,] 496.1  865.1 872.1 197.1 889.1 957.1 698.1 141.1 183.1\n [6,] 130.1  639.1 149.1  58.1 535.1 407.1 468.1 394.1 965.1\n [7,] 256.1  321.1 646.1 674.1 882.1 457.1 350.1 956.1 654.1\n [8,] 389.1  973.1 203.1 683.1 841.1 194.1 416.1 999.1 247.1\n [9,] 229.1  638.1 751.1  54.1 692.1 463.1  59.1 886.1 721.1\n[10,] 297.1  407.1 571.1 539.1 767.1 734.1 181.1 167.1 609.1\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 934.1 968.1 864.1 828.1 403.1 558.1 113.1 584.1 306.1\n [2,] 363.1 741.1  91.1 634.1 159.1 139.1 321.1 393.1   5.1\n [3,] 340.1 957.1 322.1 249.1 159.1 421.1 714.1 685.1 732.1\n [4,] 608.1 820.1 757.1 266.1 709.1  18.1 543.1 317.1 161.1\n [5,] 938.1 235.1 530.1 826.1  57.1 449.1 610.1 225.1 706.1\n [6,] 939.1 577.1  44.1 929.1 868.1 547.1 661.1 714.1 252.1\n [7,] 326.1 489.1 717.1 893.1 809.1 624.1 190.1  51.1 241.1\n [8,] 139.1 779.1  51.1 837.1 861.1 675.1 520.1 310.1 485.1\n [9,] 110.1 900.1 128.1 866.1 716.1  70.1 467.1 257.1 107.1\n[10,] 926.1 330.1 981.1 944.1 993.1  62.1 548.1 750.1  49.1\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]   [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 741.1 337.1 261.1 237.1  934.1 291.1 949.1 593.1  20.1\n [2,] 893.1 300.1 931.1 550.1  114.1 969.1 679.1 513.1  17.1\n [3,] 884.1 648.1 855.1 259.1  981.1  55.1 852.1   9.1 309.1\n [4,] 723.1 236.1 464.1 207.1  216.1 405.1 103.1 307.1 419.1\n [5,] 621.1 418.1 743.1 281.1  881.1 261.1 146.1 359.1 493.1\n [6,] 176.1 407.1 117.1 933.1  829.1  64.1 673.1 652.1 741.1\n [7,]  10.1 721.1 515.1 292.1  686.1 959.1 897.1 868.1 289.1\n [8,]  17.1 399.1 391.1 512.1  570.1 272.1 266.1 281.1 782.1\n [9,] 943.1 766.1 358.1 294.1 1000.1 179.1 709.1 428.1 544.1\n[10,] 632.1 754.1 227.1 331.1   20.1 938.1 723.1 198.1 514.1\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  37.1 238.1 288.1 212.1 904.1 482.1 570.1 771.1 838.1\n [2,] 640.1 240.1 690.1 932.1 787.1 879.1 168.1 756.1 715.1\n [3,] 772.1 958.1 939.1 900.1 363.1 710.1 230.1 629.1 779.1\n [4,] 789.1 814.1 405.1 136.1 223.1 414.1 683.1 663.1 452.1\n [5,]  58.1 808.1 429.1 647.1 665.1 428.1 868.1 987.1 384.1\n [6,] 918.1 686.1 923.1 442.1 116.1 301.1 901.1 308.1 956.1\n [7,] 557.1 676.1 320.1 613.1  12.1 551.1 781.1 221.1 784.1\n [8,] 640.1 817.1 392.1 409.1 328.1  31.1 800.1 396.1  41.1\n [9,] 211.1 857.1 329.1 813.1 253.1 534.1 168.1  10.1 423.1\n[10,] 553.1  88.1 390.1 339.1 462.1 266.1 117.1 550.1 324.1\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]   [,9]\n [1,] 606.1 629.1 122.1 253.1 540.1 359.1 174.1 258.1  945.1\n [2,] 484.1 444.1 783.1  63.1 202.1 706.1 551.1 990.1  293.1\n [3,] 609.1 597.1 480.1 593.1 346.1 652.1 537.1 310.1  256.1\n [4,] 732.1 249.1 313.1 154.1 250.1 392.1 623.1 400.1 1000.1\n [5,] 804.1 897.1 822.1 406.1 353.1 777.1 119.1 920.1  369.1\n [6,] 912.1 870.1 834.1 858.1 582.1 616.1 184.1 982.1  378.1\n [7,] 797.1 443.1 356.1 677.1 845.1 882.1 395.1 758.1  382.1\n [8,] 184.1 928.1 181.1 127.1 612.1 569.1 902.1 176.1  700.1\n [9,] 728.1 630.1 961.1 551.1 260.1 133.1 542.1 424.1  318.1\n[10,] 887.1 304.1 598.1 536.1  48.1  62.1 279.1 561.1  402.1\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 951.1 845.1 579.1 556.1 986.1 654.1 532.1  69.1 783.1\n [2,] 302.1 604.1  37.1 472.1 237.1 949.1 391.1 848.1 246.1\n [3,] 859.1 151.1  33.1 575.1 356.1 164.1 668.1 292.1 305.1\n [4,] 652.1 172.1 896.1 670.1 918.1 702.1 680.1 262.1 543.1\n [5,] 207.1 748.1 763.1 399.1 441.1  85.1 213.1 208.1 214.1\n [6,] 851.1 450.1 546.1  32.1 989.1 155.1 131.1 419.1 556.1\n [7,] 472.1 592.1 170.1  49.1 636.1 161.1 729.1 237.1 211.1\n [8,] 144.1 560.1 524.1 802.1 996.1 238.1  10.1 577.1 859.1\n [9,] 224.1 487.1 305.1 314.1 488.1 708.1 664.1 129.1 858.1\n[10,]  66.1 242.1 305.1 357.1 475.1 194.1 512.1 693.1 112.1\n\nbc.d(x, y, \"-\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 367.1 281.1 214.1 701.1 666.1 638.1 707.1 443.1 322.1\n [2,] 931.1 534.1 742.1 637.1 949.1 424.1 198.1 685.1 627.1\n [3,] 725.1 499.1 788.1 658.1 533.1 477.1 504.1 854.1 957.1\n [4,] 897.1  90.1 399.1 871.1 607.1 953.1 944.1   0.1 720.1\n [5,] 445.1 818.1 895.1 707.1 566.1 741.1 324.1 503.1 451.1\n [6,] 900.1 145.1 405.1  -1.9 314.1 254.1 625.1  58.1  96.1\n [7,] 750.1 553.1 814.1  21.1 235.1 965.1 630.1 412.1 327.1\n [8,] 121.1 146.1 848.1 695.1 445.1 768.1 256.1 433.1 708.1\n [9,] 161.1 352.1 929.1 213.1  60.1 396.1 847.1 329.1 250.1\n[10,] 650.1 601.1 981.1 581.1 111.1 604.1 148.1 453.1 503.1\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 788.1 440.1 508.1 865.1 788.1 761.1 804.1 555.1 821.1\n [2,] 407.1 852.1 538.1 468.1 558.1 991.1  80.1 887.1 516.1\n [3,] 108.1 804.1 617.1 350.1 596.1 135.1 185.1 413.1 786.1\n [4,] 547.1 436.1 769.1 415.1 184.1  25.1 796.1 653.1 949.1\n [5,]  85.1 941.1 308.1 464.1 277.1 394.1 890.1 646.1 352.1\n [6,] 759.1  96.1 233.1 606.1 871.1 243.1 179.1 684.1 234.1\n [7,] 646.1 414.1 440.1 542.1 940.1 426.1 426.1 127.1 914.1\n [8,] 387.1 275.1 434.1 449.1  38.1 306.1 683.1 383.1  18.1\n [9,]  57.1 106.1 149.1 229.1 205.1  50.1 328.1  59.1 976.1\n[10,] 125.1 600.1 605.1 146.1 314.1 987.1 344.1 773.1 684.1\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 589.1 636.1 728.1 941.1 408.1 627.1 911.1 434.1 192.1\n [2,] 861.1 453.1  73.1 674.1 762.1  13.1 698.1 620.1 584.1\n [3,] 566.1  69.1 238.1 437.1  49.1 172.1 125.1 991.1 964.1\n [4,] 910.1 996.1 732.1 609.1 280.1 153.1 966.1 707.1  12.1\n [5,] 486.1 855.1 862.1 187.1 879.1 947.1 688.1 131.1 173.1\n [6,] 118.1 627.1 137.1  46.1 523.1 395.1 456.1 382.1 953.1\n [7,] 242.1 307.1 632.1 660.1 868.1 443.1 336.1 942.1 640.1\n [8,] 373.1 957.1 187.1 667.1 825.1 178.1 400.1 983.1 231.1\n [9,] 211.1 620.1 733.1  36.1 674.1 445.1  41.1 868.1 703.1\n[10,] 277.1 387.1 551.1 519.1 747.1 714.1 161.1 147.1 589.1\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 932.1 966.1 862.1 826.1 401.1 556.1 111.1 582.1 304.1\n [2,] 359.1 737.1  87.1 630.1 155.1 135.1 317.1 389.1   1.1\n [3,] 334.1 951.1 316.1 243.1 153.1 415.1 708.1 679.1 726.1\n [4,] 600.1 812.1 749.1 258.1 701.1  10.1 535.1 309.1 153.1\n [5,] 928.1 225.1 520.1 816.1  47.1 439.1 600.1 215.1 696.1\n [6,] 927.1 565.1  32.1 917.1 856.1 535.1 649.1 702.1 240.1\n [7,] 312.1 475.1 703.1 879.1 795.1 610.1 176.1  37.1 227.1\n [8,] 123.1 763.1  35.1 821.1 845.1 659.1 504.1 294.1 469.1\n [9,]  92.1 882.1 110.1 848.1 698.1  52.1 449.1 239.1  89.1\n[10,] 906.1 310.1 961.1 924.1 973.1  42.1 528.1 730.1  29.1\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 739.1 335.1 259.1 235.1 932.1 289.1 947.1 591.1  18.1\n [2,] 889.1 296.1 927.1 546.1 110.1 965.1 675.1 509.1  13.1\n [3,] 878.1 642.1 849.1 253.1 975.1  49.1 846.1   3.1 303.1\n [4,] 715.1 228.1 456.1 199.1 208.1 397.1  95.1 299.1 411.1\n [5,] 611.1 408.1 733.1 271.1 871.1 251.1 136.1 349.1 483.1\n [6,] 164.1 395.1 105.1 921.1 817.1  52.1 661.1 640.1 729.1\n [7,]  -3.9 707.1 501.1 278.1 672.1 945.1 883.1 854.1 275.1\n [8,]   1.1 383.1 375.1 496.1 554.1 256.1 250.1 265.1 766.1\n [9,] 925.1 748.1 340.1 276.1 982.1 161.1 691.1 410.1 526.1\n[10,] 612.1 734.1 207.1 311.1   0.1 918.1 703.1 178.1 494.1\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  35.1 236.1 286.1 210.1 902.1 480.1 568.1 769.1 836.1\n [2,] 636.1 236.1 686.1 928.1 783.1 875.1 164.1 752.1 711.1\n [3,] 766.1 952.1 933.1 894.1 357.1 704.1 224.1 623.1 773.1\n [4,] 781.1 806.1 397.1 128.1 215.1 406.1 675.1 655.1 444.1\n [5,]  48.1 798.1 419.1 637.1 655.1 418.1 858.1 977.1 374.1\n [6,] 906.1 674.1 911.1 430.1 104.1 289.1 889.1 296.1 944.1\n [7,] 543.1 662.1 306.1 599.1  -1.9 537.1 767.1 207.1 770.1\n [8,] 624.1 801.1 376.1 393.1 312.1  15.1 784.1 380.1  25.1\n [9,] 193.1 839.1 311.1 795.1 235.1 516.1 150.1  -7.9 405.1\n[10,] 533.1  68.1 370.1 319.1 442.1 246.1  97.1 530.1 304.1\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 604.1 627.1 120.1 251.1 538.1 357.1 172.1 256.1 943.1\n [2,] 480.1 440.1 779.1  59.1 198.1 702.1 547.1 986.1 289.1\n [3,] 603.1 591.1 474.1 587.1 340.1 646.1 531.1 304.1 250.1\n [4,] 724.1 241.1 305.1 146.1 242.1 384.1 615.1 392.1 992.1\n [5,] 794.1 887.1 812.1 396.1 343.1 767.1 109.1 910.1 359.1\n [6,] 900.1 858.1 822.1 846.1 570.1 604.1 172.1 970.1 366.1\n [7,] 783.1 429.1 342.1 663.1 831.1 868.1 381.1 744.1 368.1\n [8,] 168.1 912.1 165.1 111.1 596.1 553.1 886.1 160.1 684.1\n [9,] 710.1 612.1 943.1 533.1 242.1 115.1 524.1 406.1 300.1\n[10,] 867.1 284.1 578.1 516.1  28.1  42.1 259.1 541.1 382.1\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 949.1 843.1 577.1 554.1 984.1 652.1 530.1  67.1 781.1\n [2,] 298.1 600.1  33.1 468.1 233.1 945.1 387.1 844.1 242.1\n [3,] 853.1 145.1  27.1 569.1 350.1 158.1 662.1 286.1 299.1\n [4,] 644.1 164.1 888.1 662.1 910.1 694.1 672.1 254.1 535.1\n [5,] 197.1 738.1 753.1 389.1 431.1  75.1 203.1 198.1 204.1\n [6,] 839.1 438.1 534.1  20.1 977.1 143.1 119.1 407.1 544.1\n [7,] 458.1 578.1 156.1  35.1 622.1 147.1 715.1 223.1 197.1\n [8,] 128.1 544.1 508.1 786.1 980.1 222.1  -5.9 561.1 843.1\n [9,] 206.1 469.1 287.1 296.1 470.1 690.1 646.1 111.1 840.1\n[10,]  46.1 222.1 285.1 337.1 455.1 174.1 492.1 673.1  92.1\n\nbc.d(x, y, \"*\")\n\n, , 1\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  368.1  282.1  215.1  702.1  667.1  639.1  708.1  444.1  323.1\n [2,] 1866.2 1072.2 1488.2 1278.2 1902.2  852.2  400.2 1374.2 1258.2\n [3,] 2184.3 1506.3 2373.3 1983.3 1608.3 1440.3 1521.3 2571.3 2880.3\n [4,] 3604.4  376.4 1612.4 3500.4 2444.4 3828.4 3792.4   16.4 2896.4\n [5,] 2250.5 4115.5 4500.5 3560.5 2855.5 3730.5 1645.5 2540.5 2280.5\n [6,] 5436.6  906.6 2466.6   24.6 1920.6 1560.6 3786.6  384.6  612.6\n [7,] 5299.7 3920.7 5747.7  196.7 1694.7 6804.7 4459.7 2933.7 2338.7\n [8,] 1032.8 1232.8 6848.8 5624.8 3624.8 6208.8 2112.8 3528.8 5728.8\n [9,] 1530.9 3249.9 8442.9 1998.9  621.9 3645.9 7704.9 3042.9 2331.9\n[10,] 6601.0 6111.0 9911.0 5911.0 1211.0 6141.0 1581.0 4631.0 5131.0\n\n, , 2\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  789.1  441.1  509.1  866.1  789.1  762.1  805.1  556.1  822.1\n [2,]  818.2 1708.2 1080.2  940.2 1120.2 1986.2  164.2 1778.2 1036.2\n [3,]  333.3 2421.3 1860.3 1059.3 1797.3  414.3  564.3 1248.3 2367.3\n [4,] 2204.4 1760.4 3092.4 1676.4  752.4  116.4 3200.4 2628.4 3812.4\n [5,]  450.5 4730.5 1565.5 2345.5 1410.5 1995.5 4475.5 3255.5 1785.5\n [6,] 4590.6  612.6 1434.6 3672.6 5262.6 1494.6 1110.6 4140.6 1440.6\n [7,] 4571.7 2947.7 3129.7 3843.7 6629.7 3031.7 3031.7  938.7 6447.7\n [8,] 3160.8 2264.8 3536.8 3656.8  368.8 2512.8 5528.8 3128.8  208.8\n [9,]  594.9 1035.9 1422.9 2142.9 1926.9  531.9 3033.9  612.9 8865.9\n[10,] 1351.0 6101.0 6151.0 1561.0 3241.0 9971.0 3541.0 7831.0 6941.0\n\n, , 3\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  590.1  637.1  729.1  942.1  409.1  628.1  912.1  435.1  193.1\n [2,] 1726.2  910.2  150.2 1352.2 1528.2   30.2 1400.2 1244.2 1172.2\n [3,] 1707.3  216.3  723.3 1320.3  156.3  525.3  384.3 2982.3 2901.3\n [4,] 3656.4 4000.4 2944.4 2452.4 1136.4  628.4 3880.4 2844.4   64.4\n [5,] 2455.5 4300.5 4335.5  960.5 4420.5 4760.5 3465.5  680.5  890.5\n [6,]  744.6 3798.6  858.6  312.6 3174.6 2406.6 2772.6 2328.6 5754.6\n [7,] 1743.7 2198.7 4473.7 4669.7 6125.7 3150.7 2401.7 6643.7 4529.7\n [8,] 3048.8 7720.8 1560.8 5400.8 6664.8 1488.8 3264.8 7928.8 1912.8\n [9,] 1980.9 5661.9 6678.9  405.9 6147.9 4086.9  450.9 7893.9 6408.9\n[10,] 2871.0 3971.0 5611.0 5291.0 7571.0 7241.0 1711.0 1571.0 5991.0\n\n, , 4\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  933.1  967.1  863.1  827.1  402.1  557.1  112.1  583.1  305.1\n [2,]  722.2 1478.2  178.2 1264.2  314.2  274.2  638.2  782.2    6.2\n [3,] 1011.3 2862.3  957.3  738.3  468.3 1254.3 2133.3 2046.3 2187.3\n [4,] 2416.4 3264.4 3012.4 1048.4 2820.4   56.4 2156.4 1252.4  628.4\n [5,] 4665.5 1150.5 2625.5 4105.5  260.5 2220.5 3025.5 1100.5 3505.5\n [6,] 5598.6 3426.6  228.6 5538.6 5172.6 3246.6 3930.6 4248.6 1476.6\n [7,] 2233.7 3374.7 4970.7 6202.7 5614.7 4319.7 1281.7  308.7 1638.7\n [8,] 1048.8 6168.8  344.8 6632.8 6824.8 5336.8 4096.8 2416.8 3816.8\n [9,]  909.9 8019.9 1071.9 7713.9 6363.9  549.9 4122.9 2232.9  882.9\n[10,] 9161.0 3201.0 9711.0 9341.0 9831.0  521.0 5381.0 7401.0  391.0\n\n, , 5\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  740.1  336.1  260.1  236.1  933.1  290.1  948.1  592.1   19.1\n [2,] 1782.2  596.2 1858.2 1096.2  224.2 1934.2 1354.2 1022.2   30.2\n [3,] 2643.3 1935.3 2556.3  768.3 2934.3  156.3 2547.3   18.3  918.3\n [4,] 2876.4  928.4 1840.4  812.4  848.4 1604.4  396.4 1212.4 1660.4\n [5,] 3080.5 2065.5 3690.5 1380.5 4380.5 1280.5  705.5 1770.5 2440.5\n [6,] 1020.6 2406.6  666.6 5562.6 4938.6  348.6 4002.6 3876.6 4410.6\n [7,]   21.7 4998.7 3556.7 1995.7 4753.7 6664.7 6230.7 6027.7 1974.7\n [8,]   72.8 3128.8 3064.8 4032.8 4496.8 2112.8 2064.8 2184.8 6192.8\n [9,] 8406.9 6813.9 3141.9 2565.9 8919.9 1530.9 6300.9 3771.9 4815.9\n[10,] 6221.0 7441.0 2171.0 3211.0  101.0 9281.0 7131.0 1881.0 5041.0\n\n, , 6\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]   36.1  237.1  287.1  211.1  903.1  481.1  569.1  770.1  837.1\n [2,] 1276.2  476.2 1376.2 1860.2 1570.2 1754.2  332.2 1508.2 1426.2\n [3,] 2307.3 2865.3 2808.3 2691.3 1080.3 2121.3  681.3 1878.3 2328.3\n [4,] 3140.4 3240.4 1604.4  528.4  876.4 1640.4 2716.4 2636.4 1792.4\n [5,]  265.5 4015.5 2120.5 3210.5 3300.5 2115.5 4315.5 4910.5 1895.5\n [6,] 5472.6 4080.6 5502.6 2616.6  660.6 1770.6 5370.6 1812.6 5700.6\n [7,] 3850.7 4683.7 2191.7 4242.7   35.7 3808.7 5418.7 1498.7 5439.7\n [8,] 5056.8 6472.8 3072.8 3208.8 2560.8  184.8 6336.8 3104.8  264.8\n [9,] 1818.9 7632.9 2880.9 7236.9 2196.9 4725.9 1431.9    9.9 3726.9\n[10,] 5431.0  781.0 3801.0 3291.0 4521.0 2561.0 1071.0 5401.0 3141.0\n\n, , 7\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  605.1  628.1  121.1  252.1  539.1  358.1  173.1  257.1  944.1\n [2,]  964.2  884.2 1562.2  122.2  400.2 1408.2 1098.2 1976.2  582.2\n [3,] 1818.3 1782.3 1431.3 1770.3 1029.3 1947.3 1602.3  921.3  759.3\n [4,] 2912.4  980.4 1236.4  600.4  984.4 1552.4 2476.4 1584.4 3984.4\n [5,] 3995.5 4460.5 4085.5 2005.5 1740.5 3860.5  570.5 4575.5 1820.5\n [6,] 5436.6 5184.6 4968.6 5112.6 3456.6 3660.6 1068.6 5856.6 2232.6\n [7,] 5530.7 3052.7 2443.7 4690.7 5866.7 6125.7 2716.7 5257.7 2625.7\n [8,] 1408.8 7360.8 1384.8  952.8 4832.8 4488.8 7152.8 1344.8 5536.8\n [9,] 6471.9 5589.9 8568.9 4878.9 2259.9 1116.9 4797.9 3735.9 2781.9\n[10,] 8771.0 2941.0 5881.0 5261.0  381.0  521.0 2691.0 5511.0 3921.0\n\n, , 8\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  950.1  844.1  578.1  555.1  985.1  653.1  531.1   68.1  782.1\n [2,]  600.2 1204.2   70.2  940.2  470.2 1894.2  778.2 1692.2  488.2\n [3,] 2568.3  444.3   90.3 1716.3 1059.3  483.3 1995.3  867.3  906.3\n [4,] 2592.4  672.4 3568.4 2664.4 3656.4 2792.4 2704.4 1032.4 2156.4\n [5,] 1010.5 3715.5 3790.5 1970.5 2180.5  400.5 1040.5 1015.5 1045.5\n [6,] 5070.6 2664.6 3240.6  156.6 5898.6  894.6  750.6 2478.6 3300.6\n [7,] 3255.7 4095.7 1141.7  294.7 4403.7 1078.7 5054.7 1610.7 1428.7\n [8,] 1088.8 4416.8 4128.8 6352.8 7904.8 1840.8   16.8 4552.8 6808.8\n [9,] 1935.9 4302.9 2664.9 2745.9 4311.9 6291.9 5895.9 1080.9 7641.9\n[10,]  561.0 2321.0 2951.0 3471.0 4651.0 1841.0 5021.0 6831.0 1021.0\n\nbc.d(x, y, \"/\")\n\n, , 1\n\n          [,1]      [,2]      [,3]        [,4]       [,5]      [,6]      [,7]\n [1,] 368.1000 282.10000 215.10000 702.1000000 667.100000 639.10000 708.10000\n [2,] 466.5500 268.05000 372.05000 319.5500000 475.550000 213.05000 100.05000\n [3,] 242.7000 167.36667 263.70000 220.3666667 178.700000 160.03333 169.03333\n [4,] 225.2750  23.52500 100.77500 218.7750000 152.775000 239.27500 237.02500\n [5,]  90.0200 164.62000 180.02000 142.4200000 114.220000 149.22000  65.82000\n [6,] 151.0167  25.18333  68.51667   0.6833333  53.350000  43.35000 105.18333\n [7,] 108.1571  80.01429 117.30000   4.0142857  34.585714 138.87143  91.01429\n [8,]  16.1375  19.26250 107.01250  87.8875000  56.637500  97.01250  33.01250\n [9,]  18.9000  40.12222 104.23333  24.6777778   7.677778  45.01111  95.12222\n[10,]  66.0100  61.11000  99.11000  59.1100000  12.110000  61.41000  15.81000\n           [,8]      [,9]\n [1,] 444.10000 323.10000\n [2,] 343.55000 314.55000\n [3,] 285.70000 320.03333\n [4,]   1.02500 181.02500\n [5,] 101.62000  91.22000\n [6,]  10.68333  17.01667\n [7,]  59.87143  47.72857\n [8,]  55.13750  89.51250\n [9,]  37.56667  28.78889\n[10,]  46.31000  51.31000\n\n, , 2\n\n            [,1]      [,2]      [,3]      [,4]      [,5]       [,6]      [,7]\n [1,] 789.100000 441.10000 509.10000 866.10000 789.10000 762.100000 805.10000\n [2,] 204.550000 427.05000 270.05000 235.05000 280.05000 496.550000  41.05000\n [3,]  37.033333 269.03333 206.70000 117.70000 199.70000  46.033333  62.70000\n [4,] 137.775000 110.02500 193.27500 104.77500  47.02500   7.275000 200.02500\n [5,]  18.020000 189.22000  62.62000  93.82000  56.42000  79.820000 179.02000\n [6,] 127.516667  17.01667  39.85000 102.01667 146.18333  41.516667  30.85000\n [7,]  93.300000  60.15714  63.87143  78.44286 135.30000  61.871429  61.87143\n [8,]  49.387500  35.38750  55.26250  57.13750   5.76250  39.262500  86.38750\n [9,]   7.344444  12.78889  17.56667  26.45556  23.78889   6.566667  37.45556\n[10,]  13.510000  61.01000  61.51000  15.61000  32.41000  99.710000  35.41000\n            [,8]      [,9]\n [1,] 556.100000 822.10000\n [2,] 444.550000 259.05000\n [3,] 138.700000 263.03333\n [4,] 164.275000 238.27500\n [5,] 130.220000  71.42000\n [6,] 115.016667  40.01667\n [7,]  19.157143 131.58571\n [8,]  48.887500   3.26250\n [9,]   7.566667 109.45556\n[10,]  78.310000  69.41000\n\n, , 3\n\n           [,1]      [,2]      [,3]       [,4]      [,5]      [,6]       [,7]\n [1,] 590.10000 637.10000 729.10000 942.100000 409.10000 628.10000 912.100000\n [2,] 431.55000 227.55000  37.55000 338.050000 382.05000   7.55000 350.050000\n [3,] 189.70000  24.03333  80.36667 146.700000  17.36667  58.36667  42.700000\n [4,] 228.52500 250.02500 184.02500 153.275000  71.02500  39.27500 242.525000\n [5,]  98.22000 172.02000 173.42000  38.420000 176.82000 190.42000 138.620000\n [6,]  20.68333 105.51667  23.85000   8.683333  88.18333  66.85000  77.016667\n [7,]  35.58571  44.87143  91.30000  95.300000 125.01429  64.30000  49.014286\n [8,]  47.63750 120.63750  24.38750  84.387500 104.13750  23.26250  51.012500\n [9,]  24.45556  69.90000  82.45556   5.011111  75.90000  50.45556   5.566667\n[10,]  28.71000  39.71000  56.11000  52.910000  75.71000  72.41000  17.110000\n           [,8]      [,9]\n [1,] 435.10000 193.10000\n [2,] 311.05000 293.05000\n [3,] 331.36667 322.36667\n [4,] 177.77500   4.02500\n [5,]  27.22000  35.62000\n [6,]  64.68333 159.85000\n [7,] 135.58571  92.44286\n [8,] 123.88750  29.88750\n [9,]  97.45556  79.12222\n[10,]  15.71000  59.91000\n\n, , 4\n\n           [,1]      [,2]      [,3]      [,4]      [,5]       [,6]      [,7]\n [1,] 933.10000 967.10000 863.10000 827.10000 402.10000 557.100000 112.10000\n [2,] 180.55000 369.55000  44.55000 316.05000  78.55000  68.550000 159.55000\n [3,] 112.36667 318.03333 106.36667  82.03333  52.03333 139.366667 237.03333\n [4,] 151.02500 204.02500 188.27500  65.52500 176.27500   3.525000 134.77500\n [5,] 186.62000  46.02000 105.02000 164.22000  10.42000  88.820000 121.02000\n [6,] 155.51667  95.18333   6.35000 153.85000 143.68333  90.183333 109.18333\n [7,]  45.58571  68.87143 101.44286 126.58571 114.58571  88.157143  26.15714\n [8,]  16.38750  96.38750   5.38750 103.63750 106.63750  83.387500  64.01250\n [9,]  11.23333  99.01111  13.23333  95.23333  78.56667   6.788889  50.90000\n[10,]  91.61000  32.01000  97.11000  93.41000  98.31000   5.210000  53.81000\n           [,8]      [,9]\n [1,] 583.10000 305.10000\n [2,] 195.55000   1.55000\n [3,] 227.36667 243.03333\n [4,]  78.27500  39.27500\n [5,]  44.02000 140.22000\n [6,] 118.01667  41.01667\n [7,]   6.30000  33.44286\n [8,]  37.76250  59.63750\n [9,]  27.56667  10.90000\n[10,]  74.01000   3.91000\n\n, , 5\n\n             [,1]      [,2]      [,3]      [,4]      [,5]       [,6]      [,7]\n [1,] 740.1000000 336.10000 260.10000 236.10000 933.10000 290.100000 948.10000\n [2,] 445.5500000 149.05000 464.55000 274.05000  56.05000 483.550000 338.55000\n [3,] 293.7000000 215.03333 284.03333  85.36667 326.03333  17.366667 283.03333\n [4,] 179.7750000  58.02500 115.02500  50.77500  53.02500 100.275000  24.77500\n [5,] 123.2200000  82.62000 147.62000  55.22000 175.22000  51.220000  28.22000\n [6,]  28.3500000  66.85000  18.51667 154.51667 137.18333   9.683333 111.18333\n [7,]   0.4428571 102.01429  72.58571  40.72857  97.01429 136.014286 127.15714\n [8,]   1.1375000  48.88750  47.88750  63.01250  70.26250  33.012500  32.26250\n [9,] 103.7888889  84.12222  38.78889  31.67778 110.12222  18.900000  77.78889\n[10,]  62.2100000  74.41000  21.71000  32.11000   1.01000  92.810000  71.31000\n            [,8]      [,9]\n [1,] 592.100000  19.10000\n [2,] 255.550000   7.55000\n [3,]   2.033333 102.03333\n [4,]  75.775000 103.77500\n [5,]  70.820000  97.62000\n [6,] 107.683333 122.51667\n [7,] 123.014286  40.30000\n [8,]  34.137500  96.76250\n [9,]  46.566667  59.45556\n[10,]  18.810000  50.41000\n\n, , 6\n\n           [,1]      [,2]      [,3]      [,4]        [,5]      [,6]      [,7]\n [1,]  36.10000 237.10000 287.10000 211.10000 903.1000000 481.10000 569.10000\n [2,] 319.05000 119.05000 344.05000 465.05000 392.5500000 438.55000  83.05000\n [3,] 256.36667 318.36667 312.03333 299.03333 120.0333333 235.70000  75.70000\n [4,] 196.27500 202.52500 100.27500  33.02500  54.7750000 102.52500 169.77500\n [5,]  10.62000 160.62000  84.82000 128.42000 132.0200000  84.62000 172.62000\n [6,] 152.01667 113.35000 152.85000  72.68333  18.3500000  49.18333 149.18333\n [7,]  78.58571  95.58571  44.72857  86.58571   0.7285714  77.72857 110.58571\n [8,]  79.01250 101.13750  48.01250  50.13750  40.0125000   2.88750  99.01250\n [9,]  22.45556  94.23333  35.56667  89.34444  27.1222222  58.34444  17.67778\n[10,]  54.31000   7.81000  38.01000  32.91000  45.2100000  25.61000  10.71000\n             [,8]      [,9]\n [1,] 770.1000000 837.10000\n [2,] 377.0500000 356.55000\n [3,] 208.7000000 258.70000\n [4,] 164.7750000 112.02500\n [5,] 196.4200000  75.82000\n [6,]  50.3500000 158.35000\n [7,]  30.5857143 111.01429\n [8,]  48.5125000   4.13750\n [9,]   0.1222222  46.01111\n[10,]  54.0100000  31.41000\n\n, , 7\n\n          [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]\n [1,] 605.1000 628.10000 121.10000 252.10000 539.10000 358.10000 173.10000\n [2,] 241.0500 221.05000 390.55000  30.55000 100.05000 352.05000 274.55000\n [3,] 202.0333 198.03333 159.03333 196.70000 114.36667 216.36667 178.03333\n [4,] 182.0250  61.27500  77.27500  37.52500  61.52500  97.02500 154.77500\n [5,] 159.8200 178.42000 163.42000  80.22000  69.62000 154.42000  22.82000\n [6,] 151.0167 144.01667 138.01667 142.01667  96.01667 101.68333  29.68333\n [7,] 112.8714  62.30000  49.87143  95.72857 119.72857 125.01429  55.44286\n [8,]  22.0125 115.01250  21.63750  14.88750  75.51250  70.13750 111.76250\n [9,]  79.9000  69.01111 105.78889  60.23333  27.90000  13.78889  59.23333\n[10,]  87.7100  29.41000  58.81000  52.61000   3.81000   5.21000  26.91000\n           [,8]      [,9]\n [1,] 257.10000 944.10000\n [2,] 494.05000 145.55000\n [3,] 102.36667  84.36667\n [4,]  99.02500 249.02500\n [5,] 183.02000  72.82000\n [6,] 162.68333  62.01667\n [7,] 107.30000  53.58571\n [8,]  21.01250  86.51250\n [9,]  46.12222  34.34444\n[10,]  55.11000  39.21000\n\n, , 8\n\n           [,1]      [,2]      [,3]       [,4]      [,5]      [,6]      [,7]\n [1,] 950.10000 844.10000 578.10000 555.100000 985.10000 653.10000 531.10000\n [2,] 150.05000 301.05000  17.55000 235.050000 117.55000 473.55000 194.55000\n [3,] 285.36667  49.36667  10.03333 190.700000 117.70000  53.70000 221.70000\n [4,] 162.02500  42.02500 223.02500 166.525000 228.52500 174.52500 169.02500\n [5,]  40.42000 148.62000 151.62000  78.820000  87.22000  16.02000  41.62000\n [6,] 140.85000  74.01667  90.01667   4.350000 163.85000  24.85000  20.85000\n [7,]  66.44286  83.58571  23.30000   6.014286  89.87143  22.01429 103.15714\n [8,]  17.01250  69.01250  64.51250  99.262500 123.51250  28.76250   0.26250\n [9,]  23.90000  53.12222  32.90000  33.900000  53.23333  77.67778  72.78889\n[10,]   5.61000  23.21000  29.51000  34.710000  46.51000  18.41000  50.21000\n           [,8]      [,9]\n [1,]  68.10000 782.10000\n [2,] 423.05000 122.05000\n [3,]  96.36667 100.70000\n [4,]  64.52500 134.77500\n [5,]  40.62000  41.82000\n [6,]  68.85000  91.68333\n [7,]  32.87143  29.15714\n [8,]  71.13750 106.38750\n [9,]  13.34444  94.34444\n[10,]  68.31000  10.21000\n\nbc.d(x, y, \"^\")\n\n, , 1\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 3.681000e+02 2.821000e+02 2.151000e+02 7.021000e+02 6.671000e+02\n [2,] 8.706756e+05 2.874032e+05 5.536848e+05 4.084488e+05 9.045912e+05\n [3,] 3.859874e+08 1.265816e+08 4.951014e+08 2.889359e+08 1.540769e+08\n [4,] 6.593135e+11 7.840766e+07 2.640287e+10 5.864497e+11 1.394598e+11\n [5,] 1.847332e+13 3.778009e+14 5.908181e+14 1.831070e+14 6.075203e+13\n [6,] 5.534225e+17 1.190109e+13 4.827084e+15 4.750104e+03 1.075757e+15\n [7,] 1.425846e+20 1.729255e+19 2.516358e+20 1.383389e+10 4.874875e+16\n [8,] 7.716315e+16 3.179956e+17 2.885333e+23 5.972234e+22 1.776448e+21\n [9,] 1.192172e+20 1.043872e+23 5.626551e+26 1.315034e+21 3.591720e+16\n[10,] 1.570715e+28 7.263114e+27 9.144812e+29 5.207264e+27 6.783306e+20\n              [,6]         [,7]         [,8]         [,9]\n [1,] 6.391000e+02 7.081000e+02 4.441000e+02 3.231000e+02\n [2,] 1.815612e+05 4.004001e+04 4.721064e+05 3.957668e+05\n [3,] 1.106611e+08 1.304010e+08 6.296432e+08 8.850125e+08\n [4,] 8.391300e+11 8.080097e+11 2.825761e+02 2.749123e+11\n [5,] 2.311986e+14 3.860463e+12 3.386460e+13 1.973787e+13\n [6,] 3.096293e+14 6.318138e+16 6.936624e+10 1.132803e+12\n [7,] 8.203073e+20 4.260428e+19 2.271034e+18 4.646600e+17\n [8,] 1.316259e+23 2.366722e+19 1.433166e+21 6.914956e+22\n [9,] 2.938057e+23 2.470134e+26 5.773066e+22 5.262677e+21\n[10,] 7.627654e+27 9.757054e+21 4.536781e+26 1.264795e+27\n\n, , 2\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 7.891000e+02 4.411000e+02 5.091000e+02 8.661000e+02 7.891000e+02\n [2,] 1.673628e+05 7.294868e+05 2.917080e+05 2.209940e+05 3.137120e+05\n [3,] 1.371331e+06 5.257533e+08 2.384433e+08 4.402437e+07 2.150295e+08\n [4,] 9.224050e+10 3.751505e+10 3.572257e+11 3.085110e+10 1.251858e+09\n [5,] 5.937778e+09 7.580279e+14 3.008953e+12 2.271575e+13 1.786551e+12\n [6,] 2.005900e+17 1.132803e+12 1.868433e+14 5.259377e+16 4.552969e+17\n [7,] 5.068247e+19 2.347992e+18 3.571352e+18 1.505082e+19 6.835509e+20\n [8,] 5.938219e+20 4.125902e+19 1.459366e+21 1.905855e+21 2.039893e+13\n [9,] 2.408869e+16 3.545503e+18 6.171445e+19 2.459431e+21 9.452572e+20\n[10,] 2.025599e+21 7.145132e+27 7.752777e+27 8.590709e+21 1.278764e+25\n              [,6]         [,7]         [,8]         [,9]\n [1,] 7.621000e+02 8.051000e+02 5.561000e+02 8.221000e+02\n [2,] 9.862476e+05 6.740410e+03 7.904988e+05 2.684276e+05\n [3,] 2.633789e+06 6.655281e+06 7.204323e+07 4.913558e+08\n [4,] 7.170872e+05 4.098048e+11 1.864343e+11 8.251899e+11\n [5,] 1.012532e+13 5.745896e+14 1.170142e+14 5.806966e+12\n [6,] 2.389144e+14 4.021967e+13 1.080120e+17 1.915812e+14\n [7,] 2.858362e+18 2.858362e+18 7.798327e+14 5.625323e+20\n [8,] 9.474221e+19 5.203878e+22 5.473971e+20 2.153397e+11\n [9,] 8.796043e+15 5.621197e+22 3.150098e+16 8.736206e+26\n[10,] 9.713755e+29 3.099269e+25 8.673058e+28 2.595496e+28\n\n, , 3\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 5.901000e+02 6.371000e+02 7.291000e+02 9.421000e+02 4.091000e+02\n [2,] 7.449416e+05 2.071160e+05 5.640010e+03 4.571112e+05 5.838488e+05\n [3,] 1.843172e+08 3.748054e+05 1.401495e+07 8.524209e+07 1.414208e+05\n [4,] 6.981919e+11 1.000400e+12 2.935941e+11 1.412945e+11 6.514558e+09\n [5,] 2.856602e+13 4.707006e+14 4.901691e+14 2.615994e+11 5.401408e+14\n [6,] 3.652840e+12 6.439229e+16 8.586928e+12 1.999983e+10 2.193949e+16\n [7,] 5.951358e+16 3.016307e+17 4.354935e+19 5.879448e+19 3.930102e+20\n [8,] 4.449504e+20 7.526248e+23 2.099221e+18 4.314643e+22 2.320476e+23\n [9,] 1.212217e+21 1.543395e+25 6.825931e+25 7.719495e+14 3.238609e+25\n[10,] 3.804801e+24 9.749871e+25 3.093162e+27 1.719403e+27 6.187746e+28\n              [,6]         [,7]         [,8]         [,9]\n [1,] 6.281000e+02 9.121000e+02 4.351000e+02 1.931000e+02\n [2,] 2.280100e+02 4.901400e+05 3.870084e+05 3.435132e+05\n [3,] 5.368568e+06 2.102071e+06 9.824042e+08 9.045116e+08\n [4,] 6.091226e+08 8.856579e+11 2.556953e+11 6.718982e+04\n [5,] 7.823711e+14 1.599483e+14 4.669718e+10 1.791924e+11\n [6,] 4.164050e+15 9.736790e+15 3.417133e+15 7.783651e+17\n [7,] 3.742511e+18 5.596868e+17 6.937194e+20 4.751162e+19\n [8,] 1.438702e+18 7.693656e+20 9.309788e+23 1.068161e+19\n [9,] 8.210385e+23 1.988564e+15 3.072147e+26 4.708351e+25\n[10,] 3.962648e+28 2.150305e+22 9.157182e+21 5.956528e+27\n\n, , 4\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 9.331000e+02 9.671000e+02 8.631000e+02 8.271000e+02 4.021000e+02\n [2,] 1.303932e+05 5.462688e+05 7.938810e+03 3.995504e+05 2.468041e+04\n [3,] 3.830683e+07 8.685237e+08 3.249230e+07 1.490510e+07 3.803721e+06\n [4,] 1.331789e+11 4.435816e+11 3.216700e+11 4.719197e+09 2.471740e+11\n [5,] 7.073607e+14 6.450347e+11 3.992180e+13 3.732332e+14 3.838739e+08\n [6,] 6.600383e+17 3.469548e+16 3.058791e+09 6.187177e+17 4.105309e+17\n [7,] 3.368896e+17 6.052850e+18 9.104091e+19 4.289228e+20 2.135992e+20\n [8,] 8.726127e+16 1.249930e+23 1.190743e+13 2.232828e+23 2.805431e+23\n [9,] 1.103470e+18 3.542729e+26 4.821763e+18 2.496223e+26 4.419036e+25\n[10,] 4.163215e+29 1.129423e+25 7.458295e+29 5.057475e+29 8.432900e+29\n              [,6]         [,7]         [,8]         [,9]\n [1,] 5.571000e+02 1.121000e+02 5.831000e+02 3.051000e+02\n [2,] 1.879641e+04 1.018248e+05 1.529592e+05 9.610000e+00\n [3,] 7.308706e+07 3.595771e+08 3.173541e+08 3.875799e+08\n [4,] 3.952542e+04 8.446511e+10 9.610197e+09 6.091226e+08\n [5,] 1.727444e+13 8.112146e+13 5.165355e+11 1.693947e+14\n [6,] 2.509951e+16 7.903976e+16 1.260572e+17 2.221620e+14\n [7,] 3.407916e+19 6.899513e+15 3.243920e+11 3.853097e+16\n [8,] 3.922180e+22 4.729750e+21 6.937545e+19 2.684574e+21\n [9,] 1.186782e+16 8.884697e+23 3.561565e+21 8.414360e+17\n[10,] 1.473592e+17 2.035307e+27 4.930648e+28 8.351559e+15\n\n, , 5\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 7.401000e+02 3.361000e+02 2.601000e+02 2.361000e+02 9.331000e+02\n [2,] 7.940592e+05 8.886361e+04 8.632268e+05 3.004136e+05 1.256641e+04\n [3,] 6.840307e+08 2.684610e+08 6.186880e+08 1.679688e+07 9.357283e+08\n [4,] 2.673974e+11 2.902021e+09 4.481351e+10 1.701530e+09 2.023777e+09\n [5,] 8.876792e+13 1.203029e+13 2.190665e+14 1.604472e+12 5.161411e+14\n [6,] 2.422289e+13 4.164050e+15 1.880548e+12 6.349792e+17 3.109679e+17\n [7,] 2.751261e+03 9.469199e+19 8.742676e+18 1.531019e+17 6.660949e+19\n [8,] 4.702525e+07 5.473971e+20 4.639778e+20 4.169976e+21 9.965720e+21\n [9,] 5.414275e+26 8.172957e+25 7.701027e+22 1.244443e+22 9.226931e+26\n[10,] 8.681645e+27 5.203710e+28 2.325939e+23 1.165207e+25 1.104622e+10\n              [,6]         [,7]         [,8]         [,9]\n [1,] 2.901000e+02 9.481000e+02 5.921000e+02 1.910000e+01\n [2,] 9.352824e+05 4.584644e+05 2.612232e+05 2.280100e+02\n [3,] 1.414208e+05 6.121763e+08 2.269810e+02 2.868072e+07\n [4,] 2.588276e+10 9.644831e+07 8.440025e+09 2.969005e+10\n [5,] 1.101661e+12 5.592874e+10 5.567108e+12 2.770410e+13\n [6,] 3.846421e+10 8.813444e+16 7.274421e+16 1.577897e+17\n [7,] 7.092151e+20 4.426614e+20 3.510550e+20 1.421745e+17\n [8,] 2.366722e+19 1.969264e+19 3.094380e+19 1.289367e+23\n [9,] 1.192172e+20 4.040552e+25 3.988953e+23 3.596786e+24\n[10,] 4.741849e+29 3.400199e+28 5.544826e+22 1.059661e+27\n\n, , 6\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 3.610000e+01 2.371000e+02 2.871000e+02 2.111000e+02 9.031000e+02\n [2,] 4.071716e+05 5.669161e+04 4.734816e+05 8.650860e+05 6.163820e+05\n [3,] 4.549340e+08 8.712575e+08 8.202887e+08 7.219757e+08 4.669489e+07\n [4,] 3.799268e+11 4.306798e+11 2.588276e+10 3.045168e+08 2.304462e+09\n [5,] 4.221556e+08 3.340782e+14 1.371960e+13 1.091474e+14 1.253282e+14\n [6,] 5.757776e+17 9.895475e+16 5.949770e+17 6.878861e+15 1.781246e+12\n [7,] 1.524374e+19 6.003952e+19 2.949725e+17 3.004761e+19 8.974107e+04\n [8,] 2.548510e+22 1.836613e+23 4.737557e+20 6.699175e+20 1.102263e+20\n [9,] 5.624667e+20 2.269988e+26 3.528345e+22 1.405370e+26 3.076876e+21\n[10,] 2.232534e+27 8.443263e+18 6.294753e+25 1.490318e+25 3.567345e+26\n              [,6]         [,7]         [,8]         [,9]\n [1,] 4.811000e+02 5.691000e+02 7.701000e+02 8.371000e+02\n [2,] 7.693044e+05 2.758921e+04 5.686668e+05 5.085116e+05\n [3,] 3.535432e+08 1.171255e+07 2.454320e+08 4.674693e+08\n [4,] 2.828519e+10 2.126841e+11 1.887145e+11 4.031807e+10\n [5,] 1.355861e+13 4.789670e+14 9.136473e+14 7.830129e+12\n [6,] 6.604125e+14 5.143152e+17 7.601588e+14 7.355563e+17\n [7,] 1.411728e+19 1.665634e+20 2.062133e+16 1.711348e+20\n [8,] 8.107666e+10 1.549673e+23 5.146940e+20 1.440867e+12\n [9,] 3.035136e+24 6.531781e+19 2.357948e+00 3.580528e+23\n[10,] 1.213656e+24 1.985613e+20 2.112233e+27 9.347153e+24\n\n, , 7\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 6.051000e+02 6.281000e+02 1.211000e+02 2.521000e+02 5.391000e+02\n [2,] 2.324204e+05 1.954524e+05 6.101172e+05 3.733210e+03 4.004001e+04\n [3,] 2.226552e+08 2.096905e+08 1.085996e+08 2.054834e+08 4.038891e+07\n [4,] 2.810374e+11 3.608887e+09 9.128429e+09 5.076014e+08 3.668145e+09\n [5,] 3.258409e+14 5.650250e+14 3.642303e+14 1.038158e+13 5.111168e+12\n [6,] 5.534225e+17 4.162785e+17 3.224755e+17 3.827748e+17 3.655841e+16\n [7,] 1.922093e+20 2.999871e+18 6.319009e+17 6.067047e+19 2.904497e+20\n [8,] 9.248576e+17 5.136653e+23 8.060770e+17 4.048500e+16 1.773661e+22\n [9,] 5.141663e+25 1.375478e+25 6.428995e+26 4.043102e+24 3.968445e+21\n[10,] 2.694580e+29 4.841169e+24 4.948936e+27 1.624363e+27 6.445398e+15\n              [,6]         [,7]         [,8]         [,9]\n [1,] 3.581000e+02 1.731000e+02 2.571000e+02 9.441000e+02\n [2,] 4.957568e+05 3.015108e+05 9.763416e+05 8.473921e+04\n [3,] 2.734858e+08 1.523589e+08 2.896273e+07 1.621349e+07\n [4,] 2.268687e+10 1.469072e+11 2.461611e+10 9.844910e+11\n [5,] 2.743897e+14 1.933874e+10 6.417159e+14 6.398872e+12\n [6,] 5.157107e+16 3.191417e+13 8.649000e+17 2.654349e+15\n [7,] 3.930102e+20 1.326189e+18 1.348604e+20 1.044791e+18\n [8,] 9.824765e+21 4.084028e+23 6.375903e+17 5.264423e+22\n [9,] 6.981456e+18 3.477588e+24 3.659103e+23 2.575675e+22\n[10,] 1.473592e+17 1.991301e+24 2.584069e+27 8.589511e+25\n\n, , 8\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 9.501000e+02 8.441000e+02 5.781000e+02 5.551000e+02 9.851000e+02\n [2,] 9.006001e+04 3.625244e+05 1.232010e+03 2.209940e+05 5.527201e+04\n [3,] 6.274419e+08 3.248368e+06 2.727090e+04 1.872474e+08 4.402437e+07\n [4,] 1.764282e+11 7.984925e+08 6.333651e+11 1.968601e+11 6.981919e+11\n [5,] 3.371565e+11 2.265877e+14 2.503989e+14 9.506752e+12 1.577359e+13\n [6,] 3.642911e+17 7.671577e+15 2.482247e+16 3.161135e+08 9.027888e+17\n [7,] 4.707869e+18 2.347527e+19 3.070278e+15 2.344092e+11 3.899759e+19\n [8,] 1.177240e+17 8.632607e+21 5.033509e+21 1.581254e+23 9.086721e+23\n [9,] 9.857430e+20 1.305175e+24 1.749628e+22 2.290761e+22 1.329951e+24\n[10,] 3.087654e+17 4.536818e+23 5.008320e+24 2.538319e+25 4.736564e+26\n              [,6]         [,7]         [,8]         [,9]\n [1,] 6.531000e+02 5.311000e+02 6.810000e+01 7.821000e+02\n [2,] 8.969984e+05 1.513988e+05 7.158852e+05 5.958481e+04\n [3,] 4.181062e+06 2.942123e+08 2.416263e+07 2.757098e+07\n [4,] 2.375038e+11 2.089507e+11 4.437639e+09 8.446511e+10\n [5,] 3.297331e+09 3.902657e+11 3.455808e+11 3.997331e+11\n [6,] 1.098666e+13 3.833044e+12 4.969711e+15 2.771085e+16\n [7,] 2.063567e+15 1.023721e+20 3.415201e+16 1.475370e+16\n [8,] 7.858379e+18 3.782286e+02 1.100294e+22 2.753244e+23\n [9,] 3.988905e+25 2.222125e+25 5.198608e+18 2.294191e+26\n[10,] 4.472372e+22 1.018362e+27 2.212294e+28 1.230998e+20\n\nbc.d(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.d(x, y, \"!=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.d(x, y, \"&lt;\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.d(x, y, \"&gt;\")\n\n, , 1\n\n      [,1] [,2] [,3]  [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE FALSE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] FALSE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4]  [,5] [,6] [,7]  [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE FALSE TRUE TRUE  TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE FALSE TRUE\n[10,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6]  [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n\nbc.d(x, y, \"&lt;=\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.d(x, y, \"&gt;=\")\n\n, , 1\n\n      [,1] [,2] [,3]  [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE FALSE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] FALSE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,]  TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4]  [,5] [,6] [,7]  [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE FALSE TRUE TRUE  TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE FALSE TRUE\n[10,] TRUE TRUE TRUE TRUE  TRUE TRUE TRUE  TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6]  [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE"
  },
  {
    "objectID": "man/outer-like functions/bc.list.html",
    "href": "man/outer-like functions/bc.list.html",
    "title": "bc.list",
    "section": "",
    "text": "The bc.list() function performs broadcasted operations on 2 Recursive arrays. \n\n\n\nbc.list(x, y, f)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable Recursive arrays (i.e. arrays of type list).\n\n\n\n\nf\n\n\na function that takes in exactly 2 arguments, and returns a result that can be stored in a single element of a list. \n\n\n\n\n\n\n\nA recursive array. \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(c(10, 2,2))\nx.len &lt;- prod(x.dim)\n\ngen &lt;- function(n) sample(list(letters, month.abb, 1:10), n, TRUE)\n\nx &lt;- array(gen(10), x.dim)\ny &lt;- array(gen(10), c(10,1,1))\n\nbc.list(\n  x, y,\n  \\(x, y)c(length(x) == length(y), typeof(x) == typeof(y))\n)\n\n, , 1\n\n      [,1]      [,2]     \n [1,] logical,2 logical,2\n [2,] logical,2 logical,2\n [3,] logical,2 logical,2\n [4,] logical,2 logical,2\n [5,] logical,2 logical,2\n [6,] logical,2 logical,2\n [7,] logical,2 logical,2\n [8,] logical,2 logical,2\n [9,] logical,2 logical,2\n[10,] logical,2 logical,2\n\n, , 2\n\n      [,1]      [,2]     \n [1,] logical,2 logical,2\n [2,] logical,2 logical,2\n [3,] logical,2 logical,2\n [4,] logical,2 logical,2\n [5,] logical,2 logical,2\n [6,] logical,2 logical,2\n [7,] logical,2 logical,2\n [8,] logical,2 logical,2\n [9,] logical,2 logical,2\n[10,] logical,2 logical,2"
  },
  {
    "objectID": "man/outer-like functions/bc.list.html#broadcasted-operations-for-recursive-arrays",
    "href": "man/outer-like functions/bc.list.html#broadcasted-operations-for-recursive-arrays",
    "title": "bc.list",
    "section": "",
    "text": "The bc.list() function performs broadcasted operations on 2 Recursive arrays. \n\n\n\nbc.list(x, y, f)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable Recursive arrays (i.e. arrays of type list).\n\n\n\n\nf\n\n\na function that takes in exactly 2 arguments, and returns a result that can be stored in a single element of a list. \n\n\n\n\n\n\n\nA recursive array. \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(c(10, 2,2))\nx.len &lt;- prod(x.dim)\n\ngen &lt;- function(n) sample(list(letters, month.abb, 1:10), n, TRUE)\n\nx &lt;- array(gen(10), x.dim)\ny &lt;- array(gen(10), c(10,1,1))\n\nbc.list(\n  x, y,\n  \\(x, y)c(length(x) == length(y), typeof(x) == typeof(y))\n)\n\n, , 1\n\n      [,1]      [,2]     \n [1,] logical,2 logical,2\n [2,] logical,2 logical,2\n [3,] logical,2 logical,2\n [4,] logical,2 logical,2\n [5,] logical,2 logical,2\n [6,] logical,2 logical,2\n [7,] logical,2 logical,2\n [8,] logical,2 logical,2\n [9,] logical,2 logical,2\n[10,] logical,2 logical,2\n\n, , 2\n\n      [,1]      [,2]     \n [1,] logical,2 logical,2\n [2,] logical,2 logical,2\n [3,] logical,2 logical,2\n [4,] logical,2 logical,2\n [5,] logical,2 logical,2\n [6,] logical,2 logical,2\n [7,] logical,2 logical,2\n [8,] logical,2 logical,2\n [9,] logical,2 logical,2\n[10,] logical,2 logical,2"
  },
  {
    "objectID": "Readme.html#overview",
    "href": "Readme.html#overview",
    "title": "broadcast",
    "section": "1 🗺️Overview",
    "text": "1 🗺️Overview\nThe ‘broadcast’ package, as the name suggests, performs “broadcasting” (similar to broadcasting in the ‘Numpy’ module for ‘Python’).\nIn the context of operations involving 2 (or more) arrays, “broadcasting” refers to recycling array dimensions without allocating additional memory, which is considerably faster and more memory-efficient than R’s regular dimensions repetition mechanism.\nPlease read the article “Broadcasting explained” for a more complete explanation of what “broadcasting” is.\n \nAt its core, the ‘broadcast’ package provides 3 functionalities, all 3 related to “broadcasting”:\n \nFirst, ‘broadcast’ provides functions for element-wise outer computations between any 2 arrays.\nThese are similar to base R’s outer() function, but using broadcasting, which is faster and more efficient than the mechanism employed by outer().\nThe outer-like functions provided by ‘broadcast’ are optimised for a large set of operations, including, but not limited to, the following:\n\nrelational operations (like ==, !=, &lt;, &gt;, &lt;=, &gt;=, etc.);\narithmetic operations (like +, -, *, /, ^, etc.);\nBoolean combiner operations (like &, |, xor, etc.);\nstring concatenation, string (in)equality, and string distance (Levenshtein) operations.\n\nBase ‘R’ outer() function has some sloppy rules regarding the dimensions of the output, making it hard to predict the output shape.\nThe outer-like functions provided by ‘broadcast’ have very strict broadcasting rules, making it easy to accurately predict the dimensions of the result.\n \nSecond, ‘broadcast’ provides the bind_array() function, which is an broadcasted and enhanced form of the fantastic abind::abind() function:\n\nbind_array() allows for broadcasting (obviously), whereas abind::abind() does not.\nbind_array() is significantly faster and uses less memory than abind::abind().\nbind_array() also differs from abind::abind() in that it can handle recursive arrays properly; abind::abind() unlists everything to atomic arrays, ruining the structure.\n\n \nThird, ‘broadcast’ provides several generic functions for broadcasting:\n\nbcapply(): a broadcasted apply-like function that works on pairs of arrays.\nbc_ifelse(): a broadcasted ifelse() function. Broadcasts between the yes and no arguments."
  },
  {
    "objectID": "Readme.html#why-use-broadcast",
    "href": "Readme.html#why-use-broadcast",
    "title": "broadcast",
    "section": "2 🤷🏽Why use ‘broadcast’",
    "text": "2 🤷🏽Why use ‘broadcast’\nEfficiency\nBroadcasting dimensions is faster and more memory efficient than repeating dimensions.\nThis is not simply a need for speed.\nEfficient programs use less energy and resources, and is thus better for the environment.\nAs a favoured language for the sciences, ‘R’ should not throw away an opportunity to become more efficient.\nThe Benchmarks show that ‘broadcast’ has a somewhat similar speed as equivalent operations in ‘Numpy’.\n \nConvenience\nBroadcasting can make many applications much easier to write.\nFor Example: Suppose you want to compute some metric on all possible pair-wise combinations of the elements of 2 vectors.\nYou could write slow and ugly nested for-loops…\nBut you can instead also make the vectors orthogonal, and perform the broadcasting computation on the 2 orthogonal vectors.\nThe broadcasted method runs much faster, is faster to type, and easier to reason about, than using the clumsy nested for-loops.\nFor more practical examples, see Examples of Practical Applictaions.\n \nHigh Test Coverage\nThe ‘broadcast’ package has been developed with a set of unit tests that have high (&gt; 95%) coverage.\n \nMinimal Dependencies\nBesides linking to ‘Rcpp’, ‘broadcast’ does not depend on, vendor, link to, include, or otherwise use any external libraries; ‘broadcast’ was essentially made from scratch and can be installed out-of-the-box.\nNot using external libraries brings a number of advantages:\n\nAvoid dependency hell: Every dependency that is added to a software package increases the likelihood of something breaking (AKA “dependency hell”). ‘broadcast’ thus avoids this.\nAvoid wasting resources for translations: Using libraries from other languages, such as ‘xtensor’ (‘C++’) or ‘Numpy’ (‘Python’) means that - at some point - one needs to convert between the structure of R to that of the other language, and vice-versa, which wastes precious time and memory. ‘broadcast’ requires no such translations of structures, and thus does not waste precious time and memory.\nEnsure consistent behaviour: Using libraries from other languages also means one cannot always guarantee consistent behaviour of some operations. For example: both ‘Numpy’ and ‘xtensor’ have only limited support for missing values, whereas ‘R’ supports missing values for both atomic and recursive array/vector types (except type of ‘Raw’). Since ‘broadcast’ does not rely on external libraries, it can ensure consistent behaviour."
  },
  {
    "objectID": "Readme.html#documentation",
    "href": "Readme.html#documentation",
    "title": "broadcast",
    "section": "3 📖Documentation",
    "text": "3 📖Documentation\n\nInstallation:\nBroadcasting Explained:\nExamples of Practical Applications:\nComparisons & Benchmarks:"
  },
  {
    "objectID": "vignettes/b_installation.html",
    "href": "vignettes/b_installation.html",
    "title": "Installation",
    "section": "",
    "text": "To install ‘broadcast’ from GitHub, one may run the following code in ‘R’:\n\n\nremotes::install_github(\"https://github.com/tony-aw/broadcast\")\n\n‘broadcast’ is not a large package per-sé, but it does contain a large amount of compiled code (‘C’ and ‘C++’). Compilation of the package may be slow on some operating systems, especially Linux systems; please be patient. On my own personal laptop (Windows 11), installation takes about 2 minutes.\nIf installation is too slow, one may try to speed up the installation using multi-threading, for example like so:\n\n\nnthreads &lt;- 8L # specify number of threads\nSys.setenv(MAKEFLAGS = paste0(\"-j\", nthreads)) # may speed up installation\n\nremotes::install_github(\"https://github.com/tony-aw/broadcast\")\n\n \nTo attach the package - thus expose its functions to the namespace - please use the following:\n\n\nlibrary(broadcast)\n\n \nTo open the introduction help page of the ‘broadcast’ package, please use any of the following:\n\n\n?broadcast::broadcast\n?broadcast::broadcast_help\n?broadcast::`broadcast-package`"
  },
  {
    "objectID": "vignettes/d_practical_applications.html",
    "href": "vignettes/d_practical_applications.html",
    "title": "Practical Applications",
    "section": "",
    "text": "1 Introduction\nBroadcasting comes up frequent enough in real world problems. This articles gives a few examples of these.\n \n\n\n2 Vector quantization\nThis first example is taken from Numpy’s own documentation.\nThe basic operation in Vector Quantization (VQ) finds the closest point in a set of points, called codes in VQ jargon, to a given point, called the observation. In the very simple, two-dimensional case shown below, the values in observation describe the weight and height of an athlete to be classified. The codes represent different classes of athletes. Finding the closest point requires calculating the distance between observation and each of the codes. The shortest distance provides the best match. In this example, codes[0] is the closest class indicating that the athlete is likely a basketball player.\n\n\nobservation &lt;- array(c(111.0, 188.0), dim = c(1, 2))\ncodes &lt;- array(\n  c(102.0, 203.0,\n    132.0, 193.0,\n    45.0, 155.0,\n    57.0, 173.0),\n  dim = c(4, 2)\n)\n\ndiff &lt;- bc.num(codes, observation, \"-\")\ndist &lt;- apply(diff^2, 2L, sum) |&gt; sqrt()\nwhich.min(dist); dist[which.min(dist)]\n#&gt; [1] 1\n#&gt; [1] 125.3395\n\n \n\n\n3 Find most resembling string\nIf you have 2 vectors of strings, and you want to find which pair of strings (one string from each vector), you’ll need to find the string distance of all possible combinations.\nThis can be done very fast and very conveniently with ‘broadcast’, using the following code:\n\nx &lt;- array(month.name)\ny &lt;- array(month.abb, c(1, 12))\n\nout &lt;- bc.str(x, y, \"levenshtein\")\ndimnames(out) &lt;- list(x, y)\nprint(out)\n#&gt;           Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n#&gt; January     4   7   5   6   5   5   5   6   7   7   7   7\n#&gt; February    7   5   6   7   6   7   7   7   7   8   8   7\n#&gt; March       4   5   2   4   3   5   5   5   5   4   5   4\n#&gt; April       5   5   4   2   5   5   4   4   5   5   5   5\n#&gt; May         2   3   1   3   0   3   3   3   3   3   3   3\n#&gt; June        2   4   4   4   4   1   2   3   4   4   4   4\n#&gt; July        3   4   4   4   3   2   1   3   4   4   4   4\n#&gt; August      6   6   6   5   6   5   5   3   6   5   6   6\n#&gt; September   9   7   8   7   9   9   9   9   6   8   9   8\n#&gt; October     7   6   6   6   7   7   7   7   6   4   6   6\n#&gt; November    8   6   7   7   8   8   8   8   7   8   5   7\n#&gt; December    8   6   7   7   8   8   8   8   7   7   8   5"
  },
  {
    "objectID": "vignettes/c_broadcasting_explained.html#example-case",
    "href": "vignettes/c_broadcasting_explained.html#example-case",
    "title": "Broadcasting Explained",
    "section": "2.1 Example case",
    "text": "2.1 Example case\nLet’s start with a simple example.\nConsider 2 orthogonal 1d arrays, namely the column vector x and the row vector y:\n\nx &lt;- array(1:5, c(5, 1))\ny &lt;- array(1:5*10, c(1, 5))\nprint(x)\n#&gt;      [,1]\n#&gt; [1,]    1\n#&gt; [2,]    2\n#&gt; [3,]    3\n#&gt; [4,]    4\n#&gt; [5,]    5\nprint(y)\n#&gt;      [,1] [,2] [,3] [,4] [,5]\n#&gt; [1,]   10   20   30   40   50\n\nSuppose one wishes to compute the outer sum of these 2 vectors.\nThis won’t work in base ‘R’:\n\nx + y\nError in x + y : non-conformable arrays\n\nWhen computing the outer sum of these orthogonal vectors, both vectors need to be recycled to equal size in order to compute the outer computation.\nI.e. x needs its single column to be recycled (in this case) 5 times, and y needs its single row to be recycled 5 times, creating 2 conformable matrices.\n‘R’ provides linear vector recycling, but not recycling of array dimensions. Instead, in base ‘R’ we need to replicate (and thus copy) the array dimensions. This can be done manually, or using outer() |&gt; drop():\n\nx[, rep(1L, 5L)] + y[rep(1L, 5L),]\n#&gt;      [,1] [,2] [,3] [,4] [,5]\n#&gt; [1,]   11   21   31   41   51\n#&gt; [2,]   12   22   32   42   52\n#&gt; [3,]   13   23   33   43   53\n#&gt; [4,]   14   24   34   44   54\n#&gt; [5,]   15   25   35   45   55\n\nouter(x, y, \"+\") |&gt; drop()\n#&gt;      [,1] [,2] [,3] [,4] [,5]\n#&gt; [1,]   11   21   31   41   51\n#&gt; [2,]   12   22   32   42   52\n#&gt; [3,]   13   23   33   43   53\n#&gt; [4,]   14   24   34   44   54\n#&gt; [5,]   15   25   35   45   55"
  },
  {
    "objectID": "vignettes/c_broadcasting_explained.html#what-is-the-problem",
    "href": "vignettes/c_broadcasting_explained.html#what-is-the-problem",
    "title": "Broadcasting Explained",
    "section": "2.2 What is the problem?",
    "text": "2.2 What is the problem?\nWhen x and y are small arrays, like in the above example, there is hardly a problem; but when x and y become larger, the 3 matrices (x is replicated to a matrix, y is replicated to a matrix, and the result is also matrix) also become larger.\nIf the 3 matrices become too large, you may require more memory than is available in your current system, resulting in a message like the following:\n\n&gt; Error: cannot allocate vector of size\n\nThe problem isn’t limited to available memory. As the object sizes increase, the speed decreases. And let’s not forget that computational inefficiency in general is also bad for the environment."
  }
]