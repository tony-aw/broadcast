[
  {
    "objectID": "vignettes/e_benchmarks.html",
    "href": "vignettes/e_benchmarks.html",
    "title": "Benchmarks with Numpy+reticulate",
    "section": "",
    "text": "Introduction\nIn this article, the speed of ‘broadcast’ is compared to the speed of ‘Numpy’ via {reticulate}.\n \n\n\nKeeping comparisons fair\nTo keep the comparisons between ‘broadcast’ and ‘Numpy’+‘reticulate’ fair, a number of measures have been taken:\n\nconversion from Numpy to ‘R’ is DISABLED; this allows for comparing the speed more fairly. When conversion would be enabled, precious time would be wasted to convert from Numpy structures to comparable ‘R’ structures.\ngarbage collection is disabled in reticulate’s Python. In ‘R’, only benchmarks with no garbage collection, or level 0 garbage collection, is used. I feel this keeps the comparisons relatively fair (but it’s not perfect).\n‘R’ has more support for missing values than ‘Numpy’, which also leads to a difference in speed. But both ‘R’ and ‘Numpy’ handle missing values equally in decimal numbers ( 64bit floats in Numpy and 64bit doubles in ‘R’ ), through the NaN construct. Therefore, only operations on decimal numbers are compared.\n\n \n\n\nMany Orthogonal Arrays\n8 pairs of decimal number arrays are created in both ‘R’ and ‘Numpy’. They all have a length of (approximately) 9*10^6 elements. Each pair will have a different number of dimensions, from 2 to 9 (hence 8 pairs of arrays). I.e. a pair of 2d arrays, a pair of 3d arrays, etc.\nThese pairs of arrays are fully orthogonal, thus the maximum amount of broadcasting will be employed.\nFor each pair of array the outer sum is computed using ‘broadcast’ and ‘Numpy’. This computation is repeated 100 times, and the median result is taken.\nThus we get the following code:\n\n# set-up ====\nlibrary(broadcast)\nlibrary(tinycodet)\nimport_as(~rt, \"reticulate\")\nnp &lt;- rt$import(\"numpy\", convert = FALSE)\ngc &lt;- rt$import(\"gc\", convert = FALSE)\nget_times &lt;- function(obj, j) {\n  nms &lt;- names(res$expression)\n  j &lt;- which(nms == j)\n  idx &lt;- rowSums(obj$gc[[j]][, 2:3]) == 0\n  times &lt;- obj$time[[j]][idx]\n  return(times)\n}\ngc$disable()\n\n# loop\nmedian_bc &lt;- median_np &lt;- q1_bc &lt;- q1_np &lt;- q3_bc &lt;- q3_np &lt;- vector(\"numeric\", 8)\ncounter &lt;- 1L\ntarget_len &lt;- 9e6\n\nfor(i in 2:9) {\n  print(i)\n  n &lt;- round(target_len^(1/i)) |&gt; as.integer()\n  len &lt;- n^i\n  cat(\"i = \", i, \"\\n\")\n  cat(\"n = \", n, \"\\n\")\n  cat(\"len = \", len, \"\\n\")\n  x.dims &lt;- rep(c(n, 1L), i - 1)[1:i]\n  y.dims &lt;- rep(c(1L, n), i - 1)[1:i]\n  a.dims &lt;- rt$r_to_py(as.list(x.dims))\n  b.dims &lt;- rt$r_to_py(as.list(y.dims))\n  \n  npa &lt;- np$random$random_sample(a.dims)\n  npb &lt;- np$random$random_sample(b.dims)\n  a &lt;- array(runif(100), x.dims)\n  b &lt;- array(runif(100), y.dims)\n  \n  res &lt;- bench::mark(\n    broadcast = bc.num(a, b, \"+\"),\n    `numpy (NO conversion to R)` = npa + npb,\n    check = FALSE,\n    min_iterations = 100\n  )\n  bc_all &lt;- get_times(res, \"broadcast\")\n  np_all &lt;- get_times(res, \"numpy (NO conversion to R)\")\n  median_bc[counter] &lt;- median(bc_all)\n  median_np[counter] &lt;- median(np_all)\n  q1_bc[counter] &lt;- quantile(bc_all, 0.25)\n  q3_bc[counter] &lt;- quantile(bc_all, 0.75)\n  q1_np[counter] &lt;- quantile(np_all, 0.25)\n  q3_np[counter] &lt;- quantile(np_all, 0.75)\n  \n  counter &lt;- counter + 1L\n}\n\nUsing {tinyplot}, the median, first quartile, and third quartile of the bench-marked computation times are presented in the following graph:\n\n\n\n\n\n \n\n\nLarge non-orthogonal arrays comparisons\nHow about arrays that are not fully orthogonal, but still require a lot of broadcasting in pari-wise computations?\nHere is the benchmark:\n\n\nlibrary(broadcast)\nlibrary(tinycodet)\nimport_as(~rt, \"reticulate\")\nnp &lt;- rt$import(\"numpy\", convert = FALSE)\ngc &lt;- rt$import(\"gc\", convert = FALSE)\ngc$disable()\n\nn &lt;- 26L\nnpa &lt;- np$random$rand(n, 1L, n, 1L, n)\nnpb &lt;- np$random$rand(n, n, 1L, n, 1L)\n\na.dim &lt;- c(n, rep(c(1L, n), 2))\nb.dim &lt;- c(n, rep(c(n, 1L), 2))\na &lt;- array(rnorm(100), a.dim)\nb &lt;- array(rnorm(100), b.dim)\n\nbm_numpy_large &lt;- bench::mark(\n  broadcast = bc.num(a, b, \"+\"),\n  `numpy (no conversion to R)` = npa + npb,\n  check = FALSE,\n  min_iterations = 200,\n)\nsummary(bm_numpy_large)\nggplot2::autoplot(bm_numpy_large)\n\n\n#&gt; # A tibble: 2 × 6\n#&gt;   expression                      min   median `itr/sec` mem_alloc `gc/sec`\n#&gt;   &lt;bch:expr&gt;                 &lt;bch:tm&gt; &lt;bch:tm&gt;     &lt;dbl&gt; &lt;bch:byt&gt;    &lt;dbl&gt;\n#&gt; 1 broadcast                    16.6ms   17.6ms      55.4    90.6MB     27.3\n#&gt; 2 numpy (no conversion to R)   25.4ms   30.9ms      32.4        0B      0"
  },
  {
    "objectID": "vignettes/c_broadcasting_explained.html#example-case",
    "href": "vignettes/c_broadcasting_explained.html#example-case",
    "title": "Broadcasting Explained",
    "section": "2.1 Example case",
    "text": "2.1 Example case\nLet’s start with a simple example.\nConsider 2 orthogonal 1d arrays, namely the column vector x and the row vector y:\n\nx &lt;- array(1:5, c(5, 1))\ny &lt;- array(1:5*10, c(1, 5))\nprint(x)\n#&gt;      [,1]\n#&gt; [1,]    1\n#&gt; [2,]    2\n#&gt; [3,]    3\n#&gt; [4,]    4\n#&gt; [5,]    5\nprint(y)\n#&gt;      [,1] [,2] [,3] [,4] [,5]\n#&gt; [1,]   10   20   30   40   50\n\nSuppose one wishes to compute the outer sum of these 2 vectors.\nThis won’t work in base ‘R’:\n\nx + y\nError in x + y : non-conformable arrays\n\nWhen computing the outer sum of these orthogonal vectors, both vectors need to be recycled to equal size in order to compute the outer computation.\nI.e. x needs its single column to be recycled (in this case) 5 times, and y needs its single row to be recycled 5 times, creating 2 conformable matrices.\n‘R’ provides linear vector recycling, but not recycling of array dimensions. Instead, in base ‘R’ we need to replicate (and thus copy) the array dimensions. This can be done manually, or using outer() |&gt; drop():\n\nx[, rep(1L, 5L)] + y[rep(1L, 5L),]\n#&gt;      [,1] [,2] [,3] [,4] [,5]\n#&gt; [1,]   11   21   31   41   51\n#&gt; [2,]   12   22   32   42   52\n#&gt; [3,]   13   23   33   43   53\n#&gt; [4,]   14   24   34   44   54\n#&gt; [5,]   15   25   35   45   55\n\nouter(x, y, \"+\") |&gt; drop()\n#&gt;      [,1] [,2] [,3] [,4] [,5]\n#&gt; [1,]   11   21   31   41   51\n#&gt; [2,]   12   22   32   42   52\n#&gt; [3,]   13   23   33   43   53\n#&gt; [4,]   14   24   34   44   54\n#&gt; [5,]   15   25   35   45   55"
  },
  {
    "objectID": "vignettes/c_broadcasting_explained.html#what-is-the-problem",
    "href": "vignettes/c_broadcasting_explained.html#what-is-the-problem",
    "title": "Broadcasting Explained",
    "section": "2.2 What is the problem?",
    "text": "2.2 What is the problem?\nWhen x and y are small arrays, like in the above example, there is hardly a problem; but when x and y become larger, the 3 matrices (x is replicated to a matrix, y is replicated to a matrix, and the result is also matrix) also become larger.\nIf the 3 matrices become too large, you may require more memory than is available in your current system, resulting in a message like the following:\n\n&gt; Error: cannot allocate vector of size\n\nThe problem isn’t limited to available memory. As the object sizes increase, the speed decreases. And let’s not forget that computational inefficiency in general is also bad for the environment."
  },
  {
    "objectID": "vignettes/c_broadcasting_explained.html#introducing-broadcasting",
    "href": "vignettes/c_broadcasting_explained.html#introducing-broadcasting",
    "title": "Broadcasting Explained",
    "section": "2.3 Introducing Broadcasting",
    "text": "2.3 Introducing Broadcasting\nIn an operation like outer(x, y, \"+\"), x and y are replicated to become the same size. The thing is, physical replication - and thus copying - of the dimensions of x and y should not be necessary; they only need to be recycled virtually.\nVirtual recycling does not actually physically replicate x and y. Instead, nested loops in ‘C’ and ‘C++’ are used to simulate a recycled array.\nThis is similar to how ‘R’ recycles regular vectors.\nVirtual recycling requires no additional memory (apart from allocating the final end result); it is much faster and much more memory efficient than using the outer() function or something similar.\nAnd that is what broadcasting does: broadcasting provides fast virtual recycling of array dimensions in the context of operations involving 2 (or more) arrays without allocating additional memory.\nIn the earlier example, we used:\n\nx[, rep(1L, 5L)] + y[rep(1L, 5L),]\n#&gt;      [,1] [,2] [,3] [,4] [,5]\n#&gt; [1,]   11   21   31   41   51\n#&gt; [2,]   12   22   32   42   52\n#&gt; [3,]   13   23   33   43   53\n#&gt; [4,]   14   24   34   44   54\n#&gt; [5,]   15   25   35   45   55\n\nouter(x, y, \"+\") |&gt; drop()\n#&gt;      [,1] [,2] [,3] [,4] [,5]\n#&gt; [1,]   11   21   31   41   51\n#&gt; [2,]   12   22   32   42   52\n#&gt; [3,]   13   23   33   43   53\n#&gt; [4,]   14   24   34   44   54\n#&gt; [5,]   15   25   35   45   55\n\nTo compute the outer sum using broadcasting through the ‘broadcast’ package, we can do the following:\n\nlibrary(broadcast)\n\nbc.num(x, y, \"+\")\n#&gt;      [,1] [,2] [,3] [,4] [,5]\n#&gt; [1,]   11   21   31   41   51\n#&gt; [2,]   12   22   32   42   52\n#&gt; [3,]   13   23   33   43   53\n#&gt; [4,]   14   24   34   44   54\n#&gt; [5,]   15   25   35   45   55\n\nThe result is the same (as it should). But as the size of the resulting array increases, the broadcasted functions become more and more efficient in terms of both speed and memory, in comparison with base ‘R’ approaches.\nBenchmarks can be found on the website."
  },
  {
    "objectID": "vignettes/c_broadcasting_explained.html#conformability",
    "href": "vignettes/c_broadcasting_explained.html#conformability",
    "title": "Broadcasting Explained",
    "section": "4.1 Conformability",
    "text": "4.1 Conformability\nBroadcasted operations only work when 2 arrays are conformable for broadcasting.\nConsider again 2 arrays x and y, and their dimensions given by dim(x) and dim(y), respectively.\n‘broadcast’ goes through dim(x) and dim(y), from left (i.e. first dimension / rows) to right (i.e. the last dimension), and checks for each axis i if at least one of the following conditions is TRUE:\n\ndim(x)[i] and dim(y)[i] are equal;\neither dim(x)[i] or dim(y)[i] is 1;\neither dim(x)[i] or dim(y)[i] is non-existing.\n\nif at least one of the above conditions is true for each and every one of the dimensions of x and y, the 2 arrays are compatible for broadcasted operations. If not, they are not compatible, and attempting to perform a broadcasted operations results in an error.\nTo illustrate, let’s check 2 arrays to see if they are compatible:\n\nx &lt;- array(rnorm(10), c(10, 1, 9, 6))\ny &lt;- array(rnorm(10), c(10, 5, 1))\n\n\n\n\n\n\ndim(x)\ndim(y)\ncompatible\nreason\n\n\n\n\n10\n10\nTRUE\nequal\n\n\n1\n5\nTRUE\neither is 1\n\n\n9\n1\nTRUE\neither is 1\n\n\n6\nNA\nTRUE\neither is missing\n\n\n\n\n\n\n\nAs shown in the data.frame above, all dimensions of x and y are compatible.\nTherefore, broadcasted binary operations involving x and y can be performed.\n \nNow let’s look at another 2 arrays, and see if they are compatible:\n\nx &lt;- array(rnorm(10), c(10, 1, 9, 6))\ny &lt;- array(rnorm(10), c(10, 5, 2))\n\n\n\n\n\n\ndim(x)\ndim(y)\ncompatible\nreason\n\n\n\n\n10\n10\nTRUE\nequal\n\n\n1\n5\nTRUE\neither is 1\n\n\n9\n2\nFALSE\nnot equal & neither is 1/missing\n\n\n6\nNA\nTRUE\neither is missing\n\n\n\n\n\n\n\nOne of the dimensions, namely the third dimension, is not compatible. Therefore, these 2 arrays are not conformable for broadcasted operations."
  },
  {
    "objectID": "vignettes/c_broadcasting_explained.html#which-dimensions-are-broadcasted",
    "href": "vignettes/c_broadcasting_explained.html#which-dimensions-are-broadcasted",
    "title": "Broadcasting Explained",
    "section": "4.2 Which dimensions are broadcasted",
    "text": "4.2 Which dimensions are broadcasted\nIn the context of an operation involving exactly 2 arrays, this sub-section explains which dimensions of which array is broadcasted, and which dimension of which array is left as-is.\nThere are 3 scenarios relevant for this explanation.\n \nScenario 1:\nFor some dimension i, dim(x)[i] and dim(y)[i] are equal.\nIn this scenario, no broadcasting needs to occur on that dimension for either array.\n \nScenario 2:\nFor some dimension i, suppose dim(x)[i] == 1 and dim(y)[i] &gt; 1.\nThen dimension dim(x)[i] is broadcasted to size dim(y)[i].\nSimilarly, if dim(x)[i] &gt; 1 and dim(y)[i] == 1, dimension dim(y)[i] is broadcasted to size dim(x)[i].\n \nScenario 3:\nFinally, suppose for some dimension i, dim(x)[i] &gt; 1, and dim(y)[i] is non-existing.\nI.e., x has more dimensions than y.\nIn this case, the missing dimension in y is replaced with a dimensions of size 1, and scenario 2 is used.\nSimilarly, if dim(y)[i] &gt; 1 and dim(x)[i] is non-existing, the missing dimension in x is replaced with a dimension of size 1 and we get back to scenario 2.\nIt does not matter how much difference there is between the number of dimensions of x and the number of dimensions of y: any number of missing dimensions will be replaced with 1, as long as the total number of dimensions for each array does not exceed 16.\n \nIllustration\nTo illustrate, let’s check 2 conformable arrays, and see which dimension of which array is broadcasted by how much\n\nx &lt;- array(rnorm(10), c(10, 1, 1, 9, 6))\ny &lt;- array(rnorm(10), c(10, 1, 5, 1))\n\n\n\n\n\n\ni\ndim(x)\ndim(y)\nbroadcasted\nreason\nnote\n\n\n\n\n1\n10\n10\nneither\ndims equal\n\n\n\n2\n1\n1\nneither\ndims equal\n\n\n\n3\n1\n5\nx\ndim(x)[i] == 1\ndim(x)[i] recycled to size 5\n\n\n4\n9\n1\ny\ndim(y)[i] == 1\ndim(y)[i] recycled to size 9\n\n\n5\n6\nNA\ny\ndim(y)[i] is missing\ndim(y) extended by 1"
  },
  {
    "objectID": "vignettes/a_readme.html#overview",
    "href": "vignettes/a_readme.html#overview",
    "title": "Introduction",
    "section": "🗺️Overview",
    "text": "🗺️Overview\nThe ‘broadcast’ package, as the name suggests, performs “broadcasting” (similar to broadcasting in the ‘Numpy’ module for ‘Python’).\nIn the context of operations involving 2 (or more) arrays, “broadcasting” refers to recycling array dimensions without allocating additional memory, which is considerably faster and more memory-efficient than R’s regular dimensions repetition mechanism.\nPlease read the article “Broadcasting explained” for a more complete explanation of what “broadcasting” is.\n \nAt its core, the ‘broadcast’ package provides 3 functionalities, all 3 related to “broadcasting”:\n \nFirst, ‘broadcast’ provides functions for element-wise outer computations between any 2 arrays.\nThese are similar to base R’s outer() function, but using broadcasting, which is faster and more efficient than the mechanism employed by outer().\nThe outer-like functions provided by ‘broadcast’ are optimised for a large set of operations, including, but not limited to, the following:\n\nrelational operations (like ==, !=, &lt;, &gt;, &lt;=, &gt;=, etc.);\narithmetic operations (like +, -, *, /, ^, etc.);\nBoolean combiner operations (like &, |, xor, etc.);\nstring concatenation, string (in)equality, and string distance (Levenshtein) operations.\n\nBase ‘R’ outer() function has some sloppy rules regarding the dimensions of the output, making it hard to predict the output shape.\nThe outer-like functions provided by ‘broadcast’ have very strict broadcasting rules, making it easy to accurately predict the dimensions of the result.\n \nSecond, ‘broadcast’ provides the bind_array() function, which is an broadcasted and enhanced form of the fantastic abind::abind() function:\n\nbind_array() allows for broadcasting (obviously), whereas abind::abind() does not.\nbind_array() is significantly faster and uses less memory than abind::abind().\nbind_array() also differs from abind::abind() in that it can handle recursive arrays properly; abind::abind() unlists everything to atomic arrays, ruining the structure.\n\n \nThird, ‘broadcast’ provides several generic functions for broadcasting:\n\nbcapply(): a broadcasted apply-like function that works on pairs of arrays.\nbc_ifelse(): a broadcasted ifelse() function. Broadcasts between the yes and no arguments."
  },
  {
    "objectID": "vignettes/a_readme.html#why-use-broadcast",
    "href": "vignettes/a_readme.html#why-use-broadcast",
    "title": "Introduction",
    "section": "🤷🏽Why use ‘broadcast’",
    "text": "🤷🏽Why use ‘broadcast’\nEfficiency\nBroadcasting dimensions is faster and more memory efficient than repeating dimensions.\nThis is not simply a need for speed.\nEfficient programs use less energy and resources, and is thus better for the environment.\nAs a favoured language for the sciences, ‘R’ should not throw away an opportunity to become more efficient.\nThe Benchmarks show that ‘broadcast’ has a somewhat similar speed as equivalent operations in ‘Numpy’.\n \nConvenience\nBroadcasting can make many applications much easier to write.\nFor Example: Suppose you want to compute some metric on all possible pair-wise combinations of the elements of 2 vectors.\nYou could write slow and ugly nested for-loops…\nBut you can instead also make the vectors orthogonal, and perform the broadcasting computation on the 2 orthogonal vectors.\nThe broadcasted method runs much faster, is faster to type, and easier to reason about, than using the clumsy nested for-loops.\nFor more practical examples, see Examples of Practical Applictaions.\n \nHigh Test Coverage\nThe ‘broadcast’ package has been developed with a set of unit tests that have high (&gt; 95%) coverage.\n \nMinimal Dependencies\nBesides linking to ‘Rcpp’, ‘broadcast’ does not depend on, vendor, link to, include, or otherwise use any external libraries; ‘broadcast’ was essentially made from scratch and can be installed out-of-the-box.\nNot using external libraries brings a number of advantages:\n\nAvoid dependency hell: Every dependency that is added to a software package increases the likelihood of something breaking (AKA “dependency hell”). ‘broadcast’ thus avoids this.\nAvoid wasting resources for translations: Using libraries from other languages, such as ‘xtensor’ (‘C++’) or ‘Numpy’ (‘Python’) means that - at some point - one needs to convert between the structure of R to that of the other language, and vice-versa, which wastes precious time and memory. ‘broadcast’ requires no such translations of structures, and thus does not waste precious time and memory.\nEnsure consistent behaviour: Using libraries from other languages also means one cannot always guarantee consistent behaviour of some operations. For example: both ‘Numpy’ and ‘xtensor’ have only limited support for missing values, whereas ‘R’ supports missing values for both atomic and recursive array/vector types (except type of ‘Raw’). Since ‘broadcast’ does not rely on external libraries, it can ensure consistent behaviour."
  },
  {
    "objectID": "vignettes/a_readme.html#documentation",
    "href": "vignettes/a_readme.html#documentation",
    "title": "Introduction",
    "section": "📖Documentation",
    "text": "📖Documentation\n\nInstallation:\nBroadcasting Explained:\nExamples of Practical Applications:\nComparisons & Benchmarks:"
  },
  {
    "objectID": "man/outer/bc.str.html",
    "href": "man/outer/bc.str.html",
    "title": "bc.str",
    "section": "",
    "text": "The bc.str() function performs broadcasted string operations on pairs of arrays.  \n\n\n\nbc.str(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable atomic arrays of typee character.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported concatenation operators: +.  Supported relational operators: ==, !=.  Supported distance operators: levenshtein. \n\n\n\n\n\n\n\nFor concatenation operation:  A character array as a result of the broadcasted concatenation operation.   For relational operation:  A logical array as a result of the broadcasted relational comparison.   For distance operation:  An integer array as a result of the broadcasted distance measurement.  \n\n\n\n\nlibrary(\"broadcast\")\n\n\n# string concatenation:\nx &lt;- array(letters, c(10, 2, 1))\ny &lt;- array(letters, c(10,1,1))\nbc.str(x, y, \"+\")\n\n, , 1\n\n      [,1] [,2]\n [1,] \"aa\" \"ka\"\n [2,] \"bb\" \"lb\"\n [3,] \"cc\" \"mc\"\n [4,] \"dd\" \"nd\"\n [5,] \"ee\" \"oe\"\n [6,] \"ff\" \"pf\"\n [7,] \"gg\" \"qg\"\n [8,] \"hh\" \"rh\"\n [9,] \"ii\" \"si\"\n[10,] \"jj\" \"tj\"\n\n# string (in)equality:\nbc.str(array(letters), array(letters), \"==\")\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.str(array(letters), array(letters), \"!=\")\n\n [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[25] FALSE FALSE\n\n# string distance (Levenshtein):\nx &lt;- array(month.name, c(12, 1))\ny &lt;- array(month.abb, c(1, 12))\nout &lt;- bc.str(x, y, \"levenshtein\")\ndimnames(out) &lt;- list(month.name, month.abb)\nprint(out)\n\n          Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\nJanuary     4   7   5   6   5   5   5   6   7   7   7   7\nFebruary    7   5   6   7   6   7   7   7   7   8   8   7\nMarch       4   5   2   4   3   5   5   5   5   4   5   4\nApril       5   5   4   2   5   5   4   4   5   5   5   5\nMay         2   3   1   3   0   3   3   3   3   3   3   3\nJune        2   4   4   4   4   1   2   3   4   4   4   4\nJuly        3   4   4   4   3   2   1   3   4   4   4   4\nAugust      6   6   6   5   6   5   5   3   6   5   6   6\nSeptember   9   7   8   7   9   9   9   9   6   8   9   8\nOctober     7   6   6   6   7   7   7   7   6   4   6   6\nNovember    8   6   7   7   8   8   8   8   7   8   5   7\nDecember    8   6   7   7   8   8   8   8   7   7   8   5"
  },
  {
    "objectID": "man/outer/bc.str.html#broadcasted-string-operations",
    "href": "man/outer/bc.str.html#broadcasted-string-operations",
    "title": "bc.str",
    "section": "",
    "text": "The bc.str() function performs broadcasted string operations on pairs of arrays.  \n\n\n\nbc.str(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable atomic arrays of typee character.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported concatenation operators: +.  Supported relational operators: ==, !=.  Supported distance operators: levenshtein. \n\n\n\n\n\n\n\nFor concatenation operation:  A character array as a result of the broadcasted concatenation operation.   For relational operation:  A logical array as a result of the broadcasted relational comparison.   For distance operation:  An integer array as a result of the broadcasted distance measurement.  \n\n\n\n\nlibrary(\"broadcast\")\n\n\n# string concatenation:\nx &lt;- array(letters, c(10, 2, 1))\ny &lt;- array(letters, c(10,1,1))\nbc.str(x, y, \"+\")\n\n, , 1\n\n      [,1] [,2]\n [1,] \"aa\" \"ka\"\n [2,] \"bb\" \"lb\"\n [3,] \"cc\" \"mc\"\n [4,] \"dd\" \"nd\"\n [5,] \"ee\" \"oe\"\n [6,] \"ff\" \"pf\"\n [7,] \"gg\" \"qg\"\n [8,] \"hh\" \"rh\"\n [9,] \"ii\" \"si\"\n[10,] \"jj\" \"tj\"\n\n# string (in)equality:\nbc.str(array(letters), array(letters), \"==\")\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.str(array(letters), array(letters), \"!=\")\n\n [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[25] FALSE FALSE\n\n# string distance (Levenshtein):\nx &lt;- array(month.name, c(12, 1))\ny &lt;- array(month.abb, c(1, 12))\nout &lt;- bc.str(x, y, \"levenshtein\")\ndimnames(out) &lt;- list(month.name, month.abb)\nprint(out)\n\n          Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\nJanuary     4   7   5   6   5   5   5   6   7   7   7   7\nFebruary    7   5   6   7   6   7   7   7   7   8   8   7\nMarch       4   5   2   4   3   5   5   5   5   4   5   4\nApril       5   5   4   2   5   5   4   4   5   5   5   5\nMay         2   3   1   3   0   3   3   3   3   3   3   3\nJune        2   4   4   4   4   1   2   3   4   4   4   4\nJuly        3   4   4   4   3   2   1   3   4   4   4   4\nAugust      6   6   6   5   6   5   5   3   6   5   6   6\nSeptember   9   7   8   7   9   9   9   9   6   8   9   8\nOctober     7   6   6   6   7   7   7   7   6   4   6   6\nNovember    8   6   7   7   8   8   8   8   7   8   5   7\nDecember    8   6   7   7   8   8   8   8   7   7   8   5"
  },
  {
    "objectID": "man/outer/bc.i.html",
    "href": "man/outer/bc.i.html",
    "title": "bc.i",
    "section": "",
    "text": "The bc.i() function performs broadcasted integer numeric operations on 2 numeric or logical arrays.   Please note that these operations will treat the input as 53bit integers, and will efficiently truncate when necessary.  Therefore, something like bc.i(1, 1.5, “==”) returns TRUE, because trunc(1.5) equals 1.  \n\n\n\nbc.i(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable logical or numeric arrays.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported arithmetic operators: +, -, *, gcd, ^, pmin, pmax.  Supported relational operators: ==, !=, &lt;, &gt;, &lt;=, &gt;=. \n\n\n\n\n\n\n\nFor arithmetic operators:  A numeric array of whole numbers, as a result of the broadcasted arithmetic operation.  Base ‘R’ supports 53 bit integers, which thus range from approximately -9 quadrillion to +9 quadrillion.  Values outside of this range will be returned as -Inf or Inf, as an extra protection against integer overflow.   For relational operators:  A logical array as a result of the broadcasted integer relational comparison.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(NA, 1.1:1000.1), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\nbc.i(x, y, \"+\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  309  962  919  477  173  936  600  679  392\n [2,]  468  588  723  835  597   97  486  103  455\n [3,]  485  935   76  339  757  947  273  226  767\n [4,]  685  350  324  666   96  318  857  303  391\n [5,]  923  564  890  482  530  841  949  670  964\n [6,]  420  698   14  192  413 1002  410  153  561\n [7,]  226  555  970   59  600  952  980  486  742\n [8,]   80  695  821  197  430  921  187  208  951\n [9,]  158  978  548  536   64  815  309   85  688\n[10,]  369  541  517  196  710  762  729   32  833\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  182  834  666  645  756  548  219  418  595\n [2,]   82  208  262  618  147  279  604   40  874\n [3,]  101  810  844  754  208  830  972  932  132\n [4,]  649  561  764  990  355  407   54  491   58\n [5,]  295   74  111  343  300  663 1004  511  774\n [6,]  520  340  937  547  992  591  915  404  562\n [7,]  494  907  441  967   34  311  585  255  969\n [8,]  118  276  418  913  140  947  435  516  849\n [9,]  968   21  762  120  738  232  464  961  377\n[10,]  723  145  867  833  960  863  542  868  425\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  864  437  440  387  171  247  289  720   64\n [2,]  465  481  689  926   81  449  784   33  651\n [3,]  388  447  649  518  615  193  932  214  660\n [4,]  432  482   68  849  950  763  541  286  809\n [5,]  291  991  892  232  691  770  568  420  701\n [6,]  752   65  639  111  582  808  699  574  168\n [7,]  892  584  142  987  721  473  688  882  539\n [8,]  683   59  698  735  773  440   38  654  824\n [9,]  521  108  593  457  674  233   88  313  648\n[10,]  949  462  647  128  303  440  929  643  927\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  542  584  155  685  470  613   27  551    2\n [2,]  548  794  795  296   36  670  116  381  503\n [3,]  841  283  891  176  736  509  173  109  640\n [4,]  712  781  778  155  735  822   24  269   81\n [5,]  445  126  478  542  958  511  955  632  191\n [6,]  971  255  181   91  598  542  276  271  417\n [7,]  677  578  548   61  297  765  940  366  629\n [8,]  385  265  449  552  441  697  467  872  323\n [9,]  573  403  986  170  783  380  663  421  637\n[10,]  331  167  323  419  483  303   42   76  752\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  922  259  440  877  378  382  339  770  689\n [2,]  211  217   37  702  264  131  669  917  434\n [3,]  299  449  214  937  733  341  375  890  993\n [4,]  638  181  553  319  247  501  476  641   12\n [5,]  639  802  324  404  566  833  149  879  108\n [6,]  707  234  413  846  222  305  413  276  863\n [7,]  390  548  132  945  797  598  689  131  495\n [8,]  533  385  680  815  609  685  217  577  821\n [9,]  349   81  411  594  981  241   19  704  837\n[10,]  134  604  751  770  797  461  793  323  145\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  693  620  136  164  949  169  390   75  274\n [2,]  303  479  458  499  578  349  340   32  418\n [3,]  289  664  198   56  350  995  180  766  211\n [4,]  550  765  621  805  317  811  122  788  679\n [5,]  303   44  379  347  506  738  302  765  459\n [6,]  350  812  899  926  189   43  211  622  254\n [7,]  947  182  681  337   42   81  984  220   51\n [8,]  947  522  854  368  974  323  233  364  725\n [9,]   76   90  168  933  313 1007  130  864  736\n[10,]  313  328  622  186  438   18  364  218  645\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  156  459  690  556  800  624  793  789  100\n [2,]  896  156  558  647  973  492  193  413  454\n [3,]  613  996  107  842  837  743  755  499  503\n [4,]  857  596   50  744  434  281  799  136  775\n [5,]   41  862  769  624  422  415  466  499  278\n [6,]  941  580  640  187   50  232  529  580   24\n [7,]   25  986  124  569  834 1003  272  861  738\n [8,]  185  550  652  870  758  869  891  233  450\n [9,]  326  160   52  930  960  914  169  972  953\n[10,]  996  742  431 1006  813  707  834  592  780\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  392  413  745  966  226  311  940  819  576\n [2,]  871  559   32  831  988  483  887   52  740\n [3,]  900  681  900  124  909  858  403  481  202\n [4,]  980  369  115  223  653  743  930   NA  930\n [5,]  276  554  756  864  521  310   38  757  452\n [6,]  979  235   71  734  574  117   43  767  957\n [7,]  501  969  553  843  564  788  365  826   76\n [8,]   39  325  362  262  135  342   12  448  484\n [9,]  927   63  165  589  788  524  741  839  550\n[10,]  910   85  340   50  913  871  733  596  549\n\nbc.i(x, y, \"-\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  307  960  917  475  171  934  598  677  390\n [2,]  464  584  719  831  593   93  482   99  451\n [3,]  479  929   70  333  751  941  267  220  761\n [4,]  677  342  316  658   88  310  849  295  383\n [5,]  913  554  880  472  520  831  939  660  954\n [6,]  408  686    2  180  401  990  398  141  549\n [7,]  212  541  956   45  586  938  966  472  728\n [8,]   64  679  805  181  414  905  171  192  935\n [9,]  140  960  530  518   46  797  291   67  670\n[10,]  349  521  497  176  690  742  709   12  813\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  180  832  664  643  754  546  217  416  593\n [2,]   78  204  258  614  143  275  600   36  870\n [3,]   95  804  838  748  202  824  966  926  126\n [4,]  641  553  756  982  347  399   46  483   50\n [5,]  285   64  101  333  290  653  994  501  764\n [6,]  508  328  925  535  980  579  903  392  550\n [7,]  480  893  427  953   20  297  571  241  955\n [8,]  102  260  402  897  124  931  419  500  833\n [9,]  950    3  744  102  720  214  446  943  359\n[10,]  703  125  847  813  940  843  522  848  405\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  862  435  438  385  169  245  287  718   62\n [2,]  461  477  685  922   77  445  780   29  647\n [3,]  382  441  643  512  609  187  926  208  654\n [4,]  424  474   60  841  942  755  533  278  801\n [5,]  281  981  882  222  681  760  558  410  691\n [6,]  740   53  627   99  570  796  687  562  156\n [7,]  878  570  128  973  707  459  674  868  525\n [8,]  667   43  682  719  757  424   22  638  808\n [9,]  503   90  575  439  656  215   70  295  630\n[10,]  929  442  627  108  283  420  909  623  907\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  540  582  153  683  468  611   25  549    0\n [2,]  544  790  791  292   32  666  112  377  499\n [3,]  835  277  885  170  730  503  167  103  634\n [4,]  704  773  770  147  727  814   16  261   73\n [5,]  435  116  468  532  948  501  945  622  181\n [6,]  959  243  169   79  586  530  264  259  405\n [7,]  663  564  534   47  283  751  926  352  615\n [8,]  369  249  433  536  425  681  451  856  307\n [9,]  555  385  968  152  765  362  645  403  619\n[10,]  311  147  303  399  463  283   22   56  732\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  920  257  438  875  376  380  337  768  687\n [2,]  207  213   33  698  260  127  665  913  430\n [3,]  293  443  208  931  727  335  369  884  987\n [4,]  630  173  545  311  239  493  468  633    4\n [5,]  629  792  314  394  556  823  139  869   98\n [6,]  695  222  401  834  210  293  401  264  851\n [7,]  376  534  118  931  783  584  675  117  481\n [8,]  517  369  664  799  593  669  201  561  805\n [9,]  331   63  393  576  963  223    1  686  819\n[10,]  114  584  731  750  777  441  773  303  125\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  691  618  134  162  947  167  388   73  272\n [2,]  299  475  454  495  574  345  336   28  414\n [3,]  283  658  192   50  344  989  174  760  205\n [4,]  542  757  613  797  309  803  114  780  671\n [5,]  293   34  369  337  496  728  292  755  449\n [6,]  338  800  887  914  177   31  199  610  242\n [7,]  933  168  667  323   28   67  970  206   37\n [8,]  931  506  838  352  958  307  217  348  709\n [9,]   58   72  150  915  295  989  112  846  718\n[10,]  293  308  602  166  418   -2  344  198  625\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  154  457  688  554  798  622  791  787   98\n [2,]  892  152  554  643  969  488  189  409  450\n [3,]  607  990  101  836  831  737  749  493  497\n [4,]  849  588   42  736  426  273  791  128  767\n [5,]   31  852  759  614  412  405  456  489  268\n [6,]  929  568  628  175   38  220  517  568   12\n [7,]   11  972  110  555  820  989  258  847  724\n [8,]  169  534  636  854  742  853  875  217  434\n [9,]  308  142   34  912  942  896  151  954  935\n[10,]  976  722  411  986  793  687  814  572  760\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  390  411  743  964  224  309  938  817  574\n [2,]  867  555   28  827  984  479  883   48  736\n [3,]  894  675  894  118  903  852  397  475  196\n [4,]  972  361  107  215  645  735  922   NA  922\n [5,]  266  544  746  854  511  300   28  747  442\n [6,]  967  223   59  722  562  105   31  755  945\n [7,]  487  955  539  829  550  774  351  812   62\n [8,]   23  309  346  246  119  326   -4  432  468\n [9,]  909   45  147  571  770  506  723  821  532\n[10,]  890   65  320   30  893  851  713  576  529\n\nbc.i(x, y, \"*\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  308  961  918  476  172  935  599  678  391\n [2,]  932 1172 1442 1666 1190  190  968  202  906\n [3,] 1446 2796  219 1008 2262 2832  810  669 2292\n [4,] 2724 1384 1280 2648  368 1256 3412 1196 1548\n [5,] 4590 2795 4425 2385 2625 4180 4720 3325 4795\n [6,] 2484 4152   48 1116 2442 5976 2424  882 3330\n [7,] 1533 3836 6741  364 4151 6615 6811 3353 5145\n [8,]  576 5496 6504 1512 3376 7304 1432 1600 7544\n [9,] 1341 8721 4851 4743  495 7254 2700  684 6111\n[10,] 3590 5310 5070 1860 7000 7520 7190  220 8230\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  181  833  665  644  755  547  218  417  594\n [2,]  160  412  520 1232  290  554 1204   76 1744\n [3,]  294 2421 2523 2253  615 2481 2907 2787  387\n [4,] 2580 2228 3040 3944 1404 1612  200 1948  216\n [5,] 1450  345  530 1690 1475 3290 4995 2530 3845\n [6,] 3084 2004 5586 3246 5916 3510 5454 2388 3336\n [7,] 3409 6300 3038 6720  189 2128 4046 1736 6734\n [8,]  880 2144 3280 7240 1056 7512 3416 4064 6728\n [9,] 8631  108 6777  999 6561 2007 4095 8568 3312\n[10,] 7130 1350 8570 8230 9500 8530 5320 8580 4150\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  863  436  439  386  170  246  288  719   63\n [2,]  926  958 1374 1848  158  894 1564   62 1298\n [3,] 1155 1332 1938 1545 1836  570 2787  633 1971\n [4,] 1712 1912  256 3380 3784 3036 2148 1128 3220\n [5,] 1430 4930 4435 1135 3430 3825 2815 2075 3480\n [6,] 4476  354 3798  630 3456 4812 4158 3408  972\n [7,] 6195 4039  945 6860 4998 3262 4767 6125 3724\n [8,] 5400  408 5520 5816 6120 3456  240 5168 6528\n [9,] 4608  891 5256 4032 5985 2016  711 2736 5751\n[10,] 9390 4520 6370 1180 2930 4300 9190 6330 9170\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  541  583  154  684  469  612   26  550    1\n [2,] 1092 1584 1586  588   68 1336  228  758 1002\n [3,] 2514  840 2664  519 2199 1518  510  318 1911\n [4,] 2832 3108 3096  604 2924 3272   80 1060  308\n [5,] 2200  605 2365 2685 4765 2530 4750 3135  930\n [6,] 5790 1494 1050  510 3552 3216 1620 1590 2466\n [7,] 4690 3997 3787  378 2030 5306 6531 2513 4354\n [8,] 3016 2056 3528 4352 3464 5512 3672 6912 2520\n [9,] 5076 3546 8793 1449 6966 3339 5886 3708 5652\n[10,] 3210 1570 3130 4090 4730 2930  320  660 7420\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  921  258  439  876  377  381  338  769  688\n [2,]  418  430   70 1400  524  258 1334 1830  864\n [3,]  888 1338  633 2802 2190 1014 1116 2661 2970\n [4,] 2536  708 2196 1260  972 1988 1888 2548   32\n [5,] 3170 3985 1595 1995 2805 4140  720 4370  515\n [6,] 4206 1368 2442 5040 1296 1794 2442 1620 5142\n [7,] 2681 3787  875 6566 5530 4137 4774  868 3416\n [8,] 4200 3016 5376 6456 4808 5416 1672 4552 6504\n [9,] 3060  648 3618 5265 8748 2088   90 6255 7452\n[10,] 1240 5940 7410 7600 7870 4510 7830 3130 1350\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  692  619  135  163  948  168  389   74  273\n [2,]  602  954  912  994 1152  694  676   60  832\n [3,]  858 1983  585  159 1041 2976  531 2289  624\n [4,] 2184 3044 2468 3204 1252 3228  472 3136 2700\n [5,] 1490  195 1870 1710 2505 3665 1485 3800 2270\n [6,] 2064 4836 5358 5520 1098  222 1230 3696 1488\n [7,] 6580 1225 4718 2310  245  518 6839 1491  308\n [8,] 7512 4112 6768 2880 7728 2520 1800 2848 5736\n [9,]  603  729 1431 8316 2736 8982 1089 7695 6543\n[10,] 3030 3180 6120 1760 4280   80 3540 2080 6350\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  155  458  689  555  799  623  792  788   99\n [2,] 1788  308 1112 1290 1942  980  382  822  904\n [3,] 1830 2979  312 2517 2502 2220 2256 1488 1500\n [4,] 3412 2368  184 2960 1720 1108 3180  528 3084\n [5,]  180 4285 3820 3095 2085 2050 2305 2470 1365\n [6,] 5610 3444 3804 1086  264 1356 3138 3444  108\n [7,]  126 6853  819 3934 5789 6972 1855 5978 5117\n [8,] 1416 4336 5152 6896 6000 6888 7064 1800 3536\n [9,] 2853 1359  387 8289 8559 8145 1440 8667 8496\n[10,] 9860 7320 4210 9960 8030 6970 8240 5820 7700\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  391  412  744  965  225  310  939  818  575\n [2,] 1738 1114   60 1658 1972  962 1770  100 1476\n [3,] 2691 2034 2691  363 2718 2565 1200 1434  597\n [4,] 3904 1460  444  876 2596 2956 3704   NA 3704\n [5,] 1355 2745 3755 4295 2580 1525  165 3760 2235\n [6,] 5838 1374  390 4368 3408  666  222 4566 5706\n [7,] 3458 6734 3822 5852 3899 5467 2506 5733  483\n [8,]  248 2536 2832 2032 1016 2672   32 3520 3808\n [9,] 8262  486 1404 5220 7011 4635 6588 7470 4869\n[10,] 9000  750 3300  400 9030 8610 7230 5860 5390\n\nbc.i(x, y, \"gcd\") # greatest common divisor\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    1    1    1    1    2    1    1\n [3,]    1    1    1    3    1    1    3    1    1\n [4,]    1    2    4    2    4    2    1    1    1\n [5,]    1    1    5    1    5    1    1    5    1\n [6,]    6    2    2    6    1    6    2    3    3\n [7,]    1    1    1    1    1    7    7    1    7\n [8,]    8    1    1    1    2    1    1    8    1\n [9,]    1    3    1    1    1    1    3    1    1\n[10,]    1    1    1    2   10    2    1    2    1\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    2    2    1    1    2    2    2\n [3,]    1    3    1    1    1    1    3    1    3\n [4,]    1    1    4    2    1    1    2    1    2\n [5,]    5    1    1    1    5    1    1    1    1\n [6,]    2    2    1    1    2    3    3    2    2\n [7,]    1    1    7    1    1    1    1    1    1\n [8,]    2    4    2    1    4    1    1    4    1\n [9,]    1    3    3    3    9    1    1    1    1\n[10,]    1    5    1    1   10    1    2    2    5\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    1    1    1    2    1    1    2    1    1\n [3,]    1    3    1    1    3    1    1    1    3\n [4,]    4    2    4    1    2    1    1    2    1\n [5,]    1    1    1    1    1    5    1    5    1\n [6,]    2    1    3    3    6    2    3    2    6\n [7,]    1    1    1    7    7    1    1    7    7\n [8,]    1    1    2    1    1    8    2    2    8\n [9,]    1    9    1    1    1    1    1    1    9\n[10,]    1    2    1    2    1   10    1    1    1\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    1    2    2    2    2    1    1\n [3,]    1    1    3    1    1    1    1    1    1\n [4,]    4    1    2    1    1    2    4    1    1\n [5,]    5    1    1    1    1    1    5    1    1\n [6,]    1    3    1    1    2    2    6    1    3\n [7,]    1    1    1    1    1    1    1    1    1\n [8,]    1    1    1    8    1    1    1    8    1\n [9,]    3    1    1    1    9    1    3    1    1\n[10,]    1    1    1    1    1    1    2    2    2\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    1    1    1    2    2    1    1    1    2\n [3,]    1    1    1    1    1    1    3    1    3\n [4,]    2    1    1    1    1    1    4    1    4\n [5,]    1    1    1    1    1    1    1    1    1\n [6,]    1    6    1    6    6    1    1    6    1\n [7,]    1    1    1    7    1    1    1    1    1\n [8,]    1    1    8    1    1    1    1    1    1\n [9,]    1    9    3    9    9    1    1    1    9\n[10,]    2    2    1   10    1    1    1    1    5\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    1    1    2    1    2    1    2    2    2\n [3,]    1    1    3    1    1    1    3    1    1\n [4,]    2    1    1    1    1    1    2    4    1\n [5,]    1    1    1    1    1    1    1    5    1\n [6,]    2    2    1    2    3    1    1    2    2\n [7,]    1    7    1    1    7    1    1    1    1\n [8,]    1    2    2    8    2    1    1    4    1\n [9,]    1    9    3    3    1    1    1    9    1\n[10,]    1    2    2    2    2    2    2    2    5\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    2    1    1    2    1    1    2\n [3,]    1    3    1    1    3    1    1    1    1\n [4,]    1    4    2    4    2    1    1    4    1\n [5,]    1    1    1    1    1    5    1    1    1\n [6,]    1    2    2    1    2    2    1    2    6\n [7,]    1    1    1    1    1    1    1    7    1\n [8,]    1    2    4    2    2    1    1    1    2\n [9,]    1    1    1    3    3    1    1    9    1\n[10,]    2    2    1    2    1    1    2    2   10\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    1    1    2    1    2    1    1    2    2\n [3,]    3    3    3    1    3    3    1    1    1\n [4,]    4    1    1    1    1    1    2   NA    2\n [5,]    1    1    1    1    1    5    1    1    1\n [6,]    1    1    1    2    2    3    1    1    3\n [7,]    1    1    7    1    1    1    1    7    1\n [8,]    1    1    2    2    1    2    4    8    4\n [9,]    9    9    3    1    1    1    3    1    1\n[10,]   10    5   10   10    1    1    1    2    1\n\nbc.i(x, y, \"^\")\n\n, , 1\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 3.080000e+02 9.610000e+02 9.180000e+02 4.760000e+02 1.720000e+02\n [2,] 2.171560e+05 3.433960e+05 5.198410e+05 6.938890e+05 3.540250e+05\n [3,] 1.119802e+08 8.095576e+08 3.890170e+05 3.793306e+07 4.286611e+08\n [4,] 2.150743e+11 1.433192e+10 1.048576e+10 1.920578e+11 7.163930e+07\n [5,] 6.519487e+14 5.458321e+13 5.428956e+14 2.469403e+13 3.988380e+13\n [6,] 5.035030e+15          Inf 2.621440e+05 4.140737e+13 4.545341e+15\n [7,]          Inf          Inf          Inf 1.028072e+12          Inf\n [8,] 7.222041e+14          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf 4.605367e+15\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 9.350000e+02 5.990000e+02 6.780000e+02 3.910000e+02\n [2,] 9.025000e+03 2.342560e+05 1.020100e+04 2.052090e+05\n [3,] 8.412324e+08 1.968300e+07 1.108957e+07 4.459437e+08\n [4,] 9.721171e+09 5.294149e+11 7.992539e+09 2.243075e+10\n [5,] 4.083489e+14 7.496525e+14 1.300494e+14 8.111348e+14\n [6,]          Inf 4.347987e+15 1.009030e+13          Inf\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf 2.655992e+13          Inf\n\n, , 2\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 1.810000e+02 8.330000e+02          665 6.440000e+02 7.550000e+02\n [2,] 6.400000e+03 4.243600e+04        67600 3.794560e+05 2.102500e+04\n [3,] 9.411920e+05 5.255579e+08    594823321 4.235648e+08 8.615125e+06\n [4,] 1.730768e+11 9.625444e+10 333621760000 9.451651e+11 1.517849e+10\n [5,] 2.051115e+12 1.564031e+09  13382255776 4.411472e+12 2.234138e+12\n [6,]          Inf 1.388286e+15          Inf          Inf          Inf\n [7,]          Inf          Inf          Inf          Inf 1.046035e+10\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf 5.159780e+09          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 5.470000e+02 2.180000e+02 4.170000e+02 5.940000e+02\n [2,] 7.672900e+04 3.624040e+05 1.444000e+03 7.603840e+05\n [3,] 5.656093e+08 9.098532e+08 8.017651e+08 2.146689e+06\n [4,] 2.637668e+10 6.250000e+06 5.624913e+10 8.503056e+06\n [5,] 1.233472e+14 9.950100e+14 3.317054e+13 2.689253e+14\n [6,]          Inf          Inf 3.974646e+15          Inf\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 3\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 8.630000e+02 4.360000e+02 4.390000e+02 3.860000e+02 1.700000e+02\n [2,] 2.143690e+05 2.294410e+05 4.719690e+05 8.537760e+05 6.241000e+03\n [3,] 5.706662e+07 8.752838e+07 2.695861e+08 1.365909e+08 2.292209e+08\n [4,] 3.355638e+10 5.220494e+10 1.677722e+07 5.098317e+11 8.008746e+11\n [5,] 1.913507e+12 9.319328e+14 5.490578e+14 6.027390e+11 1.519220e+14\n [6,]          Inf 4.218053e+10          Inf 1.340096e+12          Inf\n [7,]          Inf          Inf 8.172151e+14          Inf          Inf\n [8,]          Inf 4.576794e+13          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 2.460000e+02 2.880000e+02 7.190000e+02 6.300000e+01\n [2,] 1.998090e+05 6.115240e+05 9.610000e+02 4.212010e+05\n [3,] 6.859000e+06 8.017651e+08 9.393931e+06 2.835934e+08\n [4,] 3.318693e+11 8.315668e+10 6.324067e+09 4.199364e+11\n [5,] 2.620035e+14 5.656424e+13 1.230950e+13 1.633226e+14\n [6,]          Inf          Inf          Inf 1.807549e+13\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf 6.561000e+11          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 4\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 5.410000e+02 5.830000e+02 1.540000e+02 6.840000e+02 4.690000e+02\n [2,] 2.981160e+05 6.272640e+05 6.288490e+05 8.643600e+04 1.156000e+03\n [3,] 5.884805e+08 2.195200e+07 7.002271e+08 5.177717e+06 3.938328e+08\n [4,] 2.512656e+11 3.644887e+11 3.588921e+11 5.198856e+08 2.855417e+11\n [5,] 1.649162e+13 2.593742e+10 2.367586e+13 4.465514e+13 7.860759e+14\n [6,]          Inf 2.383395e+14 2.872290e+13 3.771495e+11          Inf\n [7,]          Inf          Inf          Inf 1.338925e+12          Inf\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 6.120000e+02 2.600000e+01 5.500000e+02 1.000000e+00\n [2,] 4.462240e+05 1.299600e+04 1.436410e+05 2.510010e+05\n [3,] 1.295542e+08 4.913000e+06 1.191016e+06 2.584749e+08\n [4,] 4.477269e+11 1.600000e+05 4.931551e+09 3.515304e+07\n [5,] 3.317054e+13 7.737809e+14 9.690311e+13 2.226203e+11\n [6,]          Inf 3.874205e+14 3.463181e+14 4.820043e+15\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf 1.125900e+15          Inf          Inf\n\n, , 5\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 9.210000e+02 2.580000e+02 4.390000e+02 8.760000e+02 3.770000e+02\n [2,] 4.368100e+04 4.622500e+04 1.225000e+03 4.900000e+05 6.864400e+04\n [3,] 2.593434e+07 8.871654e+07 9.393931e+06 8.147805e+08 3.890170e+08\n [4,] 1.615686e+11 9.815062e+08 9.084256e+10 9.845601e+09 3.486784e+09\n [5,] 1.024345e+14 3.215819e+14 3.303341e+12 1.011264e+13 5.556666e+13\n [6,]          Inf 1.404782e+14 4.545341e+15          Inf 1.015600e+14\n [7,]          Inf          Inf 4.768372e+14          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]        [,9]\n [1,] 3.810000e+02 3.380000e+02 7.690000e+02         688\n [2,] 1.664100e+04 4.448890e+05 8.372250e+05      186624\n [3,] 3.861447e+07 5.147885e+07 6.978641e+08   970299000\n [4,] 6.101345e+10 4.963271e+10 1.646485e+11        4096\n [5,] 3.891810e+14 6.191736e+10 5.099847e+14 11592740743\n [6,] 7.145410e+14 4.545341e+15 3.874205e+14         Inf\n [7,]          Inf          Inf 4.507667e+14         Inf\n [8,]          Inf          Inf          Inf         Inf\n [9,]          Inf 1.000000e+09          Inf         Inf\n[10,]          Inf          Inf          Inf         Inf\n\n, , 6\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 6.920000e+02 6.190000e+02 1.350000e+02 1.630000e+02 9.480000e+02\n [2,] 9.060100e+04 2.275290e+05 2.079360e+05 2.470090e+05 3.317760e+05\n [3,] 2.339366e+07 2.888048e+08 7.414875e+06 1.488770e+05 4.178192e+07\n [4,] 8.887315e+10 3.353811e+11 1.449241e+11 4.116518e+11 9.597925e+09\n [5,] 2.350073e+12 9.022420e+07 7.317420e+12 4.678757e+12 3.156375e+13\n [6,] 1.657107e+15          Inf          Inf          Inf 3.755835e+13\n [7,]          Inf 5.026508e+15          Inf          Inf 6.433930e+10\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 1.680000e+02 3.890000e+02 7.400000e+01 2.730000e+02\n [2,] 1.204090e+05 1.142440e+05 9.000000e+02 1.730560e+05\n [3,] 9.761915e+08 5.545233e+06 4.441949e+08 8.998912e+06\n [4,] 4.241253e+11 1.938778e+08 3.778020e+11 2.075941e+11\n [5,] 2.116021e+14 2.310906e+12 2.535525e+14 1.928765e+13\n [6,] 2.565726e+09 7.422038e+13          Inf 2.326538e+14\n [7,] 1.215128e+13          Inf          Inf 3.192778e+11\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,] 1.073742e+09          Inf          Inf          Inf\n\n, , 7\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,]          155 4.580000e+02 6.890000e+02 5.550000e+02 7.990000e+02\n [2,]       799236 2.371600e+04 3.091360e+05 4.160250e+05 9.428410e+05\n [3,]    226981000 9.791467e+08 1.124864e+06 5.905897e+08 5.800937e+08\n [4,] 529414856881 1.228250e+11 4.477456e+06 2.998658e+11 3.418801e+10\n [5,]     60466176 4.622789e+14 2.602956e+14 9.087685e+13 1.260899e+13\n [6,]          Inf          Inf          Inf 3.516183e+13 7.256314e+09\n [7,]    612220032          Inf 3.001242e+14          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf 5.025926e+14          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 6.230000e+02 7.920000e+02 7.880000e+02 9.900000e+01\n [2,] 2.401000e+05 3.648100e+04 1.689210e+05 2.043040e+05\n [3,] 4.052240e+08 4.252590e+08 1.220239e+08 1.250000e+08\n [4,] 5.887339e+09 3.994556e+11 3.035958e+08 3.533601e+11\n [5,] 1.158562e+13 2.082115e+13 2.941946e+13 1.516398e+12\n [6,] 1.332449e+14          Inf          Inf 3.401222e+07\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 8\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 3.910000e+02 4.120000e+02 7.440000e+02 9.650000e+02 2.250000e+02\n [2,] 7.551610e+05 3.102490e+05 9.000000e+02 6.872410e+05 9.721960e+05\n [3,] 7.217343e+08 3.116658e+08 7.217343e+08 1.771561e+06 7.436774e+08\n [4,] 9.074010e+11 1.774890e+10 1.518070e+08 2.300258e+09 1.774103e+11\n [5,] 1.461660e+12 4.987257e+13 2.388909e+14 4.676983e+14 3.658040e+13\n [6,]          Inf 1.442158e+14 7.541889e+10          Inf          Inf\n [7,]          Inf          Inf          Inf          Inf          Inf\n [8,] 8.528910e+11          Inf          Inf          Inf          Inf\n [9,]          Inf 3.904306e+15          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 3.100000e+02          939 8.180000e+02 5.750000e+02\n [2,] 2.313610e+05       783225 2.500000e+03 5.446440e+05\n [3,] 6.250264e+08     64000000 1.092154e+08 7.880599e+06\n [4,] 2.982481e+11 735265090576           NA 7.352651e+11\n [5,] 2.639363e+12     39135393 2.404857e+14 1.784587e+13\n [6,] 1.870415e+12   2565726409          Inf          Inf\n [7,]          Inf          Inf          Inf 7.446353e+12\n [8,]          Inf        65536          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\nbc.i(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE    NA FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.i(x, y, \"!=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]  [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE   NA TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.i(x, y, \"&lt;\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE    NA FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.i(x, y, \"&gt;\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]  [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5]  [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6]  [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE   NA TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n\nbc.i(x, y, \"&lt;=\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE    NA FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.i(x, y, \"&gt;=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5]  [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6]  [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE   NA TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE"
  },
  {
    "objectID": "man/outer/bc.i.html#broadcasted-integer-numeric-operations-with-extra-overflow-protection",
    "href": "man/outer/bc.i.html#broadcasted-integer-numeric-operations-with-extra-overflow-protection",
    "title": "bc.i",
    "section": "",
    "text": "The bc.i() function performs broadcasted integer numeric operations on 2 numeric or logical arrays.   Please note that these operations will treat the input as 53bit integers, and will efficiently truncate when necessary.  Therefore, something like bc.i(1, 1.5, “==”) returns TRUE, because trunc(1.5) equals 1.  \n\n\n\nbc.i(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable logical or numeric arrays.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported arithmetic operators: +, -, *, gcd, ^, pmin, pmax.  Supported relational operators: ==, !=, &lt;, &gt;, &lt;=, &gt;=. \n\n\n\n\n\n\n\nFor arithmetic operators:  A numeric array of whole numbers, as a result of the broadcasted arithmetic operation.  Base ‘R’ supports 53 bit integers, which thus range from approximately -9 quadrillion to +9 quadrillion.  Values outside of this range will be returned as -Inf or Inf, as an extra protection against integer overflow.   For relational operators:  A logical array as a result of the broadcasted integer relational comparison.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(NA, 1.1:1000.1), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\nbc.i(x, y, \"+\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  309  962  919  477  173  936  600  679  392\n [2,]  468  588  723  835  597   97  486  103  455\n [3,]  485  935   76  339  757  947  273  226  767\n [4,]  685  350  324  666   96  318  857  303  391\n [5,]  923  564  890  482  530  841  949  670  964\n [6,]  420  698   14  192  413 1002  410  153  561\n [7,]  226  555  970   59  600  952  980  486  742\n [8,]   80  695  821  197  430  921  187  208  951\n [9,]  158  978  548  536   64  815  309   85  688\n[10,]  369  541  517  196  710  762  729   32  833\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  182  834  666  645  756  548  219  418  595\n [2,]   82  208  262  618  147  279  604   40  874\n [3,]  101  810  844  754  208  830  972  932  132\n [4,]  649  561  764  990  355  407   54  491   58\n [5,]  295   74  111  343  300  663 1004  511  774\n [6,]  520  340  937  547  992  591  915  404  562\n [7,]  494  907  441  967   34  311  585  255  969\n [8,]  118  276  418  913  140  947  435  516  849\n [9,]  968   21  762  120  738  232  464  961  377\n[10,]  723  145  867  833  960  863  542  868  425\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  864  437  440  387  171  247  289  720   64\n [2,]  465  481  689  926   81  449  784   33  651\n [3,]  388  447  649  518  615  193  932  214  660\n [4,]  432  482   68  849  950  763  541  286  809\n [5,]  291  991  892  232  691  770  568  420  701\n [6,]  752   65  639  111  582  808  699  574  168\n [7,]  892  584  142  987  721  473  688  882  539\n [8,]  683   59  698  735  773  440   38  654  824\n [9,]  521  108  593  457  674  233   88  313  648\n[10,]  949  462  647  128  303  440  929  643  927\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  542  584  155  685  470  613   27  551    2\n [2,]  548  794  795  296   36  670  116  381  503\n [3,]  841  283  891  176  736  509  173  109  640\n [4,]  712  781  778  155  735  822   24  269   81\n [5,]  445  126  478  542  958  511  955  632  191\n [6,]  971  255  181   91  598  542  276  271  417\n [7,]  677  578  548   61  297  765  940  366  629\n [8,]  385  265  449  552  441  697  467  872  323\n [9,]  573  403  986  170  783  380  663  421  637\n[10,]  331  167  323  419  483  303   42   76  752\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  922  259  440  877  378  382  339  770  689\n [2,]  211  217   37  702  264  131  669  917  434\n [3,]  299  449  214  937  733  341  375  890  993\n [4,]  638  181  553  319  247  501  476  641   12\n [5,]  639  802  324  404  566  833  149  879  108\n [6,]  707  234  413  846  222  305  413  276  863\n [7,]  390  548  132  945  797  598  689  131  495\n [8,]  533  385  680  815  609  685  217  577  821\n [9,]  349   81  411  594  981  241   19  704  837\n[10,]  134  604  751  770  797  461  793  323  145\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  693  620  136  164  949  169  390   75  274\n [2,]  303  479  458  499  578  349  340   32  418\n [3,]  289  664  198   56  350  995  180  766  211\n [4,]  550  765  621  805  317  811  122  788  679\n [5,]  303   44  379  347  506  738  302  765  459\n [6,]  350  812  899  926  189   43  211  622  254\n [7,]  947  182  681  337   42   81  984  220   51\n [8,]  947  522  854  368  974  323  233  364  725\n [9,]   76   90  168  933  313 1007  130  864  736\n[10,]  313  328  622  186  438   18  364  218  645\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  156  459  690  556  800  624  793  789  100\n [2,]  896  156  558  647  973  492  193  413  454\n [3,]  613  996  107  842  837  743  755  499  503\n [4,]  857  596   50  744  434  281  799  136  775\n [5,]   41  862  769  624  422  415  466  499  278\n [6,]  941  580  640  187   50  232  529  580   24\n [7,]   25  986  124  569  834 1003  272  861  738\n [8,]  185  550  652  870  758  869  891  233  450\n [9,]  326  160   52  930  960  914  169  972  953\n[10,]  996  742  431 1006  813  707  834  592  780\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  392  413  745  966  226  311  940  819  576\n [2,]  871  559   32  831  988  483  887   52  740\n [3,]  900  681  900  124  909  858  403  481  202\n [4,]  980  369  115  223  653  743  930   NA  930\n [5,]  276  554  756  864  521  310   38  757  452\n [6,]  979  235   71  734  574  117   43  767  957\n [7,]  501  969  553  843  564  788  365  826   76\n [8,]   39  325  362  262  135  342   12  448  484\n [9,]  927   63  165  589  788  524  741  839  550\n[10,]  910   85  340   50  913  871  733  596  549\n\nbc.i(x, y, \"-\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  307  960  917  475  171  934  598  677  390\n [2,]  464  584  719  831  593   93  482   99  451\n [3,]  479  929   70  333  751  941  267  220  761\n [4,]  677  342  316  658   88  310  849  295  383\n [5,]  913  554  880  472  520  831  939  660  954\n [6,]  408  686    2  180  401  990  398  141  549\n [7,]  212  541  956   45  586  938  966  472  728\n [8,]   64  679  805  181  414  905  171  192  935\n [9,]  140  960  530  518   46  797  291   67  670\n[10,]  349  521  497  176  690  742  709   12  813\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  180  832  664  643  754  546  217  416  593\n [2,]   78  204  258  614  143  275  600   36  870\n [3,]   95  804  838  748  202  824  966  926  126\n [4,]  641  553  756  982  347  399   46  483   50\n [5,]  285   64  101  333  290  653  994  501  764\n [6,]  508  328  925  535  980  579  903  392  550\n [7,]  480  893  427  953   20  297  571  241  955\n [8,]  102  260  402  897  124  931  419  500  833\n [9,]  950    3  744  102  720  214  446  943  359\n[10,]  703  125  847  813  940  843  522  848  405\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  862  435  438  385  169  245  287  718   62\n [2,]  461  477  685  922   77  445  780   29  647\n [3,]  382  441  643  512  609  187  926  208  654\n [4,]  424  474   60  841  942  755  533  278  801\n [5,]  281  981  882  222  681  760  558  410  691\n [6,]  740   53  627   99  570  796  687  562  156\n [7,]  878  570  128  973  707  459  674  868  525\n [8,]  667   43  682  719  757  424   22  638  808\n [9,]  503   90  575  439  656  215   70  295  630\n[10,]  929  442  627  108  283  420  909  623  907\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  540  582  153  683  468  611   25  549    0\n [2,]  544  790  791  292   32  666  112  377  499\n [3,]  835  277  885  170  730  503  167  103  634\n [4,]  704  773  770  147  727  814   16  261   73\n [5,]  435  116  468  532  948  501  945  622  181\n [6,]  959  243  169   79  586  530  264  259  405\n [7,]  663  564  534   47  283  751  926  352  615\n [8,]  369  249  433  536  425  681  451  856  307\n [9,]  555  385  968  152  765  362  645  403  619\n[10,]  311  147  303  399  463  283   22   56  732\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  920  257  438  875  376  380  337  768  687\n [2,]  207  213   33  698  260  127  665  913  430\n [3,]  293  443  208  931  727  335  369  884  987\n [4,]  630  173  545  311  239  493  468  633    4\n [5,]  629  792  314  394  556  823  139  869   98\n [6,]  695  222  401  834  210  293  401  264  851\n [7,]  376  534  118  931  783  584  675  117  481\n [8,]  517  369  664  799  593  669  201  561  805\n [9,]  331   63  393  576  963  223    1  686  819\n[10,]  114  584  731  750  777  441  773  303  125\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  691  618  134  162  947  167  388   73  272\n [2,]  299  475  454  495  574  345  336   28  414\n [3,]  283  658  192   50  344  989  174  760  205\n [4,]  542  757  613  797  309  803  114  780  671\n [5,]  293   34  369  337  496  728  292  755  449\n [6,]  338  800  887  914  177   31  199  610  242\n [7,]  933  168  667  323   28   67  970  206   37\n [8,]  931  506  838  352  958  307  217  348  709\n [9,]   58   72  150  915  295  989  112  846  718\n[10,]  293  308  602  166  418   -2  344  198  625\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  154  457  688  554  798  622  791  787   98\n [2,]  892  152  554  643  969  488  189  409  450\n [3,]  607  990  101  836  831  737  749  493  497\n [4,]  849  588   42  736  426  273  791  128  767\n [5,]   31  852  759  614  412  405  456  489  268\n [6,]  929  568  628  175   38  220  517  568   12\n [7,]   11  972  110  555  820  989  258  847  724\n [8,]  169  534  636  854  742  853  875  217  434\n [9,]  308  142   34  912  942  896  151  954  935\n[10,]  976  722  411  986  793  687  814  572  760\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  390  411  743  964  224  309  938  817  574\n [2,]  867  555   28  827  984  479  883   48  736\n [3,]  894  675  894  118  903  852  397  475  196\n [4,]  972  361  107  215  645  735  922   NA  922\n [5,]  266  544  746  854  511  300   28  747  442\n [6,]  967  223   59  722  562  105   31  755  945\n [7,]  487  955  539  829  550  774  351  812   62\n [8,]   23  309  346  246  119  326   -4  432  468\n [9,]  909   45  147  571  770  506  723  821  532\n[10,]  890   65  320   30  893  851  713  576  529\n\nbc.i(x, y, \"*\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  308  961  918  476  172  935  599  678  391\n [2,]  932 1172 1442 1666 1190  190  968  202  906\n [3,] 1446 2796  219 1008 2262 2832  810  669 2292\n [4,] 2724 1384 1280 2648  368 1256 3412 1196 1548\n [5,] 4590 2795 4425 2385 2625 4180 4720 3325 4795\n [6,] 2484 4152   48 1116 2442 5976 2424  882 3330\n [7,] 1533 3836 6741  364 4151 6615 6811 3353 5145\n [8,]  576 5496 6504 1512 3376 7304 1432 1600 7544\n [9,] 1341 8721 4851 4743  495 7254 2700  684 6111\n[10,] 3590 5310 5070 1860 7000 7520 7190  220 8230\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  181  833  665  644  755  547  218  417  594\n [2,]  160  412  520 1232  290  554 1204   76 1744\n [3,]  294 2421 2523 2253  615 2481 2907 2787  387\n [4,] 2580 2228 3040 3944 1404 1612  200 1948  216\n [5,] 1450  345  530 1690 1475 3290 4995 2530 3845\n [6,] 3084 2004 5586 3246 5916 3510 5454 2388 3336\n [7,] 3409 6300 3038 6720  189 2128 4046 1736 6734\n [8,]  880 2144 3280 7240 1056 7512 3416 4064 6728\n [9,] 8631  108 6777  999 6561 2007 4095 8568 3312\n[10,] 7130 1350 8570 8230 9500 8530 5320 8580 4150\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  863  436  439  386  170  246  288  719   63\n [2,]  926  958 1374 1848  158  894 1564   62 1298\n [3,] 1155 1332 1938 1545 1836  570 2787  633 1971\n [4,] 1712 1912  256 3380 3784 3036 2148 1128 3220\n [5,] 1430 4930 4435 1135 3430 3825 2815 2075 3480\n [6,] 4476  354 3798  630 3456 4812 4158 3408  972\n [7,] 6195 4039  945 6860 4998 3262 4767 6125 3724\n [8,] 5400  408 5520 5816 6120 3456  240 5168 6528\n [9,] 4608  891 5256 4032 5985 2016  711 2736 5751\n[10,] 9390 4520 6370 1180 2930 4300 9190 6330 9170\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  541  583  154  684  469  612   26  550    1\n [2,] 1092 1584 1586  588   68 1336  228  758 1002\n [3,] 2514  840 2664  519 2199 1518  510  318 1911\n [4,] 2832 3108 3096  604 2924 3272   80 1060  308\n [5,] 2200  605 2365 2685 4765 2530 4750 3135  930\n [6,] 5790 1494 1050  510 3552 3216 1620 1590 2466\n [7,] 4690 3997 3787  378 2030 5306 6531 2513 4354\n [8,] 3016 2056 3528 4352 3464 5512 3672 6912 2520\n [9,] 5076 3546 8793 1449 6966 3339 5886 3708 5652\n[10,] 3210 1570 3130 4090 4730 2930  320  660 7420\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  921  258  439  876  377  381  338  769  688\n [2,]  418  430   70 1400  524  258 1334 1830  864\n [3,]  888 1338  633 2802 2190 1014 1116 2661 2970\n [4,] 2536  708 2196 1260  972 1988 1888 2548   32\n [5,] 3170 3985 1595 1995 2805 4140  720 4370  515\n [6,] 4206 1368 2442 5040 1296 1794 2442 1620 5142\n [7,] 2681 3787  875 6566 5530 4137 4774  868 3416\n [8,] 4200 3016 5376 6456 4808 5416 1672 4552 6504\n [9,] 3060  648 3618 5265 8748 2088   90 6255 7452\n[10,] 1240 5940 7410 7600 7870 4510 7830 3130 1350\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  692  619  135  163  948  168  389   74  273\n [2,]  602  954  912  994 1152  694  676   60  832\n [3,]  858 1983  585  159 1041 2976  531 2289  624\n [4,] 2184 3044 2468 3204 1252 3228  472 3136 2700\n [5,] 1490  195 1870 1710 2505 3665 1485 3800 2270\n [6,] 2064 4836 5358 5520 1098  222 1230 3696 1488\n [7,] 6580 1225 4718 2310  245  518 6839 1491  308\n [8,] 7512 4112 6768 2880 7728 2520 1800 2848 5736\n [9,]  603  729 1431 8316 2736 8982 1089 7695 6543\n[10,] 3030 3180 6120 1760 4280   80 3540 2080 6350\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  155  458  689  555  799  623  792  788   99\n [2,] 1788  308 1112 1290 1942  980  382  822  904\n [3,] 1830 2979  312 2517 2502 2220 2256 1488 1500\n [4,] 3412 2368  184 2960 1720 1108 3180  528 3084\n [5,]  180 4285 3820 3095 2085 2050 2305 2470 1365\n [6,] 5610 3444 3804 1086  264 1356 3138 3444  108\n [7,]  126 6853  819 3934 5789 6972 1855 5978 5117\n [8,] 1416 4336 5152 6896 6000 6888 7064 1800 3536\n [9,] 2853 1359  387 8289 8559 8145 1440 8667 8496\n[10,] 9860 7320 4210 9960 8030 6970 8240 5820 7700\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  391  412  744  965  225  310  939  818  575\n [2,] 1738 1114   60 1658 1972  962 1770  100 1476\n [3,] 2691 2034 2691  363 2718 2565 1200 1434  597\n [4,] 3904 1460  444  876 2596 2956 3704   NA 3704\n [5,] 1355 2745 3755 4295 2580 1525  165 3760 2235\n [6,] 5838 1374  390 4368 3408  666  222 4566 5706\n [7,] 3458 6734 3822 5852 3899 5467 2506 5733  483\n [8,]  248 2536 2832 2032 1016 2672   32 3520 3808\n [9,] 8262  486 1404 5220 7011 4635 6588 7470 4869\n[10,] 9000  750 3300  400 9030 8610 7230 5860 5390\n\nbc.i(x, y, \"gcd\") # greatest common divisor\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    1    1    1    1    2    1    1\n [3,]    1    1    1    3    1    1    3    1    1\n [4,]    1    2    4    2    4    2    1    1    1\n [5,]    1    1    5    1    5    1    1    5    1\n [6,]    6    2    2    6    1    6    2    3    3\n [7,]    1    1    1    1    1    7    7    1    7\n [8,]    8    1    1    1    2    1    1    8    1\n [9,]    1    3    1    1    1    1    3    1    1\n[10,]    1    1    1    2   10    2    1    2    1\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    2    2    1    1    2    2    2\n [3,]    1    3    1    1    1    1    3    1    3\n [4,]    1    1    4    2    1    1    2    1    2\n [5,]    5    1    1    1    5    1    1    1    1\n [6,]    2    2    1    1    2    3    3    2    2\n [7,]    1    1    7    1    1    1    1    1    1\n [8,]    2    4    2    1    4    1    1    4    1\n [9,]    1    3    3    3    9    1    1    1    1\n[10,]    1    5    1    1   10    1    2    2    5\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    1    1    1    2    1    1    2    1    1\n [3,]    1    3    1    1    3    1    1    1    3\n [4,]    4    2    4    1    2    1    1    2    1\n [5,]    1    1    1    1    1    5    1    5    1\n [6,]    2    1    3    3    6    2    3    2    6\n [7,]    1    1    1    7    7    1    1    7    7\n [8,]    1    1    2    1    1    8    2    2    8\n [9,]    1    9    1    1    1    1    1    1    9\n[10,]    1    2    1    2    1   10    1    1    1\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    1    2    2    2    2    1    1\n [3,]    1    1    3    1    1    1    1    1    1\n [4,]    4    1    2    1    1    2    4    1    1\n [5,]    5    1    1    1    1    1    5    1    1\n [6,]    1    3    1    1    2    2    6    1    3\n [7,]    1    1    1    1    1    1    1    1    1\n [8,]    1    1    1    8    1    1    1    8    1\n [9,]    3    1    1    1    9    1    3    1    1\n[10,]    1    1    1    1    1    1    2    2    2\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    1    1    1    2    2    1    1    1    2\n [3,]    1    1    1    1    1    1    3    1    3\n [4,]    2    1    1    1    1    1    4    1    4\n [5,]    1    1    1    1    1    1    1    1    1\n [6,]    1    6    1    6    6    1    1    6    1\n [7,]    1    1    1    7    1    1    1    1    1\n [8,]    1    1    8    1    1    1    1    1    1\n [9,]    1    9    3    9    9    1    1    1    9\n[10,]    2    2    1   10    1    1    1    1    5\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    1    1    2    1    2    1    2    2    2\n [3,]    1    1    3    1    1    1    3    1    1\n [4,]    2    1    1    1    1    1    2    4    1\n [5,]    1    1    1    1    1    1    1    5    1\n [6,]    2    2    1    2    3    1    1    2    2\n [7,]    1    7    1    1    7    1    1    1    1\n [8,]    1    2    2    8    2    1    1    4    1\n [9,]    1    9    3    3    1    1    1    9    1\n[10,]    1    2    2    2    2    2    2    2    5\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    2    1    1    2    1    1    2\n [3,]    1    3    1    1    3    1    1    1    1\n [4,]    1    4    2    4    2    1    1    4    1\n [5,]    1    1    1    1    1    5    1    1    1\n [6,]    1    2    2    1    2    2    1    2    6\n [7,]    1    1    1    1    1    1    1    7    1\n [8,]    1    2    4    2    2    1    1    1    2\n [9,]    1    1    1    3    3    1    1    9    1\n[10,]    2    2    1    2    1    1    2    2   10\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    1    1    2    1    2    1    1    2    2\n [3,]    3    3    3    1    3    3    1    1    1\n [4,]    4    1    1    1    1    1    2   NA    2\n [5,]    1    1    1    1    1    5    1    1    1\n [6,]    1    1    1    2    2    3    1    1    3\n [7,]    1    1    7    1    1    1    1    7    1\n [8,]    1    1    2    2    1    2    4    8    4\n [9,]    9    9    3    1    1    1    3    1    1\n[10,]   10    5   10   10    1    1    1    2    1\n\nbc.i(x, y, \"^\")\n\n, , 1\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 3.080000e+02 9.610000e+02 9.180000e+02 4.760000e+02 1.720000e+02\n [2,] 2.171560e+05 3.433960e+05 5.198410e+05 6.938890e+05 3.540250e+05\n [3,] 1.119802e+08 8.095576e+08 3.890170e+05 3.793306e+07 4.286611e+08\n [4,] 2.150743e+11 1.433192e+10 1.048576e+10 1.920578e+11 7.163930e+07\n [5,] 6.519487e+14 5.458321e+13 5.428956e+14 2.469403e+13 3.988380e+13\n [6,] 5.035030e+15          Inf 2.621440e+05 4.140737e+13 4.545341e+15\n [7,]          Inf          Inf          Inf 1.028072e+12          Inf\n [8,] 7.222041e+14          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf 4.605367e+15\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 9.350000e+02 5.990000e+02 6.780000e+02 3.910000e+02\n [2,] 9.025000e+03 2.342560e+05 1.020100e+04 2.052090e+05\n [3,] 8.412324e+08 1.968300e+07 1.108957e+07 4.459437e+08\n [4,] 9.721171e+09 5.294149e+11 7.992539e+09 2.243075e+10\n [5,] 4.083489e+14 7.496525e+14 1.300494e+14 8.111348e+14\n [6,]          Inf 4.347987e+15 1.009030e+13          Inf\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf 2.655992e+13          Inf\n\n, , 2\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 1.810000e+02 8.330000e+02          665 6.440000e+02 7.550000e+02\n [2,] 6.400000e+03 4.243600e+04        67600 3.794560e+05 2.102500e+04\n [3,] 9.411920e+05 5.255579e+08    594823321 4.235648e+08 8.615125e+06\n [4,] 1.730768e+11 9.625444e+10 333621760000 9.451651e+11 1.517849e+10\n [5,] 2.051115e+12 1.564031e+09  13382255776 4.411472e+12 2.234138e+12\n [6,]          Inf 1.388286e+15          Inf          Inf          Inf\n [7,]          Inf          Inf          Inf          Inf 1.046035e+10\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf 5.159780e+09          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 5.470000e+02 2.180000e+02 4.170000e+02 5.940000e+02\n [2,] 7.672900e+04 3.624040e+05 1.444000e+03 7.603840e+05\n [3,] 5.656093e+08 9.098532e+08 8.017651e+08 2.146689e+06\n [4,] 2.637668e+10 6.250000e+06 5.624913e+10 8.503056e+06\n [5,] 1.233472e+14 9.950100e+14 3.317054e+13 2.689253e+14\n [6,]          Inf          Inf 3.974646e+15          Inf\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 3\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 8.630000e+02 4.360000e+02 4.390000e+02 3.860000e+02 1.700000e+02\n [2,] 2.143690e+05 2.294410e+05 4.719690e+05 8.537760e+05 6.241000e+03\n [3,] 5.706662e+07 8.752838e+07 2.695861e+08 1.365909e+08 2.292209e+08\n [4,] 3.355638e+10 5.220494e+10 1.677722e+07 5.098317e+11 8.008746e+11\n [5,] 1.913507e+12 9.319328e+14 5.490578e+14 6.027390e+11 1.519220e+14\n [6,]          Inf 4.218053e+10          Inf 1.340096e+12          Inf\n [7,]          Inf          Inf 8.172151e+14          Inf          Inf\n [8,]          Inf 4.576794e+13          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 2.460000e+02 2.880000e+02 7.190000e+02 6.300000e+01\n [2,] 1.998090e+05 6.115240e+05 9.610000e+02 4.212010e+05\n [3,] 6.859000e+06 8.017651e+08 9.393931e+06 2.835934e+08\n [4,] 3.318693e+11 8.315668e+10 6.324067e+09 4.199364e+11\n [5,] 2.620035e+14 5.656424e+13 1.230950e+13 1.633226e+14\n [6,]          Inf          Inf          Inf 1.807549e+13\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf 6.561000e+11          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 4\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 5.410000e+02 5.830000e+02 1.540000e+02 6.840000e+02 4.690000e+02\n [2,] 2.981160e+05 6.272640e+05 6.288490e+05 8.643600e+04 1.156000e+03\n [3,] 5.884805e+08 2.195200e+07 7.002271e+08 5.177717e+06 3.938328e+08\n [4,] 2.512656e+11 3.644887e+11 3.588921e+11 5.198856e+08 2.855417e+11\n [5,] 1.649162e+13 2.593742e+10 2.367586e+13 4.465514e+13 7.860759e+14\n [6,]          Inf 2.383395e+14 2.872290e+13 3.771495e+11          Inf\n [7,]          Inf          Inf          Inf 1.338925e+12          Inf\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 6.120000e+02 2.600000e+01 5.500000e+02 1.000000e+00\n [2,] 4.462240e+05 1.299600e+04 1.436410e+05 2.510010e+05\n [3,] 1.295542e+08 4.913000e+06 1.191016e+06 2.584749e+08\n [4,] 4.477269e+11 1.600000e+05 4.931551e+09 3.515304e+07\n [5,] 3.317054e+13 7.737809e+14 9.690311e+13 2.226203e+11\n [6,]          Inf 3.874205e+14 3.463181e+14 4.820043e+15\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf 1.125900e+15          Inf          Inf\n\n, , 5\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 9.210000e+02 2.580000e+02 4.390000e+02 8.760000e+02 3.770000e+02\n [2,] 4.368100e+04 4.622500e+04 1.225000e+03 4.900000e+05 6.864400e+04\n [3,] 2.593434e+07 8.871654e+07 9.393931e+06 8.147805e+08 3.890170e+08\n [4,] 1.615686e+11 9.815062e+08 9.084256e+10 9.845601e+09 3.486784e+09\n [5,] 1.024345e+14 3.215819e+14 3.303341e+12 1.011264e+13 5.556666e+13\n [6,]          Inf 1.404782e+14 4.545341e+15          Inf 1.015600e+14\n [7,]          Inf          Inf 4.768372e+14          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]        [,9]\n [1,] 3.810000e+02 3.380000e+02 7.690000e+02         688\n [2,] 1.664100e+04 4.448890e+05 8.372250e+05      186624\n [3,] 3.861447e+07 5.147885e+07 6.978641e+08   970299000\n [4,] 6.101345e+10 4.963271e+10 1.646485e+11        4096\n [5,] 3.891810e+14 6.191736e+10 5.099847e+14 11592740743\n [6,] 7.145410e+14 4.545341e+15 3.874205e+14         Inf\n [7,]          Inf          Inf 4.507667e+14         Inf\n [8,]          Inf          Inf          Inf         Inf\n [9,]          Inf 1.000000e+09          Inf         Inf\n[10,]          Inf          Inf          Inf         Inf\n\n, , 6\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 6.920000e+02 6.190000e+02 1.350000e+02 1.630000e+02 9.480000e+02\n [2,] 9.060100e+04 2.275290e+05 2.079360e+05 2.470090e+05 3.317760e+05\n [3,] 2.339366e+07 2.888048e+08 7.414875e+06 1.488770e+05 4.178192e+07\n [4,] 8.887315e+10 3.353811e+11 1.449241e+11 4.116518e+11 9.597925e+09\n [5,] 2.350073e+12 9.022420e+07 7.317420e+12 4.678757e+12 3.156375e+13\n [6,] 1.657107e+15          Inf          Inf          Inf 3.755835e+13\n [7,]          Inf 5.026508e+15          Inf          Inf 6.433930e+10\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 1.680000e+02 3.890000e+02 7.400000e+01 2.730000e+02\n [2,] 1.204090e+05 1.142440e+05 9.000000e+02 1.730560e+05\n [3,] 9.761915e+08 5.545233e+06 4.441949e+08 8.998912e+06\n [4,] 4.241253e+11 1.938778e+08 3.778020e+11 2.075941e+11\n [5,] 2.116021e+14 2.310906e+12 2.535525e+14 1.928765e+13\n [6,] 2.565726e+09 7.422038e+13          Inf 2.326538e+14\n [7,] 1.215128e+13          Inf          Inf 3.192778e+11\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,] 1.073742e+09          Inf          Inf          Inf\n\n, , 7\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,]          155 4.580000e+02 6.890000e+02 5.550000e+02 7.990000e+02\n [2,]       799236 2.371600e+04 3.091360e+05 4.160250e+05 9.428410e+05\n [3,]    226981000 9.791467e+08 1.124864e+06 5.905897e+08 5.800937e+08\n [4,] 529414856881 1.228250e+11 4.477456e+06 2.998658e+11 3.418801e+10\n [5,]     60466176 4.622789e+14 2.602956e+14 9.087685e+13 1.260899e+13\n [6,]          Inf          Inf          Inf 3.516183e+13 7.256314e+09\n [7,]    612220032          Inf 3.001242e+14          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf 5.025926e+14          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 6.230000e+02 7.920000e+02 7.880000e+02 9.900000e+01\n [2,] 2.401000e+05 3.648100e+04 1.689210e+05 2.043040e+05\n [3,] 4.052240e+08 4.252590e+08 1.220239e+08 1.250000e+08\n [4,] 5.887339e+09 3.994556e+11 3.035958e+08 3.533601e+11\n [5,] 1.158562e+13 2.082115e+13 2.941946e+13 1.516398e+12\n [6,] 1.332449e+14          Inf          Inf 3.401222e+07\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 8\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 3.910000e+02 4.120000e+02 7.440000e+02 9.650000e+02 2.250000e+02\n [2,] 7.551610e+05 3.102490e+05 9.000000e+02 6.872410e+05 9.721960e+05\n [3,] 7.217343e+08 3.116658e+08 7.217343e+08 1.771561e+06 7.436774e+08\n [4,] 9.074010e+11 1.774890e+10 1.518070e+08 2.300258e+09 1.774103e+11\n [5,] 1.461660e+12 4.987257e+13 2.388909e+14 4.676983e+14 3.658040e+13\n [6,]          Inf 1.442158e+14 7.541889e+10          Inf          Inf\n [7,]          Inf          Inf          Inf          Inf          Inf\n [8,] 8.528910e+11          Inf          Inf          Inf          Inf\n [9,]          Inf 3.904306e+15          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 3.100000e+02          939 8.180000e+02 5.750000e+02\n [2,] 2.313610e+05       783225 2.500000e+03 5.446440e+05\n [3,] 6.250264e+08     64000000 1.092154e+08 7.880599e+06\n [4,] 2.982481e+11 735265090576           NA 7.352651e+11\n [5,] 2.639363e+12     39135393 2.404857e+14 1.784587e+13\n [6,] 1.870415e+12   2565726409          Inf          Inf\n [7,]          Inf          Inf          Inf 7.446353e+12\n [8,]          Inf        65536          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\nbc.i(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE    NA FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.i(x, y, \"!=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]  [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE   NA TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.i(x, y, \"&lt;\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE    NA FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.i(x, y, \"&gt;\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]  [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5]  [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6]  [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE   NA TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n\nbc.i(x, y, \"&lt;=\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE    NA FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.i(x, y, \"&gt;=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5]  [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6]  [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE   NA TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE"
  },
  {
    "objectID": "man/outer/bc.cplx.html",
    "href": "man/outer/bc.cplx.html",
    "title": "bc.cplx",
    "section": "",
    "text": "The bc.cplx() function performs broadcasted complex numeric operations pairs of arrays.   Note that bc.cplx() uses more strict NA checks than base ‘R’:  If for an element of either x or y, either the real or imaginary part is NA or NaN, than the result of the operation for that element is necessarily NA. \n\n\n\nbc.cplx(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable atomic arrays of type complex.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported arithmetic operators: +, -, *, /.  Supported relational operators: ==, !=. \n\n\n\n\n\n\n\nFor arithmetic operators:  A complex array as a result of the broadcasted arithmetic operation.   For relational operators:  A logical array as a result of the broadcasted relational comparison.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\ngen &lt;- function() sample(c(rnorm(10), NA, NA, NaN, NaN, Inf, Inf, -Inf, -Inf))\nx &lt;- array(gen() + gen() * -1i, x.dim)\ny &lt;- array(gen() + gen() * -1i, c(10,1,1))\n\nbc.cplx(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [4,] FALSE    NA    NA FALSE    NA FALSE    NA    NA    NA\n [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,] FALSE    NA    NA    NA FALSE    NA    NA    NA FALSE\n [8,]    NA FALSE    NA    NA    NA FALSE    NA    NA FALSE\n [9,]    NA    NA FALSE    NA    NA    NA FALSE FALSE    NA\n[10,]    NA    NA    NA FALSE    NA    NA FALSE    NA FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [4,] FALSE    NA    NA FALSE    NA FALSE    NA    NA    NA\n [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,] FALSE    NA    NA    NA FALSE    NA    NA    NA FALSE\n [8,]    NA FALSE    NA    NA    NA FALSE    NA    NA FALSE\n [9,]    NA    NA FALSE    NA    NA    NA FALSE FALSE    NA\n[10,]    NA    NA    NA FALSE    NA    NA FALSE    NA FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [4,] FALSE    NA    NA FALSE    NA FALSE    NA    NA    NA\n [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,] FALSE    NA    NA    NA FALSE    NA    NA    NA FALSE\n [8,]    NA FALSE    NA    NA    NA FALSE    NA    NA FALSE\n [9,]    NA    NA FALSE    NA    NA    NA FALSE FALSE    NA\n[10,]    NA    NA    NA FALSE    NA    NA FALSE    NA FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [4,] FALSE    NA    NA FALSE    NA FALSE    NA    NA    NA\n [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,] FALSE    NA    NA    NA FALSE    NA    NA    NA FALSE\n [8,]    NA FALSE    NA    NA    NA FALSE    NA    NA FALSE\n [9,]    NA    NA FALSE    NA    NA    NA FALSE FALSE    NA\n[10,]    NA    NA    NA FALSE    NA    NA FALSE    NA FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [4,] FALSE    NA    NA FALSE    NA FALSE    NA    NA    NA\n [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,] FALSE    NA    NA    NA FALSE    NA    NA    NA FALSE\n [8,]    NA FALSE    NA    NA    NA FALSE    NA    NA FALSE\n [9,]    NA    NA FALSE    NA    NA    NA FALSE FALSE    NA\n[10,]    NA    NA    NA FALSE    NA    NA FALSE    NA FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [4,] FALSE    NA    NA FALSE    NA FALSE    NA    NA    NA\n [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,] FALSE    NA    NA    NA FALSE    NA    NA    NA FALSE\n [8,]    NA FALSE    NA    NA    NA FALSE    NA    NA FALSE\n [9,]    NA    NA FALSE    NA    NA    NA FALSE FALSE    NA\n[10,]    NA    NA    NA FALSE    NA    NA FALSE    NA FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [4,] FALSE    NA    NA FALSE    NA FALSE    NA    NA    NA\n [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,] FALSE    NA    NA    NA FALSE    NA    NA    NA FALSE\n [8,]    NA FALSE    NA    NA    NA FALSE    NA    NA FALSE\n [9,]    NA    NA FALSE    NA    NA    NA FALSE FALSE    NA\n[10,]    NA    NA    NA FALSE    NA    NA FALSE    NA FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [4,] FALSE    NA    NA FALSE    NA FALSE    NA    NA    NA\n [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,] FALSE    NA    NA    NA FALSE    NA    NA    NA FALSE\n [8,]    NA FALSE    NA    NA    NA FALSE    NA    NA FALSE\n [9,]    NA    NA FALSE    NA    NA    NA FALSE FALSE    NA\n[10,]    NA    NA    NA FALSE    NA    NA FALSE    NA FALSE\n\nbc.cplx(x, y, \"!=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE   NA   NA TRUE   NA TRUE   NA   NA   NA\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,] TRUE   NA   NA   NA TRUE   NA   NA   NA TRUE\n [8,]   NA TRUE   NA   NA   NA TRUE   NA   NA TRUE\n [9,]   NA   NA TRUE   NA   NA   NA TRUE TRUE   NA\n[10,]   NA   NA   NA TRUE   NA   NA TRUE   NA TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE   NA   NA TRUE   NA TRUE   NA   NA   NA\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,] TRUE   NA   NA   NA TRUE   NA   NA   NA TRUE\n [8,]   NA TRUE   NA   NA   NA TRUE   NA   NA TRUE\n [9,]   NA   NA TRUE   NA   NA   NA TRUE TRUE   NA\n[10,]   NA   NA   NA TRUE   NA   NA TRUE   NA TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE   NA   NA TRUE   NA TRUE   NA   NA   NA\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,] TRUE   NA   NA   NA TRUE   NA   NA   NA TRUE\n [8,]   NA TRUE   NA   NA   NA TRUE   NA   NA TRUE\n [9,]   NA   NA TRUE   NA   NA   NA TRUE TRUE   NA\n[10,]   NA   NA   NA TRUE   NA   NA TRUE   NA TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE   NA   NA TRUE   NA TRUE   NA   NA   NA\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,] TRUE   NA   NA   NA TRUE   NA   NA   NA TRUE\n [8,]   NA TRUE   NA   NA   NA TRUE   NA   NA TRUE\n [9,]   NA   NA TRUE   NA   NA   NA TRUE TRUE   NA\n[10,]   NA   NA   NA TRUE   NA   NA TRUE   NA TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE   NA   NA TRUE   NA TRUE   NA   NA   NA\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,] TRUE   NA   NA   NA TRUE   NA   NA   NA TRUE\n [8,]   NA TRUE   NA   NA   NA TRUE   NA   NA TRUE\n [9,]   NA   NA TRUE   NA   NA   NA TRUE TRUE   NA\n[10,]   NA   NA   NA TRUE   NA   NA TRUE   NA TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE   NA   NA TRUE   NA TRUE   NA   NA   NA\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,] TRUE   NA   NA   NA TRUE   NA   NA   NA TRUE\n [8,]   NA TRUE   NA   NA   NA TRUE   NA   NA TRUE\n [9,]   NA   NA TRUE   NA   NA   NA TRUE TRUE   NA\n[10,]   NA   NA   NA TRUE   NA   NA TRUE   NA TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE   NA   NA TRUE   NA TRUE   NA   NA   NA\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,] TRUE   NA   NA   NA TRUE   NA   NA   NA TRUE\n [8,]   NA TRUE   NA   NA   NA TRUE   NA   NA TRUE\n [9,]   NA   NA TRUE   NA   NA   NA TRUE TRUE   NA\n[10,]   NA   NA   NA TRUE   NA   NA TRUE   NA TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE   NA   NA TRUE   NA TRUE   NA   NA   NA\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,] TRUE   NA   NA   NA TRUE   NA   NA   NA TRUE\n [8,]   NA TRUE   NA   NA   NA TRUE   NA   NA TRUE\n [9,]   NA   NA TRUE   NA   NA   NA TRUE TRUE   NA\n[10,]   NA   NA   NA TRUE   NA   NA TRUE   NA TRUE\n\nbc.cplx(x, y, \"+\")\n\n, , 1\n\n                      [,1]           [,2]                [,3]\n [1,]                   NA             NA                  NA\n [2,]                   NA             NA                  NA\n [3,]                   NA             NA                  NA\n [4,]        Inf-1.381930i             NA                  NA\n [5,]                   NA             NA                  NA\n [6,]                   NA             NA                  NA\n [7,] 0.01781481-3.256436i             NA                  NA\n [8,]                   NA Inf-0.6215475i                  NA\n [9,]                   NA             NA -2.01338+0.2846776i\n[10,]                   NA             NA                  NA\n                    [,4]                [,5]           [,6]\n [1,]                 NA                  NA             NA\n [2,]                 NA                  NA             NA\n [3,]                 NA                  NA             NA\n [4,]     Inf-0.6185388i                  NA Inf-2.7014213i\n [5,]                 NA                  NA             NA\n [6,]                 NA                  NA             NA\n [7,]                 NA -1.136007-2.852714i             NA\n [8,]                 NA                  NA Inf+0.6979433i\n [9,]                 NA                  NA             NA\n[10,] 2.71652+0.1195667i                  NA             NA\n                       [,7]                 [,8]                 [,9]\n [1,]                    NA                   NA                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA                   NA\n [4,]                    NA                   NA                   NA\n [5,]                    NA                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA -0.0920003-1.826546i\n [8,]                    NA                   NA        Inf+1.461335i\n [9,] -0.9693731+1.3108455i -0.859558-0.1190448i                   NA\n[10,]  2.0223412+0.8829584i                   NA        Inf-1.199924i\n\n, , 2\n\n                      [,1]           [,2]                [,3]\n [1,]                   NA             NA                  NA\n [2,]                   NA             NA                  NA\n [3,]                   NA             NA                  NA\n [4,]        Inf-1.381930i             NA                  NA\n [5,]                   NA             NA                  NA\n [6,]                   NA             NA                  NA\n [7,] 0.01781481-3.256436i             NA                  NA\n [8,]                   NA Inf-0.6215475i                  NA\n [9,]                   NA             NA -2.01338+0.2846776i\n[10,]                   NA             NA                  NA\n                    [,4]                [,5]           [,6]\n [1,]                 NA                  NA             NA\n [2,]                 NA                  NA             NA\n [3,]                 NA                  NA             NA\n [4,]     Inf-0.6185388i                  NA Inf-2.7014213i\n [5,]                 NA                  NA             NA\n [6,]                 NA                  NA             NA\n [7,]                 NA -1.136007-2.852714i             NA\n [8,]                 NA                  NA Inf+0.6979433i\n [9,]                 NA                  NA             NA\n[10,] 2.71652+0.1195667i                  NA             NA\n                       [,7]                 [,8]                 [,9]\n [1,]                    NA                   NA                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA                   NA\n [4,]                    NA                   NA                   NA\n [5,]                    NA                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA -0.0920003-1.826546i\n [8,]                    NA                   NA        Inf+1.461335i\n [9,] -0.9693731+1.3108455i -0.859558-0.1190448i                   NA\n[10,]  2.0223412+0.8829584i                   NA        Inf-1.199924i\n\n, , 3\n\n                      [,1]           [,2]                [,3]\n [1,]                   NA             NA                  NA\n [2,]                   NA             NA                  NA\n [3,]                   NA             NA                  NA\n [4,]        Inf-1.381930i             NA                  NA\n [5,]                   NA             NA                  NA\n [6,]                   NA             NA                  NA\n [7,] 0.01781481-3.256436i             NA                  NA\n [8,]                   NA Inf-0.6215475i                  NA\n [9,]                   NA             NA -2.01338+0.2846776i\n[10,]                   NA             NA                  NA\n                    [,4]                [,5]           [,6]\n [1,]                 NA                  NA             NA\n [2,]                 NA                  NA             NA\n [3,]                 NA                  NA             NA\n [4,]     Inf-0.6185388i                  NA Inf-2.7014213i\n [5,]                 NA                  NA             NA\n [6,]                 NA                  NA             NA\n [7,]                 NA -1.136007-2.852714i             NA\n [8,]                 NA                  NA Inf+0.6979433i\n [9,]                 NA                  NA             NA\n[10,] 2.71652+0.1195667i                  NA             NA\n                       [,7]                 [,8]                 [,9]\n [1,]                    NA                   NA                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA                   NA\n [4,]                    NA                   NA                   NA\n [5,]                    NA                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA -0.0920003-1.826546i\n [8,]                    NA                   NA        Inf+1.461335i\n [9,] -0.9693731+1.3108455i -0.859558-0.1190448i                   NA\n[10,]  2.0223412+0.8829584i                   NA        Inf-1.199924i\n\n, , 4\n\n                      [,1]           [,2]                [,3]\n [1,]                   NA             NA                  NA\n [2,]                   NA             NA                  NA\n [3,]                   NA             NA                  NA\n [4,]        Inf-1.381930i             NA                  NA\n [5,]                   NA             NA                  NA\n [6,]                   NA             NA                  NA\n [7,] 0.01781481-3.256436i             NA                  NA\n [8,]                   NA Inf-0.6215475i                  NA\n [9,]                   NA             NA -2.01338+0.2846776i\n[10,]                   NA             NA                  NA\n                    [,4]                [,5]           [,6]\n [1,]                 NA                  NA             NA\n [2,]                 NA                  NA             NA\n [3,]                 NA                  NA             NA\n [4,]     Inf-0.6185388i                  NA Inf-2.7014213i\n [5,]                 NA                  NA             NA\n [6,]                 NA                  NA             NA\n [7,]                 NA -1.136007-2.852714i             NA\n [8,]                 NA                  NA Inf+0.6979433i\n [9,]                 NA                  NA             NA\n[10,] 2.71652+0.1195667i                  NA             NA\n                       [,7]                 [,8]                 [,9]\n [1,]                    NA                   NA                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA                   NA\n [4,]                    NA                   NA                   NA\n [5,]                    NA                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA -0.0920003-1.826546i\n [8,]                    NA                   NA        Inf+1.461335i\n [9,] -0.9693731+1.3108455i -0.859558-0.1190448i                   NA\n[10,]  2.0223412+0.8829584i                   NA        Inf-1.199924i\n\n, , 5\n\n                      [,1]           [,2]                [,3]\n [1,]                   NA             NA                  NA\n [2,]                   NA             NA                  NA\n [3,]                   NA             NA                  NA\n [4,]        Inf-1.381930i             NA                  NA\n [5,]                   NA             NA                  NA\n [6,]                   NA             NA                  NA\n [7,] 0.01781481-3.256436i             NA                  NA\n [8,]                   NA Inf-0.6215475i                  NA\n [9,]                   NA             NA -2.01338+0.2846776i\n[10,]                   NA             NA                  NA\n                    [,4]                [,5]           [,6]\n [1,]                 NA                  NA             NA\n [2,]                 NA                  NA             NA\n [3,]                 NA                  NA             NA\n [4,]     Inf-0.6185388i                  NA Inf-2.7014213i\n [5,]                 NA                  NA             NA\n [6,]                 NA                  NA             NA\n [7,]                 NA -1.136007-2.852714i             NA\n [8,]                 NA                  NA Inf+0.6979433i\n [9,]                 NA                  NA             NA\n[10,] 2.71652+0.1195667i                  NA             NA\n                       [,7]                 [,8]                 [,9]\n [1,]                    NA                   NA                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA                   NA\n [4,]                    NA                   NA                   NA\n [5,]                    NA                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA -0.0920003-1.826546i\n [8,]                    NA                   NA        Inf+1.461335i\n [9,] -0.9693731+1.3108455i -0.859558-0.1190448i                   NA\n[10,]  2.0223412+0.8829584i                   NA        Inf-1.199924i\n\n, , 6\n\n                      [,1]           [,2]                [,3]\n [1,]                   NA             NA                  NA\n [2,]                   NA             NA                  NA\n [3,]                   NA             NA                  NA\n [4,]        Inf-1.381930i             NA                  NA\n [5,]                   NA             NA                  NA\n [6,]                   NA             NA                  NA\n [7,] 0.01781481-3.256436i             NA                  NA\n [8,]                   NA Inf-0.6215475i                  NA\n [9,]                   NA             NA -2.01338+0.2846776i\n[10,]                   NA             NA                  NA\n                    [,4]                [,5]           [,6]\n [1,]                 NA                  NA             NA\n [2,]                 NA                  NA             NA\n [3,]                 NA                  NA             NA\n [4,]     Inf-0.6185388i                  NA Inf-2.7014213i\n [5,]                 NA                  NA             NA\n [6,]                 NA                  NA             NA\n [7,]                 NA -1.136007-2.852714i             NA\n [8,]                 NA                  NA Inf+0.6979433i\n [9,]                 NA                  NA             NA\n[10,] 2.71652+0.1195667i                  NA             NA\n                       [,7]                 [,8]                 [,9]\n [1,]                    NA                   NA                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA                   NA\n [4,]                    NA                   NA                   NA\n [5,]                    NA                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA -0.0920003-1.826546i\n [8,]                    NA                   NA        Inf+1.461335i\n [9,] -0.9693731+1.3108455i -0.859558-0.1190448i                   NA\n[10,]  2.0223412+0.8829584i                   NA        Inf-1.199924i\n\n, , 7\n\n                      [,1]           [,2]                [,3]\n [1,]                   NA             NA                  NA\n [2,]                   NA             NA                  NA\n [3,]                   NA             NA                  NA\n [4,]        Inf-1.381930i             NA                  NA\n [5,]                   NA             NA                  NA\n [6,]                   NA             NA                  NA\n [7,] 0.01781481-3.256436i             NA                  NA\n [8,]                   NA Inf-0.6215475i                  NA\n [9,]                   NA             NA -2.01338+0.2846776i\n[10,]                   NA             NA                  NA\n                    [,4]                [,5]           [,6]\n [1,]                 NA                  NA             NA\n [2,]                 NA                  NA             NA\n [3,]                 NA                  NA             NA\n [4,]     Inf-0.6185388i                  NA Inf-2.7014213i\n [5,]                 NA                  NA             NA\n [6,]                 NA                  NA             NA\n [7,]                 NA -1.136007-2.852714i             NA\n [8,]                 NA                  NA Inf+0.6979433i\n [9,]                 NA                  NA             NA\n[10,] 2.71652+0.1195667i                  NA             NA\n                       [,7]                 [,8]                 [,9]\n [1,]                    NA                   NA                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA                   NA\n [4,]                    NA                   NA                   NA\n [5,]                    NA                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA -0.0920003-1.826546i\n [8,]                    NA                   NA        Inf+1.461335i\n [9,] -0.9693731+1.3108455i -0.859558-0.1190448i                   NA\n[10,]  2.0223412+0.8829584i                   NA        Inf-1.199924i\n\n, , 8\n\n                      [,1]           [,2]                [,3]\n [1,]                   NA             NA                  NA\n [2,]                   NA             NA                  NA\n [3,]                   NA             NA                  NA\n [4,]        Inf-1.381930i             NA                  NA\n [5,]                   NA             NA                  NA\n [6,]                   NA             NA                  NA\n [7,] 0.01781481-3.256436i             NA                  NA\n [8,]                   NA Inf-0.6215475i                  NA\n [9,]                   NA             NA -2.01338+0.2846776i\n[10,]                   NA             NA                  NA\n                    [,4]                [,5]           [,6]\n [1,]                 NA                  NA             NA\n [2,]                 NA                  NA             NA\n [3,]                 NA                  NA             NA\n [4,]     Inf-0.6185388i                  NA Inf-2.7014213i\n [5,]                 NA                  NA             NA\n [6,]                 NA                  NA             NA\n [7,]                 NA -1.136007-2.852714i             NA\n [8,]                 NA                  NA Inf+0.6979433i\n [9,]                 NA                  NA             NA\n[10,] 2.71652+0.1195667i                  NA             NA\n                       [,7]                 [,8]                 [,9]\n [1,]                    NA                   NA                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA                   NA\n [4,]                    NA                   NA                   NA\n [5,]                    NA                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA -0.0920003-1.826546i\n [8,]                    NA                   NA        Inf+1.461335i\n [9,] -0.9693731+1.3108455i -0.859558-0.1190448i                   NA\n[10,]  2.0223412+0.8829584i                   NA        Inf-1.199924i\n\nbc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), \"==\")\n\n [1]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA FALSE\n[13]    NA FALSE    NA    NA    NA FALSE\n\nbc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), \"!=\")\n\n [1]   NA   NA   NA   NA   NA   NA TRUE   NA   NA   NA   NA TRUE   NA   NA TRUE\n[16]   NA   NA TRUE\n\nx &lt;- gen() + gen() * -1i\ny &lt;- gen() + gen() * -1i\nout &lt;- bc.cplx(array(x), array(y), \"*\")\ncbind(x, y, x*y, out)\n\n                            x                     y                      \n [1,]         NaN-0.09219066i        Inf+1.3375963i        NaN-      Infi\n [2,]         NaN-       Infi -0.5698757-1.1768318i       -Inf+      Infi\n [3,]  0.03663860-0.83779418i        NaN-      Infi       -Inf-      Infi\n [4,] -0.77700708+0.01593921i -0.7856042+0.5991685i  0.6008698-0.4780801i\n [5,]         NaN+       Infi -1.3525069-1.1451389i        Inf-      Infi\n [6,]         NaN-       Infi        Inf-0.3525169i        NaN-      Infi\n [7,]         Inf-1.10977159i  2.0111083-0.6723959i        Inf-      Infi\n [8,]                      NA                    NA                    NA\n [9,] -0.35423613-0.01462975i  2.3272520+0.6226705i -0.8152872-0.2546195i\n[10,]                      NA       -Inf-0.5962875i        NaN+      NaNi\n[11,]         NaN+       NaNi        NaN+      Infi        NaN+      NaNi\n[12,]                      NA       -Inf-2.0258630i        NaN-      Infi\n[13,] -0.32975620-0.27958043i                    NA                    NA\n[14,]         NaN+0.42937564i        NaN-      Infi        Inf+      NaNi\n[15,]                      NA -0.6971686+0.5068867i                    NA\n[16,]         NaN+       Infi                    NA       -Inf+      NaNi\n[17,]  0.07628078-0.73999521i        NaN+      NaNi        NaN+      NaNi\n[18,]         Inf+0.46179918i                    NA        NaN+      NaNi\n                        out\n [1,]                    NA\n [2,]                    NA\n [3,]                    NA\n [4,]  0.6008698-0.4780801i\n [5,]                    NA\n [6,]                    NA\n [7,]        Inf-      Infi\n [8,]                    NA\n [9,] -0.8152872-0.2546195i\n[10,]                    NA\n[11,]                    NA\n[12,]                    NA\n[13,]                    NA\n[14,]                    NA\n[15,]                    NA\n[16,]                    NA\n[17,]                    NA\n[18,]                    NA"
  },
  {
    "objectID": "man/outer/bc.cplx.html#broadcasted-complex-numeric-operations",
    "href": "man/outer/bc.cplx.html#broadcasted-complex-numeric-operations",
    "title": "bc.cplx",
    "section": "",
    "text": "The bc.cplx() function performs broadcasted complex numeric operations pairs of arrays.   Note that bc.cplx() uses more strict NA checks than base ‘R’:  If for an element of either x or y, either the real or imaginary part is NA or NaN, than the result of the operation for that element is necessarily NA. \n\n\n\nbc.cplx(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable atomic arrays of type complex.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported arithmetic operators: +, -, *, /.  Supported relational operators: ==, !=. \n\n\n\n\n\n\n\nFor arithmetic operators:  A complex array as a result of the broadcasted arithmetic operation.   For relational operators:  A logical array as a result of the broadcasted relational comparison.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\ngen &lt;- function() sample(c(rnorm(10), NA, NA, NaN, NaN, Inf, Inf, -Inf, -Inf))\nx &lt;- array(gen() + gen() * -1i, x.dim)\ny &lt;- array(gen() + gen() * -1i, c(10,1,1))\n\nbc.cplx(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [4,] FALSE    NA    NA FALSE    NA FALSE    NA    NA    NA\n [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,] FALSE    NA    NA    NA FALSE    NA    NA    NA FALSE\n [8,]    NA FALSE    NA    NA    NA FALSE    NA    NA FALSE\n [9,]    NA    NA FALSE    NA    NA    NA FALSE FALSE    NA\n[10,]    NA    NA    NA FALSE    NA    NA FALSE    NA FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [4,] FALSE    NA    NA FALSE    NA FALSE    NA    NA    NA\n [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,] FALSE    NA    NA    NA FALSE    NA    NA    NA FALSE\n [8,]    NA FALSE    NA    NA    NA FALSE    NA    NA FALSE\n [9,]    NA    NA FALSE    NA    NA    NA FALSE FALSE    NA\n[10,]    NA    NA    NA FALSE    NA    NA FALSE    NA FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [4,] FALSE    NA    NA FALSE    NA FALSE    NA    NA    NA\n [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,] FALSE    NA    NA    NA FALSE    NA    NA    NA FALSE\n [8,]    NA FALSE    NA    NA    NA FALSE    NA    NA FALSE\n [9,]    NA    NA FALSE    NA    NA    NA FALSE FALSE    NA\n[10,]    NA    NA    NA FALSE    NA    NA FALSE    NA FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [4,] FALSE    NA    NA FALSE    NA FALSE    NA    NA    NA\n [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,] FALSE    NA    NA    NA FALSE    NA    NA    NA FALSE\n [8,]    NA FALSE    NA    NA    NA FALSE    NA    NA FALSE\n [9,]    NA    NA FALSE    NA    NA    NA FALSE FALSE    NA\n[10,]    NA    NA    NA FALSE    NA    NA FALSE    NA FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [4,] FALSE    NA    NA FALSE    NA FALSE    NA    NA    NA\n [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,] FALSE    NA    NA    NA FALSE    NA    NA    NA FALSE\n [8,]    NA FALSE    NA    NA    NA FALSE    NA    NA FALSE\n [9,]    NA    NA FALSE    NA    NA    NA FALSE FALSE    NA\n[10,]    NA    NA    NA FALSE    NA    NA FALSE    NA FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [4,] FALSE    NA    NA FALSE    NA FALSE    NA    NA    NA\n [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,] FALSE    NA    NA    NA FALSE    NA    NA    NA FALSE\n [8,]    NA FALSE    NA    NA    NA FALSE    NA    NA FALSE\n [9,]    NA    NA FALSE    NA    NA    NA FALSE FALSE    NA\n[10,]    NA    NA    NA FALSE    NA    NA FALSE    NA FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [4,] FALSE    NA    NA FALSE    NA FALSE    NA    NA    NA\n [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,] FALSE    NA    NA    NA FALSE    NA    NA    NA FALSE\n [8,]    NA FALSE    NA    NA    NA FALSE    NA    NA FALSE\n [9,]    NA    NA FALSE    NA    NA    NA FALSE FALSE    NA\n[10,]    NA    NA    NA FALSE    NA    NA FALSE    NA FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [4,] FALSE    NA    NA FALSE    NA FALSE    NA    NA    NA\n [5,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA    NA    NA\n [7,] FALSE    NA    NA    NA FALSE    NA    NA    NA FALSE\n [8,]    NA FALSE    NA    NA    NA FALSE    NA    NA FALSE\n [9,]    NA    NA FALSE    NA    NA    NA FALSE FALSE    NA\n[10,]    NA    NA    NA FALSE    NA    NA FALSE    NA FALSE\n\nbc.cplx(x, y, \"!=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE   NA   NA TRUE   NA TRUE   NA   NA   NA\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,] TRUE   NA   NA   NA TRUE   NA   NA   NA TRUE\n [8,]   NA TRUE   NA   NA   NA TRUE   NA   NA TRUE\n [9,]   NA   NA TRUE   NA   NA   NA TRUE TRUE   NA\n[10,]   NA   NA   NA TRUE   NA   NA TRUE   NA TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE   NA   NA TRUE   NA TRUE   NA   NA   NA\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,] TRUE   NA   NA   NA TRUE   NA   NA   NA TRUE\n [8,]   NA TRUE   NA   NA   NA TRUE   NA   NA TRUE\n [9,]   NA   NA TRUE   NA   NA   NA TRUE TRUE   NA\n[10,]   NA   NA   NA TRUE   NA   NA TRUE   NA TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE   NA   NA TRUE   NA TRUE   NA   NA   NA\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,] TRUE   NA   NA   NA TRUE   NA   NA   NA TRUE\n [8,]   NA TRUE   NA   NA   NA TRUE   NA   NA TRUE\n [9,]   NA   NA TRUE   NA   NA   NA TRUE TRUE   NA\n[10,]   NA   NA   NA TRUE   NA   NA TRUE   NA TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE   NA   NA TRUE   NA TRUE   NA   NA   NA\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,] TRUE   NA   NA   NA TRUE   NA   NA   NA TRUE\n [8,]   NA TRUE   NA   NA   NA TRUE   NA   NA TRUE\n [9,]   NA   NA TRUE   NA   NA   NA TRUE TRUE   NA\n[10,]   NA   NA   NA TRUE   NA   NA TRUE   NA TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE   NA   NA TRUE   NA TRUE   NA   NA   NA\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,] TRUE   NA   NA   NA TRUE   NA   NA   NA TRUE\n [8,]   NA TRUE   NA   NA   NA TRUE   NA   NA TRUE\n [9,]   NA   NA TRUE   NA   NA   NA TRUE TRUE   NA\n[10,]   NA   NA   NA TRUE   NA   NA TRUE   NA TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE   NA   NA TRUE   NA TRUE   NA   NA   NA\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,] TRUE   NA   NA   NA TRUE   NA   NA   NA TRUE\n [8,]   NA TRUE   NA   NA   NA TRUE   NA   NA TRUE\n [9,]   NA   NA TRUE   NA   NA   NA TRUE TRUE   NA\n[10,]   NA   NA   NA TRUE   NA   NA TRUE   NA TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE   NA   NA TRUE   NA TRUE   NA   NA   NA\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,] TRUE   NA   NA   NA TRUE   NA   NA   NA TRUE\n [8,]   NA TRUE   NA   NA   NA TRUE   NA   NA TRUE\n [9,]   NA   NA TRUE   NA   NA   NA TRUE TRUE   NA\n[10,]   NA   NA   NA TRUE   NA   NA TRUE   NA TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE   NA   NA TRUE   NA TRUE   NA   NA   NA\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,] TRUE   NA   NA   NA TRUE   NA   NA   NA TRUE\n [8,]   NA TRUE   NA   NA   NA TRUE   NA   NA TRUE\n [9,]   NA   NA TRUE   NA   NA   NA TRUE TRUE   NA\n[10,]   NA   NA   NA TRUE   NA   NA TRUE   NA TRUE\n\nbc.cplx(x, y, \"+\")\n\n, , 1\n\n                      [,1]           [,2]                [,3]\n [1,]                   NA             NA                  NA\n [2,]                   NA             NA                  NA\n [3,]                   NA             NA                  NA\n [4,]        Inf-1.381930i             NA                  NA\n [5,]                   NA             NA                  NA\n [6,]                   NA             NA                  NA\n [7,] 0.01781481-3.256436i             NA                  NA\n [8,]                   NA Inf-0.6215475i                  NA\n [9,]                   NA             NA -2.01338+0.2846776i\n[10,]                   NA             NA                  NA\n                    [,4]                [,5]           [,6]\n [1,]                 NA                  NA             NA\n [2,]                 NA                  NA             NA\n [3,]                 NA                  NA             NA\n [4,]     Inf-0.6185388i                  NA Inf-2.7014213i\n [5,]                 NA                  NA             NA\n [6,]                 NA                  NA             NA\n [7,]                 NA -1.136007-2.852714i             NA\n [8,]                 NA                  NA Inf+0.6979433i\n [9,]                 NA                  NA             NA\n[10,] 2.71652+0.1195667i                  NA             NA\n                       [,7]                 [,8]                 [,9]\n [1,]                    NA                   NA                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA                   NA\n [4,]                    NA                   NA                   NA\n [5,]                    NA                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA -0.0920003-1.826546i\n [8,]                    NA                   NA        Inf+1.461335i\n [9,] -0.9693731+1.3108455i -0.859558-0.1190448i                   NA\n[10,]  2.0223412+0.8829584i                   NA        Inf-1.199924i\n\n, , 2\n\n                      [,1]           [,2]                [,3]\n [1,]                   NA             NA                  NA\n [2,]                   NA             NA                  NA\n [3,]                   NA             NA                  NA\n [4,]        Inf-1.381930i             NA                  NA\n [5,]                   NA             NA                  NA\n [6,]                   NA             NA                  NA\n [7,] 0.01781481-3.256436i             NA                  NA\n [8,]                   NA Inf-0.6215475i                  NA\n [9,]                   NA             NA -2.01338+0.2846776i\n[10,]                   NA             NA                  NA\n                    [,4]                [,5]           [,6]\n [1,]                 NA                  NA             NA\n [2,]                 NA                  NA             NA\n [3,]                 NA                  NA             NA\n [4,]     Inf-0.6185388i                  NA Inf-2.7014213i\n [5,]                 NA                  NA             NA\n [6,]                 NA                  NA             NA\n [7,]                 NA -1.136007-2.852714i             NA\n [8,]                 NA                  NA Inf+0.6979433i\n [9,]                 NA                  NA             NA\n[10,] 2.71652+0.1195667i                  NA             NA\n                       [,7]                 [,8]                 [,9]\n [1,]                    NA                   NA                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA                   NA\n [4,]                    NA                   NA                   NA\n [5,]                    NA                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA -0.0920003-1.826546i\n [8,]                    NA                   NA        Inf+1.461335i\n [9,] -0.9693731+1.3108455i -0.859558-0.1190448i                   NA\n[10,]  2.0223412+0.8829584i                   NA        Inf-1.199924i\n\n, , 3\n\n                      [,1]           [,2]                [,3]\n [1,]                   NA             NA                  NA\n [2,]                   NA             NA                  NA\n [3,]                   NA             NA                  NA\n [4,]        Inf-1.381930i             NA                  NA\n [5,]                   NA             NA                  NA\n [6,]                   NA             NA                  NA\n [7,] 0.01781481-3.256436i             NA                  NA\n [8,]                   NA Inf-0.6215475i                  NA\n [9,]                   NA             NA -2.01338+0.2846776i\n[10,]                   NA             NA                  NA\n                    [,4]                [,5]           [,6]\n [1,]                 NA                  NA             NA\n [2,]                 NA                  NA             NA\n [3,]                 NA                  NA             NA\n [4,]     Inf-0.6185388i                  NA Inf-2.7014213i\n [5,]                 NA                  NA             NA\n [6,]                 NA                  NA             NA\n [7,]                 NA -1.136007-2.852714i             NA\n [8,]                 NA                  NA Inf+0.6979433i\n [9,]                 NA                  NA             NA\n[10,] 2.71652+0.1195667i                  NA             NA\n                       [,7]                 [,8]                 [,9]\n [1,]                    NA                   NA                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA                   NA\n [4,]                    NA                   NA                   NA\n [5,]                    NA                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA -0.0920003-1.826546i\n [8,]                    NA                   NA        Inf+1.461335i\n [9,] -0.9693731+1.3108455i -0.859558-0.1190448i                   NA\n[10,]  2.0223412+0.8829584i                   NA        Inf-1.199924i\n\n, , 4\n\n                      [,1]           [,2]                [,3]\n [1,]                   NA             NA                  NA\n [2,]                   NA             NA                  NA\n [3,]                   NA             NA                  NA\n [4,]        Inf-1.381930i             NA                  NA\n [5,]                   NA             NA                  NA\n [6,]                   NA             NA                  NA\n [7,] 0.01781481-3.256436i             NA                  NA\n [8,]                   NA Inf-0.6215475i                  NA\n [9,]                   NA             NA -2.01338+0.2846776i\n[10,]                   NA             NA                  NA\n                    [,4]                [,5]           [,6]\n [1,]                 NA                  NA             NA\n [2,]                 NA                  NA             NA\n [3,]                 NA                  NA             NA\n [4,]     Inf-0.6185388i                  NA Inf-2.7014213i\n [5,]                 NA                  NA             NA\n [6,]                 NA                  NA             NA\n [7,]                 NA -1.136007-2.852714i             NA\n [8,]                 NA                  NA Inf+0.6979433i\n [9,]                 NA                  NA             NA\n[10,] 2.71652+0.1195667i                  NA             NA\n                       [,7]                 [,8]                 [,9]\n [1,]                    NA                   NA                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA                   NA\n [4,]                    NA                   NA                   NA\n [5,]                    NA                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA -0.0920003-1.826546i\n [8,]                    NA                   NA        Inf+1.461335i\n [9,] -0.9693731+1.3108455i -0.859558-0.1190448i                   NA\n[10,]  2.0223412+0.8829584i                   NA        Inf-1.199924i\n\n, , 5\n\n                      [,1]           [,2]                [,3]\n [1,]                   NA             NA                  NA\n [2,]                   NA             NA                  NA\n [3,]                   NA             NA                  NA\n [4,]        Inf-1.381930i             NA                  NA\n [5,]                   NA             NA                  NA\n [6,]                   NA             NA                  NA\n [7,] 0.01781481-3.256436i             NA                  NA\n [8,]                   NA Inf-0.6215475i                  NA\n [9,]                   NA             NA -2.01338+0.2846776i\n[10,]                   NA             NA                  NA\n                    [,4]                [,5]           [,6]\n [1,]                 NA                  NA             NA\n [2,]                 NA                  NA             NA\n [3,]                 NA                  NA             NA\n [4,]     Inf-0.6185388i                  NA Inf-2.7014213i\n [5,]                 NA                  NA             NA\n [6,]                 NA                  NA             NA\n [7,]                 NA -1.136007-2.852714i             NA\n [8,]                 NA                  NA Inf+0.6979433i\n [9,]                 NA                  NA             NA\n[10,] 2.71652+0.1195667i                  NA             NA\n                       [,7]                 [,8]                 [,9]\n [1,]                    NA                   NA                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA                   NA\n [4,]                    NA                   NA                   NA\n [5,]                    NA                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA -0.0920003-1.826546i\n [8,]                    NA                   NA        Inf+1.461335i\n [9,] -0.9693731+1.3108455i -0.859558-0.1190448i                   NA\n[10,]  2.0223412+0.8829584i                   NA        Inf-1.199924i\n\n, , 6\n\n                      [,1]           [,2]                [,3]\n [1,]                   NA             NA                  NA\n [2,]                   NA             NA                  NA\n [3,]                   NA             NA                  NA\n [4,]        Inf-1.381930i             NA                  NA\n [5,]                   NA             NA                  NA\n [6,]                   NA             NA                  NA\n [7,] 0.01781481-3.256436i             NA                  NA\n [8,]                   NA Inf-0.6215475i                  NA\n [9,]                   NA             NA -2.01338+0.2846776i\n[10,]                   NA             NA                  NA\n                    [,4]                [,5]           [,6]\n [1,]                 NA                  NA             NA\n [2,]                 NA                  NA             NA\n [3,]                 NA                  NA             NA\n [4,]     Inf-0.6185388i                  NA Inf-2.7014213i\n [5,]                 NA                  NA             NA\n [6,]                 NA                  NA             NA\n [7,]                 NA -1.136007-2.852714i             NA\n [8,]                 NA                  NA Inf+0.6979433i\n [9,]                 NA                  NA             NA\n[10,] 2.71652+0.1195667i                  NA             NA\n                       [,7]                 [,8]                 [,9]\n [1,]                    NA                   NA                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA                   NA\n [4,]                    NA                   NA                   NA\n [5,]                    NA                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA -0.0920003-1.826546i\n [8,]                    NA                   NA        Inf+1.461335i\n [9,] -0.9693731+1.3108455i -0.859558-0.1190448i                   NA\n[10,]  2.0223412+0.8829584i                   NA        Inf-1.199924i\n\n, , 7\n\n                      [,1]           [,2]                [,3]\n [1,]                   NA             NA                  NA\n [2,]                   NA             NA                  NA\n [3,]                   NA             NA                  NA\n [4,]        Inf-1.381930i             NA                  NA\n [5,]                   NA             NA                  NA\n [6,]                   NA             NA                  NA\n [7,] 0.01781481-3.256436i             NA                  NA\n [8,]                   NA Inf-0.6215475i                  NA\n [9,]                   NA             NA -2.01338+0.2846776i\n[10,]                   NA             NA                  NA\n                    [,4]                [,5]           [,6]\n [1,]                 NA                  NA             NA\n [2,]                 NA                  NA             NA\n [3,]                 NA                  NA             NA\n [4,]     Inf-0.6185388i                  NA Inf-2.7014213i\n [5,]                 NA                  NA             NA\n [6,]                 NA                  NA             NA\n [7,]                 NA -1.136007-2.852714i             NA\n [8,]                 NA                  NA Inf+0.6979433i\n [9,]                 NA                  NA             NA\n[10,] 2.71652+0.1195667i                  NA             NA\n                       [,7]                 [,8]                 [,9]\n [1,]                    NA                   NA                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA                   NA\n [4,]                    NA                   NA                   NA\n [5,]                    NA                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA -0.0920003-1.826546i\n [8,]                    NA                   NA        Inf+1.461335i\n [9,] -0.9693731+1.3108455i -0.859558-0.1190448i                   NA\n[10,]  2.0223412+0.8829584i                   NA        Inf-1.199924i\n\n, , 8\n\n                      [,1]           [,2]                [,3]\n [1,]                   NA             NA                  NA\n [2,]                   NA             NA                  NA\n [3,]                   NA             NA                  NA\n [4,]        Inf-1.381930i             NA                  NA\n [5,]                   NA             NA                  NA\n [6,]                   NA             NA                  NA\n [7,] 0.01781481-3.256436i             NA                  NA\n [8,]                   NA Inf-0.6215475i                  NA\n [9,]                   NA             NA -2.01338+0.2846776i\n[10,]                   NA             NA                  NA\n                    [,4]                [,5]           [,6]\n [1,]                 NA                  NA             NA\n [2,]                 NA                  NA             NA\n [3,]                 NA                  NA             NA\n [4,]     Inf-0.6185388i                  NA Inf-2.7014213i\n [5,]                 NA                  NA             NA\n [6,]                 NA                  NA             NA\n [7,]                 NA -1.136007-2.852714i             NA\n [8,]                 NA                  NA Inf+0.6979433i\n [9,]                 NA                  NA             NA\n[10,] 2.71652+0.1195667i                  NA             NA\n                       [,7]                 [,8]                 [,9]\n [1,]                    NA                   NA                   NA\n [2,]                    NA                   NA                   NA\n [3,]                    NA                   NA                   NA\n [4,]                    NA                   NA                   NA\n [5,]                    NA                   NA                   NA\n [6,]                    NA                   NA                   NA\n [7,]                    NA                   NA -0.0920003-1.826546i\n [8,]                    NA                   NA        Inf+1.461335i\n [9,] -0.9693731+1.3108455i -0.859558-0.1190448i                   NA\n[10,]  2.0223412+0.8829584i                   NA        Inf-1.199924i\n\nbc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), \"==\")\n\n [1]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA FALSE\n[13]    NA FALSE    NA    NA    NA FALSE\n\nbc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), \"!=\")\n\n [1]   NA   NA   NA   NA   NA   NA TRUE   NA   NA   NA   NA TRUE   NA   NA TRUE\n[16]   NA   NA TRUE\n\nx &lt;- gen() + gen() * -1i\ny &lt;- gen() + gen() * -1i\nout &lt;- bc.cplx(array(x), array(y), \"*\")\ncbind(x, y, x*y, out)\n\n                            x                     y                      \n [1,]         NaN-0.09219066i        Inf+1.3375963i        NaN-      Infi\n [2,]         NaN-       Infi -0.5698757-1.1768318i       -Inf+      Infi\n [3,]  0.03663860-0.83779418i        NaN-      Infi       -Inf-      Infi\n [4,] -0.77700708+0.01593921i -0.7856042+0.5991685i  0.6008698-0.4780801i\n [5,]         NaN+       Infi -1.3525069-1.1451389i        Inf-      Infi\n [6,]         NaN-       Infi        Inf-0.3525169i        NaN-      Infi\n [7,]         Inf-1.10977159i  2.0111083-0.6723959i        Inf-      Infi\n [8,]                      NA                    NA                    NA\n [9,] -0.35423613-0.01462975i  2.3272520+0.6226705i -0.8152872-0.2546195i\n[10,]                      NA       -Inf-0.5962875i        NaN+      NaNi\n[11,]         NaN+       NaNi        NaN+      Infi        NaN+      NaNi\n[12,]                      NA       -Inf-2.0258630i        NaN-      Infi\n[13,] -0.32975620-0.27958043i                    NA                    NA\n[14,]         NaN+0.42937564i        NaN-      Infi        Inf+      NaNi\n[15,]                      NA -0.6971686+0.5068867i                    NA\n[16,]         NaN+       Infi                    NA       -Inf+      NaNi\n[17,]  0.07628078-0.73999521i        NaN+      NaNi        NaN+      NaNi\n[18,]         Inf+0.46179918i                    NA        NaN+      NaNi\n                        out\n [1,]                    NA\n [2,]                    NA\n [3,]                    NA\n [4,]  0.6008698-0.4780801i\n [5,]                    NA\n [6,]                    NA\n [7,]        Inf-      Infi\n [8,]                    NA\n [9,] -0.8152872-0.2546195i\n[10,]                    NA\n[11,]                    NA\n[12,]                    NA\n[13,]                    NA\n[14,]                    NA\n[15,]                    NA\n[16,]                    NA\n[17,]                    NA\n[18,]                    NA"
  },
  {
    "objectID": "man/other/typecast.html",
    "href": "man/other/typecast.html",
    "title": "typecast",
    "section": "",
    "text": "Type casting usually strips away attributes of objects.  The functions provided here preserve dimensions, dimnames, and names, which may be more convenient for arrays and array-like objects.   The functions are as follows: \n\n\nas_bool(): converts object to atomic type logical (TRUE, FALSE, NA).\n\n\nas_int(): converts object to atomic type integer.\n\n\nas_dbl(): converts object to atomic type double (AKA numeric).\n\n\nas_chr(): converts object to atomic type character.\n\n\nas_cplx(): converts object to atomic type complex.\n\n\nas_raw(): converts object to atomic type raw.\n\n\nas_list(): converts object to recursive type list. \n\n\nas_num() is an alias for as_dbl().  as_str() is an alias for as_chr().   See also typeof.  \n\n\n\nas_bool(x, ...)\n\nas_int(x, ...)\n\nas_dbl(x, ...)\n\nas_num(x, ...)\n\nas_chr(x, ...)\n\nas_str(x, ...)\n\nas_cplx(x, ...)\n\nas_raw(x, ...)\n\nas_list(x, ...)\n\n\n\n\n\n\n\n\nx\n\n\nan R object.\n\n\n\n\n…\n\n\nfurther arguments passed to or from other methods.\n\n\n\n\n\n\n\nThe converted object.  \n\n\n\n\nlibrary(\"broadcast\")\n\n\n# matrix example ====\nx &lt;- matrix(sample(-1:28), ncol = 5)\ncolnames(x) &lt;- month.name[1:5]\nrownames(x) &lt;- month.abb[1:6]\nnames(x) &lt;- c(letters[1:20], LETTERS[1:10])\nprint(x)\n\n    January February March April May\nJan       1       14    18     3  12\nFeb       5       23     9     6   4\nMar      16       27    20    -1   0\nApr      26       22    21    24  28\nMay      13       25    15     7   8\nJun      17       11    19     2  10\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_bool(x)\n\n    January February March April   May\nJan    TRUE     TRUE  TRUE  TRUE  TRUE\nFeb    TRUE     TRUE  TRUE  TRUE  TRUE\nMar    TRUE     TRUE  TRUE  TRUE FALSE\nApr    TRUE     TRUE  TRUE  TRUE  TRUE\nMay    TRUE     TRUE  TRUE  TRUE  TRUE\nJun    TRUE     TRUE  TRUE  TRUE  TRUE\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_int(x)\n\n    January February March April May\nJan       1       14    18     3  12\nFeb       5       23     9     6   4\nMar      16       27    20    -1   0\nApr      26       22    21    24  28\nMay      13       25    15     7   8\nJun      17       11    19     2  10\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_dbl(x)\n\n    January February March April May\nJan       1       14    18     3  12\nFeb       5       23     9     6   4\nMar      16       27    20    -1   0\nApr      26       22    21    24  28\nMay      13       25    15     7   8\nJun      17       11    19     2  10\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_chr(x)\n\n    January February March April May \nJan \"1\"     \"14\"     \"18\"  \"3\"   \"12\"\nFeb \"5\"     \"23\"     \"9\"   \"6\"   \"4\" \nMar \"16\"    \"27\"     \"20\"  \"-1\"  \"0\" \nApr \"26\"    \"22\"     \"21\"  \"24\"  \"28\"\nMay \"13\"    \"25\"     \"15\"  \"7\"   \"8\" \nJun \"17\"    \"11\"     \"19\"  \"2\"   \"10\"\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_cplx(x)\n\n    January February March April   May\nJan    1+0i    14+0i 18+0i  3+0i 12+0i\nFeb    5+0i    23+0i  9+0i  6+0i  4+0i\nMar   16+0i    27+0i 20+0i -1+0i  0+0i\nApr   26+0i    22+0i 21+0i 24+0i 28+0i\nMay   13+0i    25+0i 15+0i  7+0i  8+0i\nJun   17+0i    11+0i 19+0i  2+0i 10+0i\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_raw(x)\n\n    January February March April May\nJan      01       0e    12    03  0c\nFeb      05       17    09    06  04\nMar      10       1b    14    00  00\nApr      1a       16    15    18  1c\nMay      0d       19    0f    07  08\nJun      11       0b    13    02  0a\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\n################################################################################\n\n# factor example ====\nx &lt;- factor(month.abb, levels = month.abb)\nnames(x) &lt;- month.name\nprint(x)\n\n  January  February     March     April       May      June      July    August \n      Jan       Feb       Mar       Apr       May       Jun       Jul       Aug \nSeptember   October  November  December \n      Sep       Oct       Nov       Dec \nLevels: Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n\nas_bool(as_int(x) &gt; 6)\n\n  January  February     March     April       May      June      July    August \n    FALSE     FALSE     FALSE     FALSE     FALSE     FALSE      TRUE      TRUE \nSeptember   October  November  December \n     TRUE      TRUE      TRUE      TRUE \n\nas_int(x)\n\n  January  February     March     April       May      June      July    August \n        1         2         3         4         5         6         7         8 \nSeptember   October  November  December \n        9        10        11        12 \n\nas_dbl(x)\n\n  January  February     March     April       May      June      July    August \n        1         2         3         4         5         6         7         8 \nSeptember   October  November  December \n        9        10        11        12 \n\nas_chr(x)\n\n  January  February     March     April       May      June      July    August \n    \"Jan\"     \"Feb\"     \"Mar\"     \"Apr\"     \"May\"     \"Jun\"     \"Jul\"     \"Aug\" \nSeptember   October  November  December \n    \"Sep\"     \"Oct\"     \"Nov\"     \"Dec\" \n\nas_cplx(x)\n\n  January  February     March     April       May      June      July    August \n 1+0i  2+0i  3+0i  4+0i  5+0i  6+0i  7+0i  8+0i\nSeptember   October  November  December \n 9+0i 10+0i 11+0i 12+0i\n\nas_raw(x)\n\n  January  February     March     April       May      June      July    August \n       01        02        03        04        05        06        07        08 \nSeptember   October  November  December \n       09        0a        0b        0c"
  },
  {
    "objectID": "man/other/typecast.html#atomic-and-list-type-casting-with-names-and-dimensions-preserved",
    "href": "man/other/typecast.html#atomic-and-list-type-casting-with-names-and-dimensions-preserved",
    "title": "typecast",
    "section": "",
    "text": "Type casting usually strips away attributes of objects.  The functions provided here preserve dimensions, dimnames, and names, which may be more convenient for arrays and array-like objects.   The functions are as follows: \n\n\nas_bool(): converts object to atomic type logical (TRUE, FALSE, NA).\n\n\nas_int(): converts object to atomic type integer.\n\n\nas_dbl(): converts object to atomic type double (AKA numeric).\n\n\nas_chr(): converts object to atomic type character.\n\n\nas_cplx(): converts object to atomic type complex.\n\n\nas_raw(): converts object to atomic type raw.\n\n\nas_list(): converts object to recursive type list. \n\n\nas_num() is an alias for as_dbl().  as_str() is an alias for as_chr().   See also typeof.  \n\n\n\nas_bool(x, ...)\n\nas_int(x, ...)\n\nas_dbl(x, ...)\n\nas_num(x, ...)\n\nas_chr(x, ...)\n\nas_str(x, ...)\n\nas_cplx(x, ...)\n\nas_raw(x, ...)\n\nas_list(x, ...)\n\n\n\n\n\n\n\n\nx\n\n\nan R object.\n\n\n\n\n…\n\n\nfurther arguments passed to or from other methods.\n\n\n\n\n\n\n\nThe converted object.  \n\n\n\n\nlibrary(\"broadcast\")\n\n\n# matrix example ====\nx &lt;- matrix(sample(-1:28), ncol = 5)\ncolnames(x) &lt;- month.name[1:5]\nrownames(x) &lt;- month.abb[1:6]\nnames(x) &lt;- c(letters[1:20], LETTERS[1:10])\nprint(x)\n\n    January February March April May\nJan       1       14    18     3  12\nFeb       5       23     9     6   4\nMar      16       27    20    -1   0\nApr      26       22    21    24  28\nMay      13       25    15     7   8\nJun      17       11    19     2  10\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_bool(x)\n\n    January February March April   May\nJan    TRUE     TRUE  TRUE  TRUE  TRUE\nFeb    TRUE     TRUE  TRUE  TRUE  TRUE\nMar    TRUE     TRUE  TRUE  TRUE FALSE\nApr    TRUE     TRUE  TRUE  TRUE  TRUE\nMay    TRUE     TRUE  TRUE  TRUE  TRUE\nJun    TRUE     TRUE  TRUE  TRUE  TRUE\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_int(x)\n\n    January February March April May\nJan       1       14    18     3  12\nFeb       5       23     9     6   4\nMar      16       27    20    -1   0\nApr      26       22    21    24  28\nMay      13       25    15     7   8\nJun      17       11    19     2  10\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_dbl(x)\n\n    January February March April May\nJan       1       14    18     3  12\nFeb       5       23     9     6   4\nMar      16       27    20    -1   0\nApr      26       22    21    24  28\nMay      13       25    15     7   8\nJun      17       11    19     2  10\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_chr(x)\n\n    January February March April May \nJan \"1\"     \"14\"     \"18\"  \"3\"   \"12\"\nFeb \"5\"     \"23\"     \"9\"   \"6\"   \"4\" \nMar \"16\"    \"27\"     \"20\"  \"-1\"  \"0\" \nApr \"26\"    \"22\"     \"21\"  \"24\"  \"28\"\nMay \"13\"    \"25\"     \"15\"  \"7\"   \"8\" \nJun \"17\"    \"11\"     \"19\"  \"2\"   \"10\"\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_cplx(x)\n\n    January February March April   May\nJan    1+0i    14+0i 18+0i  3+0i 12+0i\nFeb    5+0i    23+0i  9+0i  6+0i  4+0i\nMar   16+0i    27+0i 20+0i -1+0i  0+0i\nApr   26+0i    22+0i 21+0i 24+0i 28+0i\nMay   13+0i    25+0i 15+0i  7+0i  8+0i\nJun   17+0i    11+0i 19+0i  2+0i 10+0i\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_raw(x)\n\n    January February March April May\nJan      01       0e    12    03  0c\nFeb      05       17    09    06  04\nMar      10       1b    14    00  00\nApr      1a       16    15    18  1c\nMay      0d       19    0f    07  08\nJun      11       0b    13    02  0a\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\n################################################################################\n\n# factor example ====\nx &lt;- factor(month.abb, levels = month.abb)\nnames(x) &lt;- month.name\nprint(x)\n\n  January  February     March     April       May      June      July    August \n      Jan       Feb       Mar       Apr       May       Jun       Jul       Aug \nSeptember   October  November  December \n      Sep       Oct       Nov       Dec \nLevels: Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n\nas_bool(as_int(x) &gt; 6)\n\n  January  February     March     April       May      June      July    August \n    FALSE     FALSE     FALSE     FALSE     FALSE     FALSE      TRUE      TRUE \nSeptember   October  November  December \n     TRUE      TRUE      TRUE      TRUE \n\nas_int(x)\n\n  January  February     March     April       May      June      July    August \n        1         2         3         4         5         6         7         8 \nSeptember   October  November  December \n        9        10        11        12 \n\nas_dbl(x)\n\n  January  February     March     April       May      June      July    August \n        1         2         3         4         5         6         7         8 \nSeptember   October  November  December \n        9        10        11        12 \n\nas_chr(x)\n\n  January  February     March     April       May      June      July    August \n    \"Jan\"     \"Feb\"     \"Mar\"     \"Apr\"     \"May\"     \"Jun\"     \"Jul\"     \"Aug\" \nSeptember   October  November  December \n    \"Sep\"     \"Oct\"     \"Nov\"     \"Dec\" \n\nas_cplx(x)\n\n  January  February     March     April       May      June      July    August \n 1+0i  2+0i  3+0i  4+0i  5+0i  6+0i  7+0i  8+0i\nSeptember   October  November  December \n 9+0i 10+0i 11+0i 12+0i\n\nas_raw(x)\n\n  January  February     March     April       May      June      July    August \n       01        02        03        04        05        06        07        08 \nSeptember   October  November  December \n       09        0a        0b        0c"
  },
  {
    "objectID": "man/other/bc_dim.html",
    "href": "man/other/bc_dim.html",
    "title": "bc_dim",
    "section": "",
    "text": "bc_dim(x, y) gives the dimensions an array would have, as the result of an broadcasted binary element-wise operation between 2 arrays x and y.\n\n\n\nbc_dim(x, y)\n\n\n\n\n\n\n\n\nx, y\n\n\nan atomic or recursive array.\n\n\n\n\n\n\n\nReturns the recycled array.\n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(TRUE, FALSE, NA), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\ndim(bc.b(x, y, \"&\")) == bc_dim(x, y)\n\n[1] TRUE TRUE TRUE\n\ndim(bc.b(x, y, \"|\")) == bc_dim(x, y)\n\n[1] TRUE TRUE TRUE"
  },
  {
    "objectID": "man/other/bc_dim.html#predict-broadcasted-dimensions",
    "href": "man/other/bc_dim.html#predict-broadcasted-dimensions",
    "title": "bc_dim",
    "section": "",
    "text": "bc_dim(x, y) gives the dimensions an array would have, as the result of an broadcasted binary element-wise operation between 2 arrays x and y.\n\n\n\nbc_dim(x, y)\n\n\n\n\n\n\n\n\nx, y\n\n\nan atomic or recursive array.\n\n\n\n\n\n\n\nReturns the recycled array.\n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(TRUE, FALSE, NA), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\ndim(bc.b(x, y, \"&\")) == bc_dim(x, y)\n\n[1] TRUE TRUE TRUE\n\ndim(bc.b(x, y, \"|\")) == bc_dim(x, y)\n\n[1] TRUE TRUE TRUE"
  },
  {
    "objectID": "man/generic/bc_ifelse.html",
    "href": "man/generic/bc_ifelse.html",
    "title": "bc_ifelse",
    "section": "",
    "text": "The bc_ifelse() function performs a broadcasted form of ifelse. \n\n\n\nbc_ifelse(cond, yes, no)\n\n\n\n\n\n\n\n\ncond\n\n\nlogical vector or array with the length equal to prod(bc_dim(yes, no)).\n\n\n\n\nyes, no\n\n\nconformable arrays of the same type.  All atomic types (see atomic) are supported.  Recursive arrays of type list are also supported.  \n\n\n\n\n\n\n\nThe ouput, here referred to as out, will be an array of the same type as yes and no.  After broadcasting yes against no, given any element index i, the following will hold for the output:\n\n\nwhen cond[i] == TRUE, out[i] is yes[i];\n\n\nwhen cond[i] == FALSE, out[i] is no[i];\n\n\nwhen cond[i] is NA, out[i] is NA when yes and no are atomic, and out[i] is list(NULL) when yes and no are recursive.  \n\n\n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(c(10, 2,2))\nx.len &lt;- prod(x.dim)\n\ngen &lt;- function(n) sample(list(letters, month.abb, 1:10), n, TRUE)\n\nx &lt;- array(gen(10), x.dim)\ny &lt;- array(gen(10), c(10,1,1))\n\ncond &lt;- bc.list(\n  x, y,\n  \\(x, y)c(length(x) == length(y) && typeof(x) == typeof(y))\n) |&gt; as_bool()\n\nbc_ifelse(cond, yes = x, no = y)\n\n, , 1\n\n      [,1]         [,2]        \n [1,] integer,10   integer,10  \n [2,] character,26 character,26\n [3,] integer,10   integer,10  \n [4,] character,26 character,26\n [5,] integer,10   integer,10  \n [6,] integer,10   integer,10  \n [7,] integer,10   integer,10  \n [8,] integer,10   integer,10  \n [9,] integer,10   integer,10  \n[10,] character,26 character,26\n\n, , 2\n\n      [,1]         [,2]        \n [1,] integer,10   integer,10  \n [2,] character,26 character,26\n [3,] integer,10   integer,10  \n [4,] character,26 character,26\n [5,] integer,10   integer,10  \n [6,] integer,10   integer,10  \n [7,] integer,10   integer,10  \n [8,] integer,10   integer,10  \n [9,] integer,10   integer,10  \n[10,] character,26 character,26"
  },
  {
    "objectID": "man/generic/bc_ifelse.html#broadcasted-ifelse",
    "href": "man/generic/bc_ifelse.html#broadcasted-ifelse",
    "title": "bc_ifelse",
    "section": "",
    "text": "The bc_ifelse() function performs a broadcasted form of ifelse. \n\n\n\nbc_ifelse(cond, yes, no)\n\n\n\n\n\n\n\n\ncond\n\n\nlogical vector or array with the length equal to prod(bc_dim(yes, no)).\n\n\n\n\nyes, no\n\n\nconformable arrays of the same type.  All atomic types (see atomic) are supported.  Recursive arrays of type list are also supported.  \n\n\n\n\n\n\n\nThe ouput, here referred to as out, will be an array of the same type as yes and no.  After broadcasting yes against no, given any element index i, the following will hold for the output:\n\n\nwhen cond[i] == TRUE, out[i] is yes[i];\n\n\nwhen cond[i] == FALSE, out[i] is no[i];\n\n\nwhen cond[i] is NA, out[i] is NA when yes and no are atomic, and out[i] is list(NULL) when yes and no are recursive.  \n\n\n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(c(10, 2,2))\nx.len &lt;- prod(x.dim)\n\ngen &lt;- function(n) sample(list(letters, month.abb, 1:10), n, TRUE)\n\nx &lt;- array(gen(10), x.dim)\ny &lt;- array(gen(10), c(10,1,1))\n\ncond &lt;- bc.list(\n  x, y,\n  \\(x, y)c(length(x) == length(y) && typeof(x) == typeof(y))\n) |&gt; as_bool()\n\nbc_ifelse(cond, yes = x, no = y)\n\n, , 1\n\n      [,1]         [,2]        \n [1,] integer,10   integer,10  \n [2,] character,26 character,26\n [3,] integer,10   integer,10  \n [4,] character,26 character,26\n [5,] integer,10   integer,10  \n [6,] integer,10   integer,10  \n [7,] integer,10   integer,10  \n [8,] integer,10   integer,10  \n [9,] integer,10   integer,10  \n[10,] character,26 character,26\n\n, , 2\n\n      [,1]         [,2]        \n [1,] integer,10   integer,10  \n [2,] character,26 character,26\n [3,] integer,10   integer,10  \n [4,] character,26 character,26\n [5,] integer,10   integer,10  \n [6,] integer,10   integer,10  \n [7,] integer,10   integer,10  \n [8,] integer,10   integer,10  \n [9,] integer,10   integer,10  \n[10,] character,26 character,26"
  },
  {
    "objectID": "man/bind/bind.html",
    "href": "man/bind/bind.html",
    "title": "bind",
    "section": "",
    "text": "The bind_implementations provide dimensional binding functionalities.   The following implementations are available:\n\n\nbind_mat() binds dimensionless (atomic/recursive) vectors and (atomic/recursive) matrices row- or column-wise.  Allows for recycling.\n\n\nbind_array() binds (atomic/recursive) arrays and (atomic/recursive) matrices.  Allows for broadcasting.\n\n\nbind_dt() binds data.tables and other data.frame-like objects.  This function is only available if the ‘data.table’ package is installed.  Returns a data.table.  Faster than do.call(cbind, …) or do.call(rbind, …) for regular data.frame objects. \n\n\nNote that the naming convention of the binding implementations here is \"bind_\" followed by the resulting class (abbreviated).  I.e. bind_mat returns a matrix, but can bind both matrices and vectors.  And bind_array returns an array, but can bind both arrays and matrices.  And bind_dt returns a data.table, but can bind not only data.tables, but also most other data.frame-like objects.  \n\n\n\nbind_mat(input, along, name_deparse = TRUE, comnames_from = 1L)\n\nbind_array(\n  input,\n  along,\n  revalong,\n  max_bc = 1L,\n  name_along = TRUE,\n  comnames_from = 1L\n)\n\nbind_dt(input, along, ...)\n\n\n\n\n\n\n\n\ninput\n\n\na list of only the appropriate objects.  If input is named, its names will be used for the names of dimension along of the output, as far as possible.\n\n\n\n\nalong\n\n\na single integer, indicating the dimension along which to bind the dimensions.  I.e. use along = 1 for row-binding, along = 2 for column-binding, etc.  For arrays, additional flexibility is available:\n\n\nSpecifying along = 0 will bind the arrays on a new dimension before the first, making along the new first dimension.\n\n\nSpecifying along = N + 1, with N = max(lst.ndim(input)), will create an additional dimension (N + 1) and bind the arrays along that new dimension.\n\n\n\n\n\n\nname_deparse\n\n\nBoolean, for bind_mat().  Indicates if dimension along should be named.  Uses the naming method from rbind/cbind itself.\n\n\n\n\ncomnames_from\n\n\neither integer scalar or NULL, for bind_mat() and bind_array().  Indicates which object in input should be used for naming the shared dimension.  If NULL, no communal names will be given.  For example:  When binding columns of matrices, the matrices will share the same rownames.  Using comnames_from = 10 will then result in bind_array() using rownames(input[[10]]) for the rownames of the output.\n\n\n\n\nrevalong\n\n\nfor bind_array() only.  Same as along, but counting backwards.  I.e. revalong = 0 is equivalent to along = N+1, and revalong = N+1 is equivalent to along = 0;  with N = max(lst.ndim(input)).\n\n\n\n\nmax_bc\n\n\ninteger, for bind_array only.  Specify here the number of dimensions that are allowed to be broadcasted when binding arrays.  If max_bc = 0L, no broadcasting will be allowed at all.\n\n\n\n\nname_along\n\n\nBoolean, for bind_array().  Indicates if dimension along should be named.\n\n\n\n\n…\n\n\narguments to be passed to rbindlist.  \n\n\n\n\n\n\n\nFor in-depth information about the binding implentations in the ‘broadcast’ package, please refer to broadcast_bind.  \n\n\n\nThe bound object.\n\n\n\nPlate T, Heiberger R (2016). abind: Combine Multidimensional Arrays. R package version 1.4-5, https://CRAN.R-project.org/package=abind.\n\n\n\n\nlibrary(\"broadcast\")\n\n\n# bind_array ====\n\n# here, atomic and recursive arrays are mixed,\n# resulting in recursive arrays\n\n# creating the arrays\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\n# binding the arrays\ninput &lt;- list(x = x, y = y)\nbind_array(input, along = 0L) # binds on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\nbind_array(input, along = 1L) # binds on first dimension (i.e. rows)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, along = 2L)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, along = 3L) # bind on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 0L) # binds on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 1L) # binds on last dimension (i.e. columns)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, revalong = 2L)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, revalong = 3L) # bind on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\n# binding, with empty arrays\nemptyarray &lt;- array(numeric(0L), c(0L, 3L))\ndimnames(emptyarray) &lt;- list(NULL, paste(\"empty\", 1:3))\nprint(emptyarray)\n\n     empty 1 empty 2 empty 3\n\ninput &lt;- list(x = x, y = emptyarray)\nbind_array(input, along = 1L, comnames_from = 2L) # row-bind\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n################################################################################\n\n# bind_mat ====\n\n# here, atomic and recursive matrices are mixed,\n# resulting in a recursive matrix\n\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\nbind_mat(list(x = x, y = y), 2L)\n\n  A            B            C                  \na logical,3    logical,3    logical,3    1 5 9 \nb integer,10   integer,10   integer,10   2 6 10\nc numeric,10   numeric,10   numeric,10   3 7 11\nd character,26 character,26 character,26 4 8 12\n\n################################################################################\n\n# bind_dt ====\n\n\nx &lt;- data.frame(a = 1:12, b = month.abb) # data.frame\ny &lt;- data.table::data.table(a = 1:12, b = month.abb) # data.table\n\nbind_dt(list(x = x, y = y), 2L) # column bind\n\n      x.a    x.b   y.a    y.b\n    &lt;int&gt; &lt;char&gt; &lt;int&gt; &lt;char&gt;\n 1:     1    Jan     1    Jan\n 2:     2    Feb     2    Feb\n 3:     3    Mar     3    Mar\n 4:     4    Apr     4    Apr\n 5:     5    May     5    May\n 6:     6    Jun     6    Jun\n 7:     7    Jul     7    Jul\n 8:     8    Aug     8    Aug\n 9:     9    Sep     9    Sep\n10:    10    Oct    10    Oct\n11:    11    Nov    11    Nov\n12:    12    Dec    12    Dec\n\nbind_dt(list(x = x, y = y), 1L) # row bind\n\n        a      b\n    &lt;int&gt; &lt;char&gt;\n 1:     1    Jan\n 2:     2    Feb\n 3:     3    Mar\n 4:     4    Apr\n 5:     5    May\n 6:     6    Jun\n 7:     7    Jul\n 8:     8    Aug\n 9:     9    Sep\n10:    10    Oct\n11:    11    Nov\n12:    12    Dec\n13:     1    Jan\n14:     2    Feb\n15:     3    Mar\n16:     4    Apr\n17:     5    May\n18:     6    Jun\n19:     7    Jul\n20:     8    Aug\n21:     9    Sep\n22:    10    Oct\n23:    11    Nov\n24:    12    Dec\n        a      b"
  },
  {
    "objectID": "man/bind/bind.html#dimensional-binding-of-objects",
    "href": "man/bind/bind.html#dimensional-binding-of-objects",
    "title": "bind",
    "section": "",
    "text": "The bind_implementations provide dimensional binding functionalities.   The following implementations are available:\n\n\nbind_mat() binds dimensionless (atomic/recursive) vectors and (atomic/recursive) matrices row- or column-wise.  Allows for recycling.\n\n\nbind_array() binds (atomic/recursive) arrays and (atomic/recursive) matrices.  Allows for broadcasting.\n\n\nbind_dt() binds data.tables and other data.frame-like objects.  This function is only available if the ‘data.table’ package is installed.  Returns a data.table.  Faster than do.call(cbind, …) or do.call(rbind, …) for regular data.frame objects. \n\n\nNote that the naming convention of the binding implementations here is \"bind_\" followed by the resulting class (abbreviated).  I.e. bind_mat returns a matrix, but can bind both matrices and vectors.  And bind_array returns an array, but can bind both arrays and matrices.  And bind_dt returns a data.table, but can bind not only data.tables, but also most other data.frame-like objects.  \n\n\n\nbind_mat(input, along, name_deparse = TRUE, comnames_from = 1L)\n\nbind_array(\n  input,\n  along,\n  revalong,\n  max_bc = 1L,\n  name_along = TRUE,\n  comnames_from = 1L\n)\n\nbind_dt(input, along, ...)\n\n\n\n\n\n\n\n\ninput\n\n\na list of only the appropriate objects.  If input is named, its names will be used for the names of dimension along of the output, as far as possible.\n\n\n\n\nalong\n\n\na single integer, indicating the dimension along which to bind the dimensions.  I.e. use along = 1 for row-binding, along = 2 for column-binding, etc.  For arrays, additional flexibility is available:\n\n\nSpecifying along = 0 will bind the arrays on a new dimension before the first, making along the new first dimension.\n\n\nSpecifying along = N + 1, with N = max(lst.ndim(input)), will create an additional dimension (N + 1) and bind the arrays along that new dimension.\n\n\n\n\n\n\nname_deparse\n\n\nBoolean, for bind_mat().  Indicates if dimension along should be named.  Uses the naming method from rbind/cbind itself.\n\n\n\n\ncomnames_from\n\n\neither integer scalar or NULL, for bind_mat() and bind_array().  Indicates which object in input should be used for naming the shared dimension.  If NULL, no communal names will be given.  For example:  When binding columns of matrices, the matrices will share the same rownames.  Using comnames_from = 10 will then result in bind_array() using rownames(input[[10]]) for the rownames of the output.\n\n\n\n\nrevalong\n\n\nfor bind_array() only.  Same as along, but counting backwards.  I.e. revalong = 0 is equivalent to along = N+1, and revalong = N+1 is equivalent to along = 0;  with N = max(lst.ndim(input)).\n\n\n\n\nmax_bc\n\n\ninteger, for bind_array only.  Specify here the number of dimensions that are allowed to be broadcasted when binding arrays.  If max_bc = 0L, no broadcasting will be allowed at all.\n\n\n\n\nname_along\n\n\nBoolean, for bind_array().  Indicates if dimension along should be named.\n\n\n\n\n…\n\n\narguments to be passed to rbindlist.  \n\n\n\n\n\n\n\nFor in-depth information about the binding implentations in the ‘broadcast’ package, please refer to broadcast_bind.  \n\n\n\nThe bound object.\n\n\n\nPlate T, Heiberger R (2016). abind: Combine Multidimensional Arrays. R package version 1.4-5, https://CRAN.R-project.org/package=abind.\n\n\n\n\nlibrary(\"broadcast\")\n\n\n# bind_array ====\n\n# here, atomic and recursive arrays are mixed,\n# resulting in recursive arrays\n\n# creating the arrays\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\n# binding the arrays\ninput &lt;- list(x = x, y = y)\nbind_array(input, along = 0L) # binds on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\nbind_array(input, along = 1L) # binds on first dimension (i.e. rows)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, along = 2L)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, along = 3L) # bind on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 0L) # binds on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 1L) # binds on last dimension (i.e. columns)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, revalong = 2L)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, revalong = 3L) # bind on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\n# binding, with empty arrays\nemptyarray &lt;- array(numeric(0L), c(0L, 3L))\ndimnames(emptyarray) &lt;- list(NULL, paste(\"empty\", 1:3))\nprint(emptyarray)\n\n     empty 1 empty 2 empty 3\n\ninput &lt;- list(x = x, y = emptyarray)\nbind_array(input, along = 1L, comnames_from = 2L) # row-bind\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n################################################################################\n\n# bind_mat ====\n\n# here, atomic and recursive matrices are mixed,\n# resulting in a recursive matrix\n\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\nbind_mat(list(x = x, y = y), 2L)\n\n  A            B            C                  \na logical,3    logical,3    logical,3    1 5 9 \nb integer,10   integer,10   integer,10   2 6 10\nc numeric,10   numeric,10   numeric,10   3 7 11\nd character,26 character,26 character,26 4 8 12\n\n################################################################################\n\n# bind_dt ====\n\n\nx &lt;- data.frame(a = 1:12, b = month.abb) # data.frame\ny &lt;- data.table::data.table(a = 1:12, b = month.abb) # data.table\n\nbind_dt(list(x = x, y = y), 2L) # column bind\n\n      x.a    x.b   y.a    y.b\n    &lt;int&gt; &lt;char&gt; &lt;int&gt; &lt;char&gt;\n 1:     1    Jan     1    Jan\n 2:     2    Feb     2    Feb\n 3:     3    Mar     3    Mar\n 4:     4    Apr     4    Apr\n 5:     5    May     5    May\n 6:     6    Jun     6    Jun\n 7:     7    Jul     7    Jul\n 8:     8    Aug     8    Aug\n 9:     9    Sep     9    Sep\n10:    10    Oct    10    Oct\n11:    11    Nov    11    Nov\n12:    12    Dec    12    Dec\n\nbind_dt(list(x = x, y = y), 1L) # row bind\n\n        a      b\n    &lt;int&gt; &lt;char&gt;\n 1:     1    Jan\n 2:     2    Feb\n 3:     3    Mar\n 4:     4    Apr\n 5:     5    May\n 6:     6    Jun\n 7:     7    Jul\n 8:     8    Aug\n 9:     9    Sep\n10:    10    Oct\n11:    11    Nov\n12:    12    Dec\n13:     1    Jan\n14:     2    Feb\n15:     3    Mar\n16:     4    Apr\n17:     5    May\n18:     6    Jun\n19:     7    Jul\n20:     8    Aug\n21:     9    Sep\n22:    10    Oct\n23:    11    Nov\n24:    12    Dec\n        a      b"
  },
  {
    "objectID": "man/aaa00_broadcast_help.html",
    "href": "man/aaa00_broadcast_help.html",
    "title": "broadcast",
    "section": "",
    "text": "broadcast:  Simple Broadcasted Binding and Binary Operations for Atomic and Recursive Arrays with Minimal Dependencies.   Implements simple broadcasted operations for atomic and recursive arrays.\nBesides linking to ‘Rcpp’, ‘broadcast’ does not depend on, vendor, link to, include, or otherwise use any external libraries; ‘broadcast’ was essentially made from scratch and can be installed out-of-the-box.\nThe broadcasted implementations include, but are not limited to, the following:\n\n\nA more efficient and broadcasted version of abind(), for binding arrays along an arbitrary dimension;\n\n\nRelational operations (like ==, !=, &lt;, &gt;, &lt;=, &gt;=; can also take into account Machine precision);\n\n\nArithmetic operations (like +, -, *, /, \"gcd\", ^, pmin(), pmax());\n\n\nBoolean combiner operations (like &, |, xor(), \"nand\");\n\n\nString distance, (in)equality, and concatenation operations;\n\n\nA Broadcasted implementation of ifelse();\n\n\nA Broadcasted apply-like function; The broadcasted implementations strive to minimize computation time and memory usage (which is not just good for computer efficiency, but also for the environment).\n\n\n\n\n\nAn introduction and overview of the package can be found on the website.  \n\n\n\nOuter-like functions  ‘broadcast’ provides a set of functions for binary, element-wise, outer operations with broadcasting.  These functions use an API similar to the outer and sweep functions.   The following functions for type-specific binary operations are available:\n\n\nbc.b: Boolean operations;\n\n\nbc.i: integer (53bit) arithmetic and relational operations;\n\n\nbc.d: decimal (64bit) arithmetic and relational operations;\n\n\nbc.cplx: complex arithmetic and (in)equality operations;\n\n\nbc.str: string (in)equality, concatenation, and distance operations;\n\n\nbc.list: apply any ‘R’ function to 2 recursive arrays with broadcasting.  \n\n\nBinding Implementations  ‘broadcast’ provides 3 binding implementations:  bind_mat, bind_array, and bind_dt.  \nGeneral functions  ‘broadcast’ also comes with 2 general broadcasted functions:\n\n\nbc_ifelse: Broadcasted version of ifelse.\n\n\nbcapply: Broadcasted apply-like function.  \n\n\nOther functions  ‘broadcast’ also provides type-casting functions, which preserve names and dimensions - convenient for arrays.  \n\n\n\nAuthor, Maintainer: Tony Wilkes tony_a_wilkes@outlook.com (ORCID)\n\n\n\nThe badges shown in the documentation of this R-package were made using the services of: https://shields.io/"
  },
  {
    "objectID": "man/aaa00_broadcast_help.html#broadcast-simple-broadcasted-operations-for-atomic-and-recursive-arrays-with-minimal-dependencies",
    "href": "man/aaa00_broadcast_help.html#broadcast-simple-broadcasted-operations-for-atomic-and-recursive-arrays-with-minimal-dependencies",
    "title": "broadcast",
    "section": "",
    "text": "broadcast:  Simple Broadcasted Binding and Binary Operations for Atomic and Recursive Arrays with Minimal Dependencies.   Implements simple broadcasted operations for atomic and recursive arrays.\nBesides linking to ‘Rcpp’, ‘broadcast’ does not depend on, vendor, link to, include, or otherwise use any external libraries; ‘broadcast’ was essentially made from scratch and can be installed out-of-the-box.\nThe broadcasted implementations include, but are not limited to, the following:\n\n\nA more efficient and broadcasted version of abind(), for binding arrays along an arbitrary dimension;\n\n\nRelational operations (like ==, !=, &lt;, &gt;, &lt;=, &gt;=; can also take into account Machine precision);\n\n\nArithmetic operations (like +, -, *, /, \"gcd\", ^, pmin(), pmax());\n\n\nBoolean combiner operations (like &, |, xor(), \"nand\");\n\n\nString distance, (in)equality, and concatenation operations;\n\n\nA Broadcasted implementation of ifelse();\n\n\nA Broadcasted apply-like function; The broadcasted implementations strive to minimize computation time and memory usage (which is not just good for computer efficiency, but also for the environment).\n\n\n\n\n\nAn introduction and overview of the package can be found on the website.  \n\n\n\nOuter-like functions  ‘broadcast’ provides a set of functions for binary, element-wise, outer operations with broadcasting.  These functions use an API similar to the outer and sweep functions.   The following functions for type-specific binary operations are available:\n\n\nbc.b: Boolean operations;\n\n\nbc.i: integer (53bit) arithmetic and relational operations;\n\n\nbc.d: decimal (64bit) arithmetic and relational operations;\n\n\nbc.cplx: complex arithmetic and (in)equality operations;\n\n\nbc.str: string (in)equality, concatenation, and distance operations;\n\n\nbc.list: apply any ‘R’ function to 2 recursive arrays with broadcasting.  \n\n\nBinding Implementations  ‘broadcast’ provides 3 binding implementations:  bind_mat, bind_array, and bind_dt.  \nGeneral functions  ‘broadcast’ also comes with 2 general broadcasted functions:\n\n\nbc_ifelse: Broadcasted version of ifelse.\n\n\nbcapply: Broadcasted apply-like function.  \n\n\nOther functions  ‘broadcast’ also provides type-casting functions, which preserve names and dimensions - convenient for arrays.  \n\n\n\nAuthor, Maintainer: Tony Wilkes tony_a_wilkes@outlook.com (ORCID)\n\n\n\nThe badges shown in the documentation of this R-package were made using the services of: https://shields.io/"
  },
  {
    "objectID": "about/NEWS.html",
    "href": "about/NEWS.html",
    "title": "Changelog",
    "section": "",
    "text": "…still testing…"
  },
  {
    "objectID": "about/LICENSE.html",
    "href": "about/LICENSE.html",
    "title": "License",
    "section": "",
    "text": "1.1. “Contributor” means each individual or legal entity that creates, contributes to the creation of, or owns Covered Software.\n1.2. “Contributor Version” means the combination of the Contributions of others (if any) used by a Contributor and that particular Contributor’s Contribution.\n1.3. “Contribution” means Covered Software of a particular Contributor.\n1.4. “Covered Software” means Source Code Form to which the initial Contributor has attached the notice in Exhibit A, the Executable Form of such Source Code Form, and Modifications of such Source Code Form, in each case including portions thereof.\n1.5. “Incompatible With Secondary Licenses” means\n(a) that the initial Contributor has attached the notice described\n    in Exhibit B to the Covered Software; or\n\n(b) that the Covered Software was made available under the terms of\n    version 1.1 or earlier of the License, but not also under the\n    terms of a Secondary License.\n1.6. “Executable Form” means any form of the work other than Source Code Form.\n1.7. “Larger Work” means a work that combines Covered Software with other material, in a separate file or files, that is not Covered Software.\n1.8. “License” means this document.\n1.9. “Licensable” means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently, any and all of the rights conveyed by this License.\n1.10. “Modifications” means any of the following:\n(a) any file in Source Code Form that results from an addition to,\n    deletion from, or modification of the contents of Covered\n    Software; or\n\n(b) any new file in Source Code Form that contains any Covered\n    Software.\n1.11. “Patent Claims” of a Contributor means any patent claim(s), including without limitation, method, process, and apparatus claims, in any patent Licensable by such Contributor that would be infringed, but for the grant of the License, by the making, using, selling, offering for sale, having made, import, or transfer of either its Contributions or its Contributor Version.\n1.12. “Secondary License” means either the GNU General Public License, Version 2.0, the GNU Lesser General Public License, Version 2.1, the GNU Affero General Public License, Version 3.0, or any later versions of those licenses.\n1.13. “Source Code Form” means the form of the work preferred for making modifications.\n1.14. “You” (or “Your”) means an individual or a legal entity exercising rights under this License. For legal entities, “You” includes any entity that controls, is controlled by, or is under common control with You. For purposes of this definition, “control” means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.\n\n\n\n2.1. Grants\nEach Contributor hereby grants You a world-wide, royalty-free, non-exclusive license:\n\nunder intellectual property rights (other than patent or trademark) Licensable by such Contributor to use, reproduce, make available, modify, display, perform, distribute, and otherwise exploit its Contributions, either on an unmodified basis, with Modifications, or as part of a Larger Work; and\nunder Patent Claims of such Contributor to make, use, sell, offer for sale, have made, import, and otherwise transfer either its Contributions or its Contributor Version.\n\n2.2. Effective Date\nThe licenses granted in Section 2.1 with respect to any Contribution become effective for each Contribution on the date the Contributor first distributes such Contribution.\n2.3. Limitations on Grant Scope\nThe licenses granted in this Section 2 are the only rights granted under this License. No additional rights or licenses will be implied from the distribution or licensing of Covered Software under this License. Notwithstanding Section 2.1(b) above, no patent license is granted by a Contributor:\n\nfor any code that a Contributor has removed from Covered Software; or\nfor infringements caused by: (i) Your and any other third party’s modifications of Covered Software, or (ii) the combination of its Contributions with other software (except as part of its Contributor Version); or\nunder Patent Claims infringed by Covered Software in the absence of its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks, or logos of any Contributor (except as may be necessary to comply with the notice requirements in Section 3.4).\n2.4. Subsequent Licenses\nNo Contributor makes additional grants as a result of Your choice to distribute the Covered Software under a subsequent version of this License (see Section 10.2) or under the terms of a Secondary License (if permitted under the terms of Section 3.3).\n2.5. Representation\nEach Contributor represents that the Contributor believes its Contributions are its original creation(s) or it has sufficient rights to grant the rights to its Contributions conveyed by this License.\n2.6. Fair Use\nThis License is not intended to limit any rights You have under applicable copyright doctrines of fair use, fair dealing, or other equivalents.\n2.7. Conditions\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in Section 2.1.\n\n\n\n3.1. Distribution of Source Form\nAll distribution of Covered Software in Source Code Form, including any Modifications that You create or to which You contribute, must be under the terms of this License. You must inform recipients that the Source Code Form of the Covered Software is governed by the terms of this License, and how they can obtain a copy of this License. You may not attempt to alter or restrict the recipients’ rights in the Source Code Form.\n3.2. Distribution of Executable Form\nIf You distribute Covered Software in Executable Form then:\n\nsuch Covered Software must also be made available in Source Code Form, as described in Section 3.1, and You must inform recipients of the Executable Form how they can obtain a copy of such Source Code Form by reasonable means in a timely manner, at a charge no more than the cost of distribution to the recipient; and\nYou may distribute such Executable Form under the terms of this License, or sublicense it under different terms, provided that the license for the Executable Form does not attempt to limit or alter the recipients’ rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\nYou may create and distribute a Larger Work under terms of Your choice, provided that You also comply with the requirements of this License for the Covered Software. If the Larger Work is a combination of Covered Software with a work governed by one or more Secondary Licenses, and the Covered Software is not Incompatible With Secondary Licenses, this License permits You to additionally distribute such Covered Software under the terms of such Secondary License(s), so that the recipient of the Larger Work may, at their option, further distribute the Covered Software under the terms of either this License or such Secondary License(s).\n3.4. Notices\nYou may not remove or alter the substance of any license notices (including copyright notices, patent notices, disclaimers of warranty, or limitations of liability) contained within the Source Code Form of the Covered Software, except that You may alter any license notices to the extent required to remedy known factual inaccuracies.\n3.5. Application of Additional Terms\nYou may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, You may do so only on Your own behalf, and not on behalf of any Contributor. You must make it absolutely clear that any such warranty, support, indemnity, or liability obligation is offered by You alone, and You hereby agree to indemnify every Contributor for any liability incurred by such Contributor as a result of warranty, support, indemnity or liability terms You offer. You may include additional disclaimers of warranty and limitations of liability specific to any jurisdiction.\n\n\n\nIf it is impossible for You to comply with any of the terms of this License with respect to some or all of the Covered Software due to statute, judicial order, or regulation then You must: (a) comply with the terms of this License to the maximum extent possible; and (b) describe the limitations and the code they affect. Such description must be placed in a text file included with all distributions of the Covered Software under this License. Except to the extent prohibited by statute or regulation, such description must be sufficiently detailed for a recipient of ordinary skill to be able to understand it.\n\n\n\n5.1. The rights granted under this License will terminate automatically if You fail to comply with any of its terms. However, if You become compliant, then the rights granted under this License from a particular Contributor are reinstated (a) provisionally, unless and until such Contributor explicitly and finally terminates Your grants, and (b) on an ongoing basis, if such Contributor fails to notify You of the non-compliance by some reasonable means prior to 60 days after You have come back into compliance. Moreover, Your grants from a particular Contributor are reinstated on an ongoing basis if such Contributor notifies You of the non-compliance by some reasonable means, this is the first time You have received notice of non-compliance with this License from such Contributor, and You become compliant prior to 30 days after Your receipt of the notice.\n5.2. If You initiate litigation against any entity by asserting a patent infringement claim (excluding declaratory judgment actions, counter-claims, and cross-claims) alleging that a Contributor Version directly or indirectly infringes any patent, then the rights granted to You by any and all Contributors for the Covered Software under Section 2.1 of this License shall terminate.\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all end user license agreements (excluding distributors and resellers) which have been validly granted by You or Your distributors under this License prior to termination shall survive termination.\n\n\n                                                                 *\n\nDisclaimer of Warranty *\n\n————————- *\n                                                                 *\nCovered Software is provided under this License on an “as is” *\nbasis, without warranty of any kind, either expressed, implied, or *\nstatutory, including, without limitation, warranties that the *\nCovered Software is free of defects, merchantable, fit for a *\nparticular purpose or non-infringing. The entire risk as to the *\nquality and performance of the Covered Software is with You. *\nShould any Covered Software prove defective in any respect, You *\n(not any Contributor) assume the cost of any necessary servicing, *\nrepair, or correction. This disclaimer of warranty constitutes an *\nessential part of this License. No use of any Covered Software is *\nauthorized under this License except under this disclaimer. *\n                                                                 *\n\n\n\n\n                                                                 *\n\nLimitation of Liability *\n\n————————– *\n                                                                 *\nUnder no circumstances and under no legal theory, whether tort *\n(including negligence), contract, or otherwise, shall any *\nContributor, or anyone who distributes Covered Software as *\npermitted above, be liable to You for any direct, indirect, *\nspecial, incidental, or consequential damages of any character *\nincluding, without limitation, damages for lost profits, loss of *\ngoodwill, work stoppage, computer failure or malfunction, or any *\nand all other commercial damages or losses, even if such party *\nshall have been informed of the possibility of such damages. This *\nlimitation of liability shall not apply to liability for death or *\npersonal injury resulting from such party’s negligence to the *\nextent applicable law prohibits such limitation. Some *\njurisdictions do not allow the exclusion or limitation of *\nincidental or consequential damages, so this exclusion and *\nlimitation may not apply to You. *\n                                                                 *\n\n\n\n\n\nAny litigation relating to this License may be brought only in the courts of a jurisdiction where the defendant maintains its principal place of business and such litigation shall be governed by laws of that jurisdiction, without reference to its conflict-of-law provisions. Nothing in this Section shall prevent a party’s ability to bring cross-claims or counter-claims.\n\n\n\nThis License represents the complete agreement concerning the subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not be used to construe this License against a Contributor.\n\n\n\n10.1. New Versions\nMozilla Foundation is the license steward. Except as provided in Section 10.3, no one other than the license steward has the right to modify or publish new versions of this License. Each version will be given a distinguishing version number.\n10.2. Effect of New Versions\nYou may distribute the Covered Software under the terms of the version of the License under which You originally received the Covered Software, or under the terms of any subsequent version published by the license steward.\n10.3. Modified Versions\nIf you create software not governed by this License, and you want to create a new license for such software, you may create and use a modified version of this License if you rename the license and remove any references to the name of the license steward (except to note that such modified license differs from this License).\n10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses\nIf You choose to distribute Source Code Form that is Incompatible With Secondary Licenses under the terms of this version of the License, the notice described in Exhibit B of this License must be attached.\n\n\n\nThis Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.\nIf it is not possible or desirable to put the notice in a particular file, then You may include the notice in a location (such as a LICENSE file in a relevant directory) where a recipient would be likely to look for such a notice.\nYou may add additional accurate notices of copyright ownership.\n\n\n\nThis Source Code Form is “Incompatible With Secondary Licenses”, as defined by the Mozilla Public License, v. 2.0."
  },
  {
    "objectID": "about/LICENSE.html#definitions",
    "href": "about/LICENSE.html#definitions",
    "title": "License",
    "section": "",
    "text": "1.1. “Contributor” means each individual or legal entity that creates, contributes to the creation of, or owns Covered Software.\n1.2. “Contributor Version” means the combination of the Contributions of others (if any) used by a Contributor and that particular Contributor’s Contribution.\n1.3. “Contribution” means Covered Software of a particular Contributor.\n1.4. “Covered Software” means Source Code Form to which the initial Contributor has attached the notice in Exhibit A, the Executable Form of such Source Code Form, and Modifications of such Source Code Form, in each case including portions thereof.\n1.5. “Incompatible With Secondary Licenses” means\n(a) that the initial Contributor has attached the notice described\n    in Exhibit B to the Covered Software; or\n\n(b) that the Covered Software was made available under the terms of\n    version 1.1 or earlier of the License, but not also under the\n    terms of a Secondary License.\n1.6. “Executable Form” means any form of the work other than Source Code Form.\n1.7. “Larger Work” means a work that combines Covered Software with other material, in a separate file or files, that is not Covered Software.\n1.8. “License” means this document.\n1.9. “Licensable” means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently, any and all of the rights conveyed by this License.\n1.10. “Modifications” means any of the following:\n(a) any file in Source Code Form that results from an addition to,\n    deletion from, or modification of the contents of Covered\n    Software; or\n\n(b) any new file in Source Code Form that contains any Covered\n    Software.\n1.11. “Patent Claims” of a Contributor means any patent claim(s), including without limitation, method, process, and apparatus claims, in any patent Licensable by such Contributor that would be infringed, but for the grant of the License, by the making, using, selling, offering for sale, having made, import, or transfer of either its Contributions or its Contributor Version.\n1.12. “Secondary License” means either the GNU General Public License, Version 2.0, the GNU Lesser General Public License, Version 2.1, the GNU Affero General Public License, Version 3.0, or any later versions of those licenses.\n1.13. “Source Code Form” means the form of the work preferred for making modifications.\n1.14. “You” (or “Your”) means an individual or a legal entity exercising rights under this License. For legal entities, “You” includes any entity that controls, is controlled by, or is under common control with You. For purposes of this definition, “control” means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity."
  },
  {
    "objectID": "about/LICENSE.html#license-grants-and-conditions",
    "href": "about/LICENSE.html#license-grants-and-conditions",
    "title": "License",
    "section": "",
    "text": "2.1. Grants\nEach Contributor hereby grants You a world-wide, royalty-free, non-exclusive license:\n\nunder intellectual property rights (other than patent or trademark) Licensable by such Contributor to use, reproduce, make available, modify, display, perform, distribute, and otherwise exploit its Contributions, either on an unmodified basis, with Modifications, or as part of a Larger Work; and\nunder Patent Claims of such Contributor to make, use, sell, offer for sale, have made, import, and otherwise transfer either its Contributions or its Contributor Version.\n\n2.2. Effective Date\nThe licenses granted in Section 2.1 with respect to any Contribution become effective for each Contribution on the date the Contributor first distributes such Contribution.\n2.3. Limitations on Grant Scope\nThe licenses granted in this Section 2 are the only rights granted under this License. No additional rights or licenses will be implied from the distribution or licensing of Covered Software under this License. Notwithstanding Section 2.1(b) above, no patent license is granted by a Contributor:\n\nfor any code that a Contributor has removed from Covered Software; or\nfor infringements caused by: (i) Your and any other third party’s modifications of Covered Software, or (ii) the combination of its Contributions with other software (except as part of its Contributor Version); or\nunder Patent Claims infringed by Covered Software in the absence of its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks, or logos of any Contributor (except as may be necessary to comply with the notice requirements in Section 3.4).\n2.4. Subsequent Licenses\nNo Contributor makes additional grants as a result of Your choice to distribute the Covered Software under a subsequent version of this License (see Section 10.2) or under the terms of a Secondary License (if permitted under the terms of Section 3.3).\n2.5. Representation\nEach Contributor represents that the Contributor believes its Contributions are its original creation(s) or it has sufficient rights to grant the rights to its Contributions conveyed by this License.\n2.6. Fair Use\nThis License is not intended to limit any rights You have under applicable copyright doctrines of fair use, fair dealing, or other equivalents.\n2.7. Conditions\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in Section 2.1."
  },
  {
    "objectID": "about/LICENSE.html#responsibilities",
    "href": "about/LICENSE.html#responsibilities",
    "title": "License",
    "section": "",
    "text": "3.1. Distribution of Source Form\nAll distribution of Covered Software in Source Code Form, including any Modifications that You create or to which You contribute, must be under the terms of this License. You must inform recipients that the Source Code Form of the Covered Software is governed by the terms of this License, and how they can obtain a copy of this License. You may not attempt to alter or restrict the recipients’ rights in the Source Code Form.\n3.2. Distribution of Executable Form\nIf You distribute Covered Software in Executable Form then:\n\nsuch Covered Software must also be made available in Source Code Form, as described in Section 3.1, and You must inform recipients of the Executable Form how they can obtain a copy of such Source Code Form by reasonable means in a timely manner, at a charge no more than the cost of distribution to the recipient; and\nYou may distribute such Executable Form under the terms of this License, or sublicense it under different terms, provided that the license for the Executable Form does not attempt to limit or alter the recipients’ rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\nYou may create and distribute a Larger Work under terms of Your choice, provided that You also comply with the requirements of this License for the Covered Software. If the Larger Work is a combination of Covered Software with a work governed by one or more Secondary Licenses, and the Covered Software is not Incompatible With Secondary Licenses, this License permits You to additionally distribute such Covered Software under the terms of such Secondary License(s), so that the recipient of the Larger Work may, at their option, further distribute the Covered Software under the terms of either this License or such Secondary License(s).\n3.4. Notices\nYou may not remove or alter the substance of any license notices (including copyright notices, patent notices, disclaimers of warranty, or limitations of liability) contained within the Source Code Form of the Covered Software, except that You may alter any license notices to the extent required to remedy known factual inaccuracies.\n3.5. Application of Additional Terms\nYou may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, You may do so only on Your own behalf, and not on behalf of any Contributor. You must make it absolutely clear that any such warranty, support, indemnity, or liability obligation is offered by You alone, and You hereby agree to indemnify every Contributor for any liability incurred by such Contributor as a result of warranty, support, indemnity or liability terms You offer. You may include additional disclaimers of warranty and limitations of liability specific to any jurisdiction."
  },
  {
    "objectID": "about/LICENSE.html#inability-to-comply-due-to-statute-or-regulation",
    "href": "about/LICENSE.html#inability-to-comply-due-to-statute-or-regulation",
    "title": "License",
    "section": "",
    "text": "If it is impossible for You to comply with any of the terms of this License with respect to some or all of the Covered Software due to statute, judicial order, or regulation then You must: (a) comply with the terms of this License to the maximum extent possible; and (b) describe the limitations and the code they affect. Such description must be placed in a text file included with all distributions of the Covered Software under this License. Except to the extent prohibited by statute or regulation, such description must be sufficiently detailed for a recipient of ordinary skill to be able to understand it."
  },
  {
    "objectID": "about/LICENSE.html#termination",
    "href": "about/LICENSE.html#termination",
    "title": "License",
    "section": "",
    "text": "5.1. The rights granted under this License will terminate automatically if You fail to comply with any of its terms. However, if You become compliant, then the rights granted under this License from a particular Contributor are reinstated (a) provisionally, unless and until such Contributor explicitly and finally terminates Your grants, and (b) on an ongoing basis, if such Contributor fails to notify You of the non-compliance by some reasonable means prior to 60 days after You have come back into compliance. Moreover, Your grants from a particular Contributor are reinstated on an ongoing basis if such Contributor notifies You of the non-compliance by some reasonable means, this is the first time You have received notice of non-compliance with this License from such Contributor, and You become compliant prior to 30 days after Your receipt of the notice.\n5.2. If You initiate litigation against any entity by asserting a patent infringement claim (excluding declaratory judgment actions, counter-claims, and cross-claims) alleging that a Contributor Version directly or indirectly infringes any patent, then the rights granted to You by any and all Contributors for the Covered Software under Section 2.1 of this License shall terminate.\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all end user license agreements (excluding distributors and resellers) which have been validly granted by You or Your distributors under this License prior to termination shall survive termination.\n\n\n                                                                 *\n\nDisclaimer of Warranty *\n\n————————- *\n                                                                 *\nCovered Software is provided under this License on an “as is” *\nbasis, without warranty of any kind, either expressed, implied, or *\nstatutory, including, without limitation, warranties that the *\nCovered Software is free of defects, merchantable, fit for a *\nparticular purpose or non-infringing. The entire risk as to the *\nquality and performance of the Covered Software is with You. *\nShould any Covered Software prove defective in any respect, You *\n(not any Contributor) assume the cost of any necessary servicing, *\nrepair, or correction. This disclaimer of warranty constitutes an *\nessential part of this License. No use of any Covered Software is *\nauthorized under this License except under this disclaimer. *\n                                                                 *\n\n\n\n\n                                                                 *\n\nLimitation of Liability *\n\n————————– *\n                                                                 *\nUnder no circumstances and under no legal theory, whether tort *\n(including negligence), contract, or otherwise, shall any *\nContributor, or anyone who distributes Covered Software as *\npermitted above, be liable to You for any direct, indirect, *\nspecial, incidental, or consequential damages of any character *\nincluding, without limitation, damages for lost profits, loss of *\ngoodwill, work stoppage, computer failure or malfunction, or any *\nand all other commercial damages or losses, even if such party *\nshall have been informed of the possibility of such damages. This *\nlimitation of liability shall not apply to liability for death or *\npersonal injury resulting from such party’s negligence to the *\nextent applicable law prohibits such limitation. Some *\njurisdictions do not allow the exclusion or limitation of *\nincidental or consequential damages, so this exclusion and *\nlimitation may not apply to You. *\n                                                                 *"
  },
  {
    "objectID": "about/LICENSE.html#litigation",
    "href": "about/LICENSE.html#litigation",
    "title": "License",
    "section": "",
    "text": "Any litigation relating to this License may be brought only in the courts of a jurisdiction where the defendant maintains its principal place of business and such litigation shall be governed by laws of that jurisdiction, without reference to its conflict-of-law provisions. Nothing in this Section shall prevent a party’s ability to bring cross-claims or counter-claims."
  },
  {
    "objectID": "about/LICENSE.html#miscellaneous",
    "href": "about/LICENSE.html#miscellaneous",
    "title": "License",
    "section": "",
    "text": "This License represents the complete agreement concerning the subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not be used to construe this License against a Contributor."
  },
  {
    "objectID": "about/LICENSE.html#versions-of-the-license",
    "href": "about/LICENSE.html#versions-of-the-license",
    "title": "License",
    "section": "",
    "text": "10.1. New Versions\nMozilla Foundation is the license steward. Except as provided in Section 10.3, no one other than the license steward has the right to modify or publish new versions of this License. Each version will be given a distinguishing version number.\n10.2. Effect of New Versions\nYou may distribute the Covered Software under the terms of the version of the License under which You originally received the Covered Software, or under the terms of any subsequent version published by the license steward.\n10.3. Modified Versions\nIf you create software not governed by this License, and you want to create a new license for such software, you may create and use a modified version of this License if you rename the license and remove any references to the name of the license steward (except to note that such modified license differs from this License).\n10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses\nIf You choose to distribute Source Code Form that is Incompatible With Secondary Licenses under the terms of this version of the License, the notice described in Exhibit B of this License must be attached."
  },
  {
    "objectID": "about/LICENSE.html#exhibit-a---source-code-form-license-notice",
    "href": "about/LICENSE.html#exhibit-a---source-code-form-license-notice",
    "title": "License",
    "section": "",
    "text": "This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.\nIf it is not possible or desirable to put the notice in a particular file, then You may include the notice in a location (such as a LICENSE file in a relevant directory) where a recipient would be likely to look for such a notice.\nYou may add additional accurate notices of copyright ownership."
  },
  {
    "objectID": "about/LICENSE.html#exhibit-b---incompatible-with-secondary-licenses-notice",
    "href": "about/LICENSE.html#exhibit-b---incompatible-with-secondary-licenses-notice",
    "title": "License",
    "section": "",
    "text": "This Source Code Form is “Incompatible With Secondary Licenses”, as defined by the Mozilla Public License, v. 2.0."
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "Introduction",
    "section": "🗺️Overview",
    "text": "🗺️Overview\nThe ‘broadcast’ package, as the name suggests, performs “broadcasting” (similar to broadcasting in the ‘Numpy’ module for ‘Python’).\nIn the context of operations involving 2 (or more) arrays, “broadcasting” refers to recycling array dimensions without allocating additional memory, which is considerably faster and more memory-efficient than R’s regular dimensions repetition mechanism.\nPlease read the article “Broadcasting explained” for a more complete explanation of what “broadcasting” is.\n \nAt its core, the ‘broadcast’ package provides 3 functionalities, all 3 related to “broadcasting”:\n \nFirst, ‘broadcast’ provides functions for element-wise outer computations between any 2 arrays.\nThese are similar to base R’s outer() function, but using broadcasting, which is faster and more efficient than the mechanism employed by outer().\nThe outer-like functions provided by ‘broadcast’ are optimised for a large set of operations, including, but not limited to, the following:\n\nrelational operations (like ==, !=, &lt;, &gt;, &lt;=, &gt;=, etc.);\narithmetic operations (like +, -, *, /, ^, etc.);\nBoolean combiner operations (like &, |, xor, etc.);\nstring concatenation, string (in)equality, and string distance (Levenshtein) operations.\n\nBase ‘R’ outer() function has some sloppy rules regarding the dimensions of the output, making it hard to predict the output shape.\nThe outer-like functions provided by ‘broadcast’ have very strict broadcasting rules, making it easy to accurately predict the dimensions of the result.\n \nSecond, ‘broadcast’ provides the bind_array() function, which is an broadcasted and enhanced form of the fantastic abind::abind() function:\n\nbind_array() allows for broadcasting (obviously), whereas abind::abind() does not.\nbind_array() is significantly faster and uses less memory than abind::abind().\nbind_array() also differs from abind::abind() in that it can handle recursive arrays properly; abind::abind() unlists everything to atomic arrays, ruining the structure.\n\n \nThird, ‘broadcast’ provides several generic functions for broadcasting:\n\nbcapply(): a broadcasted apply-like function that works on pairs of arrays.\nbc_ifelse(): a broadcasted ifelse() function. Broadcasts between the yes and no arguments."
  },
  {
    "objectID": "index.html#why-use-broadcast",
    "href": "index.html#why-use-broadcast",
    "title": "Introduction",
    "section": "🤷🏽Why use ‘broadcast’",
    "text": "🤷🏽Why use ‘broadcast’\nEfficiency\nBroadcasting dimensions is faster and more memory efficient than repeating dimensions.\nThis is not simply a need for speed.\nEfficient programs use less energy and resources, and is thus better for the environment.\nAs a favoured language for the sciences, ‘R’ should not throw away an opportunity to become more efficient.\nThe Benchmarks show that ‘broadcast’ has a somewhat similar speed as equivalent operations in ‘Numpy’.\n \nConvenience\nBroadcasting can make many applications much easier to write.\nFor Example: Suppose you want to compute some metric on all possible pair-wise combinations of the elements of 2 vectors.\nYou could write slow and ugly nested for-loops…\nBut you can instead also make the vectors orthogonal, and perform the broadcasting computation on the 2 orthogonal vectors.\nThe broadcasted method runs much faster, is faster to type, and easier to reason about, than using the clumsy nested for-loops.\nFor more practical examples, see Examples of Practical Applictaions.\n \nHigh Test Coverage\nThe ‘broadcast’ package has been developed with a set of unit tests that have high (&gt; 95%) coverage.\n \nMinimal Dependencies\nBesides linking to ‘Rcpp’, ‘broadcast’ does not depend on, vendor, link to, include, or otherwise use any external libraries; ‘broadcast’ was essentially made from scratch and can be installed out-of-the-box.\nNot using external libraries brings a number of advantages:\n\nAvoid dependency hell: Every dependency that is added to a software package increases the likelihood of something breaking (AKA “dependency hell”). ‘broadcast’ thus avoids this.\nAvoid wasting resources for translations: Using libraries from other languages, such as ‘xtensor’ (‘C++’) or ‘Numpy’ (‘Python’) means that - at some point - one needs to convert between the structure of R to that of the other language, and vice-versa, which wastes precious time and memory. ‘broadcast’ requires no such translations of structures, and thus does not waste precious time and memory.\nEnsure consistent behaviour: Using libraries from other languages also means one cannot always guarantee consistent behaviour of some operations. For example: both ‘Numpy’ and ‘xtensor’ have only limited support for missing values, whereas ‘R’ supports missing values for both atomic and recursive array/vector types (except type of ‘Raw’). Since ‘broadcast’ does not rely on external libraries, it can ensure consistent behaviour."
  },
  {
    "objectID": "index.html#documentation",
    "href": "index.html#documentation",
    "title": "Introduction",
    "section": "📖Documentation",
    "text": "📖Documentation\n\nInstallation:\nBroadcasting Explained:\nExamples of Practical Applications:\nComparisons & Benchmarks:"
  },
  {
    "objectID": "man/bind/aaa01_broadcast_bind.html",
    "href": "man/bind/aaa01_broadcast_bind.html",
    "title": "broadcast",
    "section": "",
    "text": "This help page gives additional details on the binding implementations in the ‘broadcast’ package.  \n\n\n\nIf argument input has length 0, or it contains exclusively objects where one or more dimensions are 0, an error is returned.   If input has length 1, these functions simply return input[[1L]].  \n\n\n\nThe API of bind_array() is inspired by the fantastic abind::abind function by Tony Plare & Richard Heiberger (2016).  But bind_array() differs considerably from abind::abind in the following ways:\n\n\nbind_array() differs from abind::abind in that it can handle recursive arrays properly  (the abind::abind function would unlist everything to atomic arrays, ruining the structure).\n\n\nbind_array() allows for broadcasting, while abind::abind does not support broadcasting.\n\n\nbind_array() is generally faster than abind::abind, as bind_array() relies heavily on ‘C’ and ‘C++’ code.\n\n\nunlike abind::abind, bind_array() only binds (atomic/recursive) arrays and matrices.  bind_array()does not attempt to convert things to arrays when they are not arrays, but will give an error instead.  This saves computation time and prevents unexpected results.\n\n\nbind_array() has more streamlined naming options, compared to abind::abind.  \n\n\nbind_mat() is a modified version of rbind/cbind.  bind_mat() differs from rbind/cbind in the following ways:\n\n\nit has more streamlined naming options/\n\n\nbind_mat() gives an error when fractional recycling is attempted (like binding 1:3 with 1:10).\n\n\nbind The primary differences is that   \n\n\n\n\n\n…"
  },
  {
    "objectID": "man/bind/aaa01_broadcast_bind.html#details-on-the-binding-implementations-in-broadcast",
    "href": "man/bind/aaa01_broadcast_bind.html#details-on-the-binding-implementations-in-broadcast",
    "title": "broadcast",
    "section": "",
    "text": "This help page gives additional details on the binding implementations in the ‘broadcast’ package.  \n\n\n\nIf argument input has length 0, or it contains exclusively objects where one or more dimensions are 0, an error is returned.   If input has length 1, these functions simply return input[[1L]].  \n\n\n\nThe API of bind_array() is inspired by the fantastic abind::abind function by Tony Plare & Richard Heiberger (2016).  But bind_array() differs considerably from abind::abind in the following ways:\n\n\nbind_array() differs from abind::abind in that it can handle recursive arrays properly  (the abind::abind function would unlist everything to atomic arrays, ruining the structure).\n\n\nbind_array() allows for broadcasting, while abind::abind does not support broadcasting.\n\n\nbind_array() is generally faster than abind::abind, as bind_array() relies heavily on ‘C’ and ‘C++’ code.\n\n\nunlike abind::abind, bind_array() only binds (atomic/recursive) arrays and matrices.  bind_array()does not attempt to convert things to arrays when they are not arrays, but will give an error instead.  This saves computation time and prevents unexpected results.\n\n\nbind_array() has more streamlined naming options, compared to abind::abind.  \n\n\nbind_mat() is a modified version of rbind/cbind.  bind_mat() differs from rbind/cbind in the following ways:\n\n\nit has more streamlined naming options/\n\n\nbind_mat() gives an error when fractional recycling is attempted (like binding 1:3 with 1:10).\n\n\nbind The primary differences is that   \n\n\n\n\n\n…"
  },
  {
    "objectID": "man/generic/bcapply.html",
    "href": "man/generic/bcapply.html",
    "title": "bcapply",
    "section": "",
    "text": "The bcapply() function applies a function to 2 arrays with broadcasting. \n\n\n\nbcapply(x, y, f, v = \"list\")\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable atomic or recursive arrays.\n\n\n\n\nf\n\n\na function that takes in exactly 2 arguments, and returns a result that can be stored in a single element of a recursive or atomic array.\n\n\n\n\nv\n\n\na single string, giving the scalar type for a single iteration.  If NULL or “list” (default), the result will be a recursive array.  If it is certain that, for every iteration, f() always results in a single atomic scalar, the user can specify the type in v to pre-allocate the result.  Pre-allocating the results leads to slightly faster and more memory efficient code.  NOTE: Incorrectly specifying v leads to undefined behaviour. \n\n\n\n\n\n\n\nAn atomic or recursive array with dimensions bc_dim(x, y). \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(c(10, 2,2))\nx.len &lt;- prod(x.dim)\n\ngen &lt;- function(n) sample(list(letters, month.abb, 1:10), n, TRUE)\n\nx &lt;- array(gen(10), x.dim)\ny &lt;- array(gen(10), c(10,1,1))\n\nf &lt;- function(x, y) list(x, y)\nbcapply(x, y, f)\n\n, , 1\n\n      [,1]   [,2]  \n [1,] list,2 list,2\n [2,] list,2 list,2\n [3,] list,2 list,2\n [4,] list,2 list,2\n [5,] list,2 list,2\n [6,] list,2 list,2\n [7,] list,2 list,2\n [8,] list,2 list,2\n [9,] list,2 list,2\n[10,] list,2 list,2\n\n, , 2\n\n      [,1]   [,2]  \n [1,] list,2 list,2\n [2,] list,2 list,2\n [3,] list,2 list,2\n [4,] list,2 list,2\n [5,] list,2 list,2\n [6,] list,2 list,2\n [7,] list,2 list,2\n [8,] list,2 list,2\n [9,] list,2 list,2\n[10,] list,2 list,2"
  },
  {
    "objectID": "man/generic/bcapply.html#apply-a-function-to-2-broadcasted-arrays",
    "href": "man/generic/bcapply.html#apply-a-function-to-2-broadcasted-arrays",
    "title": "bcapply",
    "section": "",
    "text": "The bcapply() function applies a function to 2 arrays with broadcasting. \n\n\n\nbcapply(x, y, f, v = \"list\")\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable atomic or recursive arrays.\n\n\n\n\nf\n\n\na function that takes in exactly 2 arguments, and returns a result that can be stored in a single element of a recursive or atomic array.\n\n\n\n\nv\n\n\na single string, giving the scalar type for a single iteration.  If NULL or “list” (default), the result will be a recursive array.  If it is certain that, for every iteration, f() always results in a single atomic scalar, the user can specify the type in v to pre-allocate the result.  Pre-allocating the results leads to slightly faster and more memory efficient code.  NOTE: Incorrectly specifying v leads to undefined behaviour. \n\n\n\n\n\n\n\nAn atomic or recursive array with dimensions bc_dim(x, y). \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(c(10, 2,2))\nx.len &lt;- prod(x.dim)\n\ngen &lt;- function(n) sample(list(letters, month.abb, 1:10), n, TRUE)\n\nx &lt;- array(gen(10), x.dim)\ny &lt;- array(gen(10), c(10,1,1))\n\nf &lt;- function(x, y) list(x, y)\nbcapply(x, y, f)\n\n, , 1\n\n      [,1]   [,2]  \n [1,] list,2 list,2\n [2,] list,2 list,2\n [3,] list,2 list,2\n [4,] list,2 list,2\n [5,] list,2 list,2\n [6,] list,2 list,2\n [7,] list,2 list,2\n [8,] list,2 list,2\n [9,] list,2 list,2\n[10,] list,2 list,2\n\n, , 2\n\n      [,1]   [,2]  \n [1,] list,2 list,2\n [2,] list,2 list,2\n [3,] list,2 list,2\n [4,] list,2 list,2\n [5,] list,2 list,2\n [6,] list,2 list,2\n [7,] list,2 list,2\n [8,] list,2 list,2\n [9,] list,2 list,2\n[10,] list,2 list,2"
  },
  {
    "objectID": "man/other/array_replicate.html",
    "href": "man/other/array_replicate.html",
    "title": "array_replicate",
    "section": "",
    "text": "The array_replicate() function replicates array dimensions until the specified dimension sizes are reached, and returns the array.   The various broadcasting functions recycle array dimensions virtually, meaning little to no additional memory is needed.  The array_replicate() function, however, physically replicates the dimensions of an array (and thus actually occupies additional memory space).  \n\n\n\narray_replicate(x, tdim)\n\n\n\n\n\n\n\n\nx\n\n\nan atomic or recursive array or matrix.\n\n\n\n\ntdim\n\n\nan integer vector, giving the target dimension to reach.\n\n\n\n\n\n\n\nReturns the replicated array.\n\n\n\n\nlibrary(\"broadcast\")\n\n\nx &lt;- matrix(1:9, 3,3)\ncolnames(x) &lt;- LETTERS[1:3]\nrownames(x) &lt;- letters[1:3]\nnames(x) &lt;- month.abb[1:9]\nprint(x)\n\n  A B C\na 1 4 7\nb 2 5 8\nc 3 6 9\nattr(,\"names\")\n[1] \"Jan\" \"Feb\" \"Mar\" \"Apr\" \"May\" \"Jun\" \"Jul\" \"Aug\" \"Sep\"\n\narray_replicate(x, c(3,3,2)) # replicate to larger size\n\n, , 1\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n, , 2\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9"
  },
  {
    "objectID": "man/other/array_replicate.html#replicate-array-dimensions",
    "href": "man/other/array_replicate.html#replicate-array-dimensions",
    "title": "array_replicate",
    "section": "",
    "text": "The array_replicate() function replicates array dimensions until the specified dimension sizes are reached, and returns the array.   The various broadcasting functions recycle array dimensions virtually, meaning little to no additional memory is needed.  The array_replicate() function, however, physically replicates the dimensions of an array (and thus actually occupies additional memory space).  \n\n\n\narray_replicate(x, tdim)\n\n\n\n\n\n\n\n\nx\n\n\nan atomic or recursive array or matrix.\n\n\n\n\ntdim\n\n\nan integer vector, giving the target dimension to reach.\n\n\n\n\n\n\n\nReturns the replicated array.\n\n\n\n\nlibrary(\"broadcast\")\n\n\nx &lt;- matrix(1:9, 3,3)\ncolnames(x) &lt;- LETTERS[1:3]\nrownames(x) &lt;- letters[1:3]\nnames(x) &lt;- month.abb[1:9]\nprint(x)\n\n  A B C\na 1 4 7\nb 2 5 8\nc 3 6 9\nattr(,\"names\")\n[1] \"Jan\" \"Feb\" \"Mar\" \"Apr\" \"May\" \"Jun\" \"Jul\" \"Aug\" \"Sep\"\n\narray_replicate(x, c(3,3,2)) # replicate to larger size\n\n, , 1\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n, , 2\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9"
  },
  {
    "objectID": "man/other/properties.html",
    "href": "man/other/properties.html",
    "title": "properties",
    "section": "",
    "text": "ndim() returns the number of dimensions of an object.  lst.ndim() returns the number of dimensions of every list-element.  lst.typeof() returns the (internal) type of every list-element.  len() is an alias for length.  lst.len() is an alias for lengths.   These functions were all designed to be efficient.  \n\n\n\nndim(x)\n\nlst.ndim(x)\n\nlst.typeof(x)\n\n\n\n\n\n\n\n\nx\n\n\nan object. For functions starting with lst., x must be a list (i.e. recursive vector or recursive array). \n\n\n\n\n\n\n\nAn integer scalar\n\n\n\n\nlibrary(\"broadcast\")\n\n\n# bind_array ====\n\n# here, atomic and recursive arrays are mixed,\n# resulting in recursive arrays\n\n# creating the arrays\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\n# binding the arrays\ninput &lt;- list(x = x, y = y)\nbind_array(input, along = 0L) # binds on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\nbind_array(input, along = 1L) # binds on first dimension (i.e. rows)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, along = 2L)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, along = 3L) # bind on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 0L) # binds on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 1L) # binds on last dimension (i.e. columns)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, revalong = 2L)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, revalong = 3L) # bind on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\n# binding, with empty arrays\nemptyarray &lt;- array(numeric(0L), c(0L, 3L))\ndimnames(emptyarray) &lt;- list(NULL, paste(\"empty\", 1:3))\nprint(emptyarray)\n\n     empty 1 empty 2 empty 3\n\ninput &lt;- list(x = x, y = emptyarray)\nbind_array(input, along = 1L, comnames_from = 2L) # row-bind\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n################################################################################\n\n# bind_mat ====\n\n# here, atomic and recursive matrices are mixed,\n# resulting in a recursive matrix\n\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\nbind_mat(list(x = x, y = y), 2L)\n\n  A            B            C                  \na logical,3    logical,3    logical,3    1 5 9 \nb integer,10   integer,10   integer,10   2 6 10\nc numeric,10   numeric,10   numeric,10   3 7 11\nd character,26 character,26 character,26 4 8 12\n\n################################################################################\n\n# bind_dt ====\n\n\nx &lt;- data.frame(a = 1:12, b = month.abb) # data.frame\ny &lt;- data.table::data.table(a = 1:12, b = month.abb) # data.table\n\nbind_dt(list(x = x, y = y), 2L) # column bind\n\n      x.a    x.b   y.a    y.b\n    &lt;int&gt; &lt;char&gt; &lt;int&gt; &lt;char&gt;\n 1:     1    Jan     1    Jan\n 2:     2    Feb     2    Feb\n 3:     3    Mar     3    Mar\n 4:     4    Apr     4    Apr\n 5:     5    May     5    May\n 6:     6    Jun     6    Jun\n 7:     7    Jul     7    Jul\n 8:     8    Aug     8    Aug\n 9:     9    Sep     9    Sep\n10:    10    Oct    10    Oct\n11:    11    Nov    11    Nov\n12:    12    Dec    12    Dec\n\nbind_dt(list(x = x, y = y), 1L) # row bind\n\n        a      b\n    &lt;int&gt; &lt;char&gt;\n 1:     1    Jan\n 2:     2    Feb\n 3:     3    Mar\n 4:     4    Apr\n 5:     5    May\n 6:     6    Jun\n 7:     7    Jul\n 8:     8    Aug\n 9:     9    Sep\n10:    10    Oct\n11:    11    Nov\n12:    12    Dec\n13:     1    Jan\n14:     2    Feb\n15:     3    Mar\n16:     4    Apr\n17:     5    May\n18:     6    Jun\n19:     7    Jul\n20:     8    Aug\n21:     9    Sep\n22:    10    Oct\n23:    11    Nov\n24:    12    Dec\n        a      b"
  },
  {
    "objectID": "man/other/properties.html#small-property-functions",
    "href": "man/other/properties.html#small-property-functions",
    "title": "properties",
    "section": "",
    "text": "ndim() returns the number of dimensions of an object.  lst.ndim() returns the number of dimensions of every list-element.  lst.typeof() returns the (internal) type of every list-element.  len() is an alias for length.  lst.len() is an alias for lengths.   These functions were all designed to be efficient.  \n\n\n\nndim(x)\n\nlst.ndim(x)\n\nlst.typeof(x)\n\n\n\n\n\n\n\n\nx\n\n\nan object. For functions starting with lst., x must be a list (i.e. recursive vector or recursive array). \n\n\n\n\n\n\n\nAn integer scalar\n\n\n\n\nlibrary(\"broadcast\")\n\n\n# bind_array ====\n\n# here, atomic and recursive arrays are mixed,\n# resulting in recursive arrays\n\n# creating the arrays\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\n# binding the arrays\ninput &lt;- list(x = x, y = y)\nbind_array(input, along = 0L) # binds on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\nbind_array(input, along = 1L) # binds on first dimension (i.e. rows)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, along = 2L)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, along = 3L) # bind on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 0L) # binds on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 1L) # binds on last dimension (i.e. columns)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, revalong = 2L)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, revalong = 3L) # bind on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\n# binding, with empty arrays\nemptyarray &lt;- array(numeric(0L), c(0L, 3L))\ndimnames(emptyarray) &lt;- list(NULL, paste(\"empty\", 1:3))\nprint(emptyarray)\n\n     empty 1 empty 2 empty 3\n\ninput &lt;- list(x = x, y = emptyarray)\nbind_array(input, along = 1L, comnames_from = 2L) # row-bind\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n################################################################################\n\n# bind_mat ====\n\n# here, atomic and recursive matrices are mixed,\n# resulting in a recursive matrix\n\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\nbind_mat(list(x = x, y = y), 2L)\n\n  A            B            C                  \na logical,3    logical,3    logical,3    1 5 9 \nb integer,10   integer,10   integer,10   2 6 10\nc numeric,10   numeric,10   numeric,10   3 7 11\nd character,26 character,26 character,26 4 8 12\n\n################################################################################\n\n# bind_dt ====\n\n\nx &lt;- data.frame(a = 1:12, b = month.abb) # data.frame\ny &lt;- data.table::data.table(a = 1:12, b = month.abb) # data.table\n\nbind_dt(list(x = x, y = y), 2L) # column bind\n\n      x.a    x.b   y.a    y.b\n    &lt;int&gt; &lt;char&gt; &lt;int&gt; &lt;char&gt;\n 1:     1    Jan     1    Jan\n 2:     2    Feb     2    Feb\n 3:     3    Mar     3    Mar\n 4:     4    Apr     4    Apr\n 5:     5    May     5    May\n 6:     6    Jun     6    Jun\n 7:     7    Jul     7    Jul\n 8:     8    Aug     8    Aug\n 9:     9    Sep     9    Sep\n10:    10    Oct    10    Oct\n11:    11    Nov    11    Nov\n12:    12    Dec    12    Dec\n\nbind_dt(list(x = x, y = y), 1L) # row bind\n\n        a      b\n    &lt;int&gt; &lt;char&gt;\n 1:     1    Jan\n 2:     2    Feb\n 3:     3    Mar\n 4:     4    Apr\n 5:     5    May\n 6:     6    Jun\n 7:     7    Jul\n 8:     8    Aug\n 9:     9    Sep\n10:    10    Oct\n11:    11    Nov\n12:    12    Dec\n13:     1    Jan\n14:     2    Feb\n15:     3    Mar\n16:     4    Apr\n17:     5    May\n18:     6    Jun\n19:     7    Jul\n20:     8    Aug\n21:     9    Sep\n22:    10    Oct\n23:    11    Nov\n24:    12    Dec\n        a      b"
  },
  {
    "objectID": "man/outer/bc.b.html",
    "href": "man/outer/bc.b.html",
    "title": "bc.b",
    "section": "",
    "text": "The bc.b() function performs broadcasted Boolean operations on 2 logical (or 32bit integer) arrays.   Please note that these operations will treat the input as Boolean.  Therefore, something like bc.b(1, 2, “==”) returns TRUE, because both 1 and 2 are TRUE when cast as Boolean.  \n\n\n\nbc.b(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable logical (or 32bit integer) arrays.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported Boolean operators: &, |, xor, nand, ==, !=, &lt;, &gt;, &lt;=, &gt;=. \n\n\n\n\n\n\n\nA logical array as a result of the broadcasted Boolean operation.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(TRUE, FALSE, NA), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\nbc.b(x, y, \"&\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE    NA    NA\n [2,] FALSE  TRUE FALSE    NA FALSE  TRUE  TRUE    NA    NA\n [3,]  TRUE  TRUE FALSE FALSE    NA    NA  TRUE    NA FALSE\n [4,]    NA  TRUE    NA  TRUE  TRUE  TRUE  TRUE FALSE    NA\n [5,] FALSE    NA    NA  TRUE    NA FALSE    NA    NA  TRUE\n [6,]  TRUE    NA    NA    NA FALSE FALSE    NA FALSE FALSE\n [7,]    NA  TRUE  TRUE  TRUE    NA FALSE  TRUE    NA FALSE\n [8,] FALSE FALSE    NA FALSE    NA    NA    NA  TRUE  TRUE\n [9,]    NA    NA FALSE FALSE  TRUE  TRUE  TRUE  TRUE    NA\n[10,] FALSE  TRUE FALSE FALSE    NA  TRUE    NA  TRUE  TRUE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE FALSE  TRUE  TRUE  TRUE    NA FALSE FALSE\n [2,]  TRUE FALSE FALSE  TRUE FALSE    NA  TRUE    NA FALSE\n [3,]  TRUE  TRUE FALSE  TRUE    NA  TRUE    NA    NA  TRUE\n [4,] FALSE    NA  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE\n [5,]    NA  TRUE  TRUE FALSE  TRUE    NA FALSE    NA    NA\n [6,]    NA FALSE    NA    NA  TRUE  TRUE FALSE FALSE FALSE\n [7,]  TRUE  TRUE    NA    NA  TRUE  TRUE FALSE    NA FALSE\n [8,]    NA  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE\n [9,] FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE\n[10,]  TRUE    NA  TRUE FALSE    NA  TRUE    NA    NA    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,] FALSE    NA  TRUE  TRUE  TRUE  TRUE  TRUE   NA    NA\n [2,] FALSE  TRUE    NA    NA  TRUE FALSE    NA   NA FALSE\n [3,]    NA  TRUE  TRUE  TRUE  TRUE FALSE FALSE   NA    NA\n [4,]    NA  TRUE  TRUE    NA FALSE    NA  TRUE   NA    NA\n [5,]  TRUE FALSE FALSE  TRUE    NA FALSE    NA TRUE FALSE\n [6,] FALSE FALSE  TRUE  TRUE    NA    NA  TRUE   NA    NA\n [7,]  TRUE  TRUE  TRUE    NA    NA    NA FALSE TRUE FALSE\n [8,]    NA    NA FALSE    NA FALSE FALSE  TRUE TRUE    NA\n [9,]    NA  TRUE  TRUE FALSE FALSE    NA  TRUE   NA FALSE\n[10,] FALSE    NA  TRUE FALSE  TRUE FALSE  TRUE TRUE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE  TRUE FALSE    NA    NA FALSE FALSE  TRUE\n [2,]  TRUE  TRUE    NA FALSE    NA    NA  TRUE    NA    NA\n [3,]    NA FALSE  TRUE FALSE    NA  TRUE FALSE FALSE    NA\n [4,]    NA FALSE FALSE  TRUE    NA FALSE    NA    NA  TRUE\n [5,] FALSE    NA FALSE  TRUE    NA  TRUE FALSE FALSE    NA\n [6,]    NA    NA FALSE  TRUE  TRUE  TRUE    NA FALSE FALSE\n [7,]    NA FALSE    NA    NA FALSE FALSE    NA    NA  TRUE\n [8,] FALSE    NA FALSE FALSE  TRUE    NA FALSE  TRUE FALSE\n [9,]    NA    NA  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE\n[10,]  TRUE  TRUE    NA  TRUE  TRUE    NA    NA  TRUE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE FALSE  TRUE FALSE    NA    NA FALSE  TRUE\n [2,] FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE    NA\n [3,]    NA    NA  TRUE  TRUE  TRUE FALSE    NA FALSE    NA\n [4,]  TRUE FALSE  TRUE  TRUE    NA FALSE  TRUE    NA FALSE\n [5,]  TRUE    NA    NA FALSE  TRUE  TRUE FALSE  TRUE FALSE\n [6,]    NA FALSE  TRUE  TRUE  TRUE    NA  TRUE    NA  TRUE\n [7,] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE    NA\n [8,] FALSE  TRUE FALSE    NA FALSE FALSE FALSE    NA  TRUE\n [9,]    NA  TRUE  TRUE  TRUE    NA  TRUE  TRUE    NA FALSE\n[10,]    NA    NA  TRUE FALSE FALSE  TRUE  TRUE    NA    NA\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA  TRUE    NA    NA  TRUE  TRUE FALSE\n [2,] FALSE    NA    NA    NA  TRUE FALSE FALSE FALSE FALSE\n [3,]    NA  TRUE FALSE  TRUE    NA    NA  TRUE    NA  TRUE\n [4,] FALSE  TRUE  TRUE FALSE    NA FALSE  TRUE FALSE    NA\n [5,]  TRUE FALSE  TRUE  TRUE    NA    NA    NA  TRUE  TRUE\n [6,] FALSE FALSE  TRUE    NA FALSE FALSE  TRUE FALSE  TRUE\n [7,]    NA FALSE FALSE    NA FALSE    NA FALSE  TRUE  TRUE\n [8,] FALSE    NA    NA FALSE    NA FALSE FALSE FALSE    NA\n [9,] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE\n[10,] FALSE FALSE    NA  TRUE    NA  TRUE FALSE    NA    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8] [,9]\n [1,]    NA    NA  TRUE FALSE FALSE  TRUE FALSE  TRUE   NA\n [2,] FALSE  TRUE  TRUE FALSE    NA    NA FALSE    NA TRUE\n [3,]    NA  TRUE  TRUE FALSE  TRUE    NA FALSE FALSE TRUE\n [4,] FALSE  TRUE    NA FALSE    NA    NA    NA FALSE   NA\n [5,] FALSE FALSE  TRUE  TRUE  TRUE  TRUE    NA FALSE TRUE\n [6,]    NA    NA FALSE  TRUE FALSE  TRUE FALSE    NA TRUE\n [7,]    NA  TRUE FALSE FALSE FALSE FALSE    NA FALSE TRUE\n [8,] FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE TRUE\n [9,] FALSE    NA    NA  TRUE  TRUE  TRUE  TRUE FALSE TRUE\n[10,]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE    NA FALSE   NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA  TRUE  TRUE FALSE    NA  TRUE    NA    NA\n [2,] FALSE    NA  TRUE    NA    NA    NA  TRUE    NA    NA\n [3,] FALSE  TRUE  TRUE  TRUE FALSE FALSE    NA  TRUE FALSE\n [4,]    NA FALSE    NA FALSE FALSE  TRUE FALSE    NA    NA\n [5,] FALSE    NA    NA FALSE  TRUE  TRUE    NA FALSE  TRUE\n [6,]    NA  TRUE FALSE FALSE    NA FALSE  TRUE  TRUE    NA\n [7,] FALSE FALSE  TRUE FALSE FALSE  TRUE    NA  TRUE  TRUE\n [8,]  TRUE    NA  TRUE FALSE    NA  TRUE    NA  TRUE FALSE\n [9,]  TRUE  TRUE FALSE    NA FALSE  TRUE  TRUE  TRUE  TRUE\n[10,]    NA    NA    NA FALSE  TRUE FALSE FALSE    NA  TRUE\n\nbc.b(x, y, \"|\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.b(x, y, \"xor\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE    NA    NA\n [2,]  TRUE FALSE  TRUE    NA  TRUE FALSE FALSE    NA    NA\n [3,] FALSE FALSE  TRUE  TRUE    NA    NA FALSE    NA  TRUE\n [4,]    NA FALSE    NA FALSE FALSE FALSE FALSE  TRUE    NA\n [5,]  TRUE    NA    NA FALSE    NA  TRUE    NA    NA FALSE\n [6,] FALSE    NA    NA    NA  TRUE  TRUE    NA  TRUE  TRUE\n [7,]    NA FALSE FALSE FALSE    NA  TRUE FALSE    NA  TRUE\n [8,]  TRUE  TRUE    NA  TRUE    NA    NA    NA FALSE FALSE\n [9,]    NA    NA  TRUE  TRUE FALSE FALSE FALSE FALSE    NA\n[10,]  TRUE FALSE  TRUE  TRUE    NA FALSE    NA FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE  TRUE FALSE FALSE FALSE    NA  TRUE  TRUE\n [2,] FALSE  TRUE  TRUE FALSE  TRUE    NA FALSE    NA  TRUE\n [3,] FALSE FALSE  TRUE FALSE    NA FALSE    NA    NA FALSE\n [4,]  TRUE    NA FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE\n [5,]    NA FALSE FALSE  TRUE FALSE    NA  TRUE    NA    NA\n [6,]    NA  TRUE    NA    NA FALSE FALSE  TRUE  TRUE  TRUE\n [7,] FALSE FALSE    NA    NA FALSE FALSE  TRUE    NA  TRUE\n [8,]    NA FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE\n [9,]  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE\n[10,] FALSE    NA FALSE  TRUE    NA FALSE    NA    NA    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8] [,9]\n [1,]  TRUE    NA FALSE FALSE FALSE FALSE FALSE    NA   NA\n [2,]  TRUE FALSE    NA    NA FALSE  TRUE    NA    NA TRUE\n [3,]    NA FALSE FALSE FALSE FALSE  TRUE  TRUE    NA   NA\n [4,]    NA FALSE FALSE    NA  TRUE    NA FALSE    NA   NA\n [5,] FALSE  TRUE  TRUE FALSE    NA  TRUE    NA FALSE TRUE\n [6,]  TRUE  TRUE FALSE FALSE    NA    NA FALSE    NA   NA\n [7,] FALSE FALSE FALSE    NA    NA    NA  TRUE FALSE TRUE\n [8,]    NA    NA  TRUE    NA  TRUE  TRUE FALSE FALSE   NA\n [9,]    NA FALSE FALSE  TRUE  TRUE    NA FALSE    NA TRUE\n[10,]  TRUE    NA FALSE  TRUE FALSE  TRUE FALSE FALSE TRUE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE FALSE  TRUE    NA    NA  TRUE  TRUE FALSE\n [2,] FALSE FALSE    NA  TRUE    NA    NA FALSE    NA    NA\n [3,]    NA  TRUE FALSE  TRUE    NA FALSE  TRUE  TRUE    NA\n [4,]    NA  TRUE  TRUE FALSE    NA  TRUE    NA    NA FALSE\n [5,]  TRUE    NA  TRUE FALSE    NA FALSE  TRUE  TRUE    NA\n [6,]    NA    NA  TRUE FALSE FALSE FALSE    NA  TRUE  TRUE\n [7,]    NA  TRUE    NA    NA  TRUE  TRUE    NA    NA FALSE\n [8,]  TRUE    NA  TRUE  TRUE FALSE    NA  TRUE FALSE  TRUE\n [9,]    NA    NA FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n[10,] FALSE FALSE    NA FALSE FALSE    NA    NA FALSE  TRUE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE  TRUE FALSE  TRUE    NA    NA  TRUE FALSE\n [2,]  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE    NA\n [3,]    NA    NA FALSE FALSE FALSE  TRUE    NA  TRUE    NA\n [4,] FALSE  TRUE FALSE FALSE    NA  TRUE FALSE    NA  TRUE\n [5,] FALSE    NA    NA  TRUE FALSE FALSE  TRUE FALSE  TRUE\n [6,]    NA  TRUE FALSE FALSE FALSE    NA FALSE    NA FALSE\n [7,]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE    NA\n [8,]  TRUE FALSE  TRUE    NA  TRUE  TRUE  TRUE    NA FALSE\n [9,]    NA FALSE FALSE FALSE    NA FALSE FALSE    NA  TRUE\n[10,]    NA    NA FALSE  TRUE  TRUE FALSE FALSE    NA    NA\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA FALSE    NA    NA FALSE FALSE  TRUE\n [2,]  TRUE    NA    NA    NA FALSE  TRUE  TRUE  TRUE  TRUE\n [3,]    NA FALSE  TRUE FALSE    NA    NA FALSE    NA FALSE\n [4,]  TRUE FALSE FALSE  TRUE    NA  TRUE FALSE  TRUE    NA\n [5,] FALSE  TRUE FALSE FALSE    NA    NA    NA FALSE FALSE\n [6,]  TRUE  TRUE FALSE    NA  TRUE  TRUE FALSE  TRUE FALSE\n [7,]    NA  TRUE  TRUE    NA  TRUE    NA  TRUE FALSE FALSE\n [8,]  TRUE    NA    NA  TRUE    NA  TRUE  TRUE  TRUE    NA\n [9,]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE\n[10,]  TRUE  TRUE    NA FALSE    NA FALSE  TRUE    NA    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA FALSE  TRUE  TRUE FALSE  TRUE FALSE    NA\n [2,]  TRUE FALSE FALSE  TRUE    NA    NA  TRUE    NA FALSE\n [3,]    NA FALSE FALSE  TRUE FALSE    NA  TRUE  TRUE FALSE\n [4,]  TRUE FALSE    NA  TRUE    NA    NA    NA  TRUE    NA\n [5,]  TRUE  TRUE FALSE FALSE FALSE FALSE    NA  TRUE FALSE\n [6,]    NA    NA  TRUE FALSE  TRUE FALSE  TRUE    NA FALSE\n [7,]    NA FALSE  TRUE  TRUE  TRUE  TRUE    NA  TRUE FALSE\n [8,]  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE\n [9,]  TRUE    NA    NA FALSE FALSE FALSE FALSE  TRUE FALSE\n[10,] FALSE FALSE FALSE  TRUE FALSE FALSE    NA  TRUE    NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA FALSE FALSE  TRUE    NA FALSE    NA    NA\n [2,]  TRUE    NA FALSE    NA    NA    NA FALSE    NA    NA\n [3,]  TRUE FALSE FALSE FALSE  TRUE  TRUE    NA FALSE  TRUE\n [4,]    NA  TRUE    NA  TRUE  TRUE FALSE  TRUE    NA    NA\n [5,]  TRUE    NA    NA  TRUE FALSE FALSE    NA  TRUE FALSE\n [6,]    NA FALSE  TRUE  TRUE    NA  TRUE FALSE FALSE    NA\n [7,]  TRUE  TRUE FALSE  TRUE  TRUE FALSE    NA FALSE FALSE\n [8,] FALSE    NA FALSE  TRUE    NA FALSE    NA FALSE  TRUE\n [9,] FALSE FALSE  TRUE    NA  TRUE FALSE FALSE FALSE FALSE\n[10,]    NA    NA    NA  TRUE FALSE  TRUE  TRUE    NA FALSE\n\nbc.b(x, y, \"nand\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.b(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE    NA    NA\n [2,] FALSE  TRUE FALSE    NA FALSE  TRUE  TRUE    NA    NA\n [3,]  TRUE  TRUE FALSE FALSE    NA    NA  TRUE    NA FALSE\n [4,]    NA  TRUE    NA  TRUE  TRUE  TRUE  TRUE FALSE    NA\n [5,] FALSE    NA    NA  TRUE    NA FALSE    NA    NA  TRUE\n [6,]  TRUE    NA    NA    NA FALSE FALSE    NA FALSE FALSE\n [7,]    NA  TRUE  TRUE  TRUE    NA FALSE  TRUE    NA FALSE\n [8,] FALSE FALSE    NA FALSE    NA    NA    NA  TRUE  TRUE\n [9,]    NA    NA FALSE FALSE  TRUE  TRUE  TRUE  TRUE    NA\n[10,] FALSE  TRUE FALSE FALSE    NA  TRUE    NA  TRUE  TRUE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE FALSE  TRUE  TRUE  TRUE    NA FALSE FALSE\n [2,]  TRUE FALSE FALSE  TRUE FALSE    NA  TRUE    NA FALSE\n [3,]  TRUE  TRUE FALSE  TRUE    NA  TRUE    NA    NA  TRUE\n [4,] FALSE    NA  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE\n [5,]    NA  TRUE  TRUE FALSE  TRUE    NA FALSE    NA    NA\n [6,]    NA FALSE    NA    NA  TRUE  TRUE FALSE FALSE FALSE\n [7,]  TRUE  TRUE    NA    NA  TRUE  TRUE FALSE    NA FALSE\n [8,]    NA  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE\n [9,] FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE\n[10,]  TRUE    NA  TRUE FALSE    NA  TRUE    NA    NA    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,] FALSE    NA  TRUE  TRUE  TRUE  TRUE  TRUE   NA    NA\n [2,] FALSE  TRUE    NA    NA  TRUE FALSE    NA   NA FALSE\n [3,]    NA  TRUE  TRUE  TRUE  TRUE FALSE FALSE   NA    NA\n [4,]    NA  TRUE  TRUE    NA FALSE    NA  TRUE   NA    NA\n [5,]  TRUE FALSE FALSE  TRUE    NA FALSE    NA TRUE FALSE\n [6,] FALSE FALSE  TRUE  TRUE    NA    NA  TRUE   NA    NA\n [7,]  TRUE  TRUE  TRUE    NA    NA    NA FALSE TRUE FALSE\n [8,]    NA    NA FALSE    NA FALSE FALSE  TRUE TRUE    NA\n [9,]    NA  TRUE  TRUE FALSE FALSE    NA  TRUE   NA FALSE\n[10,] FALSE    NA  TRUE FALSE  TRUE FALSE  TRUE TRUE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE  TRUE FALSE    NA    NA FALSE FALSE  TRUE\n [2,]  TRUE  TRUE    NA FALSE    NA    NA  TRUE    NA    NA\n [3,]    NA FALSE  TRUE FALSE    NA  TRUE FALSE FALSE    NA\n [4,]    NA FALSE FALSE  TRUE    NA FALSE    NA    NA  TRUE\n [5,] FALSE    NA FALSE  TRUE    NA  TRUE FALSE FALSE    NA\n [6,]    NA    NA FALSE  TRUE  TRUE  TRUE    NA FALSE FALSE\n [7,]    NA FALSE    NA    NA FALSE FALSE    NA    NA  TRUE\n [8,] FALSE    NA FALSE FALSE  TRUE    NA FALSE  TRUE FALSE\n [9,]    NA    NA  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE\n[10,]  TRUE  TRUE    NA  TRUE  TRUE    NA    NA  TRUE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE FALSE  TRUE FALSE    NA    NA FALSE  TRUE\n [2,] FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE    NA\n [3,]    NA    NA  TRUE  TRUE  TRUE FALSE    NA FALSE    NA\n [4,]  TRUE FALSE  TRUE  TRUE    NA FALSE  TRUE    NA FALSE\n [5,]  TRUE    NA    NA FALSE  TRUE  TRUE FALSE  TRUE FALSE\n [6,]    NA FALSE  TRUE  TRUE  TRUE    NA  TRUE    NA  TRUE\n [7,] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE    NA\n [8,] FALSE  TRUE FALSE    NA FALSE FALSE FALSE    NA  TRUE\n [9,]    NA  TRUE  TRUE  TRUE    NA  TRUE  TRUE    NA FALSE\n[10,]    NA    NA  TRUE FALSE FALSE  TRUE  TRUE    NA    NA\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA  TRUE    NA    NA  TRUE  TRUE FALSE\n [2,] FALSE    NA    NA    NA  TRUE FALSE FALSE FALSE FALSE\n [3,]    NA  TRUE FALSE  TRUE    NA    NA  TRUE    NA  TRUE\n [4,] FALSE  TRUE  TRUE FALSE    NA FALSE  TRUE FALSE    NA\n [5,]  TRUE FALSE  TRUE  TRUE    NA    NA    NA  TRUE  TRUE\n [6,] FALSE FALSE  TRUE    NA FALSE FALSE  TRUE FALSE  TRUE\n [7,]    NA FALSE FALSE    NA FALSE    NA FALSE  TRUE  TRUE\n [8,] FALSE    NA    NA FALSE    NA FALSE FALSE FALSE    NA\n [9,] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE\n[10,] FALSE FALSE    NA  TRUE    NA  TRUE FALSE    NA    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8] [,9]\n [1,]    NA    NA  TRUE FALSE FALSE  TRUE FALSE  TRUE   NA\n [2,] FALSE  TRUE  TRUE FALSE    NA    NA FALSE    NA TRUE\n [3,]    NA  TRUE  TRUE FALSE  TRUE    NA FALSE FALSE TRUE\n [4,] FALSE  TRUE    NA FALSE    NA    NA    NA FALSE   NA\n [5,] FALSE FALSE  TRUE  TRUE  TRUE  TRUE    NA FALSE TRUE\n [6,]    NA    NA FALSE  TRUE FALSE  TRUE FALSE    NA TRUE\n [7,]    NA  TRUE FALSE FALSE FALSE FALSE    NA FALSE TRUE\n [8,] FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE TRUE\n [9,] FALSE    NA    NA  TRUE  TRUE  TRUE  TRUE FALSE TRUE\n[10,]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE    NA FALSE   NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA  TRUE  TRUE FALSE    NA  TRUE    NA    NA\n [2,] FALSE    NA  TRUE    NA    NA    NA  TRUE    NA    NA\n [3,] FALSE  TRUE  TRUE  TRUE FALSE FALSE    NA  TRUE FALSE\n [4,]    NA FALSE    NA FALSE FALSE  TRUE FALSE    NA    NA\n [5,] FALSE    NA    NA FALSE  TRUE  TRUE    NA FALSE  TRUE\n [6,]    NA  TRUE FALSE FALSE    NA FALSE  TRUE  TRUE    NA\n [7,] FALSE FALSE  TRUE FALSE FALSE  TRUE    NA  TRUE  TRUE\n [8,]  TRUE    NA  TRUE FALSE    NA  TRUE    NA  TRUE FALSE\n [9,]  TRUE  TRUE FALSE    NA FALSE  TRUE  TRUE  TRUE  TRUE\n[10,]    NA    NA    NA FALSE  TRUE FALSE FALSE    NA  TRUE\n\nbc.b(x, y, \"!=\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE    NA    NA\n [2,]  TRUE FALSE  TRUE    NA  TRUE FALSE FALSE    NA    NA\n [3,] FALSE FALSE  TRUE  TRUE    NA    NA FALSE    NA  TRUE\n [4,]    NA FALSE    NA FALSE FALSE FALSE FALSE  TRUE    NA\n [5,]  TRUE    NA    NA FALSE    NA  TRUE    NA    NA FALSE\n [6,] FALSE    NA    NA    NA  TRUE  TRUE    NA  TRUE  TRUE\n [7,]    NA FALSE FALSE FALSE    NA  TRUE FALSE    NA  TRUE\n [8,]  TRUE  TRUE    NA  TRUE    NA    NA    NA FALSE FALSE\n [9,]    NA    NA  TRUE  TRUE FALSE FALSE FALSE FALSE    NA\n[10,]  TRUE FALSE  TRUE  TRUE    NA FALSE    NA FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE  TRUE FALSE FALSE FALSE    NA  TRUE  TRUE\n [2,] FALSE  TRUE  TRUE FALSE  TRUE    NA FALSE    NA  TRUE\n [3,] FALSE FALSE  TRUE FALSE    NA FALSE    NA    NA FALSE\n [4,]  TRUE    NA FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE\n [5,]    NA FALSE FALSE  TRUE FALSE    NA  TRUE    NA    NA\n [6,]    NA  TRUE    NA    NA FALSE FALSE  TRUE  TRUE  TRUE\n [7,] FALSE FALSE    NA    NA FALSE FALSE  TRUE    NA  TRUE\n [8,]    NA FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE\n [9,]  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE\n[10,] FALSE    NA FALSE  TRUE    NA FALSE    NA    NA    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8] [,9]\n [1,]  TRUE    NA FALSE FALSE FALSE FALSE FALSE    NA   NA\n [2,]  TRUE FALSE    NA    NA FALSE  TRUE    NA    NA TRUE\n [3,]    NA FALSE FALSE FALSE FALSE  TRUE  TRUE    NA   NA\n [4,]    NA FALSE FALSE    NA  TRUE    NA FALSE    NA   NA\n [5,] FALSE  TRUE  TRUE FALSE    NA  TRUE    NA FALSE TRUE\n [6,]  TRUE  TRUE FALSE FALSE    NA    NA FALSE    NA   NA\n [7,] FALSE FALSE FALSE    NA    NA    NA  TRUE FALSE TRUE\n [8,]    NA    NA  TRUE    NA  TRUE  TRUE FALSE FALSE   NA\n [9,]    NA FALSE FALSE  TRUE  TRUE    NA FALSE    NA TRUE\n[10,]  TRUE    NA FALSE  TRUE FALSE  TRUE FALSE FALSE TRUE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE FALSE  TRUE    NA    NA  TRUE  TRUE FALSE\n [2,] FALSE FALSE    NA  TRUE    NA    NA FALSE    NA    NA\n [3,]    NA  TRUE FALSE  TRUE    NA FALSE  TRUE  TRUE    NA\n [4,]    NA  TRUE  TRUE FALSE    NA  TRUE    NA    NA FALSE\n [5,]  TRUE    NA  TRUE FALSE    NA FALSE  TRUE  TRUE    NA\n [6,]    NA    NA  TRUE FALSE FALSE FALSE    NA  TRUE  TRUE\n [7,]    NA  TRUE    NA    NA  TRUE  TRUE    NA    NA FALSE\n [8,]  TRUE    NA  TRUE  TRUE FALSE    NA  TRUE FALSE  TRUE\n [9,]    NA    NA FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n[10,] FALSE FALSE    NA FALSE FALSE    NA    NA FALSE  TRUE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE  TRUE FALSE  TRUE    NA    NA  TRUE FALSE\n [2,]  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE    NA\n [3,]    NA    NA FALSE FALSE FALSE  TRUE    NA  TRUE    NA\n [4,] FALSE  TRUE FALSE FALSE    NA  TRUE FALSE    NA  TRUE\n [5,] FALSE    NA    NA  TRUE FALSE FALSE  TRUE FALSE  TRUE\n [6,]    NA  TRUE FALSE FALSE FALSE    NA FALSE    NA FALSE\n [7,]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE    NA\n [8,]  TRUE FALSE  TRUE    NA  TRUE  TRUE  TRUE    NA FALSE\n [9,]    NA FALSE FALSE FALSE    NA FALSE FALSE    NA  TRUE\n[10,]    NA    NA FALSE  TRUE  TRUE FALSE FALSE    NA    NA\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA FALSE    NA    NA FALSE FALSE  TRUE\n [2,]  TRUE    NA    NA    NA FALSE  TRUE  TRUE  TRUE  TRUE\n [3,]    NA FALSE  TRUE FALSE    NA    NA FALSE    NA FALSE\n [4,]  TRUE FALSE FALSE  TRUE    NA  TRUE FALSE  TRUE    NA\n [5,] FALSE  TRUE FALSE FALSE    NA    NA    NA FALSE FALSE\n [6,]  TRUE  TRUE FALSE    NA  TRUE  TRUE FALSE  TRUE FALSE\n [7,]    NA  TRUE  TRUE    NA  TRUE    NA  TRUE FALSE FALSE\n [8,]  TRUE    NA    NA  TRUE    NA  TRUE  TRUE  TRUE    NA\n [9,]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE\n[10,]  TRUE  TRUE    NA FALSE    NA FALSE  TRUE    NA    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA FALSE  TRUE  TRUE FALSE  TRUE FALSE    NA\n [2,]  TRUE FALSE FALSE  TRUE    NA    NA  TRUE    NA FALSE\n [3,]    NA FALSE FALSE  TRUE FALSE    NA  TRUE  TRUE FALSE\n [4,]  TRUE FALSE    NA  TRUE    NA    NA    NA  TRUE    NA\n [5,]  TRUE  TRUE FALSE FALSE FALSE FALSE    NA  TRUE FALSE\n [6,]    NA    NA  TRUE FALSE  TRUE FALSE  TRUE    NA FALSE\n [7,]    NA FALSE  TRUE  TRUE  TRUE  TRUE    NA  TRUE FALSE\n [8,]  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE\n [9,]  TRUE    NA    NA FALSE FALSE FALSE FALSE  TRUE FALSE\n[10,] FALSE FALSE FALSE  TRUE FALSE FALSE    NA  TRUE    NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA FALSE FALSE  TRUE    NA FALSE    NA    NA\n [2,]  TRUE    NA FALSE    NA    NA    NA FALSE    NA    NA\n [3,]  TRUE FALSE FALSE FALSE  TRUE  TRUE    NA FALSE  TRUE\n [4,]    NA  TRUE    NA  TRUE  TRUE FALSE  TRUE    NA    NA\n [5,]  TRUE    NA    NA  TRUE FALSE FALSE    NA  TRUE FALSE\n [6,]    NA FALSE  TRUE  TRUE    NA  TRUE FALSE FALSE    NA\n [7,]  TRUE  TRUE FALSE  TRUE  TRUE FALSE    NA FALSE FALSE\n [8,] FALSE    NA FALSE  TRUE    NA FALSE    NA FALSE  TRUE\n [9,] FALSE FALSE  TRUE    NA  TRUE FALSE FALSE FALSE FALSE\n[10,]    NA    NA    NA  TRUE FALSE  TRUE  TRUE    NA FALSE"
  },
  {
    "objectID": "man/outer/bc.b.html#broadcasted-boolean-operations",
    "href": "man/outer/bc.b.html#broadcasted-boolean-operations",
    "title": "bc.b",
    "section": "",
    "text": "The bc.b() function performs broadcasted Boolean operations on 2 logical (or 32bit integer) arrays.   Please note that these operations will treat the input as Boolean.  Therefore, something like bc.b(1, 2, “==”) returns TRUE, because both 1 and 2 are TRUE when cast as Boolean.  \n\n\n\nbc.b(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable logical (or 32bit integer) arrays.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported Boolean operators: &, |, xor, nand, ==, !=, &lt;, &gt;, &lt;=, &gt;=. \n\n\n\n\n\n\n\nA logical array as a result of the broadcasted Boolean operation.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(TRUE, FALSE, NA), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\nbc.b(x, y, \"&\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE    NA    NA\n [2,] FALSE  TRUE FALSE    NA FALSE  TRUE  TRUE    NA    NA\n [3,]  TRUE  TRUE FALSE FALSE    NA    NA  TRUE    NA FALSE\n [4,]    NA  TRUE    NA  TRUE  TRUE  TRUE  TRUE FALSE    NA\n [5,] FALSE    NA    NA  TRUE    NA FALSE    NA    NA  TRUE\n [6,]  TRUE    NA    NA    NA FALSE FALSE    NA FALSE FALSE\n [7,]    NA  TRUE  TRUE  TRUE    NA FALSE  TRUE    NA FALSE\n [8,] FALSE FALSE    NA FALSE    NA    NA    NA  TRUE  TRUE\n [9,]    NA    NA FALSE FALSE  TRUE  TRUE  TRUE  TRUE    NA\n[10,] FALSE  TRUE FALSE FALSE    NA  TRUE    NA  TRUE  TRUE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE FALSE  TRUE  TRUE  TRUE    NA FALSE FALSE\n [2,]  TRUE FALSE FALSE  TRUE FALSE    NA  TRUE    NA FALSE\n [3,]  TRUE  TRUE FALSE  TRUE    NA  TRUE    NA    NA  TRUE\n [4,] FALSE    NA  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE\n [5,]    NA  TRUE  TRUE FALSE  TRUE    NA FALSE    NA    NA\n [6,]    NA FALSE    NA    NA  TRUE  TRUE FALSE FALSE FALSE\n [7,]  TRUE  TRUE    NA    NA  TRUE  TRUE FALSE    NA FALSE\n [8,]    NA  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE\n [9,] FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE\n[10,]  TRUE    NA  TRUE FALSE    NA  TRUE    NA    NA    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,] FALSE    NA  TRUE  TRUE  TRUE  TRUE  TRUE   NA    NA\n [2,] FALSE  TRUE    NA    NA  TRUE FALSE    NA   NA FALSE\n [3,]    NA  TRUE  TRUE  TRUE  TRUE FALSE FALSE   NA    NA\n [4,]    NA  TRUE  TRUE    NA FALSE    NA  TRUE   NA    NA\n [5,]  TRUE FALSE FALSE  TRUE    NA FALSE    NA TRUE FALSE\n [6,] FALSE FALSE  TRUE  TRUE    NA    NA  TRUE   NA    NA\n [7,]  TRUE  TRUE  TRUE    NA    NA    NA FALSE TRUE FALSE\n [8,]    NA    NA FALSE    NA FALSE FALSE  TRUE TRUE    NA\n [9,]    NA  TRUE  TRUE FALSE FALSE    NA  TRUE   NA FALSE\n[10,] FALSE    NA  TRUE FALSE  TRUE FALSE  TRUE TRUE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE  TRUE FALSE    NA    NA FALSE FALSE  TRUE\n [2,]  TRUE  TRUE    NA FALSE    NA    NA  TRUE    NA    NA\n [3,]    NA FALSE  TRUE FALSE    NA  TRUE FALSE FALSE    NA\n [4,]    NA FALSE FALSE  TRUE    NA FALSE    NA    NA  TRUE\n [5,] FALSE    NA FALSE  TRUE    NA  TRUE FALSE FALSE    NA\n [6,]    NA    NA FALSE  TRUE  TRUE  TRUE    NA FALSE FALSE\n [7,]    NA FALSE    NA    NA FALSE FALSE    NA    NA  TRUE\n [8,] FALSE    NA FALSE FALSE  TRUE    NA FALSE  TRUE FALSE\n [9,]    NA    NA  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE\n[10,]  TRUE  TRUE    NA  TRUE  TRUE    NA    NA  TRUE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE FALSE  TRUE FALSE    NA    NA FALSE  TRUE\n [2,] FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE    NA\n [3,]    NA    NA  TRUE  TRUE  TRUE FALSE    NA FALSE    NA\n [4,]  TRUE FALSE  TRUE  TRUE    NA FALSE  TRUE    NA FALSE\n [5,]  TRUE    NA    NA FALSE  TRUE  TRUE FALSE  TRUE FALSE\n [6,]    NA FALSE  TRUE  TRUE  TRUE    NA  TRUE    NA  TRUE\n [7,] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE    NA\n [8,] FALSE  TRUE FALSE    NA FALSE FALSE FALSE    NA  TRUE\n [9,]    NA  TRUE  TRUE  TRUE    NA  TRUE  TRUE    NA FALSE\n[10,]    NA    NA  TRUE FALSE FALSE  TRUE  TRUE    NA    NA\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA  TRUE    NA    NA  TRUE  TRUE FALSE\n [2,] FALSE    NA    NA    NA  TRUE FALSE FALSE FALSE FALSE\n [3,]    NA  TRUE FALSE  TRUE    NA    NA  TRUE    NA  TRUE\n [4,] FALSE  TRUE  TRUE FALSE    NA FALSE  TRUE FALSE    NA\n [5,]  TRUE FALSE  TRUE  TRUE    NA    NA    NA  TRUE  TRUE\n [6,] FALSE FALSE  TRUE    NA FALSE FALSE  TRUE FALSE  TRUE\n [7,]    NA FALSE FALSE    NA FALSE    NA FALSE  TRUE  TRUE\n [8,] FALSE    NA    NA FALSE    NA FALSE FALSE FALSE    NA\n [9,] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE\n[10,] FALSE FALSE    NA  TRUE    NA  TRUE FALSE    NA    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8] [,9]\n [1,]    NA    NA  TRUE FALSE FALSE  TRUE FALSE  TRUE   NA\n [2,] FALSE  TRUE  TRUE FALSE    NA    NA FALSE    NA TRUE\n [3,]    NA  TRUE  TRUE FALSE  TRUE    NA FALSE FALSE TRUE\n [4,] FALSE  TRUE    NA FALSE    NA    NA    NA FALSE   NA\n [5,] FALSE FALSE  TRUE  TRUE  TRUE  TRUE    NA FALSE TRUE\n [6,]    NA    NA FALSE  TRUE FALSE  TRUE FALSE    NA TRUE\n [7,]    NA  TRUE FALSE FALSE FALSE FALSE    NA FALSE TRUE\n [8,] FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE TRUE\n [9,] FALSE    NA    NA  TRUE  TRUE  TRUE  TRUE FALSE TRUE\n[10,]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE    NA FALSE   NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA  TRUE  TRUE FALSE    NA  TRUE    NA    NA\n [2,] FALSE    NA  TRUE    NA    NA    NA  TRUE    NA    NA\n [3,] FALSE  TRUE  TRUE  TRUE FALSE FALSE    NA  TRUE FALSE\n [4,]    NA FALSE    NA FALSE FALSE  TRUE FALSE    NA    NA\n [5,] FALSE    NA    NA FALSE  TRUE  TRUE    NA FALSE  TRUE\n [6,]    NA  TRUE FALSE FALSE    NA FALSE  TRUE  TRUE    NA\n [7,] FALSE FALSE  TRUE FALSE FALSE  TRUE    NA  TRUE  TRUE\n [8,]  TRUE    NA  TRUE FALSE    NA  TRUE    NA  TRUE FALSE\n [9,]  TRUE  TRUE FALSE    NA FALSE  TRUE  TRUE  TRUE  TRUE\n[10,]    NA    NA    NA FALSE  TRUE FALSE FALSE    NA  TRUE\n\nbc.b(x, y, \"|\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.b(x, y, \"xor\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE    NA    NA\n [2,]  TRUE FALSE  TRUE    NA  TRUE FALSE FALSE    NA    NA\n [3,] FALSE FALSE  TRUE  TRUE    NA    NA FALSE    NA  TRUE\n [4,]    NA FALSE    NA FALSE FALSE FALSE FALSE  TRUE    NA\n [5,]  TRUE    NA    NA FALSE    NA  TRUE    NA    NA FALSE\n [6,] FALSE    NA    NA    NA  TRUE  TRUE    NA  TRUE  TRUE\n [7,]    NA FALSE FALSE FALSE    NA  TRUE FALSE    NA  TRUE\n [8,]  TRUE  TRUE    NA  TRUE    NA    NA    NA FALSE FALSE\n [9,]    NA    NA  TRUE  TRUE FALSE FALSE FALSE FALSE    NA\n[10,]  TRUE FALSE  TRUE  TRUE    NA FALSE    NA FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE  TRUE FALSE FALSE FALSE    NA  TRUE  TRUE\n [2,] FALSE  TRUE  TRUE FALSE  TRUE    NA FALSE    NA  TRUE\n [3,] FALSE FALSE  TRUE FALSE    NA FALSE    NA    NA FALSE\n [4,]  TRUE    NA FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE\n [5,]    NA FALSE FALSE  TRUE FALSE    NA  TRUE    NA    NA\n [6,]    NA  TRUE    NA    NA FALSE FALSE  TRUE  TRUE  TRUE\n [7,] FALSE FALSE    NA    NA FALSE FALSE  TRUE    NA  TRUE\n [8,]    NA FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE\n [9,]  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE\n[10,] FALSE    NA FALSE  TRUE    NA FALSE    NA    NA    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8] [,9]\n [1,]  TRUE    NA FALSE FALSE FALSE FALSE FALSE    NA   NA\n [2,]  TRUE FALSE    NA    NA FALSE  TRUE    NA    NA TRUE\n [3,]    NA FALSE FALSE FALSE FALSE  TRUE  TRUE    NA   NA\n [4,]    NA FALSE FALSE    NA  TRUE    NA FALSE    NA   NA\n [5,] FALSE  TRUE  TRUE FALSE    NA  TRUE    NA FALSE TRUE\n [6,]  TRUE  TRUE FALSE FALSE    NA    NA FALSE    NA   NA\n [7,] FALSE FALSE FALSE    NA    NA    NA  TRUE FALSE TRUE\n [8,]    NA    NA  TRUE    NA  TRUE  TRUE FALSE FALSE   NA\n [9,]    NA FALSE FALSE  TRUE  TRUE    NA FALSE    NA TRUE\n[10,]  TRUE    NA FALSE  TRUE FALSE  TRUE FALSE FALSE TRUE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE FALSE  TRUE    NA    NA  TRUE  TRUE FALSE\n [2,] FALSE FALSE    NA  TRUE    NA    NA FALSE    NA    NA\n [3,]    NA  TRUE FALSE  TRUE    NA FALSE  TRUE  TRUE    NA\n [4,]    NA  TRUE  TRUE FALSE    NA  TRUE    NA    NA FALSE\n [5,]  TRUE    NA  TRUE FALSE    NA FALSE  TRUE  TRUE    NA\n [6,]    NA    NA  TRUE FALSE FALSE FALSE    NA  TRUE  TRUE\n [7,]    NA  TRUE    NA    NA  TRUE  TRUE    NA    NA FALSE\n [8,]  TRUE    NA  TRUE  TRUE FALSE    NA  TRUE FALSE  TRUE\n [9,]    NA    NA FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n[10,] FALSE FALSE    NA FALSE FALSE    NA    NA FALSE  TRUE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE  TRUE FALSE  TRUE    NA    NA  TRUE FALSE\n [2,]  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE    NA\n [3,]    NA    NA FALSE FALSE FALSE  TRUE    NA  TRUE    NA\n [4,] FALSE  TRUE FALSE FALSE    NA  TRUE FALSE    NA  TRUE\n [5,] FALSE    NA    NA  TRUE FALSE FALSE  TRUE FALSE  TRUE\n [6,]    NA  TRUE FALSE FALSE FALSE    NA FALSE    NA FALSE\n [7,]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE    NA\n [8,]  TRUE FALSE  TRUE    NA  TRUE  TRUE  TRUE    NA FALSE\n [9,]    NA FALSE FALSE FALSE    NA FALSE FALSE    NA  TRUE\n[10,]    NA    NA FALSE  TRUE  TRUE FALSE FALSE    NA    NA\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA FALSE    NA    NA FALSE FALSE  TRUE\n [2,]  TRUE    NA    NA    NA FALSE  TRUE  TRUE  TRUE  TRUE\n [3,]    NA FALSE  TRUE FALSE    NA    NA FALSE    NA FALSE\n [4,]  TRUE FALSE FALSE  TRUE    NA  TRUE FALSE  TRUE    NA\n [5,] FALSE  TRUE FALSE FALSE    NA    NA    NA FALSE FALSE\n [6,]  TRUE  TRUE FALSE    NA  TRUE  TRUE FALSE  TRUE FALSE\n [7,]    NA  TRUE  TRUE    NA  TRUE    NA  TRUE FALSE FALSE\n [8,]  TRUE    NA    NA  TRUE    NA  TRUE  TRUE  TRUE    NA\n [9,]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE\n[10,]  TRUE  TRUE    NA FALSE    NA FALSE  TRUE    NA    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA FALSE  TRUE  TRUE FALSE  TRUE FALSE    NA\n [2,]  TRUE FALSE FALSE  TRUE    NA    NA  TRUE    NA FALSE\n [3,]    NA FALSE FALSE  TRUE FALSE    NA  TRUE  TRUE FALSE\n [4,]  TRUE FALSE    NA  TRUE    NA    NA    NA  TRUE    NA\n [5,]  TRUE  TRUE FALSE FALSE FALSE FALSE    NA  TRUE FALSE\n [6,]    NA    NA  TRUE FALSE  TRUE FALSE  TRUE    NA FALSE\n [7,]    NA FALSE  TRUE  TRUE  TRUE  TRUE    NA  TRUE FALSE\n [8,]  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE\n [9,]  TRUE    NA    NA FALSE FALSE FALSE FALSE  TRUE FALSE\n[10,] FALSE FALSE FALSE  TRUE FALSE FALSE    NA  TRUE    NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA FALSE FALSE  TRUE    NA FALSE    NA    NA\n [2,]  TRUE    NA FALSE    NA    NA    NA FALSE    NA    NA\n [3,]  TRUE FALSE FALSE FALSE  TRUE  TRUE    NA FALSE  TRUE\n [4,]    NA  TRUE    NA  TRUE  TRUE FALSE  TRUE    NA    NA\n [5,]  TRUE    NA    NA  TRUE FALSE FALSE    NA  TRUE FALSE\n [6,]    NA FALSE  TRUE  TRUE    NA  TRUE FALSE FALSE    NA\n [7,]  TRUE  TRUE FALSE  TRUE  TRUE FALSE    NA FALSE FALSE\n [8,] FALSE    NA FALSE  TRUE    NA FALSE    NA FALSE  TRUE\n [9,] FALSE FALSE  TRUE    NA  TRUE FALSE FALSE FALSE FALSE\n[10,]    NA    NA    NA  TRUE FALSE  TRUE  TRUE    NA FALSE\n\nbc.b(x, y, \"nand\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.b(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE    NA    NA\n [2,] FALSE  TRUE FALSE    NA FALSE  TRUE  TRUE    NA    NA\n [3,]  TRUE  TRUE FALSE FALSE    NA    NA  TRUE    NA FALSE\n [4,]    NA  TRUE    NA  TRUE  TRUE  TRUE  TRUE FALSE    NA\n [5,] FALSE    NA    NA  TRUE    NA FALSE    NA    NA  TRUE\n [6,]  TRUE    NA    NA    NA FALSE FALSE    NA FALSE FALSE\n [7,]    NA  TRUE  TRUE  TRUE    NA FALSE  TRUE    NA FALSE\n [8,] FALSE FALSE    NA FALSE    NA    NA    NA  TRUE  TRUE\n [9,]    NA    NA FALSE FALSE  TRUE  TRUE  TRUE  TRUE    NA\n[10,] FALSE  TRUE FALSE FALSE    NA  TRUE    NA  TRUE  TRUE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE FALSE  TRUE  TRUE  TRUE    NA FALSE FALSE\n [2,]  TRUE FALSE FALSE  TRUE FALSE    NA  TRUE    NA FALSE\n [3,]  TRUE  TRUE FALSE  TRUE    NA  TRUE    NA    NA  TRUE\n [4,] FALSE    NA  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE\n [5,]    NA  TRUE  TRUE FALSE  TRUE    NA FALSE    NA    NA\n [6,]    NA FALSE    NA    NA  TRUE  TRUE FALSE FALSE FALSE\n [7,]  TRUE  TRUE    NA    NA  TRUE  TRUE FALSE    NA FALSE\n [8,]    NA  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE\n [9,] FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE\n[10,]  TRUE    NA  TRUE FALSE    NA  TRUE    NA    NA    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,] FALSE    NA  TRUE  TRUE  TRUE  TRUE  TRUE   NA    NA\n [2,] FALSE  TRUE    NA    NA  TRUE FALSE    NA   NA FALSE\n [3,]    NA  TRUE  TRUE  TRUE  TRUE FALSE FALSE   NA    NA\n [4,]    NA  TRUE  TRUE    NA FALSE    NA  TRUE   NA    NA\n [5,]  TRUE FALSE FALSE  TRUE    NA FALSE    NA TRUE FALSE\n [6,] FALSE FALSE  TRUE  TRUE    NA    NA  TRUE   NA    NA\n [7,]  TRUE  TRUE  TRUE    NA    NA    NA FALSE TRUE FALSE\n [8,]    NA    NA FALSE    NA FALSE FALSE  TRUE TRUE    NA\n [9,]    NA  TRUE  TRUE FALSE FALSE    NA  TRUE   NA FALSE\n[10,] FALSE    NA  TRUE FALSE  TRUE FALSE  TRUE TRUE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE  TRUE FALSE    NA    NA FALSE FALSE  TRUE\n [2,]  TRUE  TRUE    NA FALSE    NA    NA  TRUE    NA    NA\n [3,]    NA FALSE  TRUE FALSE    NA  TRUE FALSE FALSE    NA\n [4,]    NA FALSE FALSE  TRUE    NA FALSE    NA    NA  TRUE\n [5,] FALSE    NA FALSE  TRUE    NA  TRUE FALSE FALSE    NA\n [6,]    NA    NA FALSE  TRUE  TRUE  TRUE    NA FALSE FALSE\n [7,]    NA FALSE    NA    NA FALSE FALSE    NA    NA  TRUE\n [8,] FALSE    NA FALSE FALSE  TRUE    NA FALSE  TRUE FALSE\n [9,]    NA    NA  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE\n[10,]  TRUE  TRUE    NA  TRUE  TRUE    NA    NA  TRUE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE FALSE  TRUE FALSE    NA    NA FALSE  TRUE\n [2,] FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE    NA\n [3,]    NA    NA  TRUE  TRUE  TRUE FALSE    NA FALSE    NA\n [4,]  TRUE FALSE  TRUE  TRUE    NA FALSE  TRUE    NA FALSE\n [5,]  TRUE    NA    NA FALSE  TRUE  TRUE FALSE  TRUE FALSE\n [6,]    NA FALSE  TRUE  TRUE  TRUE    NA  TRUE    NA  TRUE\n [7,] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE    NA\n [8,] FALSE  TRUE FALSE    NA FALSE FALSE FALSE    NA  TRUE\n [9,]    NA  TRUE  TRUE  TRUE    NA  TRUE  TRUE    NA FALSE\n[10,]    NA    NA  TRUE FALSE FALSE  TRUE  TRUE    NA    NA\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA  TRUE    NA    NA  TRUE  TRUE FALSE\n [2,] FALSE    NA    NA    NA  TRUE FALSE FALSE FALSE FALSE\n [3,]    NA  TRUE FALSE  TRUE    NA    NA  TRUE    NA  TRUE\n [4,] FALSE  TRUE  TRUE FALSE    NA FALSE  TRUE FALSE    NA\n [5,]  TRUE FALSE  TRUE  TRUE    NA    NA    NA  TRUE  TRUE\n [6,] FALSE FALSE  TRUE    NA FALSE FALSE  TRUE FALSE  TRUE\n [7,]    NA FALSE FALSE    NA FALSE    NA FALSE  TRUE  TRUE\n [8,] FALSE    NA    NA FALSE    NA FALSE FALSE FALSE    NA\n [9,] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE\n[10,] FALSE FALSE    NA  TRUE    NA  TRUE FALSE    NA    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8] [,9]\n [1,]    NA    NA  TRUE FALSE FALSE  TRUE FALSE  TRUE   NA\n [2,] FALSE  TRUE  TRUE FALSE    NA    NA FALSE    NA TRUE\n [3,]    NA  TRUE  TRUE FALSE  TRUE    NA FALSE FALSE TRUE\n [4,] FALSE  TRUE    NA FALSE    NA    NA    NA FALSE   NA\n [5,] FALSE FALSE  TRUE  TRUE  TRUE  TRUE    NA FALSE TRUE\n [6,]    NA    NA FALSE  TRUE FALSE  TRUE FALSE    NA TRUE\n [7,]    NA  TRUE FALSE FALSE FALSE FALSE    NA FALSE TRUE\n [8,] FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE TRUE\n [9,] FALSE    NA    NA  TRUE  TRUE  TRUE  TRUE FALSE TRUE\n[10,]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE    NA FALSE   NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA  TRUE  TRUE FALSE    NA  TRUE    NA    NA\n [2,] FALSE    NA  TRUE    NA    NA    NA  TRUE    NA    NA\n [3,] FALSE  TRUE  TRUE  TRUE FALSE FALSE    NA  TRUE FALSE\n [4,]    NA FALSE    NA FALSE FALSE  TRUE FALSE    NA    NA\n [5,] FALSE    NA    NA FALSE  TRUE  TRUE    NA FALSE  TRUE\n [6,]    NA  TRUE FALSE FALSE    NA FALSE  TRUE  TRUE    NA\n [7,] FALSE FALSE  TRUE FALSE FALSE  TRUE    NA  TRUE  TRUE\n [8,]  TRUE    NA  TRUE FALSE    NA  TRUE    NA  TRUE FALSE\n [9,]  TRUE  TRUE FALSE    NA FALSE  TRUE  TRUE  TRUE  TRUE\n[10,]    NA    NA    NA FALSE  TRUE FALSE FALSE    NA  TRUE\n\nbc.b(x, y, \"!=\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE    NA    NA\n [2,]  TRUE FALSE  TRUE    NA  TRUE FALSE FALSE    NA    NA\n [3,] FALSE FALSE  TRUE  TRUE    NA    NA FALSE    NA  TRUE\n [4,]    NA FALSE    NA FALSE FALSE FALSE FALSE  TRUE    NA\n [5,]  TRUE    NA    NA FALSE    NA  TRUE    NA    NA FALSE\n [6,] FALSE    NA    NA    NA  TRUE  TRUE    NA  TRUE  TRUE\n [7,]    NA FALSE FALSE FALSE    NA  TRUE FALSE    NA  TRUE\n [8,]  TRUE  TRUE    NA  TRUE    NA    NA    NA FALSE FALSE\n [9,]    NA    NA  TRUE  TRUE FALSE FALSE FALSE FALSE    NA\n[10,]  TRUE FALSE  TRUE  TRUE    NA FALSE    NA FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE  TRUE FALSE FALSE FALSE    NA  TRUE  TRUE\n [2,] FALSE  TRUE  TRUE FALSE  TRUE    NA FALSE    NA  TRUE\n [3,] FALSE FALSE  TRUE FALSE    NA FALSE    NA    NA FALSE\n [4,]  TRUE    NA FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE\n [5,]    NA FALSE FALSE  TRUE FALSE    NA  TRUE    NA    NA\n [6,]    NA  TRUE    NA    NA FALSE FALSE  TRUE  TRUE  TRUE\n [7,] FALSE FALSE    NA    NA FALSE FALSE  TRUE    NA  TRUE\n [8,]    NA FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE\n [9,]  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE\n[10,] FALSE    NA FALSE  TRUE    NA FALSE    NA    NA    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8] [,9]\n [1,]  TRUE    NA FALSE FALSE FALSE FALSE FALSE    NA   NA\n [2,]  TRUE FALSE    NA    NA FALSE  TRUE    NA    NA TRUE\n [3,]    NA FALSE FALSE FALSE FALSE  TRUE  TRUE    NA   NA\n [4,]    NA FALSE FALSE    NA  TRUE    NA FALSE    NA   NA\n [5,] FALSE  TRUE  TRUE FALSE    NA  TRUE    NA FALSE TRUE\n [6,]  TRUE  TRUE FALSE FALSE    NA    NA FALSE    NA   NA\n [7,] FALSE FALSE FALSE    NA    NA    NA  TRUE FALSE TRUE\n [8,]    NA    NA  TRUE    NA  TRUE  TRUE FALSE FALSE   NA\n [9,]    NA FALSE FALSE  TRUE  TRUE    NA FALSE    NA TRUE\n[10,]  TRUE    NA FALSE  TRUE FALSE  TRUE FALSE FALSE TRUE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE FALSE  TRUE    NA    NA  TRUE  TRUE FALSE\n [2,] FALSE FALSE    NA  TRUE    NA    NA FALSE    NA    NA\n [3,]    NA  TRUE FALSE  TRUE    NA FALSE  TRUE  TRUE    NA\n [4,]    NA  TRUE  TRUE FALSE    NA  TRUE    NA    NA FALSE\n [5,]  TRUE    NA  TRUE FALSE    NA FALSE  TRUE  TRUE    NA\n [6,]    NA    NA  TRUE FALSE FALSE FALSE    NA  TRUE  TRUE\n [7,]    NA  TRUE    NA    NA  TRUE  TRUE    NA    NA FALSE\n [8,]  TRUE    NA  TRUE  TRUE FALSE    NA  TRUE FALSE  TRUE\n [9,]    NA    NA FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n[10,] FALSE FALSE    NA FALSE FALSE    NA    NA FALSE  TRUE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE  TRUE FALSE  TRUE    NA    NA  TRUE FALSE\n [2,]  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE    NA\n [3,]    NA    NA FALSE FALSE FALSE  TRUE    NA  TRUE    NA\n [4,] FALSE  TRUE FALSE FALSE    NA  TRUE FALSE    NA  TRUE\n [5,] FALSE    NA    NA  TRUE FALSE FALSE  TRUE FALSE  TRUE\n [6,]    NA  TRUE FALSE FALSE FALSE    NA FALSE    NA FALSE\n [7,]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE    NA\n [8,]  TRUE FALSE  TRUE    NA  TRUE  TRUE  TRUE    NA FALSE\n [9,]    NA FALSE FALSE FALSE    NA FALSE FALSE    NA  TRUE\n[10,]    NA    NA FALSE  TRUE  TRUE FALSE FALSE    NA    NA\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA    NA FALSE    NA    NA FALSE FALSE  TRUE\n [2,]  TRUE    NA    NA    NA FALSE  TRUE  TRUE  TRUE  TRUE\n [3,]    NA FALSE  TRUE FALSE    NA    NA FALSE    NA FALSE\n [4,]  TRUE FALSE FALSE  TRUE    NA  TRUE FALSE  TRUE    NA\n [5,] FALSE  TRUE FALSE FALSE    NA    NA    NA FALSE FALSE\n [6,]  TRUE  TRUE FALSE    NA  TRUE  TRUE FALSE  TRUE FALSE\n [7,]    NA  TRUE  TRUE    NA  TRUE    NA  TRUE FALSE FALSE\n [8,]  TRUE    NA    NA  TRUE    NA  TRUE  TRUE  TRUE    NA\n [9,]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE\n[10,]  TRUE  TRUE    NA FALSE    NA FALSE  TRUE    NA    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA    NA FALSE  TRUE  TRUE FALSE  TRUE FALSE    NA\n [2,]  TRUE FALSE FALSE  TRUE    NA    NA  TRUE    NA FALSE\n [3,]    NA FALSE FALSE  TRUE FALSE    NA  TRUE  TRUE FALSE\n [4,]  TRUE FALSE    NA  TRUE    NA    NA    NA  TRUE    NA\n [5,]  TRUE  TRUE FALSE FALSE FALSE FALSE    NA  TRUE FALSE\n [6,]    NA    NA  TRUE FALSE  TRUE FALSE  TRUE    NA FALSE\n [7,]    NA FALSE  TRUE  TRUE  TRUE  TRUE    NA  TRUE FALSE\n [8,]  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE\n [9,]  TRUE    NA    NA FALSE FALSE FALSE FALSE  TRUE FALSE\n[10,] FALSE FALSE FALSE  TRUE FALSE FALSE    NA  TRUE    NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA FALSE FALSE  TRUE    NA FALSE    NA    NA\n [2,]  TRUE    NA FALSE    NA    NA    NA FALSE    NA    NA\n [3,]  TRUE FALSE FALSE FALSE  TRUE  TRUE    NA FALSE  TRUE\n [4,]    NA  TRUE    NA  TRUE  TRUE FALSE  TRUE    NA    NA\n [5,]  TRUE    NA    NA  TRUE FALSE FALSE    NA  TRUE FALSE\n [6,]    NA FALSE  TRUE  TRUE    NA  TRUE FALSE FALSE    NA\n [7,]  TRUE  TRUE FALSE  TRUE  TRUE FALSE    NA FALSE FALSE\n [8,] FALSE    NA FALSE  TRUE    NA FALSE    NA FALSE  TRUE\n [9,] FALSE FALSE  TRUE    NA  TRUE FALSE FALSE FALSE FALSE\n[10,]    NA    NA    NA  TRUE FALSE  TRUE  TRUE    NA FALSE"
  },
  {
    "objectID": "man/outer/bc.d.html",
    "href": "man/outer/bc.d.html",
    "title": "bc.d",
    "section": "",
    "text": "The bc.d() function performs broadcasted decimal numeric operations on 2 numeric or logical arrays.  bc.num() is an alias for bc.d().  \n\n\n\nbc.d(x, y, op, prec = sqrt(.Machine\\$double.eps))\n\nbc.num(x, y, op, prec = sqrt(.Machine\\$double.eps))\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable logical or numeric arrays.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported arithmetic operators: +, -, *, /, ^, pmin, pmax.  Supported relational operators: ==, !=, &lt;, &gt;, &lt;=, &gt;=, d==, d!=, d&lt;, d&gt;, d&lt;=, d&gt;=. \n\n\n\n\nprec\n\n\na single number between 0 and 0.1, giving the machine precision to use.  Only relevant for the following operators:  d==, d!=, d&lt;, d&gt;, d&lt;=, d&gt;=  See the d==, d!=, d&lt;, d&gt;, d&lt;=, d&gt;= operators from the ‘tinycodet’ package for details. \n\n\n\n\n\n\n\nFor arithmetic operators:  A numeric array as a result of the broadcasted decimal arithmetic operation.   For relational operators:  A logical array as a result of the broadcasted decimal relational comparison.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(NA, 1.1:1000.1), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\nbc.d(x, y, \"+\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 661.1 172.1  14.1 492.1 504.1 838.1 379.1 991.1 838.1\n [2,]  13.1 143.1 386.1 243.1 737.1 667.1  92.1 604.1 106.1\n [3,] 398.1 237.1 710.1 926.1 519.1 486.1  35.1 754.1 917.1\n [4,] 605.1  27.1 477.1 133.1 408.1 162.1 275.1 258.1 880.1\n [5,] 166.1 885.1 305.1 207.1 343.1 709.1 854.1 366.1 363.1\n [6,] 599.1  79.1 755.1 842.1  97.1 971.1 148.1 921.1 269.1\n [7,] 471.1 650.1 329.1 235.1 558.1 290.1 341.1  83.1 120.1\n [8,] 108.1 853.1 850.1 952.1 968.1 142.1 709.1  31.1 246.1\n [9,]  59.1 254.1  75.1  53.1 671.1 290.1 128.1 599.1 313.1\n[10,]  46.1 748.1 464.1 920.1 745.1 228.1 587.1 766.1 827.1\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 144.1 509.1 325.1 522.1 798.1 175.1 293.1 974.1 485.1\n [2,] 232.1 738.1 856.1  95.1 210.1 766.1 661.1 596.1 698.1\n [3,] 418.1 177.1 358.1 794.1 748.1 259.1 229.1 171.1 369.1\n [4,] 235.1 160.1 914.1 981.1    NA 977.1 775.1 956.1 374.1\n [5,] 755.1 347.1 737.1 509.1 448.1 276.1 420.1 790.1  39.1\n [6,]  66.1 887.1 948.1 461.1 470.1 867.1 653.1 743.1 489.1\n [7,] 871.1 848.1 995.1 840.1 193.1 114.1  93.1 509.1 294.1\n [8,] 316.1 329.1 273.1 824.1 436.1 542.1 586.1 208.1 599.1\n [9,] 884.1 786.1 991.1 539.1 929.1 352.1  65.1 650.1 761.1\n[10,] 771.1 287.1 477.1 728.1 493.1 276.1 751.1  25.1  59.1\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]   [,5]   [,6]  [,7]  [,8]  [,9]\n [1,] 413.1 109.1 587.1 113.1  405.1  661.1 620.1 501.1 303.1\n [2,] 902.1 777.1 538.1 931.1  268.1  488.1 426.1 386.1 181.1\n [3,] 193.1 484.1 664.1 318.1  737.1  227.1 651.1 236.1 832.1\n [4,]  70.1 746.1 905.1  79.1  172.1  262.1 385.1 660.1 238.1\n [5,] 268.1 603.1 510.1 897.1  867.1  896.1 388.1 977.1 919.1\n [6,] 393.1  48.1 623.1 529.1   37.1  440.1 698.1 567.1 822.1\n [7,] 784.1 882.1 796.1 717.1  726.1  517.1  19.1 997.1 894.1\n [8,] 624.1  97.1 642.1 356.1  237.1  225.1 568.1 230.1 683.1\n [9,] 930.1 496.1 114.1 282.1 1008.1 1006.1 998.1  92.1 339.1\n[10,]  74.1 700.1 297.1 172.1  161.1  381.1 609.1 153.1 147.1\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]   [,9]\n [1,] 378.1 195.1  95.1 830.1 277.1 691.1 370.1 998.1  376.1\n [2,]  28.1 412.1 647.1 565.1 241.1 723.1  84.1 262.1  376.1\n [3,] 513.1 446.1 291.1  78.1 905.1 800.1 840.1 124.1   94.1\n [4,] 794.1 103.1 514.1 153.1 532.1 158.1 483.1 508.1  904.1\n [5,] 481.1 833.1 426.1 378.1 381.1 720.1 837.1  60.1  182.1\n [6,] 649.1 245.1 257.1  17.1 292.1 497.1 933.1 267.1   84.1\n [7,] 174.1 411.1 207.1 267.1 697.1 784.1 116.1 451.1 1003.1\n [8,] 432.1 471.1 558.1 229.1 162.1 992.1 523.1 997.1  254.1\n [9,] 789.1 797.1 537.1 644.1 883.1 817.1 347.1 451.1  580.1\n[10,] 644.1 844.1 358.1 875.1 848.1 930.1 916.1 710.1  160.1\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]   [,6]  [,7]  [,8]  [,9]\n [1,]  81.1 454.1 849.1 480.1 778.1  806.1 651.1 632.1 792.1\n [2,] 726.1 415.1 838.1 428.1 274.1  979.1 841.1 522.1   4.1\n [3,] 188.1 876.1 250.1 686.1 244.1 1001.1 696.1 469.1 628.1\n [4,] 269.1  68.1 419.1 584.1 607.1  254.1 880.1 780.1  77.1\n [5,] 168.1 781.1 923.1 336.1 106.1  650.1 202.1 312.1 871.1\n [6,] 465.1 319.1 886.1  38.1 668.1  417.1 910.1 694.1 543.1\n [7,] 619.1 718.1 415.1 922.1 620.1  543.1 336.1 623.1 703.1\n [8,] 724.1 970.1 193.1 942.1 160.1  739.1 339.1 278.1 487.1\n [9,] 813.1 327.1 419.1 295.1 897.1  539.1 139.1 459.1 983.1\n[10,] 812.1 724.1 765.1 150.1 666.1  317.1 816.1 563.1  51.1\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 487.1 145.1 384.1 691.1 971.1 545.1 722.1 585.1 114.1\n [2,] 388.1 466.1 835.1 536.1 197.1 719.1 682.1 496.1 208.1\n [3,] 391.1 426.1 300.1 747.1 721.1 571.1  93.1 854.1 412.1\n [4,] 921.1 268.1 942.1 392.1 444.1 970.1 793.1 276.1 547.1\n [5,] 401.1  24.1 248.1 269.1 613.1 140.1 636.1  66.1 717.1\n [6,]  73.1 931.1 663.1 685.1 761.1 304.1  66.1 203.1 346.1\n [7,] 632.1 881.1 873.1 745.1 759.1 381.1  23.1 623.1 798.1\n [8,] 366.1 824.1 839.1 787.1 737.1 924.1  89.1 258.1 344.1\n [9,] 467.1 550.1 782.1 587.1 494.1 881.1 543.1  34.1  42.1\n[10,] 427.1 835.1 173.1 153.1 132.1 241.1 502.1 568.1 921.1\n\n, , 7\n\n       [,1]   [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 266.1  476.1 529.1 268.1 480.1 459.1 418.1 745.1 247.1\n [2,] 512.1  253.1 157.1 368.1 415.1 410.1 495.1 264.1 789.1\n [3,] 413.1  656.1 121.1 600.1  60.1 675.1  97.1 475.1 832.1\n [4,] 468.1  659.1 161.1 314.1 835.1  74.1 118.1  37.1 211.1\n [5,] 738.1  233.1  98.1  64.1 130.1  34.1 665.1 279.1 952.1\n [6,] 303.1  515.1 872.1 772.1 720.1 575.1 536.1 572.1 903.1\n [7,] 943.1  794.1 112.1 238.1 793.1 279.1 282.1 310.1 367.1\n [8,] 493.1   24.1 484.1 372.1 516.1 804.1 278.1 493.1 618.1\n [9,]  68.1  283.1 724.1 973.1 555.1 752.1 427.1 751.1 792.1\n[10,] 694.1 1004.1 304.1 136.1 601.1  65.1 910.1 465.1 898.1\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]   [,9]\n [1,] 297.1 862.1 673.1 315.1 926.1 995.1 219.1 772.1  586.1\n [2,] 558.1 913.1 411.1 259.1 514.1 886.1 139.1 882.1  606.1\n [3,] 972.1 802.1 632.1 146.1 432.1  33.1 766.1 925.1  464.1\n [4,] 850.1 397.1 826.1 665.1 429.1  10.1 982.1 182.1   12.1\n [5,] 415.1 683.1 630.1 505.1 346.1 423.1 897.1  16.1  737.1\n [6,] 189.1 948.1 424.1    NA 771.1 153.1 285.1 687.1 1004.1\n [7,]  33.1 849.1 131.1 578.1 436.1 605.1 103.1  76.1  102.1\n [8,] 570.1 232.1 656.1 820.1 649.1  11.1 382.1 779.1  354.1\n [9,] 402.1 546.1 705.1 243.1 994.1 200.1 236.1 264.1   69.1\n[10,] 649.1 689.1 524.1 604.1 748.1 429.1 311.1 426.1  421.1\n\nbc.d(x, y, \"-\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 659.1 170.1  12.1 490.1 502.1 836.1 377.1 989.1 836.1\n [2,]   9.1 139.1 382.1 239.1 733.1 663.1  88.1 600.1 102.1\n [3,] 392.1 231.1 704.1 920.1 513.1 480.1  29.1 748.1 911.1\n [4,] 597.1  19.1 469.1 125.1 400.1 154.1 267.1 250.1 872.1\n [5,] 156.1 875.1 295.1 197.1 333.1 699.1 844.1 356.1 353.1\n [6,] 587.1  67.1 743.1 830.1  85.1 959.1 136.1 909.1 257.1\n [7,] 457.1 636.1 315.1 221.1 544.1 276.1 327.1  69.1 106.1\n [8,]  92.1 837.1 834.1 936.1 952.1 126.1 693.1  15.1 230.1\n [9,]  41.1 236.1  57.1  35.1 653.1 272.1 110.1 581.1 295.1\n[10,]  26.1 728.1 444.1 900.1 725.1 208.1 567.1 746.1 807.1\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 142.1 507.1 323.1 520.1 796.1 173.1 291.1 972.1 483.1\n [2,] 228.1 734.1 852.1  91.1 206.1 762.1 657.1 592.1 694.1\n [3,] 412.1 171.1 352.1 788.1 742.1 253.1 223.1 165.1 363.1\n [4,] 227.1 152.1 906.1 973.1    NA 969.1 767.1 948.1 366.1\n [5,] 745.1 337.1 727.1 499.1 438.1 266.1 410.1 780.1  29.1\n [6,]  54.1 875.1 936.1 449.1 458.1 855.1 641.1 731.1 477.1\n [7,] 857.1 834.1 981.1 826.1 179.1 100.1  79.1 495.1 280.1\n [8,] 300.1 313.1 257.1 808.1 420.1 526.1 570.1 192.1 583.1\n [9,] 866.1 768.1 973.1 521.1 911.1 334.1  47.1 632.1 743.1\n[10,] 751.1 267.1 457.1 708.1 473.1 256.1 731.1   5.1  39.1\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 411.1 107.1 585.1 111.1 403.1 659.1 618.1 499.1 301.1\n [2,] 898.1 773.1 534.1 927.1 264.1 484.1 422.1 382.1 177.1\n [3,] 187.1 478.1 658.1 312.1 731.1 221.1 645.1 230.1 826.1\n [4,]  62.1 738.1 897.1  71.1 164.1 254.1 377.1 652.1 230.1\n [5,] 258.1 593.1 500.1 887.1 857.1 886.1 378.1 967.1 909.1\n [6,] 381.1  36.1 611.1 517.1  25.1 428.1 686.1 555.1 810.1\n [7,] 770.1 868.1 782.1 703.1 712.1 503.1   5.1 983.1 880.1\n [8,] 608.1  81.1 626.1 340.1 221.1 209.1 552.1 214.1 667.1\n [9,] 912.1 478.1  96.1 264.1 990.1 988.1 980.1  74.1 321.1\n[10,]  54.1 680.1 277.1 152.1 141.1 361.1 589.1 133.1 127.1\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 376.1 193.1  93.1 828.1 275.1 689.1 368.1 996.1 374.1\n [2,]  24.1 408.1 643.1 561.1 237.1 719.1  80.1 258.1 372.1\n [3,] 507.1 440.1 285.1  72.1 899.1 794.1 834.1 118.1  88.1\n [4,] 786.1  95.1 506.1 145.1 524.1 150.1 475.1 500.1 896.1\n [5,] 471.1 823.1 416.1 368.1 371.1 710.1 827.1  50.1 172.1\n [6,] 637.1 233.1 245.1   5.1 280.1 485.1 921.1 255.1  72.1\n [7,] 160.1 397.1 193.1 253.1 683.1 770.1 102.1 437.1 989.1\n [8,] 416.1 455.1 542.1 213.1 146.1 976.1 507.1 981.1 238.1\n [9,] 771.1 779.1 519.1 626.1 865.1 799.1 329.1 433.1 562.1\n[10,] 624.1 824.1 338.1 855.1 828.1 910.1 896.1 690.1 140.1\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  79.1 452.1 847.1 478.1 776.1 804.1 649.1 630.1 790.1\n [2,] 722.1 411.1 834.1 424.1 270.1 975.1 837.1 518.1   0.1\n [3,] 182.1 870.1 244.1 680.1 238.1 995.1 690.1 463.1 622.1\n [4,] 261.1  60.1 411.1 576.1 599.1 246.1 872.1 772.1  69.1\n [5,] 158.1 771.1 913.1 326.1  96.1 640.1 192.1 302.1 861.1\n [6,] 453.1 307.1 874.1  26.1 656.1 405.1 898.1 682.1 531.1\n [7,] 605.1 704.1 401.1 908.1 606.1 529.1 322.1 609.1 689.1\n [8,] 708.1 954.1 177.1 926.1 144.1 723.1 323.1 262.1 471.1\n [9,] 795.1 309.1 401.1 277.1 879.1 521.1 121.1 441.1 965.1\n[10,] 792.1 704.1 745.1 130.1 646.1 297.1 796.1 543.1  31.1\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 485.1 143.1 382.1 689.1 969.1 543.1 720.1 583.1 112.1\n [2,] 384.1 462.1 831.1 532.1 193.1 715.1 678.1 492.1 204.1\n [3,] 385.1 420.1 294.1 741.1 715.1 565.1  87.1 848.1 406.1\n [4,] 913.1 260.1 934.1 384.1 436.1 962.1 785.1 268.1 539.1\n [5,] 391.1  14.1 238.1 259.1 603.1 130.1 626.1  56.1 707.1\n [6,]  61.1 919.1 651.1 673.1 749.1 292.1  54.1 191.1 334.1\n [7,] 618.1 867.1 859.1 731.1 745.1 367.1   9.1 609.1 784.1\n [8,] 350.1 808.1 823.1 771.1 721.1 908.1  73.1 242.1 328.1\n [9,] 449.1 532.1 764.1 569.1 476.1 863.1 525.1  16.1  24.1\n[10,] 407.1 815.1 153.1 133.1 112.1 221.1 482.1 548.1 901.1\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 264.1 474.1 527.1 266.1 478.1 457.1 416.1 743.1 245.1\n [2,] 508.1 249.1 153.1 364.1 411.1 406.1 491.1 260.1 785.1\n [3,] 407.1 650.1 115.1 594.1  54.1 669.1  91.1 469.1 826.1\n [4,] 460.1 651.1 153.1 306.1 827.1  66.1 110.1  29.1 203.1\n [5,] 728.1 223.1  88.1  54.1 120.1  24.1 655.1 269.1 942.1\n [6,] 291.1 503.1 860.1 760.1 708.1 563.1 524.1 560.1 891.1\n [7,] 929.1 780.1  98.1 224.1 779.1 265.1 268.1 296.1 353.1\n [8,] 477.1   8.1 468.1 356.1 500.1 788.1 262.1 477.1 602.1\n [9,]  50.1 265.1 706.1 955.1 537.1 734.1 409.1 733.1 774.1\n[10,] 674.1 984.1 284.1 116.1 581.1  45.1 890.1 445.1 878.1\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 295.1 860.1 671.1 313.1 924.1 993.1 217.1 770.1 584.1\n [2,] 554.1 909.1 407.1 255.1 510.1 882.1 135.1 878.1 602.1\n [3,] 966.1 796.1 626.1 140.1 426.1  27.1 760.1 919.1 458.1\n [4,] 842.1 389.1 818.1 657.1 421.1   2.1 974.1 174.1   4.1\n [5,] 405.1 673.1 620.1 495.1 336.1 413.1 887.1   6.1 727.1\n [6,] 177.1 936.1 412.1    NA 759.1 141.1 273.1 675.1 992.1\n [7,]  19.1 835.1 117.1 564.1 422.1 591.1  89.1  62.1  88.1\n [8,] 554.1 216.1 640.1 804.1 633.1  -4.9 366.1 763.1 338.1\n [9,] 384.1 528.1 687.1 225.1 976.1 182.1 218.1 246.1  51.1\n[10,] 629.1 669.1 504.1 584.1 728.1 409.1 291.1 406.1 401.1\n\nbc.d(x, y, \"*\")\n\n, , 1\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  660.1  171.1   13.1  491.1  503.1  837.1  378.1  990.1  837.1\n [2,]   22.2  282.2  768.2  482.2 1470.2 1330.2  180.2 1204.2  208.2\n [3,] 1185.3  702.3 2121.3 2769.3 1548.3 1449.3   96.3 2253.3 2742.3\n [4,] 2404.4   92.4 1892.4  516.4 1616.4  632.4 1084.4 1016.4 3504.4\n [5,]  805.5 4400.5 1500.5 1010.5 1690.5 3520.5 4245.5 1805.5 1790.5\n [6,] 3558.6  438.6 4494.6 5016.6  546.6 5790.6  852.6 5490.6 1578.6\n [7,] 3248.7 4501.7 2254.7 1596.7 3857.7 1981.7 2338.7  532.7  791.7\n [8,]  800.8 6760.8 6736.8 7552.8 7680.8 1072.8 5608.8  184.8 1904.8\n [9,]  450.9 2205.9  594.9  396.9 5958.9 2529.9 1071.9 5310.9 2736.9\n[10,]  361.0 7381.0 4541.0 9101.0 7351.0 2181.0 5771.0 7561.0 8171.0\n\n, , 2\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  143.1  508.1  324.1  521.1  797.1  174.1  292.1  973.1  484.1\n [2,]  460.2 1472.2 1708.2  186.2  416.2 1528.2 1318.2 1188.2 1392.2\n [3,] 1245.3  522.3 1065.3 2373.3 2235.3  768.3  678.3  504.3 1098.3\n [4,]  924.4  624.4 3640.4 3908.4     NA 3892.4 3084.4 3808.4 1480.4\n [5,] 3750.5 1710.5 3660.5 2520.5 2215.5 1355.5 2075.5 3925.5  170.5\n [6,]  360.6 5286.6 5652.6 2730.6 2784.6 5166.6 3882.6 4422.6 2898.6\n [7,] 6048.7 5887.7 6916.7 5831.7 1302.7  749.7  602.7 3514.7 2009.7\n [8,] 2464.8 2568.8 2120.8 6528.8 3424.8 4272.8 4624.8 1600.8 4728.8\n [9,] 7875.9 6993.9 8838.9 4770.9 8280.9 3087.9  504.9 5769.9 6768.9\n[10,] 7611.0 2771.0 4671.0 7181.0 4831.0 2661.0 7411.0  151.0  491.0\n\n, , 3\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  412.1  108.1  586.1  112.1  404.1  660.1  619.1  500.1  302.1\n [2,] 1800.2 1550.2 1072.2 1858.2  532.2  972.2  848.2  768.2  358.2\n [3,]  570.3 1443.3 1983.3  945.3 2202.3  672.3 1944.3  699.3 2487.3\n [4,]  264.4 2968.4 3604.4  300.4  672.4 1032.4 1524.4 2624.4  936.4\n [5,] 1315.5 2990.5 2525.5 4460.5 4310.5 4455.5 1915.5 4860.5 4570.5\n [6,] 2322.6  252.6 3702.6 3138.6  186.6 2604.6 4152.6 3366.6 4896.6\n [7,] 5439.7 6125.7 5523.7 4970.7 5033.7 3570.7   84.7 6930.7 6209.7\n [8,] 4928.8  712.8 5072.8 2784.8 1832.8 1736.8 4480.8 1776.8 5400.8\n [9,] 8289.9 4383.9  945.9 2457.9 8991.9 8973.9 8901.9  747.9 2970.9\n[10,]  641.0 6901.0 2871.0 1621.0 1511.0 3711.0 5991.0 1431.0 1371.0\n\n, , 4\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  377.1  194.1   94.1  829.1  276.1  690.1  369.1  997.1  375.1\n [2,]   52.2  820.2 1290.2 1126.2  478.2 1442.2  164.2  520.2  748.2\n [3,] 1530.3 1329.3  864.3  225.3 2706.3 2391.3 2511.3  363.3  273.3\n [4,] 3160.4  396.4 2040.4  596.4 2112.4  616.4 1916.4 2016.4 3600.4\n [5,] 2380.5 4140.5 2105.5 1865.5 1880.5 3575.5 4160.5  275.5  885.5\n [6,] 3858.6 1434.6 1506.6   66.6 1716.6 2946.6 5562.6 1566.6  468.6\n [7,] 1169.7 2828.7 1400.7 1820.7 4830.7 5439.7  763.7 3108.7 6972.7\n [8,] 3392.8 3704.8 4400.8 1768.8 1232.8 7872.8 4120.8 7912.8 1968.8\n [9,] 7020.9 7092.9 4752.9 5715.9 7866.9 7272.9 3042.9 3978.9 5139.9\n[10,] 6341.0 8341.0 3481.0 8651.0 8381.0 9201.0 9061.0 7001.0 1501.0\n\n, , 5\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]   80.1  453.1  848.1  479.1  777.1  805.1  650.1  631.1  791.1\n [2,] 1448.2  826.2 1672.2  852.2  544.2 1954.2 1678.2 1040.2    4.2\n [3,]  555.3 2619.3  741.3 2049.3  723.3 2994.3 2079.3 1398.3 1875.3\n [4,] 1060.4  256.4 1660.4 2320.4 2412.4 1000.4 3504.4 3104.4  292.4\n [5,]  815.5 3880.5 4590.5 1655.5  505.5 3225.5  985.5 1535.5 4330.5\n [6,] 2754.6 1878.6 5280.6  192.6 3972.6 2466.6 5424.6 4128.6 3222.6\n [7,] 4284.7 4977.7 2856.7 6405.7 4291.7 3752.7 2303.7 4312.7 4872.7\n [8,] 5728.8 7696.8 1480.8 7472.8 1216.8 5848.8 2648.8 2160.8 3832.8\n [9,] 7236.9 2862.9 3690.9 2574.9 7992.9 4770.9 1170.9 4050.9 8766.9\n[10,] 8021.0 7141.0 7551.0 1401.0 6561.0 3071.0 8061.0 5531.0  411.0\n\n, , 6\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  486.1  144.1  383.1  690.1  970.1  544.1  721.1  584.1  113.1\n [2,]  772.2  928.2 1666.2 1068.2  390.2 1434.2 1360.2  988.2  412.2\n [3,] 1164.3 1269.3  891.3 2232.3 2154.3 1704.3  270.3 2553.3 1227.3\n [4,] 3668.4 1056.4 3752.4 1552.4 1760.4 3864.4 3156.4 1088.4 2172.4\n [5,] 1980.5   95.5 1215.5 1320.5 3040.5  675.5 3155.5  305.5 3560.5\n [6,]  402.6 5550.6 3942.6 4074.6 4530.6 1788.6  360.6 1182.6 2040.6\n [7,] 4375.7 6118.7 6062.7 5166.7 5264.7 2618.7  112.7 4312.7 5537.7\n [8,] 2864.8 6528.8 6648.8 6232.8 5832.8 7328.8  648.8 2000.8 2688.8\n [9,] 4122.9 4869.9 6957.9 5202.9 4365.9 7848.9 4806.9  225.9  297.9\n[10,] 4171.0 8251.0 1631.0 1431.0 1221.0 2311.0 4921.0 5581.0 9111.0\n\n, , 7\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  265.1  475.1  528.1  267.1  479.1  458.1  417.1  744.1  246.1\n [2,] 1020.2  502.2  310.2  732.2  826.2  816.2  986.2  524.2 1574.2\n [3,] 1230.3 1959.3  354.3 1791.3  171.3 2016.3  282.3 1416.3 2487.3\n [4,] 1856.4 2620.4  628.4 1240.4 3324.4  280.4  456.4  132.4  828.4\n [5,] 3665.5 1140.5  465.5  295.5  625.5  145.5 3300.5 1370.5 4735.5\n [6,] 1782.6 3054.6 5196.6 4596.6 4284.6 3414.6 3180.6 3396.6 5382.6\n [7,] 6552.7 5509.7  735.7 1617.7 5502.7 1904.7 1925.7 2121.7 2520.7\n [8,] 3880.8  128.8 3808.8 2912.8 4064.8 6368.8 2160.8 3880.8 4880.8\n [9,]  531.9 2466.9 6435.9 8676.9 4914.9 6687.9 3762.9 6678.9 7047.9\n[10,] 6841.0 9941.0 2941.0 1261.0 5911.0  551.0 9001.0 4551.0 8881.0\n\n, , 8\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  296.1  861.1  672.1  314.1  925.1  994.1  218.1  771.1  585.1\n [2,] 1112.2 1822.2  818.2  514.2 1024.2 1768.2  274.2 1760.2 1208.2\n [3,] 2907.3 2397.3 1887.3  429.3 1287.3   90.3 2289.3 2766.3 1383.3\n [4,] 3384.4 1572.4 3288.4 2644.4 1700.4   24.4 3912.4  712.4   32.4\n [5,] 2050.5 3390.5 3125.5 2500.5 1705.5 2090.5 4460.5   55.5 3660.5\n [6,] 1098.6 5652.6 2508.6     NA 4590.6  882.6 1674.6 4086.6 5988.6\n [7,]  182.7 5894.7  868.7 3997.7 3003.7 4186.7  672.7  483.7  665.7\n [8,] 4496.8 1792.8 5184.8 6496.8 5128.8   24.8 2992.8 6168.8 2768.8\n [9,] 3537.9 4833.9 6264.9 2106.9 8865.9 1719.9 2043.9 2295.9  540.9\n[10,] 6391.0 6791.0 5141.0 5941.0 7381.0 4191.0 3011.0 4161.0 4111.0\n\nbc.d(x, y, \"/\")\n\n, , 1\n\n            [,1]      [,2]       [,3]      [,4]      [,5]      [,6]      [,7]\n [1,] 660.100000 171.10000  13.100000 491.10000 503.10000 837.10000 378.10000\n [2,]   5.550000  70.55000 192.050000 120.55000 367.55000 332.55000  45.05000\n [3,] 131.700000  78.03333 235.700000 307.70000 172.03333 161.03333  10.70000\n [4,] 150.275000   5.77500 118.275000  32.27500 101.02500  39.52500  67.77500\n [5,]  32.220000 176.02000  60.020000  40.42000  67.62000 140.82000 169.82000\n [6,]  98.850000  12.18333 124.850000 139.35000  15.18333 160.85000  23.68333\n [7,]  66.300000  91.87143  46.014286  32.58571  78.72857  40.44286  47.72857\n [8,]  12.512500 105.63750 105.262500 118.01250 120.01250  16.76250  87.63750\n [9,]   5.566667  27.23333   7.344444   4.90000  73.56667  31.23333  13.23333\n[10,]   3.610000  73.81000  45.410000  91.01000  73.51000  21.81000  57.71000\n           [,8]      [,9]\n [1,] 990.10000 837.10000\n [2,] 301.05000  52.05000\n [3,] 250.36667 304.70000\n [4,]  63.52500 219.02500\n [5,]  72.22000  71.62000\n [6,] 152.51667  43.85000\n [7,]  10.87143  16.15714\n [8,]   2.88750  29.76250\n [9,]  65.56667  33.78889\n[10,]  75.61000  81.71000\n\n, , 2\n\n           [,1]      [,2]     [,3]     [,4]      [,5]      [,6]       [,7]\n [1,] 143.10000 508.10000 324.1000 521.1000 797.10000 174.10000 292.100000\n [2,] 115.05000 368.05000 427.0500  46.5500 104.05000 382.05000 329.550000\n [3,] 138.36667  58.03333 118.3667 263.7000 248.36667  85.36667  75.366667\n [4,]  57.77500  39.02500 227.5250 244.2750        NA 243.27500 192.775000\n [5,] 150.02000  68.42000 146.4200 100.8200  88.62000  54.22000  83.020000\n [6,]  10.01667 146.85000 157.0167  75.8500  77.35000 143.51667 107.850000\n [7,] 123.44286 120.15714 141.1571 119.0143  26.58571  15.30000  12.300000\n [8,]  38.51250  40.13750  33.1375 102.0125  53.51250  66.76250  72.262500\n [9,]  97.23333  86.34444 109.1222  58.9000 102.23333  38.12222   6.233333\n[10,]  76.11000  27.71000  46.7100  71.8100  48.31000  26.61000  74.110000\n           [,8]      [,9]\n [1,] 973.10000 484.10000\n [2,] 297.05000 348.05000\n [3,]  56.03333 122.03333\n [4,] 238.02500  92.52500\n [5,] 157.02000   6.82000\n [6,] 122.85000  80.51667\n [7,]  71.72857  41.01429\n [8,]  25.01250  73.88750\n [9,]  71.23333  83.56667\n[10,]   1.51000   4.91000\n\n, , 3\n\n           [,1]       [,2]      [,3]      [,4]       [,5]      [,6]       [,7]\n [1,] 412.10000 108.100000 586.10000 112.10000 404.100000 660.10000 619.100000\n [2,] 450.05000 387.550000 268.05000 464.55000 133.050000 243.05000 212.050000\n [3,]  63.36667 160.366667 220.36667 105.03333 244.700000  74.70000 216.033333\n [4,]  16.52500 185.525000 225.27500  18.77500  42.025000  64.52500  95.275000\n [5,]  52.62000 119.620000 101.02000 178.42000 172.420000 178.22000  76.620000\n [6,]  64.51667   7.016667 102.85000  87.18333   5.183333  72.35000 115.350000\n [7,] 111.01429 125.014286 112.72857 101.44286 102.728571  72.87143   1.728571\n [8,]  77.01250  11.137500  79.26250  43.51250  28.637500  27.13750  70.012500\n [9,] 102.34444  54.122222  11.67778  30.34444 111.011111 110.78889 109.900000\n[10,]   6.41000  69.010000  28.71000  16.21000  15.110000  37.11000  59.910000\n            [,8]      [,9]\n [1,] 500.100000 302.10000\n [2,] 192.050000  89.55000\n [3,]  77.700000 276.36667\n [4,] 164.025000  58.52500\n [5,] 194.420000 182.82000\n [6,]  93.516667 136.01667\n [7,] 141.442857 126.72857\n [8,]  27.762500  84.38750\n [9,]   9.233333  36.67778\n[10,]  14.310000  13.71000\n\n, , 4\n\n           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]\n [1,] 377.10000 194.10000  94.10000 829.10000 276.10000 690.10000 369.10000\n [2,]  13.05000 205.05000 322.55000 281.55000 119.55000 360.55000  41.05000\n [3,] 170.03333 147.70000  96.03333  25.03333 300.70000 265.70000 279.03333\n [4,] 197.52500  24.77500 127.52500  37.27500 132.02500  38.52500 119.77500\n [5,]  95.22000 165.62000  84.22000  74.62000  75.22000 143.02000 166.42000\n [6,] 107.18333  39.85000  41.85000   1.85000  47.68333  81.85000 154.51667\n [7,]  23.87143  57.72857  28.58571  37.15714  98.58571 111.01429  15.58571\n [8,]  53.01250  57.88750  68.76250  27.63750  19.26250 123.01250  64.38750\n [9,]  86.67778  87.56667  58.67778  70.56667  97.12222  89.78889  37.56667\n[10,]  63.41000  83.41000  34.81000  86.51000  83.81000  92.01000  90.61000\n           [,8]      [,9]\n [1,] 997.10000 375.10000\n [2,] 130.05000 187.05000\n [3,]  40.36667  30.36667\n [4,] 126.02500 225.02500\n [5,]  11.02000  35.42000\n [6,]  43.51667  13.01667\n [7,]  63.44286 142.30000\n [8,] 123.63750  30.76250\n [9,]  49.12222  63.45556\n[10,]  70.01000  15.01000\n\n, , 5\n\n           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]\n [1,]  80.10000 453.10000 848.10000 479.10000 777.10000 805.10000 650.10000\n [2,] 362.05000 206.55000 418.05000 213.05000 136.05000 488.55000 419.55000\n [3,]  61.70000 291.03333  82.36667 227.70000  80.36667 332.70000 231.03333\n [4,]  66.27500  16.02500 103.77500 145.02500 150.77500  62.52500 219.02500\n [5,]  32.62000 155.22000 183.62000  66.22000  20.22000 129.02000  39.42000\n [6,]  76.51667  52.18333 146.68333   5.35000 110.35000  68.51667 150.68333\n [7,]  87.44286 101.58571  58.30000 130.72857  87.58571  76.58571  47.01429\n [8,]  89.51250 120.26250  23.13750 116.76250  19.01250  91.38750  41.38750\n [9,]  89.34444  35.34444  45.56667  31.78889  98.67778  58.90000  14.45556\n[10,]  80.21000  71.41000  75.51000  14.01000  65.61000  30.71000  80.61000\n           [,8]      [,9]\n [1,] 631.10000 791.10000\n [2,] 260.05000   1.05000\n [3,] 155.36667 208.36667\n [4,] 194.02500  18.27500\n [5,]  61.42000 173.22000\n [6,] 114.68333  89.51667\n [7,]  88.01429  99.44286\n [8,]  33.76250  59.88750\n [9,]  50.01111 108.23333\n[10,]  55.31000   4.11000\n\n, , 6\n\n           [,1]      [,2]      [,3]      [,4]     [,5]      [,6]      [,7]\n [1,] 486.10000 144.10000 383.10000 690.10000 970.1000 544.10000 721.10000\n [2,] 193.05000 232.05000 416.55000 267.05000  97.5500 358.55000 340.05000\n [3,] 129.36667 141.03333  99.03333 248.03333 239.3667 189.36667  30.03333\n [4,] 229.27500  66.02500 234.52500  97.02500 110.0250 241.52500 197.27500\n [5,]  79.22000   3.82000  48.62000  52.82000 121.6200  27.02000 126.22000\n [6,]  11.18333 154.18333 109.51667 113.18333 125.8500  49.68333  10.01667\n [7,]  89.30000 124.87143 123.72857 105.44286 107.4429  53.44286   2.30000\n [8,]  44.76250 102.01250 103.88750  97.38750  91.1375 114.51250  10.13750\n [9,]  50.90000  60.12222  85.90000  64.23333  53.9000  96.90000  59.34444\n[10,]  41.71000  82.51000  16.31000  14.31000  12.2100  23.11000  49.21000\n            [,8]       [,9]\n [1,] 584.100000 113.100000\n [2,] 247.050000 103.050000\n [3,] 283.700000 136.366667\n [4,]  68.025000 135.775000\n [5,]  12.220000 142.420000\n [6,]  32.850000  56.683333\n [7,]  88.014286 113.014286\n [8,]  31.262500  42.012500\n [9,]   2.788889   3.677778\n[10,]  55.810000  91.110000\n\n, , 7\n\n            [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]\n [1,] 265.100000 475.10000 528.10000 267.10000 479.10000 458.10000 417.10000\n [2,] 255.050000 125.55000  77.55000 183.05000 206.55000 204.05000 246.55000\n [3,] 136.700000 217.70000  39.36667 199.03333  19.03333 224.03333  31.36667\n [4,] 116.025000 163.77500  39.27500  77.52500 207.77500  17.52500  28.52500\n [5,] 146.620000  45.62000  18.62000  11.82000  25.02000   5.82000 132.02000\n [6,]  49.516667  84.85000 144.35000 127.68333 119.01667  94.85000  88.35000\n [7,] 133.728571 112.44286  15.01429  33.01429 112.30000  38.87143  39.30000\n [8,]  60.637500   2.01250  59.51250  45.51250  63.51250  99.51250  33.76250\n [9,]   6.566667  30.45556  79.45556 107.12222  60.67778  82.56667  46.45556\n[10,]  68.410000  99.41000  29.41000  12.61000  59.11000   5.51000  90.01000\n           [,8]      [,9]\n [1,] 744.10000 246.10000\n [2,] 131.05000 393.55000\n [3,] 157.36667 276.36667\n [4,]   8.27500  51.77500\n [5,]  54.82000 189.42000\n [6,]  94.35000 149.51667\n [7,]  43.30000  51.44286\n [8,]  60.63750  76.26250\n [9,]  82.45556  87.01111\n[10,]  45.51000  88.81000\n\n, , 8\n\n            [,1]      [,2]      [,3]      [,4]     [,5]      [,6]      [,7]\n [1,] 296.100000 861.10000 672.10000 314.10000 925.1000 994.10000 218.10000\n [2,] 278.050000 455.55000 204.55000 128.55000 256.0500 442.05000  68.55000\n [3,] 323.033333 266.36667 209.70000  47.70000 143.0333  10.03333 254.36667\n [4,] 211.525000  98.27500 205.52500 165.27500 106.2750   1.52500 244.52500\n [5,]  82.020000 135.62000 125.02000 100.02000  68.2200  83.62000 178.42000\n [6,]  30.516667 157.01667  69.68333        NA 127.5167  24.51667  46.51667\n [7,]   3.728571 120.30000  17.72857  81.58571  61.3000  85.44286  13.72857\n [8,]  70.262500  28.01250  81.01250 101.51250  80.1375   0.38750  46.76250\n [9,]  43.677778  59.67778  77.34444  26.01111 109.4556  21.23333  25.23333\n[10,]  63.910000  67.91000  51.41000  59.41000  73.8100  41.91000  30.11000\n            [,8]       [,9]\n [1,] 771.100000 585.100000\n [2,] 440.050000 302.050000\n [3,] 307.366667 153.700000\n [4,]  44.525000   2.025000\n [5,]   2.220000 146.420000\n [6,] 113.516667 166.350000\n [7,]   9.871429  13.585714\n [8,]  96.387500  43.262500\n [9,]  28.344444   6.677778\n[10,]  41.610000  41.110000\n\nbc.d(x, y, \"^\")\n\n, , 1\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 6.601000e+02 1.711000e+02 1.310000e+01 4.911000e+02 5.031000e+02\n [2,] 1.232100e+02 1.990921e+04 1.475328e+05 5.812921e+04 5.403720e+05\n [3,] 6.167669e+07 1.282934e+07 3.535432e+08 7.865861e+08 1.374680e+08\n [4,] 1.305530e+11 2.847396e+05 5.009701e+10 2.777826e+08 2.666585e+10\n [5,] 1.085120e+11 5.280318e+14 2.434053e+12 3.371565e+11 4.418001e+12\n [6,] 4.352788e+16 1.525823e+11 1.767009e+17 3.416248e+17 5.716237e+11\n [7,] 4.637469e+18 4.549352e+19 3.596956e+17 3.212750e+16 1.543878e+19\n [8,] 1.008028e+16 2.601746e+23 2.528770e+23 6.311666e+23 7.219910e+23\n [9,] 1.988564e+15 3.192198e+21 2.408869e+16 6.308808e+14 2.445188e+25\n[10,] 3.758997e+15 4.799014e+28 3.728336e+26 3.898443e+29 4.607488e+28\n              [,6]         [,7]         [,8]         [,9]\n [1,] 8.371000e+02 3.781000e+02 9.901000e+02 8.371000e+02\n [2,] 4.423580e+05 8.118010e+03 3.625244e+05 1.083681e+04\n [3,] 1.127486e+08 3.307616e+04 4.237340e+08 7.638026e+08\n [4,] 6.247805e+08 5.401546e+09 4.168873e+09 5.891349e+11\n [5,] 1.730500e+14 4.413613e+14 6.139563e+12 5.888729e+12\n [6,] 8.080419e+17 8.233120e+12 5.872342e+17 3.316844e+14\n [7,] 1.457401e+17 4.646600e+17 1.478062e+13 2.367218e+14\n [8,] 1.045756e+17 5.837673e+22 8.107666e+10 1.032940e+19\n [9,] 1.095841e+22 4.821763e+18 8.676220e+24 2.224067e+22\n[10,] 2.435323e+23 4.097422e+27 6.106500e+28 1.326637e+29\n\n, , 2\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 1.431000e+02 5.081000e+02 3.241000e+02 5.211000e+02 7.971000e+02\n [2,] 5.294601e+04 5.418432e+05 7.294868e+05 8.667610e+03 4.330561e+04\n [3,] 7.152505e+07 5.277112e+06 4.477669e+07 4.951014e+08 4.136602e+08\n [4,] 2.852330e+09 5.937609e+08 6.860511e+11 9.114987e+11           NA\n [5,] 2.374629e+14 4.685602e+12 2.103062e+14 3.255244e+13 1.708082e+13\n [6,] 4.712451e+10 4.678980e+17 6.991688e+17 8.884664e+15 9.992391e+15\n [7,] 3.597063e+20 2.978060e+20 9.196155e+20 2.785351e+20 7.730803e+15\n [8,] 8.119580e+19 1.130114e+20 2.439371e+19 1.967646e+23 1.128137e+21\n [9,] 3.009672e+26 1.033456e+26 8.499657e+26 3.305371e+24 4.726235e+26\n[10,] 6.522547e+28 2.669103e+24 4.944230e+26 3.646274e+28 6.924212e+26\n              [,6]         [,7]         [,8]         [,9]\n [1,] 1.741000e+02 2.921000e+02 9.731000e+02 4.841000e+02\n [2,] 5.838488e+05 4.344128e+05 3.529548e+05 4.845552e+05\n [3,] 1.679688e+07 1.155851e+07 4.750104e+06 4.906809e+07\n [4,] 8.966643e+11 3.535435e+11 8.217321e+11 1.876188e+10\n [5,] 1.464359e+12 1.232434e+13 2.982805e+14 4.610753e+07\n [6,] 4.076820e+17 7.342237e+16 1.603830e+17 1.271224e+16\n [7,] 1.616316e+14 3.507697e+13 8.045102e+18 1.607801e+17\n [8,] 6.621870e+21 1.247452e+22 2.570258e+18 1.490348e+22\n [9,] 6.588499e+22 5.503839e+15 1.829498e+25 7.699815e+25\n[10,] 1.780118e+24 4.997676e+28 6.162678e+11 8.143572e+16\n\n, , 3\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 4.121000e+02 1.081000e+02 5.861000e+02 1.121000e+02 4.041000e+02\n [2,] 8.101800e+05 6.007800e+05 2.874032e+05 8.632268e+05 7.080921e+04\n [3,] 6.869836e+06 1.113541e+08 2.889359e+08 3.128565e+07 3.956086e+08\n [4,] 1.909000e+07 3.032842e+11 6.593135e+11 3.180971e+07 7.984925e+08\n [5,] 1.260678e+12 7.653657e+13 3.287660e+13 5.650250e+14 4.761987e+14\n [6,] 3.364643e+15 5.567915e+09 5.522469e+16 2.048841e+16 9.048203e+08\n [7,] 1.711348e+20 3.930102e+20 1.905129e+20 9.104091e+19 9.943174e+19\n [8,] 2.075915e+22 3.972113e+15 2.613738e+22 2.155918e+20 7.589282e+18\n [9,] 4.772666e+26 1.543701e+24 1.564676e+18 8.450751e+21 9.919291e+26\n[10,] 1.171063e+18 2.449742e+28 3.804801e+24 1.252651e+22 6.203612e+21\n              [,6]         [,7]         [,8]         [,9]\n [1,] 6.601000e+02 6.191000e+02 5.001000e+02 3.021000e+02\n [2,] 2.362932e+05 1.798608e+05 1.475328e+05 3.207681e+04\n [3,] 1.125448e+07 2.722238e+08 1.266563e+07 5.699290e+08\n [4,] 4.437639e+09 2.109385e+10 1.853020e+11 3.003348e+09\n [5,] 5.618653e+14 8.252029e+12 8.680699e+14 6.382173e+14\n [6,] 6.691735e+15 1.099039e+17 3.120625e+16 2.954339e+17\n [7,] 8.986431e+18 3.797498e+07 9.327246e+20 4.323227e+20\n [8,] 4.934903e+18 9.685557e+21 5.920910e+18 4.314643e+22\n [9,] 9.742007e+26 9.060701e+26 1.889771e+17 4.653821e+22\n[10,] 4.953470e+25 5.956528e+27 3.600778e+21 2.346251e+21\n\n, , 4\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 3.771000e+02 1.941000e+02 9.410000e+01 8.291000e+02 2.761000e+02\n [2,] 6.812100e+02 1.681820e+05 4.161540e+05 3.170816e+05 5.716881e+04\n [3,] 1.327290e+08 8.699719e+07 2.391276e+07 4.235648e+05 7.341149e+08\n [4,] 3.896981e+11 9.644831e+07 6.770509e+10 4.942089e+08 7.777941e+10\n [5,] 2.446194e+13 3.894161e+14 1.324117e+13 7.229799e+12 7.525176e+12\n [6,] 7.074098e+16 1.868433e+14 2.506573e+14 1.870415e+06 5.484122e+14\n [7,] 3.637769e+15 1.759632e+18 1.284487e+16 8.053459e+16 7.453911e+19\n [8,] 1.046517e+21 2.115428e+21 8.385581e+21 5.710971e+18 3.179956e+17\n [9,] 1.069923e+26 1.172822e+26 3.194813e+24 1.681044e+25 2.978860e+26\n[10,] 1.050939e+28 1.629976e+29 2.612403e+25 2.347811e+29 1.709852e+29\n              [,6]         [,7]         [,8]         [,9]\n [1,] 6.901000e+02 3.691000e+02 9.971000e+02 3.751000e+02\n [2,] 5.199852e+05 6.740410e+03 6.765201e+04 1.399508e+05\n [3,] 5.064522e+08 5.865864e+08 1.775957e+06 7.560580e+05\n [4,] 5.639110e+08 5.268715e+10 6.457535e+10 6.563916e+11\n [5,] 1.869967e+14 3.989125e+14 5.078764e+08 1.742179e+11\n [6,] 1.402877e+16 6.349792e+17 3.168409e+14 2.269375e+11\n [7,] 1.711348e+20 1.839811e+14 3.406947e+18 9.730173e+20\n [8,] 8.796580e+23 4.956013e+21 9.160551e+23 1.345529e+19\n [9,] 1.469555e+26 5.773066e+22 6.451856e+23 6.462632e+24\n[10,] 4.348608e+29 3.730451e+29 2.828790e+28 5.805063e+21\n\n, , 5\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 8.010000e+01 4.531000e+02 8.481000e+02 4.791000e+02 7.771000e+02\n [2,] 5.243208e+05 1.706516e+05 6.990632e+05 1.815612e+05 7.403841e+04\n [3,] 6.341898e+06 6.655673e+08 1.508753e+07 3.187520e+08 1.401495e+07\n [4,] 4.938999e+09 1.688232e+07 2.969005e+10 1.132430e+11 1.322992e+11\n [5,] 1.154170e+11 2.815713e+14 6.523038e+14 3.979201e+12 1.056223e+10\n [6,] 9.363619e+15 9.421030e+14 4.647208e+17 1.094032e+09 8.424449e+16\n [7,] 3.219264e+19 9.194217e+19 1.885238e+18 5.373780e+20 3.256261e+19\n [8,] 6.914956e+22 7.341110e+23 1.378007e+18 5.796248e+23 2.864400e+17\n [9,] 1.405370e+26 3.334825e+22 3.281013e+23 1.284283e+22 3.436820e+26\n[10,] 1.102263e+29 3.448183e+28 6.026216e+28 2.913274e+21 1.478088e+28\n              [,6]         [,7]         [,8]         [,9]\n [1,] 8.051000e+02 6.501000e+02 6.311000e+02 7.911000e+02\n [2,] 9.547244e+05 7.040888e+05 2.705040e+05 4.410000e+00\n [3,] 9.943108e+08 3.329567e+08 1.012599e+08 2.442578e+08\n [4,] 3.912504e+09 5.891349e+11 3.628029e+11 2.855417e+07\n [5,] 1.117211e+14 2.974631e+11 2.731487e+12 4.873491e+14\n [6,] 4.827084e+15 5.461335e+17 1.061474e+17 2.400661e+16\n [7,] 1.272684e+19 4.181144e+17 3.369446e+19 7.919567e+19\n [8,] 8.162332e+22 1.444353e+20 2.832675e+19 2.775935e+21\n [9,] 3.305371e+24 1.067814e+19 7.581953e+23 7.896450e+26\n[10,] 7.461019e+24 1.158482e+29 2.679394e+27 1.375366e+16\n\n, , 6\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 4.861000e+02 1.441000e+02 3.831000e+02 6.901000e+02 9.701000e+02\n [2,] 1.490732e+05 2.153888e+05 6.940556e+05 2.852628e+05 3.806401e+04\n [3,] 5.845625e+07 7.574066e+07 2.622454e+07 4.119969e+08 3.703009e+08\n [4,] 7.074028e+11 4.864896e+09 7.744556e+11 2.268687e+10 3.751505e+10\n [5,] 9.750440e+12 2.541949e+06 8.490334e+11 1.284819e+12 8.315244e+13\n [6,] 9.127149e+10 6.268045e+17 8.049869e+16 9.808495e+16 1.853646e+17\n [7,] 3.729465e+19 3.898772e+20 3.655748e+20 1.193456e+20 1.361223e+20\n [8,] 2.704174e+20 1.967646e+23 2.276283e+23 1.357518e+23 7.985402e+22\n [9,] 8.884697e+23 3.976471e+24 9.865544e+25 7.211519e+24 1.487584e+24\n[10,] 1.593683e+26 1.462399e+29 1.332109e+22 3.600778e+21 7.364727e+20\n              [,6]         [,7]         [,8]         [,9]\n [1,] 5.441000e+02 7.211000e+02 5.841000e+02 1.131000e+02\n [2,] 5.142324e+05 4.625360e+05 2.441348e+05 4.247721e+04\n [3,] 1.833472e+08 7.314327e+05 6.165123e+08 6.846813e+07\n [4,] 8.711407e+11 3.877289e+11 5.481686e+09 8.699999e+10\n [5,] 4.500666e+10 1.001131e+14 8.515420e+08 1.831070e+14\n [6,] 7.017329e+14 4.712451e+10 5.862998e+13 1.547533e+15\n [7,] 1.025449e+18 2.804020e+08 3.369446e+19 1.939187e+20\n [8,] 4.960701e+23 1.871401e+15 1.530769e+19 1.628351e+20\n [9,] 2.918076e+26 3.536741e+24 3.954244e+12 4.769270e+13\n[10,] 4.345097e+23 8.327865e+26 2.931705e+27 3.941490e+29\n\n, , 7\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 2.651000e+02 4.751000e+02 5.281000e+02 2.671000e+02 4.791000e+02\n [2,] 2.602020e+05 6.305121e+04 2.405601e+04 1.340292e+05 1.706516e+05\n [3,] 6.897144e+07 2.785730e+08 1.647213e+06 2.128831e+08 1.861694e+05\n [4,] 4.639234e+10 1.841749e+11 6.091226e+08 9.247132e+09 4.771041e+11\n [5,] 2.117464e+14 6.174850e+11 6.994367e+09 7.210036e+08 3.063984e+10\n [6,] 6.877267e+14 1.741079e+16 4.220931e+17 2.021682e+17 1.326033e+17\n [7,] 6.298770e+20 1.871584e+20 1.416508e+14 3.520462e+16 1.855003e+20\n [8,] 3.066551e+21 4.514472e+09 2.639888e+21 3.088627e+20 4.442153e+21\n [9,] 8.796043e+15 8.733359e+21 4.889912e+25 7.196126e+26 4.319660e+24\n[10,] 2.244894e+28 9.425421e+29 4.841169e+24 1.016602e+21 5.207264e+27\n              [,6]         [,7]         [,8]         [,9]\n [1,] 4.581000e+02 4.171000e+02 7.441000e+02 2.461000e+02\n [2,] 1.665456e+05 2.431476e+05 6.869641e+04 6.195264e+05\n [3,] 3.035999e+08 8.332376e+05 1.052209e+08 5.699290e+08\n [4,] 2.414749e+07 1.694894e+08 1.200361e+06 1.839587e+09\n [5,] 2.086724e+07 1.253282e+14 1.547195e+12 7.620425e+14\n [6,] 3.397281e+16 2.218946e+16 3.291235e+16 5.212489e+17\n [7,] 1.104332e+17 1.192433e+17 2.350182e+17 7.851667e+17\n [8,] 1.613396e+23 2.832675e+19 3.066551e+21 1.919589e+22\n [9,] 6.909162e+25 3.904105e+23 6.825931e+25 1.107529e+26\n[10,] 2.579384e+17 3.490661e+29 3.811258e+26 3.052240e+29\n\n, , 8\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 2.961000e+02 8.611000e+02 6.721000e+02 3.141000e+02 9.251000e+02\n [2,] 3.092472e+05 8.301032e+05 1.673628e+05 6.610041e+04 2.622464e+05\n [3,] 9.101349e+08 5.102739e+08 2.489769e+08 2.930346e+06 7.900881e+07\n [4,] 5.124916e+11 2.387878e+10 4.567711e+11 1.910155e+11 3.265611e+10\n [5,] 1.159976e+13 1.433734e+14 9.544375e+13 3.128126e+13 4.617518e+12\n [6,] 3.768166e+13 6.991688e+17 5.341719e+15           NA 2.005900e+17\n [7,] 8.250562e+09 3.002933e+20 4.533175e+14 1.981459e+19 2.678611e+18\n [8,] 9.965720e+21 6.361139e+18 3.112692e+22 1.891804e+23 2.853686e+22\n [9,] 2.241441e+23 3.719601e+24 3.837467e+25 2.111605e+21 8.736206e+26\n[10,] 1.136811e+28 2.086110e+28 1.289662e+27 5.477666e+27 4.799014e+28\n              [,6]         [,7]         [,8]         [,9]\n [1,] 9.941000e+02 2.181000e+02 7.711000e+02 5.851000e+02\n [2,] 7.816328e+05 1.879641e+04 7.745760e+05 3.649368e+05\n [3,] 2.727090e+04 4.443696e+08 7.840325e+08 9.803595e+07\n [4,] 1.384584e+03 9.152359e+11 1.006134e+09 4.304672e+03\n [5,] 1.277617e+13 5.650250e+14 1.685058e+05 2.103062e+14\n [6,] 1.013155e+13 4.726711e+14 9.983097e+16 9.886540e+17\n [7,] 2.737894e+19 7.569439e+13 7.522225e+12 7.034992e+13\n [8,] 8.528910e+03 3.836204e+20 1.249930e+23 2.058794e+20\n [9,] 3.398961e+20 1.606772e+21 4.575032e+21 1.022987e+16\n[10,] 1.671770e+26 6.125021e+24 1.555884e+26 1.378716e+26\n\nbc.d(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE    NA FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE    NA FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.d(x, y, \"!=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE   NA TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE   NA TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.d(x, y, \"&lt;\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE    NA FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE    NA FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.d(x, y, \"&gt;\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE   NA TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5]  [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE   NA TRUE  TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n\nbc.d(x, y, \"&lt;=\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE    NA FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE    NA FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.d(x, y, \"&gt;=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE   NA TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5]  [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE   NA TRUE  TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE"
  },
  {
    "objectID": "man/outer/bc.d.html#broadcasted-decimal-numeric-operations",
    "href": "man/outer/bc.d.html#broadcasted-decimal-numeric-operations",
    "title": "bc.d",
    "section": "",
    "text": "The bc.d() function performs broadcasted decimal numeric operations on 2 numeric or logical arrays.  bc.num() is an alias for bc.d().  \n\n\n\nbc.d(x, y, op, prec = sqrt(.Machine\\$double.eps))\n\nbc.num(x, y, op, prec = sqrt(.Machine\\$double.eps))\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable logical or numeric arrays.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported arithmetic operators: +, -, *, /, ^, pmin, pmax.  Supported relational operators: ==, !=, &lt;, &gt;, &lt;=, &gt;=, d==, d!=, d&lt;, d&gt;, d&lt;=, d&gt;=. \n\n\n\n\nprec\n\n\na single number between 0 and 0.1, giving the machine precision to use.  Only relevant for the following operators:  d==, d!=, d&lt;, d&gt;, d&lt;=, d&gt;=  See the d==, d!=, d&lt;, d&gt;, d&lt;=, d&gt;= operators from the ‘tinycodet’ package for details. \n\n\n\n\n\n\n\nFor arithmetic operators:  A numeric array as a result of the broadcasted decimal arithmetic operation.   For relational operators:  A logical array as a result of the broadcasted decimal relational comparison.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(NA, 1.1:1000.1), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\nbc.d(x, y, \"+\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 661.1 172.1  14.1 492.1 504.1 838.1 379.1 991.1 838.1\n [2,]  13.1 143.1 386.1 243.1 737.1 667.1  92.1 604.1 106.1\n [3,] 398.1 237.1 710.1 926.1 519.1 486.1  35.1 754.1 917.1\n [4,] 605.1  27.1 477.1 133.1 408.1 162.1 275.1 258.1 880.1\n [5,] 166.1 885.1 305.1 207.1 343.1 709.1 854.1 366.1 363.1\n [6,] 599.1  79.1 755.1 842.1  97.1 971.1 148.1 921.1 269.1\n [7,] 471.1 650.1 329.1 235.1 558.1 290.1 341.1  83.1 120.1\n [8,] 108.1 853.1 850.1 952.1 968.1 142.1 709.1  31.1 246.1\n [9,]  59.1 254.1  75.1  53.1 671.1 290.1 128.1 599.1 313.1\n[10,]  46.1 748.1 464.1 920.1 745.1 228.1 587.1 766.1 827.1\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 144.1 509.1 325.1 522.1 798.1 175.1 293.1 974.1 485.1\n [2,] 232.1 738.1 856.1  95.1 210.1 766.1 661.1 596.1 698.1\n [3,] 418.1 177.1 358.1 794.1 748.1 259.1 229.1 171.1 369.1\n [4,] 235.1 160.1 914.1 981.1    NA 977.1 775.1 956.1 374.1\n [5,] 755.1 347.1 737.1 509.1 448.1 276.1 420.1 790.1  39.1\n [6,]  66.1 887.1 948.1 461.1 470.1 867.1 653.1 743.1 489.1\n [7,] 871.1 848.1 995.1 840.1 193.1 114.1  93.1 509.1 294.1\n [8,] 316.1 329.1 273.1 824.1 436.1 542.1 586.1 208.1 599.1\n [9,] 884.1 786.1 991.1 539.1 929.1 352.1  65.1 650.1 761.1\n[10,] 771.1 287.1 477.1 728.1 493.1 276.1 751.1  25.1  59.1\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]   [,5]   [,6]  [,7]  [,8]  [,9]\n [1,] 413.1 109.1 587.1 113.1  405.1  661.1 620.1 501.1 303.1\n [2,] 902.1 777.1 538.1 931.1  268.1  488.1 426.1 386.1 181.1\n [3,] 193.1 484.1 664.1 318.1  737.1  227.1 651.1 236.1 832.1\n [4,]  70.1 746.1 905.1  79.1  172.1  262.1 385.1 660.1 238.1\n [5,] 268.1 603.1 510.1 897.1  867.1  896.1 388.1 977.1 919.1\n [6,] 393.1  48.1 623.1 529.1   37.1  440.1 698.1 567.1 822.1\n [7,] 784.1 882.1 796.1 717.1  726.1  517.1  19.1 997.1 894.1\n [8,] 624.1  97.1 642.1 356.1  237.1  225.1 568.1 230.1 683.1\n [9,] 930.1 496.1 114.1 282.1 1008.1 1006.1 998.1  92.1 339.1\n[10,]  74.1 700.1 297.1 172.1  161.1  381.1 609.1 153.1 147.1\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]   [,9]\n [1,] 378.1 195.1  95.1 830.1 277.1 691.1 370.1 998.1  376.1\n [2,]  28.1 412.1 647.1 565.1 241.1 723.1  84.1 262.1  376.1\n [3,] 513.1 446.1 291.1  78.1 905.1 800.1 840.1 124.1   94.1\n [4,] 794.1 103.1 514.1 153.1 532.1 158.1 483.1 508.1  904.1\n [5,] 481.1 833.1 426.1 378.1 381.1 720.1 837.1  60.1  182.1\n [6,] 649.1 245.1 257.1  17.1 292.1 497.1 933.1 267.1   84.1\n [7,] 174.1 411.1 207.1 267.1 697.1 784.1 116.1 451.1 1003.1\n [8,] 432.1 471.1 558.1 229.1 162.1 992.1 523.1 997.1  254.1\n [9,] 789.1 797.1 537.1 644.1 883.1 817.1 347.1 451.1  580.1\n[10,] 644.1 844.1 358.1 875.1 848.1 930.1 916.1 710.1  160.1\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]   [,6]  [,7]  [,8]  [,9]\n [1,]  81.1 454.1 849.1 480.1 778.1  806.1 651.1 632.1 792.1\n [2,] 726.1 415.1 838.1 428.1 274.1  979.1 841.1 522.1   4.1\n [3,] 188.1 876.1 250.1 686.1 244.1 1001.1 696.1 469.1 628.1\n [4,] 269.1  68.1 419.1 584.1 607.1  254.1 880.1 780.1  77.1\n [5,] 168.1 781.1 923.1 336.1 106.1  650.1 202.1 312.1 871.1\n [6,] 465.1 319.1 886.1  38.1 668.1  417.1 910.1 694.1 543.1\n [7,] 619.1 718.1 415.1 922.1 620.1  543.1 336.1 623.1 703.1\n [8,] 724.1 970.1 193.1 942.1 160.1  739.1 339.1 278.1 487.1\n [9,] 813.1 327.1 419.1 295.1 897.1  539.1 139.1 459.1 983.1\n[10,] 812.1 724.1 765.1 150.1 666.1  317.1 816.1 563.1  51.1\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 487.1 145.1 384.1 691.1 971.1 545.1 722.1 585.1 114.1\n [2,] 388.1 466.1 835.1 536.1 197.1 719.1 682.1 496.1 208.1\n [3,] 391.1 426.1 300.1 747.1 721.1 571.1  93.1 854.1 412.1\n [4,] 921.1 268.1 942.1 392.1 444.1 970.1 793.1 276.1 547.1\n [5,] 401.1  24.1 248.1 269.1 613.1 140.1 636.1  66.1 717.1\n [6,]  73.1 931.1 663.1 685.1 761.1 304.1  66.1 203.1 346.1\n [7,] 632.1 881.1 873.1 745.1 759.1 381.1  23.1 623.1 798.1\n [8,] 366.1 824.1 839.1 787.1 737.1 924.1  89.1 258.1 344.1\n [9,] 467.1 550.1 782.1 587.1 494.1 881.1 543.1  34.1  42.1\n[10,] 427.1 835.1 173.1 153.1 132.1 241.1 502.1 568.1 921.1\n\n, , 7\n\n       [,1]   [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 266.1  476.1 529.1 268.1 480.1 459.1 418.1 745.1 247.1\n [2,] 512.1  253.1 157.1 368.1 415.1 410.1 495.1 264.1 789.1\n [3,] 413.1  656.1 121.1 600.1  60.1 675.1  97.1 475.1 832.1\n [4,] 468.1  659.1 161.1 314.1 835.1  74.1 118.1  37.1 211.1\n [5,] 738.1  233.1  98.1  64.1 130.1  34.1 665.1 279.1 952.1\n [6,] 303.1  515.1 872.1 772.1 720.1 575.1 536.1 572.1 903.1\n [7,] 943.1  794.1 112.1 238.1 793.1 279.1 282.1 310.1 367.1\n [8,] 493.1   24.1 484.1 372.1 516.1 804.1 278.1 493.1 618.1\n [9,]  68.1  283.1 724.1 973.1 555.1 752.1 427.1 751.1 792.1\n[10,] 694.1 1004.1 304.1 136.1 601.1  65.1 910.1 465.1 898.1\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]   [,9]\n [1,] 297.1 862.1 673.1 315.1 926.1 995.1 219.1 772.1  586.1\n [2,] 558.1 913.1 411.1 259.1 514.1 886.1 139.1 882.1  606.1\n [3,] 972.1 802.1 632.1 146.1 432.1  33.1 766.1 925.1  464.1\n [4,] 850.1 397.1 826.1 665.1 429.1  10.1 982.1 182.1   12.1\n [5,] 415.1 683.1 630.1 505.1 346.1 423.1 897.1  16.1  737.1\n [6,] 189.1 948.1 424.1    NA 771.1 153.1 285.1 687.1 1004.1\n [7,]  33.1 849.1 131.1 578.1 436.1 605.1 103.1  76.1  102.1\n [8,] 570.1 232.1 656.1 820.1 649.1  11.1 382.1 779.1  354.1\n [9,] 402.1 546.1 705.1 243.1 994.1 200.1 236.1 264.1   69.1\n[10,] 649.1 689.1 524.1 604.1 748.1 429.1 311.1 426.1  421.1\n\nbc.d(x, y, \"-\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 659.1 170.1  12.1 490.1 502.1 836.1 377.1 989.1 836.1\n [2,]   9.1 139.1 382.1 239.1 733.1 663.1  88.1 600.1 102.1\n [3,] 392.1 231.1 704.1 920.1 513.1 480.1  29.1 748.1 911.1\n [4,] 597.1  19.1 469.1 125.1 400.1 154.1 267.1 250.1 872.1\n [5,] 156.1 875.1 295.1 197.1 333.1 699.1 844.1 356.1 353.1\n [6,] 587.1  67.1 743.1 830.1  85.1 959.1 136.1 909.1 257.1\n [7,] 457.1 636.1 315.1 221.1 544.1 276.1 327.1  69.1 106.1\n [8,]  92.1 837.1 834.1 936.1 952.1 126.1 693.1  15.1 230.1\n [9,]  41.1 236.1  57.1  35.1 653.1 272.1 110.1 581.1 295.1\n[10,]  26.1 728.1 444.1 900.1 725.1 208.1 567.1 746.1 807.1\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 142.1 507.1 323.1 520.1 796.1 173.1 291.1 972.1 483.1\n [2,] 228.1 734.1 852.1  91.1 206.1 762.1 657.1 592.1 694.1\n [3,] 412.1 171.1 352.1 788.1 742.1 253.1 223.1 165.1 363.1\n [4,] 227.1 152.1 906.1 973.1    NA 969.1 767.1 948.1 366.1\n [5,] 745.1 337.1 727.1 499.1 438.1 266.1 410.1 780.1  29.1\n [6,]  54.1 875.1 936.1 449.1 458.1 855.1 641.1 731.1 477.1\n [7,] 857.1 834.1 981.1 826.1 179.1 100.1  79.1 495.1 280.1\n [8,] 300.1 313.1 257.1 808.1 420.1 526.1 570.1 192.1 583.1\n [9,] 866.1 768.1 973.1 521.1 911.1 334.1  47.1 632.1 743.1\n[10,] 751.1 267.1 457.1 708.1 473.1 256.1 731.1   5.1  39.1\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 411.1 107.1 585.1 111.1 403.1 659.1 618.1 499.1 301.1\n [2,] 898.1 773.1 534.1 927.1 264.1 484.1 422.1 382.1 177.1\n [3,] 187.1 478.1 658.1 312.1 731.1 221.1 645.1 230.1 826.1\n [4,]  62.1 738.1 897.1  71.1 164.1 254.1 377.1 652.1 230.1\n [5,] 258.1 593.1 500.1 887.1 857.1 886.1 378.1 967.1 909.1\n [6,] 381.1  36.1 611.1 517.1  25.1 428.1 686.1 555.1 810.1\n [7,] 770.1 868.1 782.1 703.1 712.1 503.1   5.1 983.1 880.1\n [8,] 608.1  81.1 626.1 340.1 221.1 209.1 552.1 214.1 667.1\n [9,] 912.1 478.1  96.1 264.1 990.1 988.1 980.1  74.1 321.1\n[10,]  54.1 680.1 277.1 152.1 141.1 361.1 589.1 133.1 127.1\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 376.1 193.1  93.1 828.1 275.1 689.1 368.1 996.1 374.1\n [2,]  24.1 408.1 643.1 561.1 237.1 719.1  80.1 258.1 372.1\n [3,] 507.1 440.1 285.1  72.1 899.1 794.1 834.1 118.1  88.1\n [4,] 786.1  95.1 506.1 145.1 524.1 150.1 475.1 500.1 896.1\n [5,] 471.1 823.1 416.1 368.1 371.1 710.1 827.1  50.1 172.1\n [6,] 637.1 233.1 245.1   5.1 280.1 485.1 921.1 255.1  72.1\n [7,] 160.1 397.1 193.1 253.1 683.1 770.1 102.1 437.1 989.1\n [8,] 416.1 455.1 542.1 213.1 146.1 976.1 507.1 981.1 238.1\n [9,] 771.1 779.1 519.1 626.1 865.1 799.1 329.1 433.1 562.1\n[10,] 624.1 824.1 338.1 855.1 828.1 910.1 896.1 690.1 140.1\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  79.1 452.1 847.1 478.1 776.1 804.1 649.1 630.1 790.1\n [2,] 722.1 411.1 834.1 424.1 270.1 975.1 837.1 518.1   0.1\n [3,] 182.1 870.1 244.1 680.1 238.1 995.1 690.1 463.1 622.1\n [4,] 261.1  60.1 411.1 576.1 599.1 246.1 872.1 772.1  69.1\n [5,] 158.1 771.1 913.1 326.1  96.1 640.1 192.1 302.1 861.1\n [6,] 453.1 307.1 874.1  26.1 656.1 405.1 898.1 682.1 531.1\n [7,] 605.1 704.1 401.1 908.1 606.1 529.1 322.1 609.1 689.1\n [8,] 708.1 954.1 177.1 926.1 144.1 723.1 323.1 262.1 471.1\n [9,] 795.1 309.1 401.1 277.1 879.1 521.1 121.1 441.1 965.1\n[10,] 792.1 704.1 745.1 130.1 646.1 297.1 796.1 543.1  31.1\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 485.1 143.1 382.1 689.1 969.1 543.1 720.1 583.1 112.1\n [2,] 384.1 462.1 831.1 532.1 193.1 715.1 678.1 492.1 204.1\n [3,] 385.1 420.1 294.1 741.1 715.1 565.1  87.1 848.1 406.1\n [4,] 913.1 260.1 934.1 384.1 436.1 962.1 785.1 268.1 539.1\n [5,] 391.1  14.1 238.1 259.1 603.1 130.1 626.1  56.1 707.1\n [6,]  61.1 919.1 651.1 673.1 749.1 292.1  54.1 191.1 334.1\n [7,] 618.1 867.1 859.1 731.1 745.1 367.1   9.1 609.1 784.1\n [8,] 350.1 808.1 823.1 771.1 721.1 908.1  73.1 242.1 328.1\n [9,] 449.1 532.1 764.1 569.1 476.1 863.1 525.1  16.1  24.1\n[10,] 407.1 815.1 153.1 133.1 112.1 221.1 482.1 548.1 901.1\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 264.1 474.1 527.1 266.1 478.1 457.1 416.1 743.1 245.1\n [2,] 508.1 249.1 153.1 364.1 411.1 406.1 491.1 260.1 785.1\n [3,] 407.1 650.1 115.1 594.1  54.1 669.1  91.1 469.1 826.1\n [4,] 460.1 651.1 153.1 306.1 827.1  66.1 110.1  29.1 203.1\n [5,] 728.1 223.1  88.1  54.1 120.1  24.1 655.1 269.1 942.1\n [6,] 291.1 503.1 860.1 760.1 708.1 563.1 524.1 560.1 891.1\n [7,] 929.1 780.1  98.1 224.1 779.1 265.1 268.1 296.1 353.1\n [8,] 477.1   8.1 468.1 356.1 500.1 788.1 262.1 477.1 602.1\n [9,]  50.1 265.1 706.1 955.1 537.1 734.1 409.1 733.1 774.1\n[10,] 674.1 984.1 284.1 116.1 581.1  45.1 890.1 445.1 878.1\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 295.1 860.1 671.1 313.1 924.1 993.1 217.1 770.1 584.1\n [2,] 554.1 909.1 407.1 255.1 510.1 882.1 135.1 878.1 602.1\n [3,] 966.1 796.1 626.1 140.1 426.1  27.1 760.1 919.1 458.1\n [4,] 842.1 389.1 818.1 657.1 421.1   2.1 974.1 174.1   4.1\n [5,] 405.1 673.1 620.1 495.1 336.1 413.1 887.1   6.1 727.1\n [6,] 177.1 936.1 412.1    NA 759.1 141.1 273.1 675.1 992.1\n [7,]  19.1 835.1 117.1 564.1 422.1 591.1  89.1  62.1  88.1\n [8,] 554.1 216.1 640.1 804.1 633.1  -4.9 366.1 763.1 338.1\n [9,] 384.1 528.1 687.1 225.1 976.1 182.1 218.1 246.1  51.1\n[10,] 629.1 669.1 504.1 584.1 728.1 409.1 291.1 406.1 401.1\n\nbc.d(x, y, \"*\")\n\n, , 1\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  660.1  171.1   13.1  491.1  503.1  837.1  378.1  990.1  837.1\n [2,]   22.2  282.2  768.2  482.2 1470.2 1330.2  180.2 1204.2  208.2\n [3,] 1185.3  702.3 2121.3 2769.3 1548.3 1449.3   96.3 2253.3 2742.3\n [4,] 2404.4   92.4 1892.4  516.4 1616.4  632.4 1084.4 1016.4 3504.4\n [5,]  805.5 4400.5 1500.5 1010.5 1690.5 3520.5 4245.5 1805.5 1790.5\n [6,] 3558.6  438.6 4494.6 5016.6  546.6 5790.6  852.6 5490.6 1578.6\n [7,] 3248.7 4501.7 2254.7 1596.7 3857.7 1981.7 2338.7  532.7  791.7\n [8,]  800.8 6760.8 6736.8 7552.8 7680.8 1072.8 5608.8  184.8 1904.8\n [9,]  450.9 2205.9  594.9  396.9 5958.9 2529.9 1071.9 5310.9 2736.9\n[10,]  361.0 7381.0 4541.0 9101.0 7351.0 2181.0 5771.0 7561.0 8171.0\n\n, , 2\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  143.1  508.1  324.1  521.1  797.1  174.1  292.1  973.1  484.1\n [2,]  460.2 1472.2 1708.2  186.2  416.2 1528.2 1318.2 1188.2 1392.2\n [3,] 1245.3  522.3 1065.3 2373.3 2235.3  768.3  678.3  504.3 1098.3\n [4,]  924.4  624.4 3640.4 3908.4     NA 3892.4 3084.4 3808.4 1480.4\n [5,] 3750.5 1710.5 3660.5 2520.5 2215.5 1355.5 2075.5 3925.5  170.5\n [6,]  360.6 5286.6 5652.6 2730.6 2784.6 5166.6 3882.6 4422.6 2898.6\n [7,] 6048.7 5887.7 6916.7 5831.7 1302.7  749.7  602.7 3514.7 2009.7\n [8,] 2464.8 2568.8 2120.8 6528.8 3424.8 4272.8 4624.8 1600.8 4728.8\n [9,] 7875.9 6993.9 8838.9 4770.9 8280.9 3087.9  504.9 5769.9 6768.9\n[10,] 7611.0 2771.0 4671.0 7181.0 4831.0 2661.0 7411.0  151.0  491.0\n\n, , 3\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  412.1  108.1  586.1  112.1  404.1  660.1  619.1  500.1  302.1\n [2,] 1800.2 1550.2 1072.2 1858.2  532.2  972.2  848.2  768.2  358.2\n [3,]  570.3 1443.3 1983.3  945.3 2202.3  672.3 1944.3  699.3 2487.3\n [4,]  264.4 2968.4 3604.4  300.4  672.4 1032.4 1524.4 2624.4  936.4\n [5,] 1315.5 2990.5 2525.5 4460.5 4310.5 4455.5 1915.5 4860.5 4570.5\n [6,] 2322.6  252.6 3702.6 3138.6  186.6 2604.6 4152.6 3366.6 4896.6\n [7,] 5439.7 6125.7 5523.7 4970.7 5033.7 3570.7   84.7 6930.7 6209.7\n [8,] 4928.8  712.8 5072.8 2784.8 1832.8 1736.8 4480.8 1776.8 5400.8\n [9,] 8289.9 4383.9  945.9 2457.9 8991.9 8973.9 8901.9  747.9 2970.9\n[10,]  641.0 6901.0 2871.0 1621.0 1511.0 3711.0 5991.0 1431.0 1371.0\n\n, , 4\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  377.1  194.1   94.1  829.1  276.1  690.1  369.1  997.1  375.1\n [2,]   52.2  820.2 1290.2 1126.2  478.2 1442.2  164.2  520.2  748.2\n [3,] 1530.3 1329.3  864.3  225.3 2706.3 2391.3 2511.3  363.3  273.3\n [4,] 3160.4  396.4 2040.4  596.4 2112.4  616.4 1916.4 2016.4 3600.4\n [5,] 2380.5 4140.5 2105.5 1865.5 1880.5 3575.5 4160.5  275.5  885.5\n [6,] 3858.6 1434.6 1506.6   66.6 1716.6 2946.6 5562.6 1566.6  468.6\n [7,] 1169.7 2828.7 1400.7 1820.7 4830.7 5439.7  763.7 3108.7 6972.7\n [8,] 3392.8 3704.8 4400.8 1768.8 1232.8 7872.8 4120.8 7912.8 1968.8\n [9,] 7020.9 7092.9 4752.9 5715.9 7866.9 7272.9 3042.9 3978.9 5139.9\n[10,] 6341.0 8341.0 3481.0 8651.0 8381.0 9201.0 9061.0 7001.0 1501.0\n\n, , 5\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]   80.1  453.1  848.1  479.1  777.1  805.1  650.1  631.1  791.1\n [2,] 1448.2  826.2 1672.2  852.2  544.2 1954.2 1678.2 1040.2    4.2\n [3,]  555.3 2619.3  741.3 2049.3  723.3 2994.3 2079.3 1398.3 1875.3\n [4,] 1060.4  256.4 1660.4 2320.4 2412.4 1000.4 3504.4 3104.4  292.4\n [5,]  815.5 3880.5 4590.5 1655.5  505.5 3225.5  985.5 1535.5 4330.5\n [6,] 2754.6 1878.6 5280.6  192.6 3972.6 2466.6 5424.6 4128.6 3222.6\n [7,] 4284.7 4977.7 2856.7 6405.7 4291.7 3752.7 2303.7 4312.7 4872.7\n [8,] 5728.8 7696.8 1480.8 7472.8 1216.8 5848.8 2648.8 2160.8 3832.8\n [9,] 7236.9 2862.9 3690.9 2574.9 7992.9 4770.9 1170.9 4050.9 8766.9\n[10,] 8021.0 7141.0 7551.0 1401.0 6561.0 3071.0 8061.0 5531.0  411.0\n\n, , 6\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  486.1  144.1  383.1  690.1  970.1  544.1  721.1  584.1  113.1\n [2,]  772.2  928.2 1666.2 1068.2  390.2 1434.2 1360.2  988.2  412.2\n [3,] 1164.3 1269.3  891.3 2232.3 2154.3 1704.3  270.3 2553.3 1227.3\n [4,] 3668.4 1056.4 3752.4 1552.4 1760.4 3864.4 3156.4 1088.4 2172.4\n [5,] 1980.5   95.5 1215.5 1320.5 3040.5  675.5 3155.5  305.5 3560.5\n [6,]  402.6 5550.6 3942.6 4074.6 4530.6 1788.6  360.6 1182.6 2040.6\n [7,] 4375.7 6118.7 6062.7 5166.7 5264.7 2618.7  112.7 4312.7 5537.7\n [8,] 2864.8 6528.8 6648.8 6232.8 5832.8 7328.8  648.8 2000.8 2688.8\n [9,] 4122.9 4869.9 6957.9 5202.9 4365.9 7848.9 4806.9  225.9  297.9\n[10,] 4171.0 8251.0 1631.0 1431.0 1221.0 2311.0 4921.0 5581.0 9111.0\n\n, , 7\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  265.1  475.1  528.1  267.1  479.1  458.1  417.1  744.1  246.1\n [2,] 1020.2  502.2  310.2  732.2  826.2  816.2  986.2  524.2 1574.2\n [3,] 1230.3 1959.3  354.3 1791.3  171.3 2016.3  282.3 1416.3 2487.3\n [4,] 1856.4 2620.4  628.4 1240.4 3324.4  280.4  456.4  132.4  828.4\n [5,] 3665.5 1140.5  465.5  295.5  625.5  145.5 3300.5 1370.5 4735.5\n [6,] 1782.6 3054.6 5196.6 4596.6 4284.6 3414.6 3180.6 3396.6 5382.6\n [7,] 6552.7 5509.7  735.7 1617.7 5502.7 1904.7 1925.7 2121.7 2520.7\n [8,] 3880.8  128.8 3808.8 2912.8 4064.8 6368.8 2160.8 3880.8 4880.8\n [9,]  531.9 2466.9 6435.9 8676.9 4914.9 6687.9 3762.9 6678.9 7047.9\n[10,] 6841.0 9941.0 2941.0 1261.0 5911.0  551.0 9001.0 4551.0 8881.0\n\n, , 8\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  296.1  861.1  672.1  314.1  925.1  994.1  218.1  771.1  585.1\n [2,] 1112.2 1822.2  818.2  514.2 1024.2 1768.2  274.2 1760.2 1208.2\n [3,] 2907.3 2397.3 1887.3  429.3 1287.3   90.3 2289.3 2766.3 1383.3\n [4,] 3384.4 1572.4 3288.4 2644.4 1700.4   24.4 3912.4  712.4   32.4\n [5,] 2050.5 3390.5 3125.5 2500.5 1705.5 2090.5 4460.5   55.5 3660.5\n [6,] 1098.6 5652.6 2508.6     NA 4590.6  882.6 1674.6 4086.6 5988.6\n [7,]  182.7 5894.7  868.7 3997.7 3003.7 4186.7  672.7  483.7  665.7\n [8,] 4496.8 1792.8 5184.8 6496.8 5128.8   24.8 2992.8 6168.8 2768.8\n [9,] 3537.9 4833.9 6264.9 2106.9 8865.9 1719.9 2043.9 2295.9  540.9\n[10,] 6391.0 6791.0 5141.0 5941.0 7381.0 4191.0 3011.0 4161.0 4111.0\n\nbc.d(x, y, \"/\")\n\n, , 1\n\n            [,1]      [,2]       [,3]      [,4]      [,5]      [,6]      [,7]\n [1,] 660.100000 171.10000  13.100000 491.10000 503.10000 837.10000 378.10000\n [2,]   5.550000  70.55000 192.050000 120.55000 367.55000 332.55000  45.05000\n [3,] 131.700000  78.03333 235.700000 307.70000 172.03333 161.03333  10.70000\n [4,] 150.275000   5.77500 118.275000  32.27500 101.02500  39.52500  67.77500\n [5,]  32.220000 176.02000  60.020000  40.42000  67.62000 140.82000 169.82000\n [6,]  98.850000  12.18333 124.850000 139.35000  15.18333 160.85000  23.68333\n [7,]  66.300000  91.87143  46.014286  32.58571  78.72857  40.44286  47.72857\n [8,]  12.512500 105.63750 105.262500 118.01250 120.01250  16.76250  87.63750\n [9,]   5.566667  27.23333   7.344444   4.90000  73.56667  31.23333  13.23333\n[10,]   3.610000  73.81000  45.410000  91.01000  73.51000  21.81000  57.71000\n           [,8]      [,9]\n [1,] 990.10000 837.10000\n [2,] 301.05000  52.05000\n [3,] 250.36667 304.70000\n [4,]  63.52500 219.02500\n [5,]  72.22000  71.62000\n [6,] 152.51667  43.85000\n [7,]  10.87143  16.15714\n [8,]   2.88750  29.76250\n [9,]  65.56667  33.78889\n[10,]  75.61000  81.71000\n\n, , 2\n\n           [,1]      [,2]     [,3]     [,4]      [,5]      [,6]       [,7]\n [1,] 143.10000 508.10000 324.1000 521.1000 797.10000 174.10000 292.100000\n [2,] 115.05000 368.05000 427.0500  46.5500 104.05000 382.05000 329.550000\n [3,] 138.36667  58.03333 118.3667 263.7000 248.36667  85.36667  75.366667\n [4,]  57.77500  39.02500 227.5250 244.2750        NA 243.27500 192.775000\n [5,] 150.02000  68.42000 146.4200 100.8200  88.62000  54.22000  83.020000\n [6,]  10.01667 146.85000 157.0167  75.8500  77.35000 143.51667 107.850000\n [7,] 123.44286 120.15714 141.1571 119.0143  26.58571  15.30000  12.300000\n [8,]  38.51250  40.13750  33.1375 102.0125  53.51250  66.76250  72.262500\n [9,]  97.23333  86.34444 109.1222  58.9000 102.23333  38.12222   6.233333\n[10,]  76.11000  27.71000  46.7100  71.8100  48.31000  26.61000  74.110000\n           [,8]      [,9]\n [1,] 973.10000 484.10000\n [2,] 297.05000 348.05000\n [3,]  56.03333 122.03333\n [4,] 238.02500  92.52500\n [5,] 157.02000   6.82000\n [6,] 122.85000  80.51667\n [7,]  71.72857  41.01429\n [8,]  25.01250  73.88750\n [9,]  71.23333  83.56667\n[10,]   1.51000   4.91000\n\n, , 3\n\n           [,1]       [,2]      [,3]      [,4]       [,5]      [,6]       [,7]\n [1,] 412.10000 108.100000 586.10000 112.10000 404.100000 660.10000 619.100000\n [2,] 450.05000 387.550000 268.05000 464.55000 133.050000 243.05000 212.050000\n [3,]  63.36667 160.366667 220.36667 105.03333 244.700000  74.70000 216.033333\n [4,]  16.52500 185.525000 225.27500  18.77500  42.025000  64.52500  95.275000\n [5,]  52.62000 119.620000 101.02000 178.42000 172.420000 178.22000  76.620000\n [6,]  64.51667   7.016667 102.85000  87.18333   5.183333  72.35000 115.350000\n [7,] 111.01429 125.014286 112.72857 101.44286 102.728571  72.87143   1.728571\n [8,]  77.01250  11.137500  79.26250  43.51250  28.637500  27.13750  70.012500\n [9,] 102.34444  54.122222  11.67778  30.34444 111.011111 110.78889 109.900000\n[10,]   6.41000  69.010000  28.71000  16.21000  15.110000  37.11000  59.910000\n            [,8]      [,9]\n [1,] 500.100000 302.10000\n [2,] 192.050000  89.55000\n [3,]  77.700000 276.36667\n [4,] 164.025000  58.52500\n [5,] 194.420000 182.82000\n [6,]  93.516667 136.01667\n [7,] 141.442857 126.72857\n [8,]  27.762500  84.38750\n [9,]   9.233333  36.67778\n[10,]  14.310000  13.71000\n\n, , 4\n\n           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]\n [1,] 377.10000 194.10000  94.10000 829.10000 276.10000 690.10000 369.10000\n [2,]  13.05000 205.05000 322.55000 281.55000 119.55000 360.55000  41.05000\n [3,] 170.03333 147.70000  96.03333  25.03333 300.70000 265.70000 279.03333\n [4,] 197.52500  24.77500 127.52500  37.27500 132.02500  38.52500 119.77500\n [5,]  95.22000 165.62000  84.22000  74.62000  75.22000 143.02000 166.42000\n [6,] 107.18333  39.85000  41.85000   1.85000  47.68333  81.85000 154.51667\n [7,]  23.87143  57.72857  28.58571  37.15714  98.58571 111.01429  15.58571\n [8,]  53.01250  57.88750  68.76250  27.63750  19.26250 123.01250  64.38750\n [9,]  86.67778  87.56667  58.67778  70.56667  97.12222  89.78889  37.56667\n[10,]  63.41000  83.41000  34.81000  86.51000  83.81000  92.01000  90.61000\n           [,8]      [,9]\n [1,] 997.10000 375.10000\n [2,] 130.05000 187.05000\n [3,]  40.36667  30.36667\n [4,] 126.02500 225.02500\n [5,]  11.02000  35.42000\n [6,]  43.51667  13.01667\n [7,]  63.44286 142.30000\n [8,] 123.63750  30.76250\n [9,]  49.12222  63.45556\n[10,]  70.01000  15.01000\n\n, , 5\n\n           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]\n [1,]  80.10000 453.10000 848.10000 479.10000 777.10000 805.10000 650.10000\n [2,] 362.05000 206.55000 418.05000 213.05000 136.05000 488.55000 419.55000\n [3,]  61.70000 291.03333  82.36667 227.70000  80.36667 332.70000 231.03333\n [4,]  66.27500  16.02500 103.77500 145.02500 150.77500  62.52500 219.02500\n [5,]  32.62000 155.22000 183.62000  66.22000  20.22000 129.02000  39.42000\n [6,]  76.51667  52.18333 146.68333   5.35000 110.35000  68.51667 150.68333\n [7,]  87.44286 101.58571  58.30000 130.72857  87.58571  76.58571  47.01429\n [8,]  89.51250 120.26250  23.13750 116.76250  19.01250  91.38750  41.38750\n [9,]  89.34444  35.34444  45.56667  31.78889  98.67778  58.90000  14.45556\n[10,]  80.21000  71.41000  75.51000  14.01000  65.61000  30.71000  80.61000\n           [,8]      [,9]\n [1,] 631.10000 791.10000\n [2,] 260.05000   1.05000\n [3,] 155.36667 208.36667\n [4,] 194.02500  18.27500\n [5,]  61.42000 173.22000\n [6,] 114.68333  89.51667\n [7,]  88.01429  99.44286\n [8,]  33.76250  59.88750\n [9,]  50.01111 108.23333\n[10,]  55.31000   4.11000\n\n, , 6\n\n           [,1]      [,2]      [,3]      [,4]     [,5]      [,6]      [,7]\n [1,] 486.10000 144.10000 383.10000 690.10000 970.1000 544.10000 721.10000\n [2,] 193.05000 232.05000 416.55000 267.05000  97.5500 358.55000 340.05000\n [3,] 129.36667 141.03333  99.03333 248.03333 239.3667 189.36667  30.03333\n [4,] 229.27500  66.02500 234.52500  97.02500 110.0250 241.52500 197.27500\n [5,]  79.22000   3.82000  48.62000  52.82000 121.6200  27.02000 126.22000\n [6,]  11.18333 154.18333 109.51667 113.18333 125.8500  49.68333  10.01667\n [7,]  89.30000 124.87143 123.72857 105.44286 107.4429  53.44286   2.30000\n [8,]  44.76250 102.01250 103.88750  97.38750  91.1375 114.51250  10.13750\n [9,]  50.90000  60.12222  85.90000  64.23333  53.9000  96.90000  59.34444\n[10,]  41.71000  82.51000  16.31000  14.31000  12.2100  23.11000  49.21000\n            [,8]       [,9]\n [1,] 584.100000 113.100000\n [2,] 247.050000 103.050000\n [3,] 283.700000 136.366667\n [4,]  68.025000 135.775000\n [5,]  12.220000 142.420000\n [6,]  32.850000  56.683333\n [7,]  88.014286 113.014286\n [8,]  31.262500  42.012500\n [9,]   2.788889   3.677778\n[10,]  55.810000  91.110000\n\n, , 7\n\n            [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]\n [1,] 265.100000 475.10000 528.10000 267.10000 479.10000 458.10000 417.10000\n [2,] 255.050000 125.55000  77.55000 183.05000 206.55000 204.05000 246.55000\n [3,] 136.700000 217.70000  39.36667 199.03333  19.03333 224.03333  31.36667\n [4,] 116.025000 163.77500  39.27500  77.52500 207.77500  17.52500  28.52500\n [5,] 146.620000  45.62000  18.62000  11.82000  25.02000   5.82000 132.02000\n [6,]  49.516667  84.85000 144.35000 127.68333 119.01667  94.85000  88.35000\n [7,] 133.728571 112.44286  15.01429  33.01429 112.30000  38.87143  39.30000\n [8,]  60.637500   2.01250  59.51250  45.51250  63.51250  99.51250  33.76250\n [9,]   6.566667  30.45556  79.45556 107.12222  60.67778  82.56667  46.45556\n[10,]  68.410000  99.41000  29.41000  12.61000  59.11000   5.51000  90.01000\n           [,8]      [,9]\n [1,] 744.10000 246.10000\n [2,] 131.05000 393.55000\n [3,] 157.36667 276.36667\n [4,]   8.27500  51.77500\n [5,]  54.82000 189.42000\n [6,]  94.35000 149.51667\n [7,]  43.30000  51.44286\n [8,]  60.63750  76.26250\n [9,]  82.45556  87.01111\n[10,]  45.51000  88.81000\n\n, , 8\n\n            [,1]      [,2]      [,3]      [,4]     [,5]      [,6]      [,7]\n [1,] 296.100000 861.10000 672.10000 314.10000 925.1000 994.10000 218.10000\n [2,] 278.050000 455.55000 204.55000 128.55000 256.0500 442.05000  68.55000\n [3,] 323.033333 266.36667 209.70000  47.70000 143.0333  10.03333 254.36667\n [4,] 211.525000  98.27500 205.52500 165.27500 106.2750   1.52500 244.52500\n [5,]  82.020000 135.62000 125.02000 100.02000  68.2200  83.62000 178.42000\n [6,]  30.516667 157.01667  69.68333        NA 127.5167  24.51667  46.51667\n [7,]   3.728571 120.30000  17.72857  81.58571  61.3000  85.44286  13.72857\n [8,]  70.262500  28.01250  81.01250 101.51250  80.1375   0.38750  46.76250\n [9,]  43.677778  59.67778  77.34444  26.01111 109.4556  21.23333  25.23333\n[10,]  63.910000  67.91000  51.41000  59.41000  73.8100  41.91000  30.11000\n            [,8]       [,9]\n [1,] 771.100000 585.100000\n [2,] 440.050000 302.050000\n [3,] 307.366667 153.700000\n [4,]  44.525000   2.025000\n [5,]   2.220000 146.420000\n [6,] 113.516667 166.350000\n [7,]   9.871429  13.585714\n [8,]  96.387500  43.262500\n [9,]  28.344444   6.677778\n[10,]  41.610000  41.110000\n\nbc.d(x, y, \"^\")\n\n, , 1\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 6.601000e+02 1.711000e+02 1.310000e+01 4.911000e+02 5.031000e+02\n [2,] 1.232100e+02 1.990921e+04 1.475328e+05 5.812921e+04 5.403720e+05\n [3,] 6.167669e+07 1.282934e+07 3.535432e+08 7.865861e+08 1.374680e+08\n [4,] 1.305530e+11 2.847396e+05 5.009701e+10 2.777826e+08 2.666585e+10\n [5,] 1.085120e+11 5.280318e+14 2.434053e+12 3.371565e+11 4.418001e+12\n [6,] 4.352788e+16 1.525823e+11 1.767009e+17 3.416248e+17 5.716237e+11\n [7,] 4.637469e+18 4.549352e+19 3.596956e+17 3.212750e+16 1.543878e+19\n [8,] 1.008028e+16 2.601746e+23 2.528770e+23 6.311666e+23 7.219910e+23\n [9,] 1.988564e+15 3.192198e+21 2.408869e+16 6.308808e+14 2.445188e+25\n[10,] 3.758997e+15 4.799014e+28 3.728336e+26 3.898443e+29 4.607488e+28\n              [,6]         [,7]         [,8]         [,9]\n [1,] 8.371000e+02 3.781000e+02 9.901000e+02 8.371000e+02\n [2,] 4.423580e+05 8.118010e+03 3.625244e+05 1.083681e+04\n [3,] 1.127486e+08 3.307616e+04 4.237340e+08 7.638026e+08\n [4,] 6.247805e+08 5.401546e+09 4.168873e+09 5.891349e+11\n [5,] 1.730500e+14 4.413613e+14 6.139563e+12 5.888729e+12\n [6,] 8.080419e+17 8.233120e+12 5.872342e+17 3.316844e+14\n [7,] 1.457401e+17 4.646600e+17 1.478062e+13 2.367218e+14\n [8,] 1.045756e+17 5.837673e+22 8.107666e+10 1.032940e+19\n [9,] 1.095841e+22 4.821763e+18 8.676220e+24 2.224067e+22\n[10,] 2.435323e+23 4.097422e+27 6.106500e+28 1.326637e+29\n\n, , 2\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 1.431000e+02 5.081000e+02 3.241000e+02 5.211000e+02 7.971000e+02\n [2,] 5.294601e+04 5.418432e+05 7.294868e+05 8.667610e+03 4.330561e+04\n [3,] 7.152505e+07 5.277112e+06 4.477669e+07 4.951014e+08 4.136602e+08\n [4,] 2.852330e+09 5.937609e+08 6.860511e+11 9.114987e+11           NA\n [5,] 2.374629e+14 4.685602e+12 2.103062e+14 3.255244e+13 1.708082e+13\n [6,] 4.712451e+10 4.678980e+17 6.991688e+17 8.884664e+15 9.992391e+15\n [7,] 3.597063e+20 2.978060e+20 9.196155e+20 2.785351e+20 7.730803e+15\n [8,] 8.119580e+19 1.130114e+20 2.439371e+19 1.967646e+23 1.128137e+21\n [9,] 3.009672e+26 1.033456e+26 8.499657e+26 3.305371e+24 4.726235e+26\n[10,] 6.522547e+28 2.669103e+24 4.944230e+26 3.646274e+28 6.924212e+26\n              [,6]         [,7]         [,8]         [,9]\n [1,] 1.741000e+02 2.921000e+02 9.731000e+02 4.841000e+02\n [2,] 5.838488e+05 4.344128e+05 3.529548e+05 4.845552e+05\n [3,] 1.679688e+07 1.155851e+07 4.750104e+06 4.906809e+07\n [4,] 8.966643e+11 3.535435e+11 8.217321e+11 1.876188e+10\n [5,] 1.464359e+12 1.232434e+13 2.982805e+14 4.610753e+07\n [6,] 4.076820e+17 7.342237e+16 1.603830e+17 1.271224e+16\n [7,] 1.616316e+14 3.507697e+13 8.045102e+18 1.607801e+17\n [8,] 6.621870e+21 1.247452e+22 2.570258e+18 1.490348e+22\n [9,] 6.588499e+22 5.503839e+15 1.829498e+25 7.699815e+25\n[10,] 1.780118e+24 4.997676e+28 6.162678e+11 8.143572e+16\n\n, , 3\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 4.121000e+02 1.081000e+02 5.861000e+02 1.121000e+02 4.041000e+02\n [2,] 8.101800e+05 6.007800e+05 2.874032e+05 8.632268e+05 7.080921e+04\n [3,] 6.869836e+06 1.113541e+08 2.889359e+08 3.128565e+07 3.956086e+08\n [4,] 1.909000e+07 3.032842e+11 6.593135e+11 3.180971e+07 7.984925e+08\n [5,] 1.260678e+12 7.653657e+13 3.287660e+13 5.650250e+14 4.761987e+14\n [6,] 3.364643e+15 5.567915e+09 5.522469e+16 2.048841e+16 9.048203e+08\n [7,] 1.711348e+20 3.930102e+20 1.905129e+20 9.104091e+19 9.943174e+19\n [8,] 2.075915e+22 3.972113e+15 2.613738e+22 2.155918e+20 7.589282e+18\n [9,] 4.772666e+26 1.543701e+24 1.564676e+18 8.450751e+21 9.919291e+26\n[10,] 1.171063e+18 2.449742e+28 3.804801e+24 1.252651e+22 6.203612e+21\n              [,6]         [,7]         [,8]         [,9]\n [1,] 6.601000e+02 6.191000e+02 5.001000e+02 3.021000e+02\n [2,] 2.362932e+05 1.798608e+05 1.475328e+05 3.207681e+04\n [3,] 1.125448e+07 2.722238e+08 1.266563e+07 5.699290e+08\n [4,] 4.437639e+09 2.109385e+10 1.853020e+11 3.003348e+09\n [5,] 5.618653e+14 8.252029e+12 8.680699e+14 6.382173e+14\n [6,] 6.691735e+15 1.099039e+17 3.120625e+16 2.954339e+17\n [7,] 8.986431e+18 3.797498e+07 9.327246e+20 4.323227e+20\n [8,] 4.934903e+18 9.685557e+21 5.920910e+18 4.314643e+22\n [9,] 9.742007e+26 9.060701e+26 1.889771e+17 4.653821e+22\n[10,] 4.953470e+25 5.956528e+27 3.600778e+21 2.346251e+21\n\n, , 4\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 3.771000e+02 1.941000e+02 9.410000e+01 8.291000e+02 2.761000e+02\n [2,] 6.812100e+02 1.681820e+05 4.161540e+05 3.170816e+05 5.716881e+04\n [3,] 1.327290e+08 8.699719e+07 2.391276e+07 4.235648e+05 7.341149e+08\n [4,] 3.896981e+11 9.644831e+07 6.770509e+10 4.942089e+08 7.777941e+10\n [5,] 2.446194e+13 3.894161e+14 1.324117e+13 7.229799e+12 7.525176e+12\n [6,] 7.074098e+16 1.868433e+14 2.506573e+14 1.870415e+06 5.484122e+14\n [7,] 3.637769e+15 1.759632e+18 1.284487e+16 8.053459e+16 7.453911e+19\n [8,] 1.046517e+21 2.115428e+21 8.385581e+21 5.710971e+18 3.179956e+17\n [9,] 1.069923e+26 1.172822e+26 3.194813e+24 1.681044e+25 2.978860e+26\n[10,] 1.050939e+28 1.629976e+29 2.612403e+25 2.347811e+29 1.709852e+29\n              [,6]         [,7]         [,8]         [,9]\n [1,] 6.901000e+02 3.691000e+02 9.971000e+02 3.751000e+02\n [2,] 5.199852e+05 6.740410e+03 6.765201e+04 1.399508e+05\n [3,] 5.064522e+08 5.865864e+08 1.775957e+06 7.560580e+05\n [4,] 5.639110e+08 5.268715e+10 6.457535e+10 6.563916e+11\n [5,] 1.869967e+14 3.989125e+14 5.078764e+08 1.742179e+11\n [6,] 1.402877e+16 6.349792e+17 3.168409e+14 2.269375e+11\n [7,] 1.711348e+20 1.839811e+14 3.406947e+18 9.730173e+20\n [8,] 8.796580e+23 4.956013e+21 9.160551e+23 1.345529e+19\n [9,] 1.469555e+26 5.773066e+22 6.451856e+23 6.462632e+24\n[10,] 4.348608e+29 3.730451e+29 2.828790e+28 5.805063e+21\n\n, , 5\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 8.010000e+01 4.531000e+02 8.481000e+02 4.791000e+02 7.771000e+02\n [2,] 5.243208e+05 1.706516e+05 6.990632e+05 1.815612e+05 7.403841e+04\n [3,] 6.341898e+06 6.655673e+08 1.508753e+07 3.187520e+08 1.401495e+07\n [4,] 4.938999e+09 1.688232e+07 2.969005e+10 1.132430e+11 1.322992e+11\n [5,] 1.154170e+11 2.815713e+14 6.523038e+14 3.979201e+12 1.056223e+10\n [6,] 9.363619e+15 9.421030e+14 4.647208e+17 1.094032e+09 8.424449e+16\n [7,] 3.219264e+19 9.194217e+19 1.885238e+18 5.373780e+20 3.256261e+19\n [8,] 6.914956e+22 7.341110e+23 1.378007e+18 5.796248e+23 2.864400e+17\n [9,] 1.405370e+26 3.334825e+22 3.281013e+23 1.284283e+22 3.436820e+26\n[10,] 1.102263e+29 3.448183e+28 6.026216e+28 2.913274e+21 1.478088e+28\n              [,6]         [,7]         [,8]         [,9]\n [1,] 8.051000e+02 6.501000e+02 6.311000e+02 7.911000e+02\n [2,] 9.547244e+05 7.040888e+05 2.705040e+05 4.410000e+00\n [3,] 9.943108e+08 3.329567e+08 1.012599e+08 2.442578e+08\n [4,] 3.912504e+09 5.891349e+11 3.628029e+11 2.855417e+07\n [5,] 1.117211e+14 2.974631e+11 2.731487e+12 4.873491e+14\n [6,] 4.827084e+15 5.461335e+17 1.061474e+17 2.400661e+16\n [7,] 1.272684e+19 4.181144e+17 3.369446e+19 7.919567e+19\n [8,] 8.162332e+22 1.444353e+20 2.832675e+19 2.775935e+21\n [9,] 3.305371e+24 1.067814e+19 7.581953e+23 7.896450e+26\n[10,] 7.461019e+24 1.158482e+29 2.679394e+27 1.375366e+16\n\n, , 6\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 4.861000e+02 1.441000e+02 3.831000e+02 6.901000e+02 9.701000e+02\n [2,] 1.490732e+05 2.153888e+05 6.940556e+05 2.852628e+05 3.806401e+04\n [3,] 5.845625e+07 7.574066e+07 2.622454e+07 4.119969e+08 3.703009e+08\n [4,] 7.074028e+11 4.864896e+09 7.744556e+11 2.268687e+10 3.751505e+10\n [5,] 9.750440e+12 2.541949e+06 8.490334e+11 1.284819e+12 8.315244e+13\n [6,] 9.127149e+10 6.268045e+17 8.049869e+16 9.808495e+16 1.853646e+17\n [7,] 3.729465e+19 3.898772e+20 3.655748e+20 1.193456e+20 1.361223e+20\n [8,] 2.704174e+20 1.967646e+23 2.276283e+23 1.357518e+23 7.985402e+22\n [9,] 8.884697e+23 3.976471e+24 9.865544e+25 7.211519e+24 1.487584e+24\n[10,] 1.593683e+26 1.462399e+29 1.332109e+22 3.600778e+21 7.364727e+20\n              [,6]         [,7]         [,8]         [,9]\n [1,] 5.441000e+02 7.211000e+02 5.841000e+02 1.131000e+02\n [2,] 5.142324e+05 4.625360e+05 2.441348e+05 4.247721e+04\n [3,] 1.833472e+08 7.314327e+05 6.165123e+08 6.846813e+07\n [4,] 8.711407e+11 3.877289e+11 5.481686e+09 8.699999e+10\n [5,] 4.500666e+10 1.001131e+14 8.515420e+08 1.831070e+14\n [6,] 7.017329e+14 4.712451e+10 5.862998e+13 1.547533e+15\n [7,] 1.025449e+18 2.804020e+08 3.369446e+19 1.939187e+20\n [8,] 4.960701e+23 1.871401e+15 1.530769e+19 1.628351e+20\n [9,] 2.918076e+26 3.536741e+24 3.954244e+12 4.769270e+13\n[10,] 4.345097e+23 8.327865e+26 2.931705e+27 3.941490e+29\n\n, , 7\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 2.651000e+02 4.751000e+02 5.281000e+02 2.671000e+02 4.791000e+02\n [2,] 2.602020e+05 6.305121e+04 2.405601e+04 1.340292e+05 1.706516e+05\n [3,] 6.897144e+07 2.785730e+08 1.647213e+06 2.128831e+08 1.861694e+05\n [4,] 4.639234e+10 1.841749e+11 6.091226e+08 9.247132e+09 4.771041e+11\n [5,] 2.117464e+14 6.174850e+11 6.994367e+09 7.210036e+08 3.063984e+10\n [6,] 6.877267e+14 1.741079e+16 4.220931e+17 2.021682e+17 1.326033e+17\n [7,] 6.298770e+20 1.871584e+20 1.416508e+14 3.520462e+16 1.855003e+20\n [8,] 3.066551e+21 4.514472e+09 2.639888e+21 3.088627e+20 4.442153e+21\n [9,] 8.796043e+15 8.733359e+21 4.889912e+25 7.196126e+26 4.319660e+24\n[10,] 2.244894e+28 9.425421e+29 4.841169e+24 1.016602e+21 5.207264e+27\n              [,6]         [,7]         [,8]         [,9]\n [1,] 4.581000e+02 4.171000e+02 7.441000e+02 2.461000e+02\n [2,] 1.665456e+05 2.431476e+05 6.869641e+04 6.195264e+05\n [3,] 3.035999e+08 8.332376e+05 1.052209e+08 5.699290e+08\n [4,] 2.414749e+07 1.694894e+08 1.200361e+06 1.839587e+09\n [5,] 2.086724e+07 1.253282e+14 1.547195e+12 7.620425e+14\n [6,] 3.397281e+16 2.218946e+16 3.291235e+16 5.212489e+17\n [7,] 1.104332e+17 1.192433e+17 2.350182e+17 7.851667e+17\n [8,] 1.613396e+23 2.832675e+19 3.066551e+21 1.919589e+22\n [9,] 6.909162e+25 3.904105e+23 6.825931e+25 1.107529e+26\n[10,] 2.579384e+17 3.490661e+29 3.811258e+26 3.052240e+29\n\n, , 8\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 2.961000e+02 8.611000e+02 6.721000e+02 3.141000e+02 9.251000e+02\n [2,] 3.092472e+05 8.301032e+05 1.673628e+05 6.610041e+04 2.622464e+05\n [3,] 9.101349e+08 5.102739e+08 2.489769e+08 2.930346e+06 7.900881e+07\n [4,] 5.124916e+11 2.387878e+10 4.567711e+11 1.910155e+11 3.265611e+10\n [5,] 1.159976e+13 1.433734e+14 9.544375e+13 3.128126e+13 4.617518e+12\n [6,] 3.768166e+13 6.991688e+17 5.341719e+15           NA 2.005900e+17\n [7,] 8.250562e+09 3.002933e+20 4.533175e+14 1.981459e+19 2.678611e+18\n [8,] 9.965720e+21 6.361139e+18 3.112692e+22 1.891804e+23 2.853686e+22\n [9,] 2.241441e+23 3.719601e+24 3.837467e+25 2.111605e+21 8.736206e+26\n[10,] 1.136811e+28 2.086110e+28 1.289662e+27 5.477666e+27 4.799014e+28\n              [,6]         [,7]         [,8]         [,9]\n [1,] 9.941000e+02 2.181000e+02 7.711000e+02 5.851000e+02\n [2,] 7.816328e+05 1.879641e+04 7.745760e+05 3.649368e+05\n [3,] 2.727090e+04 4.443696e+08 7.840325e+08 9.803595e+07\n [4,] 1.384584e+03 9.152359e+11 1.006134e+09 4.304672e+03\n [5,] 1.277617e+13 5.650250e+14 1.685058e+05 2.103062e+14\n [6,] 1.013155e+13 4.726711e+14 9.983097e+16 9.886540e+17\n [7,] 2.737894e+19 7.569439e+13 7.522225e+12 7.034992e+13\n [8,] 8.528910e+03 3.836204e+20 1.249930e+23 2.058794e+20\n [9,] 3.398961e+20 1.606772e+21 4.575032e+21 1.022987e+16\n[10,] 1.671770e+26 6.125021e+24 1.555884e+26 1.378716e+26\n\nbc.d(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE    NA FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE    NA FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.d(x, y, \"!=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE   NA TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE   NA TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.d(x, y, \"&lt;\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE    NA FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE    NA FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.d(x, y, \"&gt;\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE   NA TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5]  [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE   NA TRUE  TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n\nbc.d(x, y, \"&lt;=\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE    NA FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE    NA FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.d(x, y, \"&gt;=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE   NA TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5]  [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE   NA TRUE  TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE"
  },
  {
    "objectID": "man/outer/bc.list.html",
    "href": "man/outer/bc.list.html",
    "title": "bc.list",
    "section": "",
    "text": "The bc.list() function performs broadcasted operations on 2 Recursive arrays. \n\n\n\nbc.list(x, y, f)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable Recursive arrays (i.e. arrays of type list).\n\n\n\n\nf\n\n\na function that takes in exactly 2 arguments, and returns a result that can be stored in a single element of a list. \n\n\n\n\n\n\n\nA recursive array. \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(c(10, 2,2))\nx.len &lt;- prod(x.dim)\n\ngen &lt;- function(n) sample(list(letters, month.abb, 1:10), n, TRUE)\n\nx &lt;- array(gen(10), x.dim)\ny &lt;- array(gen(10), c(10,1,1))\n\nbc.list(\n  x, y,\n  \\(x, y)c(length(x) == length(y), typeof(x) == typeof(y))\n)\n\n, , 1\n\n      [,1]      [,2]     \n [1,] logical,2 logical,2\n [2,] logical,2 logical,2\n [3,] logical,2 logical,2\n [4,] logical,2 logical,2\n [5,] logical,2 logical,2\n [6,] logical,2 logical,2\n [7,] logical,2 logical,2\n [8,] logical,2 logical,2\n [9,] logical,2 logical,2\n[10,] logical,2 logical,2\n\n, , 2\n\n      [,1]      [,2]     \n [1,] logical,2 logical,2\n [2,] logical,2 logical,2\n [3,] logical,2 logical,2\n [4,] logical,2 logical,2\n [5,] logical,2 logical,2\n [6,] logical,2 logical,2\n [7,] logical,2 logical,2\n [8,] logical,2 logical,2\n [9,] logical,2 logical,2\n[10,] logical,2 logical,2"
  },
  {
    "objectID": "man/outer/bc.list.html#broadcasted-operations-for-recursive-arrays",
    "href": "man/outer/bc.list.html#broadcasted-operations-for-recursive-arrays",
    "title": "bc.list",
    "section": "",
    "text": "The bc.list() function performs broadcasted operations on 2 Recursive arrays. \n\n\n\nbc.list(x, y, f)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable Recursive arrays (i.e. arrays of type list).\n\n\n\n\nf\n\n\na function that takes in exactly 2 arguments, and returns a result that can be stored in a single element of a list. \n\n\n\n\n\n\n\nA recursive array. \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(c(10, 2,2))\nx.len &lt;- prod(x.dim)\n\ngen &lt;- function(n) sample(list(letters, month.abb, 1:10), n, TRUE)\n\nx &lt;- array(gen(10), x.dim)\ny &lt;- array(gen(10), c(10,1,1))\n\nbc.list(\n  x, y,\n  \\(x, y)c(length(x) == length(y), typeof(x) == typeof(y))\n)\n\n, , 1\n\n      [,1]      [,2]     \n [1,] logical,2 logical,2\n [2,] logical,2 logical,2\n [3,] logical,2 logical,2\n [4,] logical,2 logical,2\n [5,] logical,2 logical,2\n [6,] logical,2 logical,2\n [7,] logical,2 logical,2\n [8,] logical,2 logical,2\n [9,] logical,2 logical,2\n[10,] logical,2 logical,2\n\n, , 2\n\n      [,1]      [,2]     \n [1,] logical,2 logical,2\n [2,] logical,2 logical,2\n [3,] logical,2 logical,2\n [4,] logical,2 logical,2\n [5,] logical,2 logical,2\n [6,] logical,2 logical,2\n [7,] logical,2 logical,2\n [8,] logical,2 logical,2\n [9,] logical,2 logical,2\n[10,] logical,2 logical,2"
  },
  {
    "objectID": "Readme.html#overview",
    "href": "Readme.html#overview",
    "title": "broadcast",
    "section": "🗺️Overview",
    "text": "🗺️Overview\nThe ‘broadcast’ package, as the name suggests, performs “broadcasting” (similar to broadcasting in the ‘Numpy’ module for ‘Python’).\nIn the context of operations involving 2 (or more) arrays, “broadcasting” refers to recycling array dimensions without allocating additional memory, which is considerably faster and more memory-efficient than R’s regular dimensions repetition mechanism.\nPlease read the article “Broadcasting explained” for a more complete explanation of what “broadcasting” is.\n \nAt its core, the ‘broadcast’ package provides 3 functionalities, all 3 related to “broadcasting”:\n \nFirst, ‘broadcast’ provides functions for element-wise outer computations between any 2 arrays.\nThese are similar to base R’s outer() function, but using broadcasting, which is faster and more efficient than the mechanism employed by outer().\nThe outer-like functions provided by ‘broadcast’ are optimised for a large set of operations, including, but not limited to, the following:\n\nrelational operations (like ==, !=, &lt;, &gt;, &lt;=, &gt;=, etc.);\narithmetic operations (like +, -, *, /, ^, etc.);\nBoolean combiner operations (like &, |, xor, etc.);\nstring concatenation, string (in)equality, and string distance (Levenshtein) operations.\n\nBase ‘R’ outer() function has some sloppy rules regarding the dimensions of the output, making it hard to predict the output shape.\nThe outer-like functions provided by ‘broadcast’ have very strict broadcasting rules, making it easy to accurately predict the dimensions of the result.\n \nSecond, ‘broadcast’ provides the bind_array() function, which is an broadcasted and enhanced form of the fantastic abind::abind() function:\n\nbind_array() allows for broadcasting (obviously), whereas abind::abind() does not.\nbind_array() is significantly faster and uses less memory than abind::abind().\nbind_array() also differs from abind::abind() in that it can handle recursive arrays properly; abind::abind() unlists everything to atomic arrays, ruining the structure.\n\n \nThird, ‘broadcast’ provides several generic functions for broadcasting:\n\nbcapply(): a broadcasted apply-like function that works on pairs of arrays.\nbc_ifelse(): a broadcasted ifelse() function. Broadcasts between the yes and no arguments."
  },
  {
    "objectID": "Readme.html#why-use-broadcast",
    "href": "Readme.html#why-use-broadcast",
    "title": "broadcast",
    "section": "🤷🏽Why use ‘broadcast’",
    "text": "🤷🏽Why use ‘broadcast’\nEfficiency\nBroadcasting dimensions is faster and more memory efficient than repeating dimensions.\nThis is not simply a need for speed.\nEfficient programs use less energy and resources, and is thus better for the environment.\nAs a favoured language for the sciences, ‘R’ should not throw away an opportunity to become more efficient.\nThe Benchmarks show that ‘broadcast’ has a somewhat similar speed as equivalent operations in ‘Numpy’.\n \nConvenience\nBroadcasting can make many applications much easier to write.\nFor Example: Suppose you want to compute some metric on all possible pair-wise combinations of the elements of 2 vectors.\nYou could write slow and ugly nested for-loops…\nBut you can instead also make the vectors orthogonal, and perform the broadcasting computation on the 2 orthogonal vectors.\nThe broadcasted method runs much faster, is faster to type, and easier to reason about, than using the clumsy nested for-loops.\nFor more practical examples, see Examples of Practical Applictaions.\n \nHigh Test Coverage\nThe ‘broadcast’ package has been developed with a set of unit tests that have high (&gt; 95%) coverage.\n \nMinimal Dependencies\nBesides linking to ‘Rcpp’, ‘broadcast’ does not depend on, vendor, link to, include, or otherwise use any external libraries; ‘broadcast’ was essentially made from scratch and can be installed out-of-the-box.\nNot using external libraries brings a number of advantages:\n\nAvoid dependency hell: Every dependency that is added to a software package increases the likelihood of something breaking (AKA “dependency hell”). ‘broadcast’ thus avoids this.\nAvoid wasting resources for translations: Using libraries from other languages, such as ‘xtensor’ (‘C++’) or ‘Numpy’ (‘Python’) means that - at some point - one needs to convert between the structure of R to that of the other language, and vice-versa, which wastes precious time and memory. ‘broadcast’ requires no such translations of structures, and thus does not waste precious time and memory.\nEnsure consistent behaviour: Using libraries from other languages also means one cannot always guarantee consistent behaviour of some operations. For example: both ‘Numpy’ and ‘xtensor’ have only limited support for missing values, whereas ‘R’ supports missing values for both atomic and recursive array/vector types (except type of ‘Raw’). Since ‘broadcast’ does not rely on external libraries, it can ensure consistent behaviour."
  },
  {
    "objectID": "Readme.html#documentation",
    "href": "Readme.html#documentation",
    "title": "broadcast",
    "section": "📖Documentation",
    "text": "📖Documentation\n\nInstallation:\nBroadcasting Explained:\nExamples of Practical Applications:\nComparisons & Benchmarks:"
  },
  {
    "objectID": "vignettes/b_installation.html",
    "href": "vignettes/b_installation.html",
    "title": "Installation",
    "section": "",
    "text": "To install ‘broadcast’ from GitHub, one may run the following code in ‘R’:\n\n\nremotes::install_github(\"https://github.com/tony-aw/broadcast\")\n\n‘broadcast’ is not a large package per-sé, but it does contain a large amount of compiled code (‘C’ and ‘C++’). Compilation of the package may be slow on some operating systems, especially Linux systems; please be patient. On my own personal laptop (Windows 11), installation takes about 2 minutes.\nIf installation is too slow, one may try to speed up the installation using multi-threading, for example like so:\n\n\nnthreads &lt;- 8L # specify number of threads\nSys.setenv(MAKEFLAGS = paste0(\"-j\", nthreads)) # may speed up installation\n\nremotes::install_github(\"https://github.com/tony-aw/broadcast\")\n\n \nTo attach the package - thus expose its functions to the namespace - please use the following:\n\n\nlibrary(broadcast)\n\n \nTo open the introduction help page of the ‘broadcast’ package, please use any of the following:\n\n\n?broadcast::broadcast\n?broadcast::broadcast_help\n?broadcast::`broadcast-package`"
  },
  {
    "objectID": "vignettes/d_practical_applications.html",
    "href": "vignettes/d_practical_applications.html",
    "title": "Practical Applications",
    "section": "",
    "text": "Introduction\nBroadcasting comes up frequent enough in real world problems. This articles gives a few examples of these.\n \n\n\nVector quantization\nThis first example is taken from Numpy’s own documentation.\nThe basic operation in Vector Quantization (VQ) finds the closest point in a set of points, called codes in VQ jargon, to a given point, called the observation. In the very simple, two-dimensional case shown below, the values in observation describe the weight and height of an athlete to be classified. The codes represent different classes of athletes. Finding the closest point requires calculating the distance between observation and each of the codes. The shortest distance provides the best match. In this example, codes[0] is the closest class indicating that the athlete is likely a basketball player.\n\n\nobservation &lt;- array(c(111.0, 188.0), dim = c(1, 2))\ncodes &lt;- array(\n  c(102.0, 203.0,\n    132.0, 193.0,\n    45.0, 155.0,\n    57.0, 173.0),\n  dim = c(4, 2)\n)\n\ndiff &lt;- bc.num(codes, observation, \"-\")\ndist &lt;- apply(diff^2, 2L, sum) |&gt; sqrt()\nwhich.min(dist); dist[which.min(dist)]\n#&gt; [1] 1\n#&gt; [1] 125.3395\n\n \n\n\nFind most resembling string\nIf you have 2 vectors of strings, and you want to find which pair of strings (one string from each vector), you’ll need to find the string distance of all possible combinations.\nThis can be done very fast and very conveniently with ‘broadcast’, using the following code:\n\nx &lt;- array(month.name)\ny &lt;- array(month.abb, c(1, 12))\n\nout &lt;- bc.str(x, y, \"levenshtein\")\ndimnames(out) &lt;- list(x, y)\nprint(out)\n#&gt;           Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n#&gt; January     4   7   5   6   5   5   5   6   7   7   7   7\n#&gt; February    7   5   6   7   6   7   7   7   7   8   8   7\n#&gt; March       4   5   2   4   3   5   5   5   5   4   5   4\n#&gt; April       5   5   4   2   5   5   4   4   5   5   5   5\n#&gt; May         2   3   1   3   0   3   3   3   3   3   3   3\n#&gt; June        2   4   4   4   4   1   2   3   4   4   4   4\n#&gt; July        3   4   4   4   3   2   1   3   4   4   4   4\n#&gt; August      6   6   6   5   6   5   5   3   6   5   6   6\n#&gt; September   9   7   8   7   9   9   9   9   6   8   9   8\n#&gt; October     7   6   6   6   7   7   7   7   6   4   6   6\n#&gt; November    8   6   7   7   8   8   8   8   7   8   5   7\n#&gt; December    8   6   7   7   8   8   8   8   7   7   8   5"
  }
]