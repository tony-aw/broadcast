[
  {
    "objectID": "vignettes/d_benchmarks.html",
    "href": "vignettes/d_benchmarks.html",
    "title": "Benchmarks with Numpy+reticulate",
    "section": "",
    "text": "Introduction\nIn this article, the speed of ‘broadcast’ is compared to the speed of ‘Numpy’ via {reticulate}.\n \n\n\nKeeping comparisons fair\nTo keep the comparisons between ‘broadcast’ and ‘Numpy’+‘reticulate’ fair, a number of measures have been taken:\n\nconversion from Numpy to ‘R’ is DISABLED; this allows for comparing the speed more fairly. When conversion would be enabled, precious time would be wasted to convert from Numpy structures to comparable ‘R’ structures.\ngarbage collection is disabled in reticulate’s Python. In ‘R’, only benchmarks with no garbage collection, or level 0 garbage collection, is used. I feel this keeps the comparisons relatively fair (but it’s not perfect).\n‘R’ has more support for missing values than ‘Numpy’, which also leads to a difference in speed. But both ‘R’ and ‘Numpy’ handle missing values equally in decimal numbers ( 64bit floats in Numpy and 64bit doubles in ‘R’ ), through the NaN construct.\n\n \n\n\nMany Orthogonal Arrays\n8 pairs of decimal number arrays are created in both ‘R’ and ‘Numpy’. They all have a length of (approximately) 9*10^6 elements. Each pair will have a different number of dimensions, from 2 to 9 (hence 8 pairs of arrays). I.e. a pair of 2d arrays, a pair of 3d arrays, etc.\nThese pairs of arrays are fully orthogonal, thus the maximum amount of broadcasting will be employed.\nFor each pair of array the outer sum is computed using ‘broadcast’ and ‘Numpy’. This computation is repeated 100 times, and the median result is taken.\nThus we get the following code:\n\n# set-up ====\nlibrary(broadcast)\nlibrary(tinycodet)\nimport_as(~rt, \"reticulate\")\nnp &lt;- rt$import(\"numpy\", convert = FALSE)\ngc &lt;- rt$import(\"gc\", convert = FALSE)\nget_times &lt;- function(obj, j) {\n  nms &lt;- names(res$expression)\n  j &lt;- which(nms == j)\n  idx &lt;- rowSums(obj$gc[[j]][, 2:3]) == 0\n  times &lt;- obj$time[[j]][idx]\n  return(times)\n}\ngc$disable()\n\n# loop\nmedian_bc &lt;- median_np &lt;- q1_bc &lt;- q1_np &lt;- q3_bc &lt;- q3_np &lt;- vector(\"numeric\", 8)\ncounter &lt;- 1L\ntarget_len &lt;- 9e6\n\nfor(i in 2:9) {\n  print(i)\n  n &lt;- round(target_len^(1/i)) |&gt; as.integer()\n  len &lt;- n^i\n  cat(\"i = \", i, \"\\n\")\n  cat(\"n = \", n, \"\\n\")\n  cat(\"len = \", len, \"\\n\")\n  x.dims &lt;- rep(c(n, 1L), i - 1)[1:i]\n  y.dims &lt;- rep(c(1L, n), i - 1)[1:i]\n  a.dims &lt;- rt$r_to_py(as.list(x.dims))\n  b.dims &lt;- rt$r_to_py(as.list(y.dims))\n  \n  npa &lt;- np$random$random_sample(a.dims)\n  npb &lt;- np$random$random_sample(b.dims)\n  a &lt;- array(runif(100), x.dims)\n  b &lt;- array(runif(100), y.dims)\n  \n  res &lt;- bench::mark(\n    broadcast = bc.num(a, b, \"+\"),\n    `numpy (NO conversion to R)` = npa + npb,\n    check = FALSE,\n    min_iterations = 100\n  )\n  bc_all &lt;- get_times(res, \"broadcast\")\n  np_all &lt;- get_times(res, \"numpy (NO conversion to R)\")\n  median_bc[counter] &lt;- median(bc_all)\n  median_np[counter] &lt;- median(np_all)\n  q1_bc[counter] &lt;- quantile(bc_all, 0.25)\n  q3_bc[counter] &lt;- quantile(bc_all, 0.75)\n  q1_np[counter] &lt;- quantile(np_all, 0.25)\n  q3_np[counter] &lt;- quantile(np_all, 0.75)\n  \n  counter &lt;- counter + 1L\n}\n\nUsing {tinyplot}, the median, first quartile, and third quartile of the bench-marked computation times are presented in the following graph:\n\n\n\n\n\n \n\n\nLarge non-orthogonal arrays comparisons\nHow about arrays that are not fully orthogonal, but still require a lot of broadcasting in pari-wise computations?\nHere is the benchmark:\n\n\nlibrary(broadcast)\nlibrary(tinycodet)\nimport_as(~rt, \"reticulate\")\nnp &lt;- rt$import(\"numpy\", convert = FALSE)\ngc &lt;- rt$import(\"gc\", convert = FALSE)\ngc$disable()\n\nn &lt;- 26L\nnpa &lt;- np$random$rand(n, 1L, n, 1L, n)\nnpb &lt;- np$random$rand(n, n, 1L, n, 1L)\n\na.dim &lt;- c(n, rep(c(1L, n), 2))\nb.dim &lt;- c(n, rep(c(n, 1L), 2))\na &lt;- array(rnorm(100), a.dim)\nb &lt;- array(rnorm(100), b.dim)\n\nbm_numpy_large &lt;- bench::mark(\n  broadcast = bc.num(a, b, \"+\"),\n  `numpy (no conversion to R)` = npa + npb,\n  check = FALSE,\n  min_iterations = 200,\n)\nsummary(bm_numpy_large)\nggplot2::autoplot(bm_numpy_large)\n\n\n#&gt; # A tibble: 2 × 6\n#&gt;   expression                      min   median `itr/sec` mem_alloc `gc/sec`\n#&gt;   &lt;bch:expr&gt;                 &lt;bch:tm&gt; &lt;bch:tm&gt;     &lt;dbl&gt; &lt;bch:byt&gt;    &lt;dbl&gt;\n#&gt; 1 broadcast                    16.6ms   17.6ms      55.4    90.6MB     27.3\n#&gt; 2 numpy (no conversion to R)   25.4ms   30.9ms      32.4        0B      0"
  },
  {
    "objectID": "vignettes/b_broadcasting_explained.html",
    "href": "vignettes/b_broadcasting_explained.html",
    "title": "Broadcasting Explained",
    "section": "",
    "text": "library(broadcast)\nlibrary(kableExtra)\n#&gt; Warning: package 'kableExtra' was built under R version 4.4.1"
  },
  {
    "objectID": "vignettes/b_broadcasting_explained.html#introducing-broadcasting",
    "href": "vignettes/b_broadcasting_explained.html#introducing-broadcasting",
    "title": "Broadcasting Explained",
    "section": "Introducing Broadcasting",
    "text": "Introducing Broadcasting\nIn an operation like outer(x, y, \"+\"), x and y are replicated to become the same size. The thing is, physical replication - and thus copying - of the dimensions of x and y should not be necessary; they only need to be recycled virtually.\nVirtual recycling does not actually physically replicate x and y. Instead, nested loops in ‘C’ and ‘C++’ are used to simulate a recycled array.\nThis is similar to how ‘R’ recycles regular vectors.\nVirtual recycling requires no additional memory (apart from allocating the final end result); it is much faster and much more memory efficient than using the outer() function or something similar.\nAnd that is what broadcasting does: broadcasting provides fast virtual recycling of array dimensions in the context of operations involving 2 (or more) arrays without allocating additional memory.\nIn the earlier example, we used:\n\nx[, rep(1L, 5L)] + y[rep(1L, 5L),]\n#&gt;      [,1] [,2] [,3] [,4] [,5]\n#&gt; [1,]   11   21   31   41   51\n#&gt; [2,]   12   22   32   42   52\n#&gt; [3,]   13   23   33   43   53\n#&gt; [4,]   14   24   34   44   54\n#&gt; [5,]   15   25   35   45   55\n\nouter(x, y, \"+\") |&gt; drop()\n#&gt;      [,1] [,2] [,3] [,4] [,5]\n#&gt; [1,]   11   21   31   41   51\n#&gt; [2,]   12   22   32   42   52\n#&gt; [3,]   13   23   33   43   53\n#&gt; [4,]   14   24   34   44   54\n#&gt; [5,]   15   25   35   45   55\n\nTo compute the outer sum using broadcasting through the ‘broadcast’ package, we can do the following:\n\nlibrary(broadcast)\n\nbc.num(x, y, \"+\")\n#&gt;      [,1] [,2] [,3] [,4] [,5]\n#&gt; [1,]   11   21   31   41   51\n#&gt; [2,]   12   22   32   42   52\n#&gt; [3,]   13   23   33   43   53\n#&gt; [4,]   14   24   34   44   54\n#&gt; [5,]   15   25   35   45   55\n\nThe result is the same (as it should). But as the size of the resulting array increases, the broadcasted functions become more and more efficient in terms of both speed and memory, in comparison with base ‘R’ approaches.\nBenchmarks can be found on the website."
  },
  {
    "objectID": "vignettes/b_broadcasting_explained.html#conformability",
    "href": "vignettes/b_broadcasting_explained.html#conformability",
    "title": "Broadcasting Explained",
    "section": "Conformability",
    "text": "Conformability\nBroadcasted operations only work when 2 arrays are conformable for broadcasting.\nConsider again 2 arrays x and y, and their dimensions given by dim(x) and dim(y), respectively.\n‘broadcast’ goes through dim(x) and dim(y), from left (i.e. first dimension / rows) to right (i.e. the last dimension), and checks for each axis i if at least one of the following conditions is TRUE:\n\ndim(x)[i] and dim(y)[i] are equal;\neither dim(x)[i] or dim(y)[i] is 1;\neither dim(x)[i] or dim(y)[i] is non-existing.\n\nif at least one of the above conditions is true for each and every one of the dimensions of x and y, the 2 arrays are compatible for broadcasted operations. If not, they are not compatible, and attempting to perform a broadcasted operations results in an error.\nTo illustrate, let’s check 2 arrays to see if they are compatible:\n\nx &lt;- array(rnorm(10), c(10, 1, 9, 6))\ny &lt;- array(rnorm(10), c(10, 5, 1))\n\n\n\n\n\n\ndim(x)\ndim(y)\ncompatible\nreason\n\n\n\n\n10\n10\nTRUE\nequal\n\n\n1\n5\nTRUE\neither is 1\n\n\n9\n1\nTRUE\neither is 1\n\n\n6\nNA\nTRUE\neither is missing\n\n\n\n\n\n\n\nAs shown in the data.frame above, all dimensions of x and y are compatible.\nTherefore, broadcasted binary operations involving x and y can be performed.\n \nNow let’s look at another 2 arrays, and see if they are compatible:\n\nx &lt;- array(rnorm(10), c(10, 1, 9, 6))\ny &lt;- array(rnorm(10), c(10, 5, 2))\n\n\n\n\n\n\ndim(x)\ndim(y)\ncompatible\nreason\n\n\n\n\n10\n10\nTRUE\nequal\n\n\n1\n5\nTRUE\neither is 1\n\n\n9\n2\nFALSE\nnot equal & neither is 1/missing\n\n\n6\nNA\nTRUE\neither is missing\n\n\n\n\n\n\n\nOne of the dimensions, namely the third dimension, is not compatible. Therefore, these 2 arrays are not conformable for broadcasted operations."
  },
  {
    "objectID": "vignettes/b_broadcasting_explained.html#which-dimensions-are-broadcasted",
    "href": "vignettes/b_broadcasting_explained.html#which-dimensions-are-broadcasted",
    "title": "Broadcasting Explained",
    "section": "Which dimensions are broadcasted",
    "text": "Which dimensions are broadcasted\nIn the context of an operation involving exactly 2 arrays, this sub-section explains which dimensions of which array is broadcasted, and which dimension of which array is left as-is.\nThere are 3 scenarios relevant for this explanation.\n \nScenario 1:\nFor some dimension i, dim(x)[i] and dim(y)[i] are equal.\nIn this scenario, no broadcasting needs to occur on that dimension for either array.\n \nScenario 2:\nFor some dimension i, suppose dim(x)[i] == 1 and dim(y)[i] &gt; 1.\nThen dimension dim(x)[i] is broadcasted to size dim(y)[i].\nSimilarly, if dim(x)[i] &gt; 1 and dim(y)[i] == 1, dimension dim(y)[i] is broadcasted to size dim(x)[i].\n \nScenario 3:\nFinally, suppose for some dimension i, dim(x)[i] &gt; 1, and dim(y)[i] is non-existing.\nI.e., x has more dimensions than y.\nIn this case, the missing dimension in y is replaced with a dimensions of size 1, and scenario 2 is used.\nSimilarly, if dim(y)[i] &gt; 1 and dim(x)[i] is non-existing, the missing dimension in x is replaced with a dimension of size 1 and we get back to scenario 2.\nIt does not matter how much difference there is between the number of dimensions of x and the number of dimensions of y: any number of missing dimensions will be replaced with 1, as long as the total number of dimensions for each array does not exceed 16.\n \nIllustration\nTo illustrate, let’s check 2 conformable arrays, and see which dimension of which array is broadcasted by how much\n\nx &lt;- array(rnorm(10), c(10, 1, 1, 9, 6))\ny &lt;- array(rnorm(10), c(10, 1, 5, 1))\n\n\n\n\n\n\ni\ndim(x)\ndim(y)\nbroadcasted\nreason\nnote\n\n\n\n\n1\n10\n10\nneither\nequal\n\n\n\n2\n1\n1\nneither\nequal\n\n\n\n3\n1\n5\nx\ndim(x)[i] == 1\n\n\n\n4\n9\n1\ny\ndim(y)[i] == 1\n\n\n\n5\n6\nNA\ny\ndim(y)[i] is missing\ndim(y) is extended by 1"
  },
  {
    "objectID": "man/typecast.html",
    "href": "man/typecast.html",
    "title": "typecast",
    "section": "",
    "text": "Type casting usually strips away attributes of objects.  The functions provided here preserve dimensions, dimnames, and names, which may be more convenient for arrays and array-like objects.   The functions are as follows: \n\n\nas_bool(): converts object to atomic type logical (TRUE, FALSE, NA).\n\n\nas_int(): converts object to atomic type integer.\n\n\nas_dbl(): converts object to atomic type double (AKA numeric).\n\n\nas_chr(): converts object to atomic type character.\n\n\nas_cplx(): converts object to atomic type complex.\n\n\nas_raw(): converts object to atomic type raw.\n\n\nas_list(): converts object to recursive type list. \n\n\nas_num() is an alias for as_dbl().  as_str() is an alias for as_chr().   See also typeof.  \n\n\n\nas_bool(x, ...)\n\nas_int(x, ...)\n\nas_dbl(x, ...)\n\nas_num(x, ...)\n\nas_chr(x, ...)\n\nas_str(x, ...)\n\nas_cplx(x, ...)\n\nas_raw(x, ...)\n\nas_list(x, ...)\n\n\n\n\n\n\n\n\nx\n\n\nan R object.\n\n\n\n\n…\n\n\nfurther arguments passed to or from other methods.\n\n\n\n\n\n\n\nThe converted object.  \n\n\n\n\nlibrary(\"broadcast\")\n\n\n# matrix example ====\nx &lt;- matrix(sample(-1:28), ncol = 5)\ncolnames(x) &lt;- month.name[1:5]\nrownames(x) &lt;- month.abb[1:6]\nnames(x) &lt;- c(letters[1:20], LETTERS[1:10])\nprint(x)\n\n    January February March April May\nJan      16       17    26    10  15\nFeb      24       -1     7    19   0\nMar       4        5     2     8  23\nApr       1       13    11    21  25\nMay      14        9    18     6  22\nJun      27       28    20    12   3\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_bool(x)\n\n    January February March April   May\nJan    TRUE     TRUE  TRUE  TRUE  TRUE\nFeb    TRUE     TRUE  TRUE  TRUE FALSE\nMar    TRUE     TRUE  TRUE  TRUE  TRUE\nApr    TRUE     TRUE  TRUE  TRUE  TRUE\nMay    TRUE     TRUE  TRUE  TRUE  TRUE\nJun    TRUE     TRUE  TRUE  TRUE  TRUE\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_int(x)\n\n    January February March April May\nJan      16       17    26    10  15\nFeb      24       -1     7    19   0\nMar       4        5     2     8  23\nApr       1       13    11    21  25\nMay      14        9    18     6  22\nJun      27       28    20    12   3\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_dbl(x)\n\n    January February March April May\nJan      16       17    26    10  15\nFeb      24       -1     7    19   0\nMar       4        5     2     8  23\nApr       1       13    11    21  25\nMay      14        9    18     6  22\nJun      27       28    20    12   3\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_chr(x)\n\n    January February March April May \nJan \"16\"    \"17\"     \"26\"  \"10\"  \"15\"\nFeb \"24\"    \"-1\"     \"7\"   \"19\"  \"0\" \nMar \"4\"     \"5\"      \"2\"   \"8\"   \"23\"\nApr \"1\"     \"13\"     \"11\"  \"21\"  \"25\"\nMay \"14\"    \"9\"      \"18\"  \"6\"   \"22\"\nJun \"27\"    \"28\"     \"20\"  \"12\"  \"3\" \nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_cplx(x)\n\n    January February March April   May\nJan   16+0i    17+0i 26+0i 10+0i 15+0i\nFeb   24+0i    -1+0i  7+0i 19+0i  0+0i\nMar    4+0i     5+0i  2+0i  8+0i 23+0i\nApr    1+0i    13+0i 11+0i 21+0i 25+0i\nMay   14+0i     9+0i 18+0i  6+0i 22+0i\nJun   27+0i    28+0i 20+0i 12+0i  3+0i\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_raw(x)\n\n    January February March April May\nJan      10       11    1a    0a  0f\nFeb      18       00    07    13  00\nMar      04       05    02    08  17\nApr      01       0d    0b    15  19\nMay      0e       09    12    06  16\nJun      1b       1c    14    0c  03\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\n################################################################################\n\n# factor example ====\nx &lt;- factor(month.abb, levels = month.abb)\nnames(x) &lt;- month.name\nprint(x)\n\n  January  February     March     April       May      June      July    August \n      Jan       Feb       Mar       Apr       May       Jun       Jul       Aug \nSeptember   October  November  December \n      Sep       Oct       Nov       Dec \nLevels: Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n\nas_bool(as_int(x) &gt; 6)\n\n  January  February     March     April       May      June      July    August \n    FALSE     FALSE     FALSE     FALSE     FALSE     FALSE      TRUE      TRUE \nSeptember   October  November  December \n     TRUE      TRUE      TRUE      TRUE \n\nas_int(x)\n\n  January  February     March     April       May      June      July    August \n        1         2         3         4         5         6         7         8 \nSeptember   October  November  December \n        9        10        11        12 \n\nas_dbl(x)\n\n  January  February     March     April       May      June      July    August \n        1         2         3         4         5         6         7         8 \nSeptember   October  November  December \n        9        10        11        12 \n\nas_chr(x)\n\n  January  February     March     April       May      June      July    August \n    \"Jan\"     \"Feb\"     \"Mar\"     \"Apr\"     \"May\"     \"Jun\"     \"Jul\"     \"Aug\" \nSeptember   October  November  December \n    \"Sep\"     \"Oct\"     \"Nov\"     \"Dec\" \n\nas_cplx(x)\n\n  January  February     March     April       May      June      July    August \n 1+0i  2+0i  3+0i  4+0i  5+0i  6+0i  7+0i  8+0i\nSeptember   October  November  December \n 9+0i 10+0i 11+0i 12+0i\n\nas_raw(x)\n\n  January  February     March     April       May      June      July    August \n       01        02        03        04        05        06        07        08 \nSeptember   October  November  December \n       09        0a        0b        0c"
  },
  {
    "objectID": "man/typecast.html#atomic-and-list-type-casting-with-names-and-dimensions-preserved",
    "href": "man/typecast.html#atomic-and-list-type-casting-with-names-and-dimensions-preserved",
    "title": "typecast",
    "section": "",
    "text": "Type casting usually strips away attributes of objects.  The functions provided here preserve dimensions, dimnames, and names, which may be more convenient for arrays and array-like objects.   The functions are as follows: \n\n\nas_bool(): converts object to atomic type logical (TRUE, FALSE, NA).\n\n\nas_int(): converts object to atomic type integer.\n\n\nas_dbl(): converts object to atomic type double (AKA numeric).\n\n\nas_chr(): converts object to atomic type character.\n\n\nas_cplx(): converts object to atomic type complex.\n\n\nas_raw(): converts object to atomic type raw.\n\n\nas_list(): converts object to recursive type list. \n\n\nas_num() is an alias for as_dbl().  as_str() is an alias for as_chr().   See also typeof.  \n\n\n\nas_bool(x, ...)\n\nas_int(x, ...)\n\nas_dbl(x, ...)\n\nas_num(x, ...)\n\nas_chr(x, ...)\n\nas_str(x, ...)\n\nas_cplx(x, ...)\n\nas_raw(x, ...)\n\nas_list(x, ...)\n\n\n\n\n\n\n\n\nx\n\n\nan R object.\n\n\n\n\n…\n\n\nfurther arguments passed to or from other methods.\n\n\n\n\n\n\n\nThe converted object.  \n\n\n\n\nlibrary(\"broadcast\")\n\n\n# matrix example ====\nx &lt;- matrix(sample(-1:28), ncol = 5)\ncolnames(x) &lt;- month.name[1:5]\nrownames(x) &lt;- month.abb[1:6]\nnames(x) &lt;- c(letters[1:20], LETTERS[1:10])\nprint(x)\n\n    January February March April May\nJan      16       17    26    10  15\nFeb      24       -1     7    19   0\nMar       4        5     2     8  23\nApr       1       13    11    21  25\nMay      14        9    18     6  22\nJun      27       28    20    12   3\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_bool(x)\n\n    January February March April   May\nJan    TRUE     TRUE  TRUE  TRUE  TRUE\nFeb    TRUE     TRUE  TRUE  TRUE FALSE\nMar    TRUE     TRUE  TRUE  TRUE  TRUE\nApr    TRUE     TRUE  TRUE  TRUE  TRUE\nMay    TRUE     TRUE  TRUE  TRUE  TRUE\nJun    TRUE     TRUE  TRUE  TRUE  TRUE\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_int(x)\n\n    January February March April May\nJan      16       17    26    10  15\nFeb      24       -1     7    19   0\nMar       4        5     2     8  23\nApr       1       13    11    21  25\nMay      14        9    18     6  22\nJun      27       28    20    12   3\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_dbl(x)\n\n    January February March April May\nJan      16       17    26    10  15\nFeb      24       -1     7    19   0\nMar       4        5     2     8  23\nApr       1       13    11    21  25\nMay      14        9    18     6  22\nJun      27       28    20    12   3\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_chr(x)\n\n    January February March April May \nJan \"16\"    \"17\"     \"26\"  \"10\"  \"15\"\nFeb \"24\"    \"-1\"     \"7\"   \"19\"  \"0\" \nMar \"4\"     \"5\"      \"2\"   \"8\"   \"23\"\nApr \"1\"     \"13\"     \"11\"  \"21\"  \"25\"\nMay \"14\"    \"9\"      \"18\"  \"6\"   \"22\"\nJun \"27\"    \"28\"     \"20\"  \"12\"  \"3\" \nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_cplx(x)\n\n    January February March April   May\nJan   16+0i    17+0i 26+0i 10+0i 15+0i\nFeb   24+0i    -1+0i  7+0i 19+0i  0+0i\nMar    4+0i     5+0i  2+0i  8+0i 23+0i\nApr    1+0i    13+0i 11+0i 21+0i 25+0i\nMay   14+0i     9+0i 18+0i  6+0i 22+0i\nJun   27+0i    28+0i 20+0i 12+0i  3+0i\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_raw(x)\n\n    January February March April May\nJan      10       11    1a    0a  0f\nFeb      18       00    07    13  00\nMar      04       05    02    08  17\nApr      01       0d    0b    15  19\nMay      0e       09    12    06  16\nJun      1b       1c    14    0c  03\nattr(,\"names\")\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\n################################################################################\n\n# factor example ====\nx &lt;- factor(month.abb, levels = month.abb)\nnames(x) &lt;- month.name\nprint(x)\n\n  January  February     March     April       May      June      July    August \n      Jan       Feb       Mar       Apr       May       Jun       Jul       Aug \nSeptember   October  November  December \n      Sep       Oct       Nov       Dec \nLevels: Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n\nas_bool(as_int(x) &gt; 6)\n\n  January  February     March     April       May      June      July    August \n    FALSE     FALSE     FALSE     FALSE     FALSE     FALSE      TRUE      TRUE \nSeptember   October  November  December \n     TRUE      TRUE      TRUE      TRUE \n\nas_int(x)\n\n  January  February     March     April       May      June      July    August \n        1         2         3         4         5         6         7         8 \nSeptember   October  November  December \n        9        10        11        12 \n\nas_dbl(x)\n\n  January  February     March     April       May      June      July    August \n        1         2         3         4         5         6         7         8 \nSeptember   October  November  December \n        9        10        11        12 \n\nas_chr(x)\n\n  January  February     March     April       May      June      July    August \n    \"Jan\"     \"Feb\"     \"Mar\"     \"Apr\"     \"May\"     \"Jun\"     \"Jul\"     \"Aug\" \nSeptember   October  November  December \n    \"Sep\"     \"Oct\"     \"Nov\"     \"Dec\" \n\nas_cplx(x)\n\n  January  February     March     April       May      June      July    August \n 1+0i  2+0i  3+0i  4+0i  5+0i  6+0i  7+0i  8+0i\nSeptember   October  November  December \n 9+0i 10+0i 11+0i 12+0i\n\nas_raw(x)\n\n  January  February     March     April       May      June      July    August \n       01        02        03        04        05        06        07        08 \nSeptember   October  November  December \n       09        0a        0b        0c"
  },
  {
    "objectID": "man/bind.html",
    "href": "man/bind.html",
    "title": "bind",
    "section": "",
    "text": "The bind_implementations provide dimensional binding functionalities.   The following implementations are available:\n\n\nbind_mat() binds dimensionless (atomic/recursive) vectors and (atomic/recursive) matrices row- or column-wise.  Allows for recycling.\n\n\nbind_array() binds (atomic/recursive) arrays and (atomic/recursive) matrices.  Allows for broadcasting.\n\n\nbind_dt() binds data.tables and other data.frame-like objects.  This function is only available if the ‘data.table’ package is installed.  Returns a data.table.  Faster than do.call(cbind, …) or do.call(rbind, …) for regular data.frame objects. \n\n\nNote that the naming convention of the binding implementations here is \"bind_\" followed by the resulting class (abbreviated).  I.e. bind_mat returns a matrix, but can bind both matrices and vectors.  And bind_array returns an array, but can bind both arrays and matrices.  And bind_dt returns a data.table, but can bind not only data.tables, but also most other data.frame-like objects.  \n\n\n\nbind_mat(input, along, name_deparse = TRUE, comnames_from = 1L)\n\nbind_array(\n  input,\n  along,\n  revalong,\n  max_bc = 1L,\n  name_along = TRUE,\n  comnames_from = 1L\n)\n\nbind_dt(input, along, ...)\n\n\n\n\n\n\n\n\ninput\n\n\na list of only the appropriate objects.  If input is named, its names will be used for the names of dimension along of the output, as far as possible.\n\n\n\n\nalong\n\n\na single integer, indicating the dimension along which to bind the dimensions.  I.e. use along = 1 for row-binding, along = 2 for column-binding, etc.  For arrays, additional flexibility is available:\n\n\nSpecifying along = 0 will bind the arrays on a new dimension before the first, making along the new first dimension.\n\n\nSpecifying along = N + 1, with N = max(lst.ndim(input)), will create an additional dimension (N + 1) and bind the arrays along that new dimension.\n\n\n\n\n\n\nname_deparse\n\n\nBoolean, for bind_mat().  Indicates if dimension along should be named.  Uses the naming method from rbind/cbind itself.\n\n\n\n\ncomnames_from\n\n\neither integer scalar or NULL, for bind_mat() and bind_array().  Indicates which object in input should be used for naming the shared dimension.  If NULL, no communal names will be given.  For example:  When binding columns of matrices, the matrices will share the same rownames.  Using comnames_from = 10 will then result in bind_array() using rownames(input[[10]]) for the rownames of the output.\n\n\n\n\nrevalong\n\n\nfor bind_array() only.  Same as along, but counting backwards.  I.e. revalong = 0 is equivalent to along = N+1, and revalong = N+1 is equivalent to along = 0;  with N = max(lst.ndim(input)).\n\n\n\n\nmax_bc\n\n\ninteger, for bind_array only.  Specify here the number of dimensions that are allowed to be broadcasted when binding arrays.  If max_bc = 0L, no broadcasting will be allowed at all.\n\n\n\n\nname_along\n\n\nBoolean, for bind_array().  Indicates if dimension along should be named.\n\n\n\n\n…\n\n\narguments to be passed to rbindlist.  \n\n\n\n\n\n\n\nFor in-depth information about the binding implentations in the ‘broadcast’ package, please refer to broadcast_bind.  \n\n\n\nThe bound object.\n\n\n\nPlate T, Heiberger R (2016). abind: Combine Multidimensional Arrays. R package version 1.4-5, https://CRAN.R-project.org/package=abind.\n\n\n\n\nlibrary(\"broadcast\")\n\n\n# bind_array ====\n\n# here, atomic and recursive arrays are mixed,\n# resulting in recursive arrays\n\n# creating the arrays\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\n# binding the arrays\ninput &lt;- list(x = x, y = y)\nbind_array(input, along = 0L) # binds on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\nbind_array(input, along = 1L) # binds on first dimension (i.e. rows)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, along = 2L)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, along = 3L) # bind on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 0L) # binds on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 1L) # binds on last dimension (i.e. columns)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, revalong = 2L)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, revalong = 3L) # bind on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\n# binding, with empty arrays\nemptyarray &lt;- array(numeric(0L), c(0L, 3L))\ndimnames(emptyarray) &lt;- list(NULL, paste(\"empty\", 1:3))\nprint(emptyarray)\n\n     empty 1 empty 2 empty 3\n\ninput &lt;- list(x = x, y = emptyarray)\nbind_array(input, along = 1L, comnames_from = 2L) # row-bind\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n################################################################################\n\n# bind_mat ====\n\n# here, atomic and recursive matrices are mixed,\n# resulting in a recursive matrix\n\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\nbind_mat(list(x = x, y = y), 2L)\n\n  A            B            C                  \na logical,3    logical,3    logical,3    1 5 9 \nb integer,10   integer,10   integer,10   2 6 10\nc numeric,10   numeric,10   numeric,10   3 7 11\nd character,26 character,26 character,26 4 8 12\n\n################################################################################\n\n# bind_dt ====\n\n\nx &lt;- data.frame(a = 1:12, b = month.abb) # data.frame\ny &lt;- data.table::data.table(a = 1:12, b = month.abb) # data.table\n\nbind_dt(list(x = x, y = y), 2L) # column bind\n\n      x.a    x.b   y.a    y.b\n    &lt;int&gt; &lt;char&gt; &lt;int&gt; &lt;char&gt;\n 1:     1    Jan     1    Jan\n 2:     2    Feb     2    Feb\n 3:     3    Mar     3    Mar\n 4:     4    Apr     4    Apr\n 5:     5    May     5    May\n 6:     6    Jun     6    Jun\n 7:     7    Jul     7    Jul\n 8:     8    Aug     8    Aug\n 9:     9    Sep     9    Sep\n10:    10    Oct    10    Oct\n11:    11    Nov    11    Nov\n12:    12    Dec    12    Dec\n\nbind_dt(list(x = x, y = y), 1L) # row bind\n\n        a      b\n    &lt;int&gt; &lt;char&gt;\n 1:     1    Jan\n 2:     2    Feb\n 3:     3    Mar\n 4:     4    Apr\n 5:     5    May\n 6:     6    Jun\n 7:     7    Jul\n 8:     8    Aug\n 9:     9    Sep\n10:    10    Oct\n11:    11    Nov\n12:    12    Dec\n13:     1    Jan\n14:     2    Feb\n15:     3    Mar\n16:     4    Apr\n17:     5    May\n18:     6    Jun\n19:     7    Jul\n20:     8    Aug\n21:     9    Sep\n22:    10    Oct\n23:    11    Nov\n24:    12    Dec\n        a      b"
  },
  {
    "objectID": "man/bind.html#dimensional-binding-of-objects",
    "href": "man/bind.html#dimensional-binding-of-objects",
    "title": "bind",
    "section": "",
    "text": "The bind_implementations provide dimensional binding functionalities.   The following implementations are available:\n\n\nbind_mat() binds dimensionless (atomic/recursive) vectors and (atomic/recursive) matrices row- or column-wise.  Allows for recycling.\n\n\nbind_array() binds (atomic/recursive) arrays and (atomic/recursive) matrices.  Allows for broadcasting.\n\n\nbind_dt() binds data.tables and other data.frame-like objects.  This function is only available if the ‘data.table’ package is installed.  Returns a data.table.  Faster than do.call(cbind, …) or do.call(rbind, …) for regular data.frame objects. \n\n\nNote that the naming convention of the binding implementations here is \"bind_\" followed by the resulting class (abbreviated).  I.e. bind_mat returns a matrix, but can bind both matrices and vectors.  And bind_array returns an array, but can bind both arrays and matrices.  And bind_dt returns a data.table, but can bind not only data.tables, but also most other data.frame-like objects.  \n\n\n\nbind_mat(input, along, name_deparse = TRUE, comnames_from = 1L)\n\nbind_array(\n  input,\n  along,\n  revalong,\n  max_bc = 1L,\n  name_along = TRUE,\n  comnames_from = 1L\n)\n\nbind_dt(input, along, ...)\n\n\n\n\n\n\n\n\ninput\n\n\na list of only the appropriate objects.  If input is named, its names will be used for the names of dimension along of the output, as far as possible.\n\n\n\n\nalong\n\n\na single integer, indicating the dimension along which to bind the dimensions.  I.e. use along = 1 for row-binding, along = 2 for column-binding, etc.  For arrays, additional flexibility is available:\n\n\nSpecifying along = 0 will bind the arrays on a new dimension before the first, making along the new first dimension.\n\n\nSpecifying along = N + 1, with N = max(lst.ndim(input)), will create an additional dimension (N + 1) and bind the arrays along that new dimension.\n\n\n\n\n\n\nname_deparse\n\n\nBoolean, for bind_mat().  Indicates if dimension along should be named.  Uses the naming method from rbind/cbind itself.\n\n\n\n\ncomnames_from\n\n\neither integer scalar or NULL, for bind_mat() and bind_array().  Indicates which object in input should be used for naming the shared dimension.  If NULL, no communal names will be given.  For example:  When binding columns of matrices, the matrices will share the same rownames.  Using comnames_from = 10 will then result in bind_array() using rownames(input[[10]]) for the rownames of the output.\n\n\n\n\nrevalong\n\n\nfor bind_array() only.  Same as along, but counting backwards.  I.e. revalong = 0 is equivalent to along = N+1, and revalong = N+1 is equivalent to along = 0;  with N = max(lst.ndim(input)).\n\n\n\n\nmax_bc\n\n\ninteger, for bind_array only.  Specify here the number of dimensions that are allowed to be broadcasted when binding arrays.  If max_bc = 0L, no broadcasting will be allowed at all.\n\n\n\n\nname_along\n\n\nBoolean, for bind_array().  Indicates if dimension along should be named.\n\n\n\n\n…\n\n\narguments to be passed to rbindlist.  \n\n\n\n\n\n\n\nFor in-depth information about the binding implentations in the ‘broadcast’ package, please refer to broadcast_bind.  \n\n\n\nThe bound object.\n\n\n\nPlate T, Heiberger R (2016). abind: Combine Multidimensional Arrays. R package version 1.4-5, https://CRAN.R-project.org/package=abind.\n\n\n\n\nlibrary(\"broadcast\")\n\n\n# bind_array ====\n\n# here, atomic and recursive arrays are mixed,\n# resulting in recursive arrays\n\n# creating the arrays\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\n# binding the arrays\ninput &lt;- list(x = x, y = y)\nbind_array(input, along = 0L) # binds on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\nbind_array(input, along = 1L) # binds on first dimension (i.e. rows)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, along = 2L)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, along = 3L) # bind on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 0L) # binds on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 1L) # binds on last dimension (i.e. columns)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, revalong = 2L)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, revalong = 3L) # bind on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\n# binding, with empty arrays\nemptyarray &lt;- array(numeric(0L), c(0L, 3L))\ndimnames(emptyarray) &lt;- list(NULL, paste(\"empty\", 1:3))\nprint(emptyarray)\n\n     empty 1 empty 2 empty 3\n\ninput &lt;- list(x = x, y = emptyarray)\nbind_array(input, along = 1L, comnames_from = 2L) # row-bind\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n################################################################################\n\n# bind_mat ====\n\n# here, atomic and recursive matrices are mixed,\n# resulting in a recursive matrix\n\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\nbind_mat(list(x = x, y = y), 2L)\n\n  A            B            C                  \na logical,3    logical,3    logical,3    1 5 9 \nb integer,10   integer,10   integer,10   2 6 10\nc numeric,10   numeric,10   numeric,10   3 7 11\nd character,26 character,26 character,26 4 8 12\n\n################################################################################\n\n# bind_dt ====\n\n\nx &lt;- data.frame(a = 1:12, b = month.abb) # data.frame\ny &lt;- data.table::data.table(a = 1:12, b = month.abb) # data.table\n\nbind_dt(list(x = x, y = y), 2L) # column bind\n\n      x.a    x.b   y.a    y.b\n    &lt;int&gt; &lt;char&gt; &lt;int&gt; &lt;char&gt;\n 1:     1    Jan     1    Jan\n 2:     2    Feb     2    Feb\n 3:     3    Mar     3    Mar\n 4:     4    Apr     4    Apr\n 5:     5    May     5    May\n 6:     6    Jun     6    Jun\n 7:     7    Jul     7    Jul\n 8:     8    Aug     8    Aug\n 9:     9    Sep     9    Sep\n10:    10    Oct    10    Oct\n11:    11    Nov    11    Nov\n12:    12    Dec    12    Dec\n\nbind_dt(list(x = x, y = y), 1L) # row bind\n\n        a      b\n    &lt;int&gt; &lt;char&gt;\n 1:     1    Jan\n 2:     2    Feb\n 3:     3    Mar\n 4:     4    Apr\n 5:     5    May\n 6:     6    Jun\n 7:     7    Jul\n 8:     8    Aug\n 9:     9    Sep\n10:    10    Oct\n11:    11    Nov\n12:    12    Dec\n13:     1    Jan\n14:     2    Feb\n15:     3    Mar\n16:     4    Apr\n17:     5    May\n18:     6    Jun\n19:     7    Jul\n20:     8    Aug\n21:     9    Sep\n22:    10    Oct\n23:    11    Nov\n24:    12    Dec\n        a      b"
  },
  {
    "objectID": "man/bc_ifelse.html",
    "href": "man/bc_ifelse.html",
    "title": "bc_ifelse",
    "section": "",
    "text": "The bc_ifelse() S4 generic method performs a broadcasted form of ifelse. \n\n\n\nbc_ifelse(cond, yes, no)\n\n\n\n\n\n\n\n\ncond\n\n\nlogical vector or array with the length equal to prod(bc_dim(yes, no)).\n\n\n\n\nyes, no\n\n\nconformable arrays of the same type.  All atomic types (see atomic) are supported.  Recursive arrays of type list are also supported.  since bc_ifelse() is an S4 generic, it can be extended to support special array classes. \n\n\n\n\n\n\n\nThe ouput, here referred to as out, will be an array of the same type as yes and no.  After broadcasting yes against no, given any element index i, the following will hold for the output:\n\n\nwhen cond[i] == TRUE, out[i] is yes[i];\n\n\nwhen cond[i] == FALSE, out[i] is no[i];\n\n\nwhen cond[i] is NA, out[i] is NA when yes and no are atomic, and out[i] is list(NULL) when yes and no are recursive.  \n\n\n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(c(10, 2,2))\nx.len &lt;- prod(x.dim)\n\ngen &lt;- function(n) sample(list(letters, month.abb, 1:10), n, TRUE)\n\nx &lt;- array(gen(10), x.dim)\ny &lt;- array(gen(10), c(10,1,1))\n\ncond &lt;- bc.list(\n  x, y,\n  \\(x, y)c(length(x) == length(y) && typeof(x) == typeof(y))\n) |&gt; as_bool()\n\nbc_ifelse(cond, yes = x, no = y)\n\n, , 1\n\n      [,1]         [,2]        \n [1,] character,26 character,26\n [2,] character,26 character,26\n [3,] character,12 character,12\n [4,] integer,10   integer,10  \n [5,] character,12 character,12\n [6,] character,26 character,26\n [7,] character,26 character,26\n [8,] integer,10   integer,10  \n [9,] character,12 character,12\n[10,] integer,10   integer,10  \n\n, , 2\n\n      [,1]         [,2]        \n [1,] character,26 character,26\n [2,] character,26 character,26\n [3,] character,12 character,12\n [4,] integer,10   integer,10  \n [5,] character,12 character,12\n [6,] character,26 character,26\n [7,] character,26 character,26\n [8,] integer,10   integer,10  \n [9,] character,12 character,12\n[10,] integer,10   integer,10"
  },
  {
    "objectID": "man/bc_ifelse.html#broadcasted-ifelse",
    "href": "man/bc_ifelse.html#broadcasted-ifelse",
    "title": "bc_ifelse",
    "section": "",
    "text": "The bc_ifelse() S4 generic method performs a broadcasted form of ifelse. \n\n\n\nbc_ifelse(cond, yes, no)\n\n\n\n\n\n\n\n\ncond\n\n\nlogical vector or array with the length equal to prod(bc_dim(yes, no)).\n\n\n\n\nyes, no\n\n\nconformable arrays of the same type.  All atomic types (see atomic) are supported.  Recursive arrays of type list are also supported.  since bc_ifelse() is an S4 generic, it can be extended to support special array classes. \n\n\n\n\n\n\n\nThe ouput, here referred to as out, will be an array of the same type as yes and no.  After broadcasting yes against no, given any element index i, the following will hold for the output:\n\n\nwhen cond[i] == TRUE, out[i] is yes[i];\n\n\nwhen cond[i] == FALSE, out[i] is no[i];\n\n\nwhen cond[i] is NA, out[i] is NA when yes and no are atomic, and out[i] is list(NULL) when yes and no are recursive.  \n\n\n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(c(10, 2,2))\nx.len &lt;- prod(x.dim)\n\ngen &lt;- function(n) sample(list(letters, month.abb, 1:10), n, TRUE)\n\nx &lt;- array(gen(10), x.dim)\ny &lt;- array(gen(10), c(10,1,1))\n\ncond &lt;- bc.list(\n  x, y,\n  \\(x, y)c(length(x) == length(y) && typeof(x) == typeof(y))\n) |&gt; as_bool()\n\nbc_ifelse(cond, yes = x, no = y)\n\n, , 1\n\n      [,1]         [,2]        \n [1,] character,26 character,26\n [2,] character,26 character,26\n [3,] character,12 character,12\n [4,] integer,10   integer,10  \n [5,] character,12 character,12\n [6,] character,26 character,26\n [7,] character,26 character,26\n [8,] integer,10   integer,10  \n [9,] character,12 character,12\n[10,] integer,10   integer,10  \n\n, , 2\n\n      [,1]         [,2]        \n [1,] character,26 character,26\n [2,] character,26 character,26\n [3,] character,12 character,12\n [4,] integer,10   integer,10  \n [5,] character,12 character,12\n [6,] character,26 character,26\n [7,] character,26 character,26\n [8,] integer,10   integer,10  \n [9,] character,12 character,12\n[10,] integer,10   integer,10"
  },
  {
    "objectID": "man/bcapply.html",
    "href": "man/bcapply.html",
    "title": "bcapply",
    "section": "",
    "text": "The bcapply() function applies a function to 2 arrays with broadcasting. \n\n\n\nbcapply(x, y, f, v = \"list\")\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable atomic or recursive arrays.\n\n\n\n\nf\n\n\na function that takes in exactly 2 arguments, and returns a result that can be stored in a single element of a recursive or atomic array.\n\n\n\n\nv\n\n\na single string, giving the scalar type for a single iteration.  If NULL or “list” (default), the result will be a recursive array.  If it is certain that, for every iteration, f() always results in a single atomic scalar, the user can specify the type in v to pre-allocate the result.  Pre-allocating the results leads to slightly faster and more memory efficient code.  NOTE: Incorrectly specifying v leads to undefined behaviour. \n\n\n\n\n\n\n\nAn atomic or recursive array with dimensions bc_dim(x, y). \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(c(10, 2,2))\nx.len &lt;- prod(x.dim)\n\ngen &lt;- function(n) sample(list(letters, month.abb, 1:10), n, TRUE)\n\nx &lt;- array(gen(10), x.dim)\ny &lt;- array(gen(10), c(10,1,1))\n\nf &lt;- function(x, y) list(x, y)\nbcapply(x, y, f)\n\n, , 1\n\n      [,1]   [,2]  \n [1,] list,2 list,2\n [2,] list,2 list,2\n [3,] list,2 list,2\n [4,] list,2 list,2\n [5,] list,2 list,2\n [6,] list,2 list,2\n [7,] list,2 list,2\n [8,] list,2 list,2\n [9,] list,2 list,2\n[10,] list,2 list,2\n\n, , 2\n\n      [,1]   [,2]  \n [1,] list,2 list,2\n [2,] list,2 list,2\n [3,] list,2 list,2\n [4,] list,2 list,2\n [5,] list,2 list,2\n [6,] list,2 list,2\n [7,] list,2 list,2\n [8,] list,2 list,2\n [9,] list,2 list,2\n[10,] list,2 list,2"
  },
  {
    "objectID": "man/bcapply.html#apply-a-function-to-2-broadcasted-arrays",
    "href": "man/bcapply.html#apply-a-function-to-2-broadcasted-arrays",
    "title": "bcapply",
    "section": "",
    "text": "The bcapply() function applies a function to 2 arrays with broadcasting. \n\n\n\nbcapply(x, y, f, v = \"list\")\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable atomic or recursive arrays.\n\n\n\n\nf\n\n\na function that takes in exactly 2 arguments, and returns a result that can be stored in a single element of a recursive or atomic array.\n\n\n\n\nv\n\n\na single string, giving the scalar type for a single iteration.  If NULL or “list” (default), the result will be a recursive array.  If it is certain that, for every iteration, f() always results in a single atomic scalar, the user can specify the type in v to pre-allocate the result.  Pre-allocating the results leads to slightly faster and more memory efficient code.  NOTE: Incorrectly specifying v leads to undefined behaviour. \n\n\n\n\n\n\n\nAn atomic or recursive array with dimensions bc_dim(x, y). \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(c(10, 2,2))\nx.len &lt;- prod(x.dim)\n\ngen &lt;- function(n) sample(list(letters, month.abb, 1:10), n, TRUE)\n\nx &lt;- array(gen(10), x.dim)\ny &lt;- array(gen(10), c(10,1,1))\n\nf &lt;- function(x, y) list(x, y)\nbcapply(x, y, f)\n\n, , 1\n\n      [,1]   [,2]  \n [1,] list,2 list,2\n [2,] list,2 list,2\n [3,] list,2 list,2\n [4,] list,2 list,2\n [5,] list,2 list,2\n [6,] list,2 list,2\n [7,] list,2 list,2\n [8,] list,2 list,2\n [9,] list,2 list,2\n[10,] list,2 list,2\n\n, , 2\n\n      [,1]   [,2]  \n [1,] list,2 list,2\n [2,] list,2 list,2\n [3,] list,2 list,2\n [4,] list,2 list,2\n [5,] list,2 list,2\n [6,] list,2 list,2\n [7,] list,2 list,2\n [8,] list,2 list,2\n [9,] list,2 list,2\n[10,] list,2 list,2"
  },
  {
    "objectID": "man/bc.list.html",
    "href": "man/bc.list.html",
    "title": "bc.list",
    "section": "",
    "text": "The bc.list() function performs broadcasted operations on 2 Recursive arrays. \n\n\n\nbc.list(x, y, f)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable Recursive arrays (i.e. arrays of type list).\n\n\n\n\nf\n\n\na function that takes in exactly 2 arguments, and returns a result that can be stored in a single element of a list. \n\n\n\n\n\n\n\nA recursive array. \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(c(10, 2,2))\nx.len &lt;- prod(x.dim)\n\ngen &lt;- function(n) sample(list(letters, month.abb, 1:10), n, TRUE)\n\nx &lt;- array(gen(10), x.dim)\ny &lt;- array(gen(10), c(10,1,1))\n\nbc.list(\n  x, y,\n  \\(x, y)c(length(x) == length(y), typeof(x) == typeof(y))\n)\n\n, , 1\n\n      [,1]      [,2]     \n [1,] logical,2 logical,2\n [2,] logical,2 logical,2\n [3,] logical,2 logical,2\n [4,] logical,2 logical,2\n [5,] logical,2 logical,2\n [6,] logical,2 logical,2\n [7,] logical,2 logical,2\n [8,] logical,2 logical,2\n [9,] logical,2 logical,2\n[10,] logical,2 logical,2\n\n, , 2\n\n      [,1]      [,2]     \n [1,] logical,2 logical,2\n [2,] logical,2 logical,2\n [3,] logical,2 logical,2\n [4,] logical,2 logical,2\n [5,] logical,2 logical,2\n [6,] logical,2 logical,2\n [7,] logical,2 logical,2\n [8,] logical,2 logical,2\n [9,] logical,2 logical,2\n[10,] logical,2 logical,2"
  },
  {
    "objectID": "man/bc.list.html#broadcasted-operations-for-recursive-arrays",
    "href": "man/bc.list.html#broadcasted-operations-for-recursive-arrays",
    "title": "bc.list",
    "section": "",
    "text": "The bc.list() function performs broadcasted operations on 2 Recursive arrays. \n\n\n\nbc.list(x, y, f)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable Recursive arrays (i.e. arrays of type list).\n\n\n\n\nf\n\n\na function that takes in exactly 2 arguments, and returns a result that can be stored in a single element of a list. \n\n\n\n\n\n\n\nA recursive array. \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(c(10, 2,2))\nx.len &lt;- prod(x.dim)\n\ngen &lt;- function(n) sample(list(letters, month.abb, 1:10), n, TRUE)\n\nx &lt;- array(gen(10), x.dim)\ny &lt;- array(gen(10), c(10,1,1))\n\nbc.list(\n  x, y,\n  \\(x, y)c(length(x) == length(y), typeof(x) == typeof(y))\n)\n\n, , 1\n\n      [,1]      [,2]     \n [1,] logical,2 logical,2\n [2,] logical,2 logical,2\n [3,] logical,2 logical,2\n [4,] logical,2 logical,2\n [5,] logical,2 logical,2\n [6,] logical,2 logical,2\n [7,] logical,2 logical,2\n [8,] logical,2 logical,2\n [9,] logical,2 logical,2\n[10,] logical,2 logical,2\n\n, , 2\n\n      [,1]      [,2]     \n [1,] logical,2 logical,2\n [2,] logical,2 logical,2\n [3,] logical,2 logical,2\n [4,] logical,2 logical,2\n [5,] logical,2 logical,2\n [6,] logical,2 logical,2\n [7,] logical,2 logical,2\n [8,] logical,2 logical,2\n [9,] logical,2 logical,2\n[10,] logical,2 logical,2"
  },
  {
    "objectID": "man/bc.d.html",
    "href": "man/bc.d.html",
    "title": "bc.d",
    "section": "",
    "text": "The bc.d() function performs broadcasted decimal numeric operations on 2 numeric or logical arrays.  bc.num() is an alias for bc.d().  \n\n\n\nbc.d(x, y, op, prec = sqrt(.Machine\\$double.eps))\n\nbc.num(x, y, op, prec = sqrt(.Machine\\$double.eps))\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable logical or numeric arrays.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported arithmetic operators: +, -, *, /, ^, pmin, pmax.  Supported relational operators: ==, !=, &lt;, &gt;, &lt;=, &gt;=, d==, d!=, d&lt;, d&gt;, d&lt;=, d&gt;=. \n\n\n\n\nprec\n\n\na single number between 0 and 0.1, giving the machine precision to use.  Only relevant for the following operators:  d==, d!=, d&lt;, d&gt;, d&lt;=, d&gt;=  See the d==, d!=, d&lt;, d&gt;, d&lt;=, d&gt;= operators from the ‘tinycodet’ package for details. \n\n\n\n\n\n\n\nFor arithmetic operators:  A numeric array as a result of the broadcasted decimal arithmetic operation.   For relational operators:  A logical array as a result of the broadcasted decimal relational comparison.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(NA, 1.1:1000.1), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\nbc.d(x, y, \"+\")\n\n, , 1\n\n       [,1]   [,2]  [,3]  [,4]  [,5]   [,6]  [,7]  [,8]  [,9]\n [1,] 626.1  480.1 119.1 219.1 465.1  319.1 135.1 828.1 270.1\n [2,] 964.1  558.1 986.1 463.1 479.1  336.1 655.1 426.1  93.1\n [3,] 538.1  568.1 253.1 761.1 859.1  181.1 562.1 511.1 725.1\n [4,] 796.1  101.1 582.1 525.1 835.1  918.1 604.1 572.1 443.1\n [5,] 563.1  886.1 725.1 495.1 935.1  304.1 711.1  73.1  96.1\n [6,]  71.1   95.1 339.1  52.1 531.1  139.1 876.1 191.1 896.1\n [7,] 927.1  708.1 748.1  97.1  16.1  986.1 119.1  78.1 697.1\n [8,] 446.1 1001.1 564.1 210.1 423.1 1003.1 314.1 428.1 972.1\n [9,] 975.1  501.1 712.1  56.1 657.1  523.1 960.1 340.1 428.1\n[10,] 886.1  346.1 807.1 201.1 711.1  230.1 441.1 895.1 239.1\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]   [,7]  [,8]  [,9]\n [1,] 943.1 421.1 124.1 295.1 872.1  79.1  806.1 264.1 956.1\n [2,] 658.1 139.1 799.1 710.1 286.1 171.1  408.1 798.1 726.1\n [3,] 528.1 718.1 697.1 332.1 382.1 168.1  686.1 661.1 676.1\n [4,] 461.1 599.1 895.1 789.1 832.1 573.1  807.1 611.1 831.1\n [5,] 389.1 833.1 205.1  13.1 939.1 385.1  690.1 918.1 116.1\n [6,] 804.1 850.1 756.1 301.1 999.1 191.1  386.1 533.1 282.1\n [7,] 496.1 292.1 444.1 967.1 843.1 277.1  137.1 235.1 168.1\n [8,] 541.1 458.1 214.1 762.1 133.1 316.1  988.1 692.1 525.1\n [9,] 611.1 769.1 627.1 437.1 569.1 489.1 1008.1 513.1 699.1\n[10,] 381.1  90.1 954.1 146.1 415.1 238.1  502.1 733.1 523.1\n\n, , 3\n\n       [,1]   [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 898.1  352.1 214.1 182.1 751.1 121.1 395.1 412.1  72.1\n [2,] 239.1  784.1 415.1 412.1 543.1 384.1 220.1 606.1 677.1\n [3,] 811.1  583.1 766.1 697.1 517.1 763.1 988.1 963.1 974.1\n [4,] 467.1  967.1 225.1 270.1 119.1 664.1 321.1 403.1 129.1\n [5,] 932.1  121.1 783.1 913.1 802.1 303.1 547.1 200.1 918.1\n [6,] 293.1  134.1 216.1 138.1 501.1 117.1 878.1 255.1 787.1\n [7,] 369.1   53.1 125.1 833.1 643.1 790.1 989.1 799.1 495.1\n [8,] 236.1  891.1 504.1 730.1 380.1 708.1 414.1 324.1 924.1\n [9,] 980.1  987.1 925.1 720.1 878.1 390.1 392.1 967.1 413.1\n[10,] 513.1 1000.1 808.1 650.1 235.1 940.1 287.1 177.1 874.1\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 404.1 765.1 722.1 140.1 200.1 844.1 617.1 472.1 783.1\n [2,] 990.1 796.1 147.1   5.1 964.1 600.1 296.1 695.1 271.1\n [3,] 917.1 199.1 140.1 504.1  90.1 779.1 659.1 194.1 435.1\n [4,] 293.1 145.1 336.1 460.1 646.1 991.1 237.1 213.1 945.1\n [5,] 483.1 226.1 383.1 797.1  70.1 971.1 590.1 809.1 408.1\n [6,] 697.1 233.1 200.1 322.1  64.1 409.1  85.1  76.1 294.1\n [7,] 519.1  48.1 950.1 851.1 719.1 918.1 850.1 732.1 759.1\n [8,] 111.1 908.1 411.1  75.1  64.1  50.1  17.1 947.1 462.1\n [9,] 785.1  39.1 137.1 349.1 640.1 684.1 525.1  24.1  23.1\n[10,] 683.1 283.1 489.1 603.1 299.1 382.1 476.1 863.1 557.1\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 993.1  69.1 112.1 169.1 534.1 882.1 519.1  66.1 733.1\n [2,] 821.1 366.1 971.1  32.1 222.1 537.1 136.1 818.1 209.1\n [3,] 516.1 552.1 788.1 272.1 890.1 113.1 622.1 187.1 847.1\n [4,] 336.1 669.1 678.1  74.1  76.1 606.1 347.1 738.1   6.1\n [5,] 758.1  51.1 378.1 455.1 968.1 575.1 470.1 687.1  42.1\n [6,]  80.1 185.1 471.1 344.1 910.1 946.1 262.1 603.1 772.1\n [7,] 696.1 124.1 869.1 260.1 912.1 586.1 620.1 505.1 662.1\n [8,] 468.1 653.1 956.1 109.1 108.1 541.1 902.1 529.1 241.1\n [9,]  50.1 851.1 190.1  66.1 794.1 377.1  99.1 134.1 590.1\n[10,] 710.1 204.1  94.1 384.1 283.1 396.1 347.1 284.1 950.1\n\n, , 6\n\n        [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  453.1 504.1 786.1 689.1 945.1 926.1 825.1 555.1 518.1\n [2,]  752.1  18.1 820.1 515.1 839.1 937.1 298.1 467.1 373.1\n [3,]  299.1 717.1  97.1 489.1 142.1  53.1 204.1 107.1 151.1\n [4,]  793.1 607.1 897.1 561.1 461.1 167.1 793.1 349.1 367.1\n [5,]  247.1 384.1 496.1 768.1  54.1  12.1 440.1 194.1 487.1\n [6,]  423.1 462.1 332.1 155.1 624.1 164.1 534.1 840.1 607.1\n [7,]  821.1 583.1 543.1 894.1  97.1 374.1 258.1 727.1 160.1\n [8,]  630.1 389.1 470.1  91.1 428.1 468.1 974.1 332.1 713.1\n [9,] 1008.1 181.1 161.1 730.1 119.1 728.1 181.1 818.1 290.1\n[10,]  237.1  62.1 958.1 669.1 474.1 895.1 298.1 599.1 653.1\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 483.1 315.1 582.1 869.1 698.1 815.1 222.1 751.1 592.1\n [2,] 104.1 280.1 202.1 958.1 409.1 591.1 807.1 202.1 326.1\n [3,] 762.1 817.1 522.1 905.1 427.1 422.1   9.1 480.1 250.1\n [4,] 696.1  95.1 720.1 580.1 140.1 440.1 120.1 249.1 452.1\n [5,] 560.1 750.1 567.1 250.1 480.1 508.1 226.1 536.1 248.1\n [6,] 609.1 521.1  36.1 362.1 208.1 146.1 773.1 418.1 284.1\n [7,] 264.1 656.1 863.1 251.1 801.1 162.1  49.1 765.1 718.1\n [8,] 711.1 749.1 605.1  72.1 372.1 766.1 964.1 561.1 299.1\n [9,] 754.1 963.1 399.1 969.1 100.1 473.1 973.1 865.1 333.1\n[10,]  45.1  44.1 318.1 107.1 203.1 228.1 960.1 232.1 261.1\n\n, , 8\n\n       [,1]  [,2]  [,3]   [,4]  [,5]   [,6]  [,7]  [,8]  [,9]\n [1,] 463.1 430.1 622.1  814.1 782.1   93.1 464.1 342.1 373.1\n [2,] 128.1 689.1 618.1  751.1 991.1  526.1 395.1 302.1 975.1\n [3,] 371.1  95.1 532.1  705.1  89.1  353.1  67.1 852.1 347.1\n [4,] 720.1 879.1 245.1  345.1 153.1  165.1 663.1 535.1 698.1\n [5,] 747.1 954.1  34.1  516.1 348.1 1005.1 924.1 385.1 607.1\n [6,] 417.1 964.1 855.1  421.1 161.1  650.1 908.1 112.1 424.1\n [7,] 709.1 484.1   8.1  836.1 216.1  816.1 587.1  24.1 347.1\n [8,] 361.1 618.1 213.1 1002.1 904.1  761.1 782.1 582.1 914.1\n [9,] 620.1 333.1 708.1  284.1 473.1  970.1 475.1 620.1 744.1\n[10,] 835.1 423.1 444.1  919.1 481.1 1010.1 209.1 567.1 634.1\n\nbc.d(x, y, \"-\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 624.1 478.1 117.1 217.1 463.1 317.1 133.1 826.1 268.1\n [2,] 960.1 554.1 982.1 459.1 475.1 332.1 651.1 422.1  89.1\n [3,] 532.1 562.1 247.1 755.1 853.1 175.1 556.1 505.1 719.1\n [4,] 788.1  93.1 574.1 517.1 827.1 910.1 596.1 564.1 435.1\n [5,] 553.1 876.1 715.1 485.1 925.1 294.1 701.1  63.1  86.1\n [6,]  59.1  83.1 327.1  40.1 519.1 127.1 864.1 179.1 884.1\n [7,] 913.1 694.1 734.1  83.1   2.1 972.1 105.1  64.1 683.1\n [8,] 430.1 985.1 548.1 194.1 407.1 987.1 298.1 412.1 956.1\n [9,] 957.1 483.1 694.1  38.1 639.1 505.1 942.1 322.1 410.1\n[10,] 866.1 326.1 787.1 181.1 691.1 210.1 421.1 875.1 219.1\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 941.1 419.1 122.1 293.1 870.1  77.1 804.1 262.1 954.1\n [2,] 654.1 135.1 795.1 706.1 282.1 167.1 404.1 794.1 722.1\n [3,] 522.1 712.1 691.1 326.1 376.1 162.1 680.1 655.1 670.1\n [4,] 453.1 591.1 887.1 781.1 824.1 565.1 799.1 603.1 823.1\n [5,] 379.1 823.1 195.1   3.1 929.1 375.1 680.1 908.1 106.1\n [6,] 792.1 838.1 744.1 289.1 987.1 179.1 374.1 521.1 270.1\n [7,] 482.1 278.1 430.1 953.1 829.1 263.1 123.1 221.1 154.1\n [8,] 525.1 442.1 198.1 746.1 117.1 300.1 972.1 676.1 509.1\n [9,] 593.1 751.1 609.1 419.1 551.1 471.1 990.1 495.1 681.1\n[10,] 361.1  70.1 934.1 126.1 395.1 218.1 482.1 713.1 503.1\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 896.1 350.1 212.1 180.1 749.1 119.1 393.1 410.1  70.1\n [2,] 235.1 780.1 411.1 408.1 539.1 380.1 216.1 602.1 673.1\n [3,] 805.1 577.1 760.1 691.1 511.1 757.1 982.1 957.1 968.1\n [4,] 459.1 959.1 217.1 262.1 111.1 656.1 313.1 395.1 121.1\n [5,] 922.1 111.1 773.1 903.1 792.1 293.1 537.1 190.1 908.1\n [6,] 281.1 122.1 204.1 126.1 489.1 105.1 866.1 243.1 775.1\n [7,] 355.1  39.1 111.1 819.1 629.1 776.1 975.1 785.1 481.1\n [8,] 220.1 875.1 488.1 714.1 364.1 692.1 398.1 308.1 908.1\n [9,] 962.1 969.1 907.1 702.1 860.1 372.1 374.1 949.1 395.1\n[10,] 493.1 980.1 788.1 630.1 215.1 920.1 267.1 157.1 854.1\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 402.1 763.1 720.1 138.1 198.1 842.1 615.1 470.1 781.1\n [2,] 986.1 792.1 143.1   1.1 960.1 596.1 292.1 691.1 267.1\n [3,] 911.1 193.1 134.1 498.1  84.1 773.1 653.1 188.1 429.1\n [4,] 285.1 137.1 328.1 452.1 638.1 983.1 229.1 205.1 937.1\n [5,] 473.1 216.1 373.1 787.1  60.1 961.1 580.1 799.1 398.1\n [6,] 685.1 221.1 188.1 310.1  52.1 397.1  73.1  64.1 282.1\n [7,] 505.1  34.1 936.1 837.1 705.1 904.1 836.1 718.1 745.1\n [8,]  95.1 892.1 395.1  59.1  48.1  34.1   1.1 931.1 446.1\n [9,] 767.1  21.1 119.1 331.1 622.1 666.1 507.1   6.1   5.1\n[10,] 663.1 263.1 469.1 583.1 279.1 362.1 456.1 843.1 537.1\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 991.1  67.1 110.1 167.1 532.1 880.1 517.1  64.1 731.1\n [2,] 817.1 362.1 967.1  28.1 218.1 533.1 132.1 814.1 205.1\n [3,] 510.1 546.1 782.1 266.1 884.1 107.1 616.1 181.1 841.1\n [4,] 328.1 661.1 670.1  66.1  68.1 598.1 339.1 730.1  -1.9\n [5,] 748.1  41.1 368.1 445.1 958.1 565.1 460.1 677.1  32.1\n [6,]  68.1 173.1 459.1 332.1 898.1 934.1 250.1 591.1 760.1\n [7,] 682.1 110.1 855.1 246.1 898.1 572.1 606.1 491.1 648.1\n [8,] 452.1 637.1 940.1  93.1  92.1 525.1 886.1 513.1 225.1\n [9,]  32.1 833.1 172.1  48.1 776.1 359.1  81.1 116.1 572.1\n[10,] 690.1 184.1  74.1 364.1 263.1 376.1 327.1 264.1 930.1\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 451.1 502.1 784.1 687.1 943.1 924.1 823.1 553.1 516.1\n [2,] 748.1  14.1 816.1 511.1 835.1 933.1 294.1 463.1 369.1\n [3,] 293.1 711.1  91.1 483.1 136.1  47.1 198.1 101.1 145.1\n [4,] 785.1 599.1 889.1 553.1 453.1 159.1 785.1 341.1 359.1\n [5,] 237.1 374.1 486.1 758.1  44.1   2.1 430.1 184.1 477.1\n [6,] 411.1 450.1 320.1 143.1 612.1 152.1 522.1 828.1 595.1\n [7,] 807.1 569.1 529.1 880.1  83.1 360.1 244.1 713.1 146.1\n [8,] 614.1 373.1 454.1  75.1 412.1 452.1 958.1 316.1 697.1\n [9,] 990.1 163.1 143.1 712.1 101.1 710.1 163.1 800.1 272.1\n[10,] 217.1  42.1 938.1 649.1 454.1 875.1 278.1 579.1 633.1\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 481.1 313.1 580.1 867.1 696.1 813.1 220.1 749.1 590.1\n [2,] 100.1 276.1 198.1 954.1 405.1 587.1 803.1 198.1 322.1\n [3,] 756.1 811.1 516.1 899.1 421.1 416.1   3.1 474.1 244.1\n [4,] 688.1  87.1 712.1 572.1 132.1 432.1 112.1 241.1 444.1\n [5,] 550.1 740.1 557.1 240.1 470.1 498.1 216.1 526.1 238.1\n [6,] 597.1 509.1  24.1 350.1 196.1 134.1 761.1 406.1 272.1\n [7,] 250.1 642.1 849.1 237.1 787.1 148.1  35.1 751.1 704.1\n [8,] 695.1 733.1 589.1  56.1 356.1 750.1 948.1 545.1 283.1\n [9,] 736.1 945.1 381.1 951.1  82.1 455.1 955.1 847.1 315.1\n[10,]  25.1  24.1 298.1  87.1 183.1 208.1 940.1 212.1 241.1\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 461.1 428.1 620.1 812.1 780.1  91.1 462.1 340.1 371.1\n [2,] 124.1 685.1 614.1 747.1 987.1 522.1 391.1 298.1 971.1\n [3,] 365.1  89.1 526.1 699.1  83.1 347.1  61.1 846.1 341.1\n [4,] 712.1 871.1 237.1 337.1 145.1 157.1 655.1 527.1 690.1\n [5,] 737.1 944.1  24.1 506.1 338.1 995.1 914.1 375.1 597.1\n [6,] 405.1 952.1 843.1 409.1 149.1 638.1 896.1 100.1 412.1\n [7,] 695.1 470.1  -5.9 822.1 202.1 802.1 573.1  10.1 333.1\n [8,] 345.1 602.1 197.1 986.1 888.1 745.1 766.1 566.1 898.1\n [9,] 602.1 315.1 690.1 266.1 455.1 952.1 457.1 602.1 726.1\n[10,] 815.1 403.1 424.1 899.1 461.1 990.1 189.1 547.1 614.1\n\nbc.d(x, y, \"*\")\n\n, , 1\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  625.1  479.1  118.1  218.1  464.1  318.1  134.1  827.1  269.1\n [2,] 1924.2 1112.2 1968.2  922.2  954.2  668.2 1306.2  848.2  182.2\n [3,] 1605.3 1695.3  750.3 2274.3 2568.3  534.3 1677.3 1524.3 2166.3\n [4,] 3168.4  388.4 2312.4 2084.4 3324.4 3656.4 2400.4 2272.4 1756.4\n [5,] 2790.5 4405.5 3600.5 2450.5 4650.5 1495.5 3530.5  340.5  455.5\n [6,]  390.6  534.6 1998.6  276.6 3150.6  798.6 5220.6 1110.6 5340.6\n [7,] 6440.7 4907.7 5187.7  630.7   63.7 6853.7  784.7  497.7 4830.7\n [8,] 3504.8 7944.8 4448.8 1616.8 3320.8 7960.8 2448.8 3360.8 7712.8\n [9,] 8694.9 4428.9 6327.9  423.9 5832.9 4626.9 8559.9 2979.9 3771.9\n[10,] 8761.0 3361.0 7971.0 1911.0 7011.0 2201.0 4311.0 8851.0 2291.0\n\n, , 2\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  942.1  420.1  123.1  294.1  871.1   78.1  805.1  263.1  955.1\n [2,] 1312.2  274.2 1594.2 1416.2  568.2  338.2  812.2 1592.2 1448.2\n [3,] 1575.3 2145.3 2082.3  987.3 1137.3  495.3 2049.3 1974.3 2019.3\n [4,] 1828.4 2380.4 3564.4 3140.4 3312.4 2276.4 3212.4 2428.4 3308.4\n [5,] 1920.5 4140.5 1000.5   40.5 4670.5 1900.5 3425.5 4565.5  555.5\n [6,] 4788.6 5064.6 4500.6 1770.6 5958.6 1110.6 2280.6 3162.6 1656.6\n [7,] 3423.7 1995.7 3059.7 6720.7 5852.7 1890.7  910.7 1596.7 1127.7\n [8,] 4264.8 3600.8 1648.8 6032.8 1000.8 2464.8 7840.8 5472.8 4136.8\n [9,] 5418.9 6840.9 5562.9 3852.9 5040.9 4320.9 8991.9 4536.9 6210.9\n[10,] 3711.0  801.0 9441.0 1361.0 4051.0 2281.0 4921.0 7231.0 5131.0\n\n, , 3\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  897.1  351.1  213.1  181.1  750.1  120.1  394.1  411.1   71.1\n [2,]  474.2 1564.2  826.2  820.2 1082.2  764.2  436.2 1208.2 1350.2\n [3,] 2424.3 1740.3 2289.3 2082.3 1542.3 2280.3 2955.3 2880.3 2913.3\n [4,] 1852.4 3852.4  884.4 1064.4  460.4 2640.4 1268.4 1596.4  500.4\n [5,] 4635.5  580.5 3890.5 4540.5 3985.5 1490.5 2710.5  975.5 4565.5\n [6,] 1722.6  768.6 1260.6  792.6 2970.6  666.6 5232.6 1494.6 4686.6\n [7,] 2534.7  322.7  826.7 5782.7 4452.7 5481.7 6874.7 5544.7 3416.7\n [8,] 1824.8 7064.8 3968.8 5776.8 2976.8 5600.8 3248.8 2528.8 7328.8\n [9,] 8739.9 8802.9 8244.9 6399.9 7821.9 3429.9 3447.9 8622.9 3636.9\n[10,] 5031.0 9901.0 7981.0 6401.0 2251.0 9301.0 2771.0 1671.0 8641.0\n\n, , 4\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  403.1  764.1  721.1  139.1  199.1  843.1  616.1  471.1  782.1\n [2,] 1976.2 1588.2  290.2    6.2 1924.2 1196.2  588.2 1386.2  538.2\n [3,] 2742.3  588.3  411.3 1503.3  261.3 2328.3 1968.3  573.3 1296.3\n [4,] 1156.4  564.4 1328.4 1824.4 2568.4 3948.4  932.4  836.4 3764.4\n [5,] 2390.5 1105.5 1890.5 3960.5  325.5 4830.5 2925.5 4020.5 2015.5\n [6,] 4146.6 1362.6 1164.6 1896.6  348.6 2418.6  474.6  420.6 1728.6\n [7,] 3584.7  287.7 6601.7 5908.7 4984.7 6377.7 5901.7 5075.7 5264.7\n [8,]  824.8 7200.8 3224.8  536.8  448.8  336.8   72.8 7512.8 3632.8\n [9,] 6984.9  270.9 1152.9 3060.9 5679.9 6075.9 4644.9  135.9  126.9\n[10,] 6731.0 2731.0 4791.0 5931.0 2891.0 3721.0 4661.0 8531.0 5471.0\n\n, , 5\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  992.1   68.1  111.1  168.1  533.1  881.1  518.1   65.1  732.1\n [2,] 1638.2  728.2 1938.2   60.2  440.2 1070.2  268.2 1632.2  414.2\n [3,] 1539.3 1647.3 2355.3  807.3 2661.3  330.3 1857.3  552.3 2532.3\n [4,] 1328.4 2660.4 2696.4  280.4  288.4 2408.4 1372.4 2936.4    8.4\n [5,] 3765.5  230.5 1865.5 2250.5 4815.5 2850.5 2325.5 3410.5  185.5\n [6,]  444.6 1074.6 2790.6 2028.6 5424.6 5640.6 1536.6 3582.6 4596.6\n [7,] 4823.7  819.7 6034.7 1771.7 6335.7 4053.7 4291.7 3486.7 4585.7\n [8,] 3680.8 5160.8 7584.8  808.8  800.8 4264.8 7152.8 4168.8 1864.8\n [9,]  369.9 7578.9 1629.9  513.9 7065.9 3312.9  810.9 1125.9 5229.9\n[10,] 7001.0 1941.0  841.0 3741.0 2731.0 3861.0 3371.0 2741.0 9401.0\n\n, , 6\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  452.1  503.1  785.1  688.1  944.1  925.1  824.1  554.1  517.1\n [2,] 1500.2   32.2 1636.2 1026.2 1674.2 1870.2  592.2  930.2  742.2\n [3,]  888.3 2142.3  282.3 1458.3  417.3  150.3  603.3  312.3  444.3\n [4,] 3156.4 2412.4 3572.4 2228.4 1828.4  652.4 3156.4 1380.4 1452.4\n [5,] 1210.5 1895.5 2455.5 3815.5  245.5   35.5 2175.5  945.5 2410.5\n [6,] 2502.6 2736.6 1956.6  894.6 3708.6  948.6 3168.6 5004.6 3606.6\n [7,] 5698.7 4032.7 3752.7 6209.7  630.7 2569.7 1757.7 5040.7 1071.7\n [8,] 4976.8 3048.8 3696.8  664.8 3360.8 3680.8 7728.8 2592.8 5640.8\n [9,] 8991.9 1548.9 1368.9 6489.9  990.9 6471.9 1548.9 7281.9 2529.9\n[10,] 2271.0  521.0 9481.0 6591.0 4641.0 8851.0 2881.0 5891.0 6431.0\n\n, , 7\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  482.1  314.1  581.1  868.1  697.1  814.1  221.1  750.1  591.1\n [2,]  204.2  556.2  400.2 1912.2  814.2 1178.2 1610.2  400.2  648.2\n [3,] 2277.3 2442.3 1557.3 2706.3 1272.3 1257.3   18.3 1431.3  741.3\n [4,] 2768.4  364.4 2864.4 2304.4  544.4 1744.4  464.4  980.4 1792.4\n [5,] 2775.5 3725.5 2810.5 1225.5 2375.5 2515.5 1105.5 2655.5 1215.5\n [6,] 3618.6 3090.6  180.6 2136.6 1212.6  840.6 4602.6 2472.6 1668.6\n [7,] 1799.7 4543.7 5992.7 1708.7 5558.7 1085.7  294.7 5306.7 4977.7\n [8,] 5624.8 5928.8 4776.8  512.8 2912.8 6064.8 7648.8 4424.8 2328.8\n [9,] 6705.9 8586.9 3510.9 8640.9  819.9 4176.9 8676.9 7704.9 2916.9\n[10,]  351.0  341.0 3081.0  971.0 1931.0 2181.0 9501.0 2221.0 2511.0\n\n, , 8\n\n        [,1]   [,2]   [,3]   [,4]   [,5]    [,6]   [,7]   [,8]   [,9]\n [1,]  462.1  429.1  621.1  813.1  781.1    92.1  463.1  341.1  372.1\n [2,]  252.2 1374.2 1232.2 1498.2 1978.2  1048.2  786.2  600.2 1946.2\n [3,] 1104.3  276.3 1587.3 2106.3  258.3  1050.3  192.3 2547.3 1032.3\n [4,] 2864.4 3500.4  964.4 1364.4  596.4   644.4 2636.4 2124.4 2776.4\n [5,] 3710.5 4745.5  145.5 2555.5 1715.5  5000.5 4595.5 1900.5 3010.5\n [6,] 2466.6 5748.6 5094.6 2490.6  930.6  3864.6 5412.6  636.6 2508.6\n [7,] 4914.7 3339.7    7.7 5803.7 1463.7  5663.7 4060.7  119.7 2380.7\n [8,] 2824.8 4880.8 1640.8 7952.8 7168.8  6024.8 6192.8 4592.8 7248.8\n [9,] 5499.9 2916.9 6291.9 2475.9 4176.9  8649.9 4194.9 5499.9 6615.9\n[10,] 8251.0 4131.0 4341.0 9091.0 4711.0 10001.0 1991.0 5571.0 6241.0\n\nbc.d(x, y, \"/\")\n\n, , 1\n\n          [,1]      [,2]      [,3]       [,4]      [,5]      [,6]      [,7]\n [1,] 625.1000 479.10000 118.10000 218.100000 464.10000 318.10000 134.10000\n [2,] 481.0500 278.05000 492.05000 230.550000 238.55000 167.05000 326.55000\n [3,] 178.3667 188.36667  83.36667 252.700000 285.36667  59.36667 186.36667\n [4,] 198.0250  24.27500 144.52500 130.275000 207.77500 228.52500 150.02500\n [5,] 111.6200 176.22000 144.02000  98.020000 186.02000  59.82000 141.22000\n [6,]  10.8500  14.85000  55.51667   7.683333  87.51667  22.18333 145.01667\n [7,] 131.4429 100.15714 105.87143  12.871429   1.30000 139.87143  16.01429\n [8,]  54.7625 124.13750  69.51250  25.262500  51.88750 124.38750  38.26250\n [9,] 107.3444  54.67778  78.12222   5.233333  72.01111  57.12222 105.67778\n[10,]  87.6100  33.61000  79.71000  19.110000  70.11000  22.01000  43.11000\n           [,8]      [,9]\n [1,] 827.10000 269.10000\n [2,] 212.05000  45.55000\n [3,] 169.36667 240.70000\n [4,] 142.02500 109.77500\n [5,]  13.62000  18.22000\n [6,]  30.85000 148.35000\n [7,]  10.15714  98.58571\n [8,]  52.51250 120.51250\n [9,]  36.78889  46.56667\n[10,]  88.51000  22.91000\n\n, , 2\n\n           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]\n [1,] 942.10000 420.10000 123.10000 294.10000 871.10000  78.10000 805.10000\n [2,] 328.05000  68.55000 398.55000 354.05000 142.05000  84.55000 203.05000\n [3,] 175.03333 238.36667 231.36667 109.70000 126.36667  55.03333 227.70000\n [4,] 114.27500 148.77500 222.77500 196.27500 207.02500 142.27500 200.77500\n [5,]  76.82000 165.62000  40.02000   1.62000 186.82000  76.02000 137.02000\n [6,] 133.01667 140.68333 125.01667  49.18333 165.51667  30.85000  63.35000\n [7,]  69.87143  40.72857  62.44286 137.15714 119.44286  38.58571  18.58571\n [8,]  66.63750  56.26250  25.76250  94.26250  15.63750  38.51250 122.51250\n [9,]  66.90000  84.45556  68.67778  47.56667  62.23333  53.34444 111.01111\n[10,]  37.11000   8.01000  94.41000  13.61000  40.51000  22.81000  49.21000\n           [,8]      [,9]\n [1,] 263.10000 955.10000\n [2,] 398.05000 362.05000\n [3,] 219.36667 224.36667\n [4,] 151.77500 206.77500\n [5,] 182.62000  22.22000\n [6,]  87.85000  46.01667\n [7,]  32.58571  23.01429\n [8,]  85.51250  64.63750\n [9,]  56.01111  76.67778\n[10,]  72.31000  51.31000\n\n, , 3\n\n           [,1]       [,2]      [,3]      [,4]      [,5]      [,6]      [,7]\n [1,] 897.10000 351.100000 213.10000 181.10000 750.10000 120.10000 394.10000\n [2,] 118.55000 391.050000 206.55000 205.05000 270.55000 191.05000 109.05000\n [3,] 269.36667 193.366667 254.36667 231.36667 171.36667 253.36667 328.36667\n [4,] 115.77500 240.775000  55.27500  66.52500  28.77500 165.02500  79.27500\n [5,] 185.42000  23.220000 155.62000 181.62000 159.42000  59.62000 108.42000\n [6,]  47.85000  21.350000  35.01667  22.01667  82.51667  18.51667 145.35000\n [7,]  51.72857   6.585714  16.87143 118.01429  90.87143 111.87143 140.30000\n [8,]  28.51250 110.387500  62.01250  90.26250  46.51250  87.51250  50.76250\n [9,] 107.90000 108.677778 101.78889  79.01111  96.56667  42.34444  42.56667\n[10,]  50.31000  99.010000  79.81000  64.01000  22.51000  93.01000  27.71000\n           [,8]      [,9]\n [1,] 411.10000  71.10000\n [2,] 302.05000 337.55000\n [3,] 320.03333 323.70000\n [4,]  99.77500  31.27500\n [5,]  39.02000 182.62000\n [6,]  41.51667 130.18333\n [7,] 113.15714  69.72857\n [8,]  39.51250 114.51250\n [9,] 106.45556  44.90000\n[10,]  16.71000  86.41000\n\n, , 4\n\n           [,1]       [,2]      [,3]      [,4]       [,5]      [,6]      [,7]\n [1,] 403.10000 764.100000 721.10000 139.10000 199.100000 843.10000 616.10000\n [2,] 494.05000 397.050000  72.55000   1.55000 481.050000 299.05000 147.05000\n [3,] 304.70000  65.366667  45.70000 167.03333  29.033333 258.70000 218.70000\n [4,]  72.27500  35.275000  83.02500 114.02500 160.525000 246.77500  58.27500\n [5,]  95.62000  44.220000  75.62000 158.42000  13.020000 193.22000 117.02000\n [6,] 115.18333  37.850000  32.35000  52.68333   9.683333  67.18333  13.18333\n [7,]  73.15714   5.871429 134.72857 120.58571 101.728571 130.15714 120.44286\n [8,]  12.88750 112.512500  50.38750   8.38750   7.012500   5.26250   1.13750\n [9,]  86.23333   3.344444  14.23333  37.78889  70.122222  75.01111  57.34444\n[10,]  67.31000  27.310000  47.91000  59.31000  28.910000  37.21000  46.61000\n            [,8]       [,9]\n [1,] 471.100000 782.100000\n [2,] 346.550000 134.550000\n [3,]  63.700000 144.033333\n [4,]  52.275000 235.275000\n [5,] 160.820000  80.620000\n [6,]  11.683333  48.016667\n [7,] 103.585714 107.442857\n [8,] 117.387500  56.762500\n [9,]   1.677778   1.566667\n[10,]  85.310000  54.710000\n\n, , 5\n\n            [,1]      [,2]      [,3]       [,4]      [,5]      [,6]      [,7]\n [1,] 992.100000  68.10000 111.10000 168.100000 533.10000 881.10000 518.10000\n [2,] 409.550000 182.05000 484.55000  15.050000 110.05000 267.55000  67.05000\n [3,] 171.033333 183.03333 261.70000  89.700000 295.70000  36.70000 206.36667\n [4,]  83.025000 166.27500 168.52500  17.525000  18.02500 150.52500  85.77500\n [5,] 150.620000   9.22000  74.62000  90.020000 192.62000 114.02000  93.02000\n [6,]  12.350000  29.85000  77.51667  56.350000 150.68333 156.68333  42.68333\n [7,]  98.442857  16.72857 123.15714  36.157143 129.30000  82.72857  87.58571\n [8,]  57.512500  80.63750 118.51250  12.637500  12.51250  66.63750 111.76250\n [9,]   4.566667  93.56667  20.12222   6.344444  87.23333  40.90000  10.01111\n[10,]  70.010000  19.41000   8.41000  37.410000  27.31000  38.61000  33.71000\n           [,8]      [,9]\n [1,]  65.10000 732.10000\n [2,] 408.05000 103.55000\n [3,]  61.36667 281.36667\n [4,] 183.52500   0.52500\n [5,] 136.42000   7.42000\n [6,]  99.51667 127.68333\n [7,]  71.15714  93.58571\n [8,]  65.13750  29.13750\n [9,]  13.90000  64.56667\n[10,]  27.41000  94.01000\n\n, , 6\n\n           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]\n [1,] 452.10000 503.10000 785.10000 688.10000 944.10000 925.10000 824.10000\n [2,] 375.05000   8.05000 409.05000 256.55000 418.55000 467.55000 148.05000\n [3,]  98.70000 238.03333  31.36667 162.03333  46.36667  16.70000  67.03333\n [4,] 197.27500 150.77500 223.27500 139.27500 114.27500  40.77500 197.27500\n [5,]  48.42000  75.82000  98.22000 152.62000   9.82000   1.42000  87.02000\n [6,]  69.51667  76.01667  54.35000  24.85000 103.01667  26.35000  88.01667\n [7,] 116.30000  82.30000  76.58571 126.72857  12.87143  52.44286  35.87143\n [8,]  77.76250  47.63750  57.76250  10.38750  52.51250  57.51250 120.76250\n [9,] 111.01111  19.12222  16.90000  80.12222  12.23333  79.90000  19.12222\n[10,]  22.71000   5.21000  94.81000  65.91000  46.41000  88.51000  28.81000\n          [,8]      [,9]\n [1,] 554.1000 517.10000\n [2,] 232.5500 185.55000\n [3,]  34.7000  49.36667\n [4,]  86.2750  90.77500\n [5,]  37.8200  96.42000\n [6,] 139.0167 100.18333\n [7,] 102.8714  21.87143\n [8,]  40.5125  88.13750\n [9,]  89.9000  31.23333\n[10,]  58.9100  64.31000\n\n, , 7\n\n           [,1]      [,2]       [,3]      [,4]      [,5]      [,6]       [,7]\n [1,] 482.10000 314.10000 581.100000 868.10000 697.10000 814.10000 221.100000\n [2,]  51.05000 139.05000 100.050000 478.05000 203.55000 294.55000 402.550000\n [3,] 253.03333 271.36667 173.033333 300.70000 141.36667 139.70000   2.033333\n [4,] 173.02500  22.77500 179.025000 144.02500  34.02500 109.02500  29.025000\n [5,] 111.02000 149.02000 112.420000  49.02000  95.02000 100.62000  44.220000\n [6,] 100.51667  85.85000   5.016667  59.35000  33.68333  23.35000 127.850000\n [7,]  36.72857  92.72857 122.300000  34.87143 113.44286  22.15714   6.014286\n [8,]  87.88750  92.63750  74.637500   8.01250  45.51250  94.76250 119.512500\n [9,]  82.78889 106.01111  43.344444 106.67778  10.12222  51.56667 107.122222\n[10,]   3.51000   3.41000  30.810000   9.71000  19.31000  21.81000  95.010000\n           [,8]      [,9]\n [1,] 750.10000 591.10000\n [2,] 100.05000 162.05000\n [3,] 159.03333  82.36667\n [4,]  61.27500 112.02500\n [5,] 106.22000  48.62000\n [6,]  68.68333  46.35000\n [7,] 108.30000 101.58571\n [8,]  69.13750  36.38750\n [9,]  95.12222  36.01111\n[10,]  22.21000  25.11000\n\n, , 8\n\n           [,1]      [,2]        [,3]      [,4]      [,5]     [,6]      [,7]\n [1,] 462.10000 429.10000 621.1000000 813.10000 781.10000  92.1000 463.10000\n [2,]  63.05000 343.55000 308.0500000 374.55000 494.55000 262.0500 196.55000\n [3,] 122.70000  30.70000 176.3666667 234.03333  28.70000 116.7000  21.36667\n [4,] 179.02500 218.77500  60.2750000  85.27500  37.27500  40.2750 164.77500\n [5,] 148.42000 189.82000   5.8200000 102.22000  68.62000 200.0200 183.82000\n [6,]  68.51667 159.68333 141.5166667  69.18333  25.85000 107.3500 150.35000\n [7,] 100.30000  68.15714   0.1571429 118.44286  29.87143 115.5857  82.87143\n [8,]  44.13750  76.26250  25.6375000 124.26250 112.01250  94.1375  96.76250\n [9,]  67.90000  36.01111  77.6777778  30.56667  51.56667 106.7889  51.78889\n[10,]  82.51000  41.31000  43.4100000  90.91000  47.11000 100.0100  19.91000\n            [,8]      [,9]\n [1,] 341.100000 372.10000\n [2,] 150.050000 486.55000\n [3,] 283.033333 114.70000\n [4,] 132.775000 173.52500\n [5,]  76.020000 120.42000\n [6,]  17.683333  69.68333\n [7,]   2.442857  48.58571\n [8,]  71.762500 113.26250\n [9,]  67.900000  81.67778\n[10,]  55.710000  62.41000\n\nbc.d(x, y, \"^\")\n\n, , 1\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 6.251000e+02 4.791000e+02 1.181000e+02 2.181000e+02 4.641000e+02\n [2,] 9.256364e+05 3.092472e+05 9.684528e+05 2.126132e+05 2.276244e+05\n [3,] 1.532163e+08 1.804579e+08 1.564376e+07 4.356919e+08 6.274419e+08\n [4,] 3.936589e+11 8.889492e+07 1.116894e+11 7.373680e+10 4.771041e+11\n [5,] 5.414522e+13 5.310385e+14 1.936262e+14 2.827636e+13 6.960625e+14\n [6,] 7.611775e+10 5.003412e+11 1.365991e+15 9.598548e+09 2.096294e+16\n [7,] 5.582712e+20 8.326448e+19 1.227828e+20 4.820294e+13 5.167610e+06\n [8,] 1.357019e+21 9.461148e+23 9.145831e+21 2.783111e+18 8.814991e+20\n [9,] 7.331600e+26 1.692311e+24 4.199077e+25 1.140744e+15 2.017336e+25\n[10,] 2.664016e+29 1.839438e+25 1.035448e+29 6.495415e+22 2.869457e+28\n              [,6]         [,7]         [,8]         [,9]\n [1,] 3.181000e+02 1.341000e+02 8.271000e+02 2.691000e+02\n [2,] 1.116228e+05 4.265396e+05 1.798608e+05 8.299210e+03\n [3,] 5.649263e+06 1.747706e+08 1.311739e+08 3.765235e+08\n [4,] 6.981919e+11 1.296864e+11 1.041596e+11 3.717524e+10\n [5,] 2.393768e+12 1.755218e+14 1.464656e+09 6.274684e+09\n [6,] 5.559917e+12 4.339253e+17 4.021967e+13 4.973164e+17\n [7,] 8.625601e+20 2.224535e+14 9.185170e+12 7.453911e+19\n [8,] 9.614657e+23 7.707378e+19 9.701111e+20 7.464086e+23\n [9,] 2.508583e+24 6.368478e+26 4.782254e+22 3.988953e+23\n[10,] 2.668090e+23 2.217074e+26 2.950689e+29 3.983372e+23\n\n, , 2\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 9.421000e+02 4.201000e+02 1.231000e+02 2.941000e+02 8.711000e+02\n [2,] 4.304672e+05 1.879641e+04 6.353684e+05 5.014056e+05 8.071281e+04\n [3,] 1.447858e+08 3.656793e+08 3.343999e+08 3.564377e+07 5.448304e+07\n [4,] 4.365609e+10 1.254180e+11 6.305300e+11 3.799268e+11 4.702525e+11\n [5,] 8.360294e+12 3.894161e+14 3.208008e+11 3.486784e+04 7.111592e+14\n [6,] 2.584306e+17 3.617124e+17 1.781209e+17 6.604125e+14 9.593076e+17\n [7,] 6.695510e+18 1.531019e+17 3.048356e+18 7.519956e+20 2.856325e+20\n [8,] 6.523332e+21 1.684504e+21 3.255547e+18 1.045759e+23 5.998718e+16\n [9,] 1.039962e+25 8.469087e+25 1.316827e+25 4.829554e+23 5.424880e+24\n[10,] 4.953470e+25 1.087239e+19 5.625744e+29 2.180626e+21 1.190207e+26\n              [,6]         [,7]         [,8]         [,9]\n [1,] 7.810000e+01 8.051000e+02 2.631000e+02 9.551000e+02\n [2,] 2.859481e+04 1.649172e+05 6.337752e+05 5.243208e+05\n [3,] 4.500297e+06 3.187520e+08 2.850202e+08 3.049571e+08\n [4,] 1.048949e+11 4.159858e+11 1.358441e+11 4.679852e+11\n [5,] 7.933948e+12 1.509280e+14 6.347339e+14 1.692662e+10\n [6,] 4.021967e+13 3.015694e+15 2.144658e+16 4.429946e+14\n [7,] 1.048750e+17 6.308717e+14 3.212750e+16 2.816234e+15\n [8,] 8.119580e+19 8.514578e+23 4.796856e+22 5.112064e+21\n [9,] 1.355144e+24 9.919291e+26 2.102085e+24 3.549836e+25\n[10,] 3.812878e+23 8.327865e+26 3.908262e+28 1.264795e+27\n\n, , 3\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 8.971000e+02 3.511000e+02 2.131000e+02 1.811000e+02 7.501000e+02\n [2,] 5.621641e+04 6.116804e+05 1.706516e+05 1.681820e+05 2.927892e+05\n [3,] 5.277100e+08 1.952129e+08 4.443696e+08 3.343999e+08 1.358760e+08\n [4,] 4.599378e+10 8.603705e+11 2.389764e+09 5.013944e+09 1.755098e+08\n [5,] 6.849091e+14 2.109410e+10 2.852181e+14 6.175447e+14 3.217837e+14\n [6,] 5.600143e+14 4.418703e+12 8.601146e+13 5.313943e+12 1.472847e+16\n [7,] 8.162058e+17 4.424931e+11 3.204419e+14 2.625599e+20 4.213837e+19\n [8,] 7.328284e+18 3.698955e+23 3.669052e+21 7.392286e+22 3.675169e+20\n [9,] 7.680254e+26 8.193120e+26 4.544498e+26 4.649177e+25 2.828966e+26\n[10,] 1.038827e+27 9.052960e+29 1.048511e+29 1.154724e+28 3.340065e+23\n              [,6]         [,7]         [,8]         [,9]\n [1,] 1.201000e+02 3.941000e+02 4.111000e+02 7.110000e+01\n [2,] 1.460004e+05 4.756761e+04 3.649368e+05 4.557600e+05\n [3,] 4.391493e+08 9.559627e+08 8.850125e+08 9.157815e+08\n [4,] 1.898624e+11 1.011079e+10 2.537038e+10 2.449228e+08\n [5,] 2.354019e+12 4.681629e+13 2.826743e+11 6.347339e+14\n [6,] 1.880548e+12 4.399443e+17 2.389144e+14 2.271119e+17\n [7,] 1.806012e+20 8.812314e+20 1.956411e+20 6.600269e+18\n [8,] 5.771393e+22 7.397141e+20 9.967723e+19 4.960701e+23\n [9,] 1.695706e+23 1.777499e+23 6.802954e+26 2.873424e+23\n[10,] 4.845030e+29 2.669103e+24 1.697323e+22 2.320812e+29\n\n, , 4\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 4.031000e+02 7.641000e+02 7.211000e+02 1.391000e+02 1.991000e+02\n [2,] 9.763416e+05 6.305948e+05 2.105401e+04 9.610000e+00 9.256364e+05\n [3,] 7.638026e+08 7.541067e+06 2.576988e+06 1.258268e+08 6.607763e+05\n [4,] 6.985417e+09 3.963766e+08 1.216397e+10 4.327532e+10 1.699850e+11\n [5,] 2.498007e+13 5.283768e+11 7.727400e+12 3.118172e+14 1.169243e+09\n [6,] 1.089545e+17 1.371838e+14 5.347530e+13 9.975783e+14 3.846421e+10\n [7,] 9.235990e+18 1.981038e+11 6.635967e+20 3.053214e+20 9.285107e+19\n [8,] 1.276643e+16 4.308500e+23 6.971117e+20 4.109417e+14 9.810765e+13\n [9,] 1.021549e+26 2.028142e+13 9.288427e+18 6.087790e+22 1.588121e+25\n[10,] 1.908956e+28 2.307900e+24 6.371794e+26 5.386160e+27 4.078316e+24\n              [,6]         [,7]         [,8]         [,9]\n [1,] 8.431000e+02 6.161000e+02 4.711000e+02 7.821000e+02\n [2,] 3.577236e+05 8.649481e+04 4.803876e+05 7.241481e+04\n [3,] 4.674693e+08 2.824295e+08 6.978821e+06 8.067757e+07\n [4,] 9.493899e+11 2.952359e+09 1.911684e+09 7.844099e+11\n [5,] 8.416091e+14 6.857258e+13 3.361633e+14 1.064300e+13\n [6,] 4.290193e+15 2.449395e+11 1.186610e+11 5.718203e+14\n [7,] 5.211495e+20 3.027984e+20 1.053866e+20 1.361223e+20\n [8,] 9.868628e+12 4.702525e+07 6.049155e+23 1.808057e+21\n [9,] 2.912815e+25 2.597794e+24 4.081244e+10 2.202785e+10\n[10,] 5.088581e+25 4.839395e+26 2.041735e+29 2.402521e+27\n\n, , 5\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 9.921000e+02 6.810000e+01 1.111000e+02 1.681000e+02 5.331000e+02\n [2,] 6.709248e+05 1.325688e+05 9.391548e+05 9.060100e+02 4.844401e+04\n [3,] 1.350847e+08 1.655596e+08 4.839215e+08 1.948683e+07 6.981002e+08\n [4,] 1.216397e+10 1.956806e+11 2.064892e+11 2.414749e+07 2.702347e+07\n [5,] 2.422497e+14 2.082115e+08 7.229799e+12 1.847332e+13 8.286229e+14\n [6,] 1.655424e+11 3.300453e+13 1.012227e+16 1.493726e+15 5.461335e+17\n [7,] 7.378630e+19 3.019244e+14 3.539187e+20 6.653421e+16 4.975949e+20\n [8,] 2.008250e+21 2.999275e+22 6.528797e+23 1.091464e+16 1.008028e+16\n [9,] 3.346389e+14 2.129477e+26 2.095396e+20 6.452455e+15 1.133248e+26\n[10,] 2.828790e+28 7.590237e+22 1.769946e+19 5.368798e+25 2.307900e+24\n              [,6]         [,7]         [,8]         [,9]\n [1,] 8.811000e+02 5.181000e+02 6.510000e+01 7.321000e+02\n [2,] 2.863320e+05 1.798281e+04 6.660192e+05 4.289041e+04\n [3,] 1.334633e+06 2.372916e+08 6.239666e+06 6.014253e+08\n [4,] 1.314239e+11 1.385744e+10 2.904162e+11 1.944810e+01\n [5,] 6.022200e+13 2.176365e+13 1.476523e+14 7.028612e+07\n [6,] 6.903102e+17 2.821353e+14 4.531922e+16 2.021682e+17\n [7,] 2.184112e+19 3.256261e+19 7.607042e+18 5.177894e+19\n [8,] 6.523332e+21 4.084028e+23 5.437116e+21 8.716421e+18\n [9,] 1.240773e+23 3.913120e+17 7.504397e+18 7.555407e+24\n[10,] 7.362037e+25 1.894905e+25 2.393814e+24 5.391884e+29\n\n, , 6\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 4.521000e+02 5.031000e+02 7.851000e+02 6.881000e+02 9.441000e+02\n [2,] 5.626500e+05 2.592100e+02 6.692876e+05 2.632716e+05 7.007364e+05\n [3,] 2.596063e+07 3.641473e+08 8.332376e+05 1.148621e+08 2.691419e+06\n [4,] 3.877289e+11 1.322992e+11 6.362098e+11 9.632358e+10 4.365609e+10\n [5,] 8.317139e+11 7.830129e+12 2.856602e+13 2.587660e+14 2.853694e+08\n [6,] 5.265518e+15 9.002444e+15 1.202555e+15 1.098666e+13 5.576381e+16\n [7,] 2.369978e+20 2.106130e+19 1.272684e+19 4.323227e+20 4.820294e+13\n [8,] 2.243270e+22 4.449504e+20 2.079159e+21 2.274093e+15 9.701111e+20\n [9,] 9.919291e+26 1.324426e+20 4.356753e+19 5.271806e+25 2.377310e+18\n[10,] 3.648979e+23 1.473592e+17 5.868694e+29 1.547081e+28 4.635704e+26\n              [,6]         [,7]         [,8]         [,9]\n [1,] 9.251000e+02 8.241000e+02 5.541000e+02 5.171000e+02\n [2,] 8.744120e+05 8.767521e+04 2.163180e+05 1.377152e+05\n [3,] 1.257515e+05 8.132727e+06 1.128112e+06 3.248368e+06\n [4,] 7.076457e+08 3.877289e+11 1.418338e+10 1.738221e+10\n [5,] 1.804229e+04 1.559357e+13 2.418008e+11 2.604268e+13\n [6,] 1.561677e+13 2.169187e+16 3.367509e+17 4.717157e+16\n [7,] 8.984433e+17 6.294004e+16 1.004037e+20 1.971634e+15\n [8,] 2.008250e+21 7.588862e+23 1.217397e+20 6.109501e+22\n [9,] 5.141663e+25 1.324426e+20 1.486003e+26 1.095841e+22\n[10,] 2.950689e+29 3.939423e+24 5.033734e+27 1.209999e+28\n\n, , 7\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 4.821000e+02 3.141000e+02 5.811000e+02 8.681000e+02 6.971000e+02\n [2,] 1.042441e+04 7.733961e+04 4.004001e+04 9.141272e+05 1.657304e+05\n [3,] 4.374183e+08 5.395519e+08 1.398792e+08 7.341149e+08 7.627897e+07\n [4,] 2.294433e+11 6.887689e+07 2.629630e+11 1.101518e+11 3.431093e+08\n [5,] 5.270552e+13 2.296534e+14 5.611357e+13 8.845381e+11 2.420612e+13\n [6,] 4.812115e+16 1.867881e+16 7.437020e+08 2.039069e+15 6.813933e+13\n [7,] 7.425309e+16 4.854911e+19 3.370323e+20 5.163860e+16 1.991253e+20\n [8,] 5.972234e+22 9.099437e+22 1.615759e+22 2.850127e+14 3.088627e+20\n [9,] 7.078334e+25 6.551565e+26 2.092105e+23 6.931835e+26 4.321807e+17\n[10,] 2.838384e+15 2.125905e+15 7.707561e+24 7.450618e+19 7.208132e+22\n              [,6]         [,7]         [,8]         [,9]\n [1,] 8.141000e+02 2.211000e+02 7.501000e+02 5.911000e+02\n [2,] 3.470388e+05 6.481860e+05 4.004001e+04 1.050408e+05\n [3,] 7.361274e+07 2.269810e+02 1.085996e+08 1.508753e+07\n [4,] 3.616965e+10 1.816891e+08 3.608887e+09 4.031807e+10\n [5,] 3.223084e+13 5.283768e+11 4.225533e+13 8.490334e+11\n [6,] 7.561863e+12 2.037567e+17 4.897965e+15 4.626003e+14\n [7,] 2.159149e+15 2.344092e+11 1.439082e+20 9.194217e+19\n [8,] 1.090968e+23 6.982751e+23 8.758491e+21 5.156294e+19\n [9,] 9.988588e+23 7.196126e+26 2.470134e+26 3.945584e+22\n[10,] 2.435323e+23 5.993675e+29 2.920691e+23 9.964767e+23\n\n, , 8\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 4.621000e+02 4.291000e+02 6.211000e+02 8.131000e+02 7.811000e+02\n [2,] 1.590121e+04 4.721064e+05 3.795792e+05 5.611508e+05 9.783188e+05\n [3,] 4.987667e+07 7.812300e+05 1.481199e+08 3.460963e+08 6.382774e+05\n [4,] 2.629630e+11 5.864497e+11 3.379005e+09 1.353714e+10 4.942089e+08\n [5,] 2.250672e+14 7.701226e+14 2.086724e+07 3.487622e+13 4.754486e+12\n [6,] 4.827084e+15 7.735084e+17 3.747598e+17 5.115833e+15 1.392101e+13\n [7,] 8.409938e+19 5.626857e+18 1.948717e+00 2.693075e+20 1.747746e+16\n [8,] 2.416472e+20 1.919589e+22 3.131304e+18 9.537633e+23 4.157687e+23\n [9,] 1.188531e+25 3.945584e+22 3.988905e+25 9.024337e+21 9.988588e+23\n[10,] 1.462399e+29 1.447278e+26 2.376281e+26 3.855818e+29 5.384322e+26\n              [,6]         [,7]         [,8]         [,9]\n [1,] 9.210000e+01 4.631000e+02 3.411000e+02 3.721000e+02\n [2,] 2.746808e+05 1.545276e+05 9.006001e+04 9.469236e+05\n [3,] 4.291176e+07 2.633747e+05 6.121763e+08 4.074310e+07\n [4,] 6.735691e+08 1.887145e+11 7.956191e+10 2.321070e+11\n [5,] 1.000500e+15 6.558641e+14 7.933948e+12 7.913036e+13\n [6,] 7.140355e+16 5.389247e+17 1.426567e+12 5.341719e+15\n [7,] 2.269945e+20 2.210650e+19 4.275361e+08 5.263158e+17\n [8,] 1.034716e+23 1.289367e+23 1.180050e+22 4.543694e+23\n [9,] 6.997086e+26 1.038274e+24 1.188531e+25 6.267839e+25\n[10,] 1.001000e+30 9.788420e+22 2.879596e+27 8.964825e+27\n\nbc.d(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.d(x, y, \"!=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.d(x, y, \"&lt;\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.d(x, y, \"&gt;\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]  [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2]  [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE FALSE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.d(x, y, \"&lt;=\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.d(x, y, \"&gt;=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]  [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2]  [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE FALSE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE"
  },
  {
    "objectID": "man/bc.d.html#broadcasted-decimal-numeric-operations",
    "href": "man/bc.d.html#broadcasted-decimal-numeric-operations",
    "title": "bc.d",
    "section": "",
    "text": "The bc.d() function performs broadcasted decimal numeric operations on 2 numeric or logical arrays.  bc.num() is an alias for bc.d().  \n\n\n\nbc.d(x, y, op, prec = sqrt(.Machine\\$double.eps))\n\nbc.num(x, y, op, prec = sqrt(.Machine\\$double.eps))\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable logical or numeric arrays.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported arithmetic operators: +, -, *, /, ^, pmin, pmax.  Supported relational operators: ==, !=, &lt;, &gt;, &lt;=, &gt;=, d==, d!=, d&lt;, d&gt;, d&lt;=, d&gt;=. \n\n\n\n\nprec\n\n\na single number between 0 and 0.1, giving the machine precision to use.  Only relevant for the following operators:  d==, d!=, d&lt;, d&gt;, d&lt;=, d&gt;=  See the d==, d!=, d&lt;, d&gt;, d&lt;=, d&gt;= operators from the ‘tinycodet’ package for details. \n\n\n\n\n\n\n\nFor arithmetic operators:  A numeric array as a result of the broadcasted decimal arithmetic operation.   For relational operators:  A logical array as a result of the broadcasted decimal relational comparison.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(NA, 1.1:1000.1), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\nbc.d(x, y, \"+\")\n\n, , 1\n\n       [,1]   [,2]  [,3]  [,4]  [,5]   [,6]  [,7]  [,8]  [,9]\n [1,] 626.1  480.1 119.1 219.1 465.1  319.1 135.1 828.1 270.1\n [2,] 964.1  558.1 986.1 463.1 479.1  336.1 655.1 426.1  93.1\n [3,] 538.1  568.1 253.1 761.1 859.1  181.1 562.1 511.1 725.1\n [4,] 796.1  101.1 582.1 525.1 835.1  918.1 604.1 572.1 443.1\n [5,] 563.1  886.1 725.1 495.1 935.1  304.1 711.1  73.1  96.1\n [6,]  71.1   95.1 339.1  52.1 531.1  139.1 876.1 191.1 896.1\n [7,] 927.1  708.1 748.1  97.1  16.1  986.1 119.1  78.1 697.1\n [8,] 446.1 1001.1 564.1 210.1 423.1 1003.1 314.1 428.1 972.1\n [9,] 975.1  501.1 712.1  56.1 657.1  523.1 960.1 340.1 428.1\n[10,] 886.1  346.1 807.1 201.1 711.1  230.1 441.1 895.1 239.1\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]   [,7]  [,8]  [,9]\n [1,] 943.1 421.1 124.1 295.1 872.1  79.1  806.1 264.1 956.1\n [2,] 658.1 139.1 799.1 710.1 286.1 171.1  408.1 798.1 726.1\n [3,] 528.1 718.1 697.1 332.1 382.1 168.1  686.1 661.1 676.1\n [4,] 461.1 599.1 895.1 789.1 832.1 573.1  807.1 611.1 831.1\n [5,] 389.1 833.1 205.1  13.1 939.1 385.1  690.1 918.1 116.1\n [6,] 804.1 850.1 756.1 301.1 999.1 191.1  386.1 533.1 282.1\n [7,] 496.1 292.1 444.1 967.1 843.1 277.1  137.1 235.1 168.1\n [8,] 541.1 458.1 214.1 762.1 133.1 316.1  988.1 692.1 525.1\n [9,] 611.1 769.1 627.1 437.1 569.1 489.1 1008.1 513.1 699.1\n[10,] 381.1  90.1 954.1 146.1 415.1 238.1  502.1 733.1 523.1\n\n, , 3\n\n       [,1]   [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 898.1  352.1 214.1 182.1 751.1 121.1 395.1 412.1  72.1\n [2,] 239.1  784.1 415.1 412.1 543.1 384.1 220.1 606.1 677.1\n [3,] 811.1  583.1 766.1 697.1 517.1 763.1 988.1 963.1 974.1\n [4,] 467.1  967.1 225.1 270.1 119.1 664.1 321.1 403.1 129.1\n [5,] 932.1  121.1 783.1 913.1 802.1 303.1 547.1 200.1 918.1\n [6,] 293.1  134.1 216.1 138.1 501.1 117.1 878.1 255.1 787.1\n [7,] 369.1   53.1 125.1 833.1 643.1 790.1 989.1 799.1 495.1\n [8,] 236.1  891.1 504.1 730.1 380.1 708.1 414.1 324.1 924.1\n [9,] 980.1  987.1 925.1 720.1 878.1 390.1 392.1 967.1 413.1\n[10,] 513.1 1000.1 808.1 650.1 235.1 940.1 287.1 177.1 874.1\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 404.1 765.1 722.1 140.1 200.1 844.1 617.1 472.1 783.1\n [2,] 990.1 796.1 147.1   5.1 964.1 600.1 296.1 695.1 271.1\n [3,] 917.1 199.1 140.1 504.1  90.1 779.1 659.1 194.1 435.1\n [4,] 293.1 145.1 336.1 460.1 646.1 991.1 237.1 213.1 945.1\n [5,] 483.1 226.1 383.1 797.1  70.1 971.1 590.1 809.1 408.1\n [6,] 697.1 233.1 200.1 322.1  64.1 409.1  85.1  76.1 294.1\n [7,] 519.1  48.1 950.1 851.1 719.1 918.1 850.1 732.1 759.1\n [8,] 111.1 908.1 411.1  75.1  64.1  50.1  17.1 947.1 462.1\n [9,] 785.1  39.1 137.1 349.1 640.1 684.1 525.1  24.1  23.1\n[10,] 683.1 283.1 489.1 603.1 299.1 382.1 476.1 863.1 557.1\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 993.1  69.1 112.1 169.1 534.1 882.1 519.1  66.1 733.1\n [2,] 821.1 366.1 971.1  32.1 222.1 537.1 136.1 818.1 209.1\n [3,] 516.1 552.1 788.1 272.1 890.1 113.1 622.1 187.1 847.1\n [4,] 336.1 669.1 678.1  74.1  76.1 606.1 347.1 738.1   6.1\n [5,] 758.1  51.1 378.1 455.1 968.1 575.1 470.1 687.1  42.1\n [6,]  80.1 185.1 471.1 344.1 910.1 946.1 262.1 603.1 772.1\n [7,] 696.1 124.1 869.1 260.1 912.1 586.1 620.1 505.1 662.1\n [8,] 468.1 653.1 956.1 109.1 108.1 541.1 902.1 529.1 241.1\n [9,]  50.1 851.1 190.1  66.1 794.1 377.1  99.1 134.1 590.1\n[10,] 710.1 204.1  94.1 384.1 283.1 396.1 347.1 284.1 950.1\n\n, , 6\n\n        [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  453.1 504.1 786.1 689.1 945.1 926.1 825.1 555.1 518.1\n [2,]  752.1  18.1 820.1 515.1 839.1 937.1 298.1 467.1 373.1\n [3,]  299.1 717.1  97.1 489.1 142.1  53.1 204.1 107.1 151.1\n [4,]  793.1 607.1 897.1 561.1 461.1 167.1 793.1 349.1 367.1\n [5,]  247.1 384.1 496.1 768.1  54.1  12.1 440.1 194.1 487.1\n [6,]  423.1 462.1 332.1 155.1 624.1 164.1 534.1 840.1 607.1\n [7,]  821.1 583.1 543.1 894.1  97.1 374.1 258.1 727.1 160.1\n [8,]  630.1 389.1 470.1  91.1 428.1 468.1 974.1 332.1 713.1\n [9,] 1008.1 181.1 161.1 730.1 119.1 728.1 181.1 818.1 290.1\n[10,]  237.1  62.1 958.1 669.1 474.1 895.1 298.1 599.1 653.1\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 483.1 315.1 582.1 869.1 698.1 815.1 222.1 751.1 592.1\n [2,] 104.1 280.1 202.1 958.1 409.1 591.1 807.1 202.1 326.1\n [3,] 762.1 817.1 522.1 905.1 427.1 422.1   9.1 480.1 250.1\n [4,] 696.1  95.1 720.1 580.1 140.1 440.1 120.1 249.1 452.1\n [5,] 560.1 750.1 567.1 250.1 480.1 508.1 226.1 536.1 248.1\n [6,] 609.1 521.1  36.1 362.1 208.1 146.1 773.1 418.1 284.1\n [7,] 264.1 656.1 863.1 251.1 801.1 162.1  49.1 765.1 718.1\n [8,] 711.1 749.1 605.1  72.1 372.1 766.1 964.1 561.1 299.1\n [9,] 754.1 963.1 399.1 969.1 100.1 473.1 973.1 865.1 333.1\n[10,]  45.1  44.1 318.1 107.1 203.1 228.1 960.1 232.1 261.1\n\n, , 8\n\n       [,1]  [,2]  [,3]   [,4]  [,5]   [,6]  [,7]  [,8]  [,9]\n [1,] 463.1 430.1 622.1  814.1 782.1   93.1 464.1 342.1 373.1\n [2,] 128.1 689.1 618.1  751.1 991.1  526.1 395.1 302.1 975.1\n [3,] 371.1  95.1 532.1  705.1  89.1  353.1  67.1 852.1 347.1\n [4,] 720.1 879.1 245.1  345.1 153.1  165.1 663.1 535.1 698.1\n [5,] 747.1 954.1  34.1  516.1 348.1 1005.1 924.1 385.1 607.1\n [6,] 417.1 964.1 855.1  421.1 161.1  650.1 908.1 112.1 424.1\n [7,] 709.1 484.1   8.1  836.1 216.1  816.1 587.1  24.1 347.1\n [8,] 361.1 618.1 213.1 1002.1 904.1  761.1 782.1 582.1 914.1\n [9,] 620.1 333.1 708.1  284.1 473.1  970.1 475.1 620.1 744.1\n[10,] 835.1 423.1 444.1  919.1 481.1 1010.1 209.1 567.1 634.1\n\nbc.d(x, y, \"-\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 624.1 478.1 117.1 217.1 463.1 317.1 133.1 826.1 268.1\n [2,] 960.1 554.1 982.1 459.1 475.1 332.1 651.1 422.1  89.1\n [3,] 532.1 562.1 247.1 755.1 853.1 175.1 556.1 505.1 719.1\n [4,] 788.1  93.1 574.1 517.1 827.1 910.1 596.1 564.1 435.1\n [5,] 553.1 876.1 715.1 485.1 925.1 294.1 701.1  63.1  86.1\n [6,]  59.1  83.1 327.1  40.1 519.1 127.1 864.1 179.1 884.1\n [7,] 913.1 694.1 734.1  83.1   2.1 972.1 105.1  64.1 683.1\n [8,] 430.1 985.1 548.1 194.1 407.1 987.1 298.1 412.1 956.1\n [9,] 957.1 483.1 694.1  38.1 639.1 505.1 942.1 322.1 410.1\n[10,] 866.1 326.1 787.1 181.1 691.1 210.1 421.1 875.1 219.1\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 941.1 419.1 122.1 293.1 870.1  77.1 804.1 262.1 954.1\n [2,] 654.1 135.1 795.1 706.1 282.1 167.1 404.1 794.1 722.1\n [3,] 522.1 712.1 691.1 326.1 376.1 162.1 680.1 655.1 670.1\n [4,] 453.1 591.1 887.1 781.1 824.1 565.1 799.1 603.1 823.1\n [5,] 379.1 823.1 195.1   3.1 929.1 375.1 680.1 908.1 106.1\n [6,] 792.1 838.1 744.1 289.1 987.1 179.1 374.1 521.1 270.1\n [7,] 482.1 278.1 430.1 953.1 829.1 263.1 123.1 221.1 154.1\n [8,] 525.1 442.1 198.1 746.1 117.1 300.1 972.1 676.1 509.1\n [9,] 593.1 751.1 609.1 419.1 551.1 471.1 990.1 495.1 681.1\n[10,] 361.1  70.1 934.1 126.1 395.1 218.1 482.1 713.1 503.1\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 896.1 350.1 212.1 180.1 749.1 119.1 393.1 410.1  70.1\n [2,] 235.1 780.1 411.1 408.1 539.1 380.1 216.1 602.1 673.1\n [3,] 805.1 577.1 760.1 691.1 511.1 757.1 982.1 957.1 968.1\n [4,] 459.1 959.1 217.1 262.1 111.1 656.1 313.1 395.1 121.1\n [5,] 922.1 111.1 773.1 903.1 792.1 293.1 537.1 190.1 908.1\n [6,] 281.1 122.1 204.1 126.1 489.1 105.1 866.1 243.1 775.1\n [7,] 355.1  39.1 111.1 819.1 629.1 776.1 975.1 785.1 481.1\n [8,] 220.1 875.1 488.1 714.1 364.1 692.1 398.1 308.1 908.1\n [9,] 962.1 969.1 907.1 702.1 860.1 372.1 374.1 949.1 395.1\n[10,] 493.1 980.1 788.1 630.1 215.1 920.1 267.1 157.1 854.1\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 402.1 763.1 720.1 138.1 198.1 842.1 615.1 470.1 781.1\n [2,] 986.1 792.1 143.1   1.1 960.1 596.1 292.1 691.1 267.1\n [3,] 911.1 193.1 134.1 498.1  84.1 773.1 653.1 188.1 429.1\n [4,] 285.1 137.1 328.1 452.1 638.1 983.1 229.1 205.1 937.1\n [5,] 473.1 216.1 373.1 787.1  60.1 961.1 580.1 799.1 398.1\n [6,] 685.1 221.1 188.1 310.1  52.1 397.1  73.1  64.1 282.1\n [7,] 505.1  34.1 936.1 837.1 705.1 904.1 836.1 718.1 745.1\n [8,]  95.1 892.1 395.1  59.1  48.1  34.1   1.1 931.1 446.1\n [9,] 767.1  21.1 119.1 331.1 622.1 666.1 507.1   6.1   5.1\n[10,] 663.1 263.1 469.1 583.1 279.1 362.1 456.1 843.1 537.1\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 991.1  67.1 110.1 167.1 532.1 880.1 517.1  64.1 731.1\n [2,] 817.1 362.1 967.1  28.1 218.1 533.1 132.1 814.1 205.1\n [3,] 510.1 546.1 782.1 266.1 884.1 107.1 616.1 181.1 841.1\n [4,] 328.1 661.1 670.1  66.1  68.1 598.1 339.1 730.1  -1.9\n [5,] 748.1  41.1 368.1 445.1 958.1 565.1 460.1 677.1  32.1\n [6,]  68.1 173.1 459.1 332.1 898.1 934.1 250.1 591.1 760.1\n [7,] 682.1 110.1 855.1 246.1 898.1 572.1 606.1 491.1 648.1\n [8,] 452.1 637.1 940.1  93.1  92.1 525.1 886.1 513.1 225.1\n [9,]  32.1 833.1 172.1  48.1 776.1 359.1  81.1 116.1 572.1\n[10,] 690.1 184.1  74.1 364.1 263.1 376.1 327.1 264.1 930.1\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 451.1 502.1 784.1 687.1 943.1 924.1 823.1 553.1 516.1\n [2,] 748.1  14.1 816.1 511.1 835.1 933.1 294.1 463.1 369.1\n [3,] 293.1 711.1  91.1 483.1 136.1  47.1 198.1 101.1 145.1\n [4,] 785.1 599.1 889.1 553.1 453.1 159.1 785.1 341.1 359.1\n [5,] 237.1 374.1 486.1 758.1  44.1   2.1 430.1 184.1 477.1\n [6,] 411.1 450.1 320.1 143.1 612.1 152.1 522.1 828.1 595.1\n [7,] 807.1 569.1 529.1 880.1  83.1 360.1 244.1 713.1 146.1\n [8,] 614.1 373.1 454.1  75.1 412.1 452.1 958.1 316.1 697.1\n [9,] 990.1 163.1 143.1 712.1 101.1 710.1 163.1 800.1 272.1\n[10,] 217.1  42.1 938.1 649.1 454.1 875.1 278.1 579.1 633.1\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 481.1 313.1 580.1 867.1 696.1 813.1 220.1 749.1 590.1\n [2,] 100.1 276.1 198.1 954.1 405.1 587.1 803.1 198.1 322.1\n [3,] 756.1 811.1 516.1 899.1 421.1 416.1   3.1 474.1 244.1\n [4,] 688.1  87.1 712.1 572.1 132.1 432.1 112.1 241.1 444.1\n [5,] 550.1 740.1 557.1 240.1 470.1 498.1 216.1 526.1 238.1\n [6,] 597.1 509.1  24.1 350.1 196.1 134.1 761.1 406.1 272.1\n [7,] 250.1 642.1 849.1 237.1 787.1 148.1  35.1 751.1 704.1\n [8,] 695.1 733.1 589.1  56.1 356.1 750.1 948.1 545.1 283.1\n [9,] 736.1 945.1 381.1 951.1  82.1 455.1 955.1 847.1 315.1\n[10,]  25.1  24.1 298.1  87.1 183.1 208.1 940.1 212.1 241.1\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] 461.1 428.1 620.1 812.1 780.1  91.1 462.1 340.1 371.1\n [2,] 124.1 685.1 614.1 747.1 987.1 522.1 391.1 298.1 971.1\n [3,] 365.1  89.1 526.1 699.1  83.1 347.1  61.1 846.1 341.1\n [4,] 712.1 871.1 237.1 337.1 145.1 157.1 655.1 527.1 690.1\n [5,] 737.1 944.1  24.1 506.1 338.1 995.1 914.1 375.1 597.1\n [6,] 405.1 952.1 843.1 409.1 149.1 638.1 896.1 100.1 412.1\n [7,] 695.1 470.1  -5.9 822.1 202.1 802.1 573.1  10.1 333.1\n [8,] 345.1 602.1 197.1 986.1 888.1 745.1 766.1 566.1 898.1\n [9,] 602.1 315.1 690.1 266.1 455.1 952.1 457.1 602.1 726.1\n[10,] 815.1 403.1 424.1 899.1 461.1 990.1 189.1 547.1 614.1\n\nbc.d(x, y, \"*\")\n\n, , 1\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  625.1  479.1  118.1  218.1  464.1  318.1  134.1  827.1  269.1\n [2,] 1924.2 1112.2 1968.2  922.2  954.2  668.2 1306.2  848.2  182.2\n [3,] 1605.3 1695.3  750.3 2274.3 2568.3  534.3 1677.3 1524.3 2166.3\n [4,] 3168.4  388.4 2312.4 2084.4 3324.4 3656.4 2400.4 2272.4 1756.4\n [5,] 2790.5 4405.5 3600.5 2450.5 4650.5 1495.5 3530.5  340.5  455.5\n [6,]  390.6  534.6 1998.6  276.6 3150.6  798.6 5220.6 1110.6 5340.6\n [7,] 6440.7 4907.7 5187.7  630.7   63.7 6853.7  784.7  497.7 4830.7\n [8,] 3504.8 7944.8 4448.8 1616.8 3320.8 7960.8 2448.8 3360.8 7712.8\n [9,] 8694.9 4428.9 6327.9  423.9 5832.9 4626.9 8559.9 2979.9 3771.9\n[10,] 8761.0 3361.0 7971.0 1911.0 7011.0 2201.0 4311.0 8851.0 2291.0\n\n, , 2\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  942.1  420.1  123.1  294.1  871.1   78.1  805.1  263.1  955.1\n [2,] 1312.2  274.2 1594.2 1416.2  568.2  338.2  812.2 1592.2 1448.2\n [3,] 1575.3 2145.3 2082.3  987.3 1137.3  495.3 2049.3 1974.3 2019.3\n [4,] 1828.4 2380.4 3564.4 3140.4 3312.4 2276.4 3212.4 2428.4 3308.4\n [5,] 1920.5 4140.5 1000.5   40.5 4670.5 1900.5 3425.5 4565.5  555.5\n [6,] 4788.6 5064.6 4500.6 1770.6 5958.6 1110.6 2280.6 3162.6 1656.6\n [7,] 3423.7 1995.7 3059.7 6720.7 5852.7 1890.7  910.7 1596.7 1127.7\n [8,] 4264.8 3600.8 1648.8 6032.8 1000.8 2464.8 7840.8 5472.8 4136.8\n [9,] 5418.9 6840.9 5562.9 3852.9 5040.9 4320.9 8991.9 4536.9 6210.9\n[10,] 3711.0  801.0 9441.0 1361.0 4051.0 2281.0 4921.0 7231.0 5131.0\n\n, , 3\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  897.1  351.1  213.1  181.1  750.1  120.1  394.1  411.1   71.1\n [2,]  474.2 1564.2  826.2  820.2 1082.2  764.2  436.2 1208.2 1350.2\n [3,] 2424.3 1740.3 2289.3 2082.3 1542.3 2280.3 2955.3 2880.3 2913.3\n [4,] 1852.4 3852.4  884.4 1064.4  460.4 2640.4 1268.4 1596.4  500.4\n [5,] 4635.5  580.5 3890.5 4540.5 3985.5 1490.5 2710.5  975.5 4565.5\n [6,] 1722.6  768.6 1260.6  792.6 2970.6  666.6 5232.6 1494.6 4686.6\n [7,] 2534.7  322.7  826.7 5782.7 4452.7 5481.7 6874.7 5544.7 3416.7\n [8,] 1824.8 7064.8 3968.8 5776.8 2976.8 5600.8 3248.8 2528.8 7328.8\n [9,] 8739.9 8802.9 8244.9 6399.9 7821.9 3429.9 3447.9 8622.9 3636.9\n[10,] 5031.0 9901.0 7981.0 6401.0 2251.0 9301.0 2771.0 1671.0 8641.0\n\n, , 4\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  403.1  764.1  721.1  139.1  199.1  843.1  616.1  471.1  782.1\n [2,] 1976.2 1588.2  290.2    6.2 1924.2 1196.2  588.2 1386.2  538.2\n [3,] 2742.3  588.3  411.3 1503.3  261.3 2328.3 1968.3  573.3 1296.3\n [4,] 1156.4  564.4 1328.4 1824.4 2568.4 3948.4  932.4  836.4 3764.4\n [5,] 2390.5 1105.5 1890.5 3960.5  325.5 4830.5 2925.5 4020.5 2015.5\n [6,] 4146.6 1362.6 1164.6 1896.6  348.6 2418.6  474.6  420.6 1728.6\n [7,] 3584.7  287.7 6601.7 5908.7 4984.7 6377.7 5901.7 5075.7 5264.7\n [8,]  824.8 7200.8 3224.8  536.8  448.8  336.8   72.8 7512.8 3632.8\n [9,] 6984.9  270.9 1152.9 3060.9 5679.9 6075.9 4644.9  135.9  126.9\n[10,] 6731.0 2731.0 4791.0 5931.0 2891.0 3721.0 4661.0 8531.0 5471.0\n\n, , 5\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  992.1   68.1  111.1  168.1  533.1  881.1  518.1   65.1  732.1\n [2,] 1638.2  728.2 1938.2   60.2  440.2 1070.2  268.2 1632.2  414.2\n [3,] 1539.3 1647.3 2355.3  807.3 2661.3  330.3 1857.3  552.3 2532.3\n [4,] 1328.4 2660.4 2696.4  280.4  288.4 2408.4 1372.4 2936.4    8.4\n [5,] 3765.5  230.5 1865.5 2250.5 4815.5 2850.5 2325.5 3410.5  185.5\n [6,]  444.6 1074.6 2790.6 2028.6 5424.6 5640.6 1536.6 3582.6 4596.6\n [7,] 4823.7  819.7 6034.7 1771.7 6335.7 4053.7 4291.7 3486.7 4585.7\n [8,] 3680.8 5160.8 7584.8  808.8  800.8 4264.8 7152.8 4168.8 1864.8\n [9,]  369.9 7578.9 1629.9  513.9 7065.9 3312.9  810.9 1125.9 5229.9\n[10,] 7001.0 1941.0  841.0 3741.0 2731.0 3861.0 3371.0 2741.0 9401.0\n\n, , 6\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  452.1  503.1  785.1  688.1  944.1  925.1  824.1  554.1  517.1\n [2,] 1500.2   32.2 1636.2 1026.2 1674.2 1870.2  592.2  930.2  742.2\n [3,]  888.3 2142.3  282.3 1458.3  417.3  150.3  603.3  312.3  444.3\n [4,] 3156.4 2412.4 3572.4 2228.4 1828.4  652.4 3156.4 1380.4 1452.4\n [5,] 1210.5 1895.5 2455.5 3815.5  245.5   35.5 2175.5  945.5 2410.5\n [6,] 2502.6 2736.6 1956.6  894.6 3708.6  948.6 3168.6 5004.6 3606.6\n [7,] 5698.7 4032.7 3752.7 6209.7  630.7 2569.7 1757.7 5040.7 1071.7\n [8,] 4976.8 3048.8 3696.8  664.8 3360.8 3680.8 7728.8 2592.8 5640.8\n [9,] 8991.9 1548.9 1368.9 6489.9  990.9 6471.9 1548.9 7281.9 2529.9\n[10,] 2271.0  521.0 9481.0 6591.0 4641.0 8851.0 2881.0 5891.0 6431.0\n\n, , 7\n\n        [,1]   [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]\n [1,]  482.1  314.1  581.1  868.1  697.1  814.1  221.1  750.1  591.1\n [2,]  204.2  556.2  400.2 1912.2  814.2 1178.2 1610.2  400.2  648.2\n [3,] 2277.3 2442.3 1557.3 2706.3 1272.3 1257.3   18.3 1431.3  741.3\n [4,] 2768.4  364.4 2864.4 2304.4  544.4 1744.4  464.4  980.4 1792.4\n [5,] 2775.5 3725.5 2810.5 1225.5 2375.5 2515.5 1105.5 2655.5 1215.5\n [6,] 3618.6 3090.6  180.6 2136.6 1212.6  840.6 4602.6 2472.6 1668.6\n [7,] 1799.7 4543.7 5992.7 1708.7 5558.7 1085.7  294.7 5306.7 4977.7\n [8,] 5624.8 5928.8 4776.8  512.8 2912.8 6064.8 7648.8 4424.8 2328.8\n [9,] 6705.9 8586.9 3510.9 8640.9  819.9 4176.9 8676.9 7704.9 2916.9\n[10,]  351.0  341.0 3081.0  971.0 1931.0 2181.0 9501.0 2221.0 2511.0\n\n, , 8\n\n        [,1]   [,2]   [,3]   [,4]   [,5]    [,6]   [,7]   [,8]   [,9]\n [1,]  462.1  429.1  621.1  813.1  781.1    92.1  463.1  341.1  372.1\n [2,]  252.2 1374.2 1232.2 1498.2 1978.2  1048.2  786.2  600.2 1946.2\n [3,] 1104.3  276.3 1587.3 2106.3  258.3  1050.3  192.3 2547.3 1032.3\n [4,] 2864.4 3500.4  964.4 1364.4  596.4   644.4 2636.4 2124.4 2776.4\n [5,] 3710.5 4745.5  145.5 2555.5 1715.5  5000.5 4595.5 1900.5 3010.5\n [6,] 2466.6 5748.6 5094.6 2490.6  930.6  3864.6 5412.6  636.6 2508.6\n [7,] 4914.7 3339.7    7.7 5803.7 1463.7  5663.7 4060.7  119.7 2380.7\n [8,] 2824.8 4880.8 1640.8 7952.8 7168.8  6024.8 6192.8 4592.8 7248.8\n [9,] 5499.9 2916.9 6291.9 2475.9 4176.9  8649.9 4194.9 5499.9 6615.9\n[10,] 8251.0 4131.0 4341.0 9091.0 4711.0 10001.0 1991.0 5571.0 6241.0\n\nbc.d(x, y, \"/\")\n\n, , 1\n\n          [,1]      [,2]      [,3]       [,4]      [,5]      [,6]      [,7]\n [1,] 625.1000 479.10000 118.10000 218.100000 464.10000 318.10000 134.10000\n [2,] 481.0500 278.05000 492.05000 230.550000 238.55000 167.05000 326.55000\n [3,] 178.3667 188.36667  83.36667 252.700000 285.36667  59.36667 186.36667\n [4,] 198.0250  24.27500 144.52500 130.275000 207.77500 228.52500 150.02500\n [5,] 111.6200 176.22000 144.02000  98.020000 186.02000  59.82000 141.22000\n [6,]  10.8500  14.85000  55.51667   7.683333  87.51667  22.18333 145.01667\n [7,] 131.4429 100.15714 105.87143  12.871429   1.30000 139.87143  16.01429\n [8,]  54.7625 124.13750  69.51250  25.262500  51.88750 124.38750  38.26250\n [9,] 107.3444  54.67778  78.12222   5.233333  72.01111  57.12222 105.67778\n[10,]  87.6100  33.61000  79.71000  19.110000  70.11000  22.01000  43.11000\n           [,8]      [,9]\n [1,] 827.10000 269.10000\n [2,] 212.05000  45.55000\n [3,] 169.36667 240.70000\n [4,] 142.02500 109.77500\n [5,]  13.62000  18.22000\n [6,]  30.85000 148.35000\n [7,]  10.15714  98.58571\n [8,]  52.51250 120.51250\n [9,]  36.78889  46.56667\n[10,]  88.51000  22.91000\n\n, , 2\n\n           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]\n [1,] 942.10000 420.10000 123.10000 294.10000 871.10000  78.10000 805.10000\n [2,] 328.05000  68.55000 398.55000 354.05000 142.05000  84.55000 203.05000\n [3,] 175.03333 238.36667 231.36667 109.70000 126.36667  55.03333 227.70000\n [4,] 114.27500 148.77500 222.77500 196.27500 207.02500 142.27500 200.77500\n [5,]  76.82000 165.62000  40.02000   1.62000 186.82000  76.02000 137.02000\n [6,] 133.01667 140.68333 125.01667  49.18333 165.51667  30.85000  63.35000\n [7,]  69.87143  40.72857  62.44286 137.15714 119.44286  38.58571  18.58571\n [8,]  66.63750  56.26250  25.76250  94.26250  15.63750  38.51250 122.51250\n [9,]  66.90000  84.45556  68.67778  47.56667  62.23333  53.34444 111.01111\n[10,]  37.11000   8.01000  94.41000  13.61000  40.51000  22.81000  49.21000\n           [,8]      [,9]\n [1,] 263.10000 955.10000\n [2,] 398.05000 362.05000\n [3,] 219.36667 224.36667\n [4,] 151.77500 206.77500\n [5,] 182.62000  22.22000\n [6,]  87.85000  46.01667\n [7,]  32.58571  23.01429\n [8,]  85.51250  64.63750\n [9,]  56.01111  76.67778\n[10,]  72.31000  51.31000\n\n, , 3\n\n           [,1]       [,2]      [,3]      [,4]      [,5]      [,6]      [,7]\n [1,] 897.10000 351.100000 213.10000 181.10000 750.10000 120.10000 394.10000\n [2,] 118.55000 391.050000 206.55000 205.05000 270.55000 191.05000 109.05000\n [3,] 269.36667 193.366667 254.36667 231.36667 171.36667 253.36667 328.36667\n [4,] 115.77500 240.775000  55.27500  66.52500  28.77500 165.02500  79.27500\n [5,] 185.42000  23.220000 155.62000 181.62000 159.42000  59.62000 108.42000\n [6,]  47.85000  21.350000  35.01667  22.01667  82.51667  18.51667 145.35000\n [7,]  51.72857   6.585714  16.87143 118.01429  90.87143 111.87143 140.30000\n [8,]  28.51250 110.387500  62.01250  90.26250  46.51250  87.51250  50.76250\n [9,] 107.90000 108.677778 101.78889  79.01111  96.56667  42.34444  42.56667\n[10,]  50.31000  99.010000  79.81000  64.01000  22.51000  93.01000  27.71000\n           [,8]      [,9]\n [1,] 411.10000  71.10000\n [2,] 302.05000 337.55000\n [3,] 320.03333 323.70000\n [4,]  99.77500  31.27500\n [5,]  39.02000 182.62000\n [6,]  41.51667 130.18333\n [7,] 113.15714  69.72857\n [8,]  39.51250 114.51250\n [9,] 106.45556  44.90000\n[10,]  16.71000  86.41000\n\n, , 4\n\n           [,1]       [,2]      [,3]      [,4]       [,5]      [,6]      [,7]\n [1,] 403.10000 764.100000 721.10000 139.10000 199.100000 843.10000 616.10000\n [2,] 494.05000 397.050000  72.55000   1.55000 481.050000 299.05000 147.05000\n [3,] 304.70000  65.366667  45.70000 167.03333  29.033333 258.70000 218.70000\n [4,]  72.27500  35.275000  83.02500 114.02500 160.525000 246.77500  58.27500\n [5,]  95.62000  44.220000  75.62000 158.42000  13.020000 193.22000 117.02000\n [6,] 115.18333  37.850000  32.35000  52.68333   9.683333  67.18333  13.18333\n [7,]  73.15714   5.871429 134.72857 120.58571 101.728571 130.15714 120.44286\n [8,]  12.88750 112.512500  50.38750   8.38750   7.012500   5.26250   1.13750\n [9,]  86.23333   3.344444  14.23333  37.78889  70.122222  75.01111  57.34444\n[10,]  67.31000  27.310000  47.91000  59.31000  28.910000  37.21000  46.61000\n            [,8]       [,9]\n [1,] 471.100000 782.100000\n [2,] 346.550000 134.550000\n [3,]  63.700000 144.033333\n [4,]  52.275000 235.275000\n [5,] 160.820000  80.620000\n [6,]  11.683333  48.016667\n [7,] 103.585714 107.442857\n [8,] 117.387500  56.762500\n [9,]   1.677778   1.566667\n[10,]  85.310000  54.710000\n\n, , 5\n\n            [,1]      [,2]      [,3]       [,4]      [,5]      [,6]      [,7]\n [1,] 992.100000  68.10000 111.10000 168.100000 533.10000 881.10000 518.10000\n [2,] 409.550000 182.05000 484.55000  15.050000 110.05000 267.55000  67.05000\n [3,] 171.033333 183.03333 261.70000  89.700000 295.70000  36.70000 206.36667\n [4,]  83.025000 166.27500 168.52500  17.525000  18.02500 150.52500  85.77500\n [5,] 150.620000   9.22000  74.62000  90.020000 192.62000 114.02000  93.02000\n [6,]  12.350000  29.85000  77.51667  56.350000 150.68333 156.68333  42.68333\n [7,]  98.442857  16.72857 123.15714  36.157143 129.30000  82.72857  87.58571\n [8,]  57.512500  80.63750 118.51250  12.637500  12.51250  66.63750 111.76250\n [9,]   4.566667  93.56667  20.12222   6.344444  87.23333  40.90000  10.01111\n[10,]  70.010000  19.41000   8.41000  37.410000  27.31000  38.61000  33.71000\n           [,8]      [,9]\n [1,]  65.10000 732.10000\n [2,] 408.05000 103.55000\n [3,]  61.36667 281.36667\n [4,] 183.52500   0.52500\n [5,] 136.42000   7.42000\n [6,]  99.51667 127.68333\n [7,]  71.15714  93.58571\n [8,]  65.13750  29.13750\n [9,]  13.90000  64.56667\n[10,]  27.41000  94.01000\n\n, , 6\n\n           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]\n [1,] 452.10000 503.10000 785.10000 688.10000 944.10000 925.10000 824.10000\n [2,] 375.05000   8.05000 409.05000 256.55000 418.55000 467.55000 148.05000\n [3,]  98.70000 238.03333  31.36667 162.03333  46.36667  16.70000  67.03333\n [4,] 197.27500 150.77500 223.27500 139.27500 114.27500  40.77500 197.27500\n [5,]  48.42000  75.82000  98.22000 152.62000   9.82000   1.42000  87.02000\n [6,]  69.51667  76.01667  54.35000  24.85000 103.01667  26.35000  88.01667\n [7,] 116.30000  82.30000  76.58571 126.72857  12.87143  52.44286  35.87143\n [8,]  77.76250  47.63750  57.76250  10.38750  52.51250  57.51250 120.76250\n [9,] 111.01111  19.12222  16.90000  80.12222  12.23333  79.90000  19.12222\n[10,]  22.71000   5.21000  94.81000  65.91000  46.41000  88.51000  28.81000\n          [,8]      [,9]\n [1,] 554.1000 517.10000\n [2,] 232.5500 185.55000\n [3,]  34.7000  49.36667\n [4,]  86.2750  90.77500\n [5,]  37.8200  96.42000\n [6,] 139.0167 100.18333\n [7,] 102.8714  21.87143\n [8,]  40.5125  88.13750\n [9,]  89.9000  31.23333\n[10,]  58.9100  64.31000\n\n, , 7\n\n           [,1]      [,2]       [,3]      [,4]      [,5]      [,6]       [,7]\n [1,] 482.10000 314.10000 581.100000 868.10000 697.10000 814.10000 221.100000\n [2,]  51.05000 139.05000 100.050000 478.05000 203.55000 294.55000 402.550000\n [3,] 253.03333 271.36667 173.033333 300.70000 141.36667 139.70000   2.033333\n [4,] 173.02500  22.77500 179.025000 144.02500  34.02500 109.02500  29.025000\n [5,] 111.02000 149.02000 112.420000  49.02000  95.02000 100.62000  44.220000\n [6,] 100.51667  85.85000   5.016667  59.35000  33.68333  23.35000 127.850000\n [7,]  36.72857  92.72857 122.300000  34.87143 113.44286  22.15714   6.014286\n [8,]  87.88750  92.63750  74.637500   8.01250  45.51250  94.76250 119.512500\n [9,]  82.78889 106.01111  43.344444 106.67778  10.12222  51.56667 107.122222\n[10,]   3.51000   3.41000  30.810000   9.71000  19.31000  21.81000  95.010000\n           [,8]      [,9]\n [1,] 750.10000 591.10000\n [2,] 100.05000 162.05000\n [3,] 159.03333  82.36667\n [4,]  61.27500 112.02500\n [5,] 106.22000  48.62000\n [6,]  68.68333  46.35000\n [7,] 108.30000 101.58571\n [8,]  69.13750  36.38750\n [9,]  95.12222  36.01111\n[10,]  22.21000  25.11000\n\n, , 8\n\n           [,1]      [,2]        [,3]      [,4]      [,5]     [,6]      [,7]\n [1,] 462.10000 429.10000 621.1000000 813.10000 781.10000  92.1000 463.10000\n [2,]  63.05000 343.55000 308.0500000 374.55000 494.55000 262.0500 196.55000\n [3,] 122.70000  30.70000 176.3666667 234.03333  28.70000 116.7000  21.36667\n [4,] 179.02500 218.77500  60.2750000  85.27500  37.27500  40.2750 164.77500\n [5,] 148.42000 189.82000   5.8200000 102.22000  68.62000 200.0200 183.82000\n [6,]  68.51667 159.68333 141.5166667  69.18333  25.85000 107.3500 150.35000\n [7,] 100.30000  68.15714   0.1571429 118.44286  29.87143 115.5857  82.87143\n [8,]  44.13750  76.26250  25.6375000 124.26250 112.01250  94.1375  96.76250\n [9,]  67.90000  36.01111  77.6777778  30.56667  51.56667 106.7889  51.78889\n[10,]  82.51000  41.31000  43.4100000  90.91000  47.11000 100.0100  19.91000\n            [,8]      [,9]\n [1,] 341.100000 372.10000\n [2,] 150.050000 486.55000\n [3,] 283.033333 114.70000\n [4,] 132.775000 173.52500\n [5,]  76.020000 120.42000\n [6,]  17.683333  69.68333\n [7,]   2.442857  48.58571\n [8,]  71.762500 113.26250\n [9,]  67.900000  81.67778\n[10,]  55.710000  62.41000\n\nbc.d(x, y, \"^\")\n\n, , 1\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 6.251000e+02 4.791000e+02 1.181000e+02 2.181000e+02 4.641000e+02\n [2,] 9.256364e+05 3.092472e+05 9.684528e+05 2.126132e+05 2.276244e+05\n [3,] 1.532163e+08 1.804579e+08 1.564376e+07 4.356919e+08 6.274419e+08\n [4,] 3.936589e+11 8.889492e+07 1.116894e+11 7.373680e+10 4.771041e+11\n [5,] 5.414522e+13 5.310385e+14 1.936262e+14 2.827636e+13 6.960625e+14\n [6,] 7.611775e+10 5.003412e+11 1.365991e+15 9.598548e+09 2.096294e+16\n [7,] 5.582712e+20 8.326448e+19 1.227828e+20 4.820294e+13 5.167610e+06\n [8,] 1.357019e+21 9.461148e+23 9.145831e+21 2.783111e+18 8.814991e+20\n [9,] 7.331600e+26 1.692311e+24 4.199077e+25 1.140744e+15 2.017336e+25\n[10,] 2.664016e+29 1.839438e+25 1.035448e+29 6.495415e+22 2.869457e+28\n              [,6]         [,7]         [,8]         [,9]\n [1,] 3.181000e+02 1.341000e+02 8.271000e+02 2.691000e+02\n [2,] 1.116228e+05 4.265396e+05 1.798608e+05 8.299210e+03\n [3,] 5.649263e+06 1.747706e+08 1.311739e+08 3.765235e+08\n [4,] 6.981919e+11 1.296864e+11 1.041596e+11 3.717524e+10\n [5,] 2.393768e+12 1.755218e+14 1.464656e+09 6.274684e+09\n [6,] 5.559917e+12 4.339253e+17 4.021967e+13 4.973164e+17\n [7,] 8.625601e+20 2.224535e+14 9.185170e+12 7.453911e+19\n [8,] 9.614657e+23 7.707378e+19 9.701111e+20 7.464086e+23\n [9,] 2.508583e+24 6.368478e+26 4.782254e+22 3.988953e+23\n[10,] 2.668090e+23 2.217074e+26 2.950689e+29 3.983372e+23\n\n, , 2\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 9.421000e+02 4.201000e+02 1.231000e+02 2.941000e+02 8.711000e+02\n [2,] 4.304672e+05 1.879641e+04 6.353684e+05 5.014056e+05 8.071281e+04\n [3,] 1.447858e+08 3.656793e+08 3.343999e+08 3.564377e+07 5.448304e+07\n [4,] 4.365609e+10 1.254180e+11 6.305300e+11 3.799268e+11 4.702525e+11\n [5,] 8.360294e+12 3.894161e+14 3.208008e+11 3.486784e+04 7.111592e+14\n [6,] 2.584306e+17 3.617124e+17 1.781209e+17 6.604125e+14 9.593076e+17\n [7,] 6.695510e+18 1.531019e+17 3.048356e+18 7.519956e+20 2.856325e+20\n [8,] 6.523332e+21 1.684504e+21 3.255547e+18 1.045759e+23 5.998718e+16\n [9,] 1.039962e+25 8.469087e+25 1.316827e+25 4.829554e+23 5.424880e+24\n[10,] 4.953470e+25 1.087239e+19 5.625744e+29 2.180626e+21 1.190207e+26\n              [,6]         [,7]         [,8]         [,9]\n [1,] 7.810000e+01 8.051000e+02 2.631000e+02 9.551000e+02\n [2,] 2.859481e+04 1.649172e+05 6.337752e+05 5.243208e+05\n [3,] 4.500297e+06 3.187520e+08 2.850202e+08 3.049571e+08\n [4,] 1.048949e+11 4.159858e+11 1.358441e+11 4.679852e+11\n [5,] 7.933948e+12 1.509280e+14 6.347339e+14 1.692662e+10\n [6,] 4.021967e+13 3.015694e+15 2.144658e+16 4.429946e+14\n [7,] 1.048750e+17 6.308717e+14 3.212750e+16 2.816234e+15\n [8,] 8.119580e+19 8.514578e+23 4.796856e+22 5.112064e+21\n [9,] 1.355144e+24 9.919291e+26 2.102085e+24 3.549836e+25\n[10,] 3.812878e+23 8.327865e+26 3.908262e+28 1.264795e+27\n\n, , 3\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 8.971000e+02 3.511000e+02 2.131000e+02 1.811000e+02 7.501000e+02\n [2,] 5.621641e+04 6.116804e+05 1.706516e+05 1.681820e+05 2.927892e+05\n [3,] 5.277100e+08 1.952129e+08 4.443696e+08 3.343999e+08 1.358760e+08\n [4,] 4.599378e+10 8.603705e+11 2.389764e+09 5.013944e+09 1.755098e+08\n [5,] 6.849091e+14 2.109410e+10 2.852181e+14 6.175447e+14 3.217837e+14\n [6,] 5.600143e+14 4.418703e+12 8.601146e+13 5.313943e+12 1.472847e+16\n [7,] 8.162058e+17 4.424931e+11 3.204419e+14 2.625599e+20 4.213837e+19\n [8,] 7.328284e+18 3.698955e+23 3.669052e+21 7.392286e+22 3.675169e+20\n [9,] 7.680254e+26 8.193120e+26 4.544498e+26 4.649177e+25 2.828966e+26\n[10,] 1.038827e+27 9.052960e+29 1.048511e+29 1.154724e+28 3.340065e+23\n              [,6]         [,7]         [,8]         [,9]\n [1,] 1.201000e+02 3.941000e+02 4.111000e+02 7.110000e+01\n [2,] 1.460004e+05 4.756761e+04 3.649368e+05 4.557600e+05\n [3,] 4.391493e+08 9.559627e+08 8.850125e+08 9.157815e+08\n [4,] 1.898624e+11 1.011079e+10 2.537038e+10 2.449228e+08\n [5,] 2.354019e+12 4.681629e+13 2.826743e+11 6.347339e+14\n [6,] 1.880548e+12 4.399443e+17 2.389144e+14 2.271119e+17\n [7,] 1.806012e+20 8.812314e+20 1.956411e+20 6.600269e+18\n [8,] 5.771393e+22 7.397141e+20 9.967723e+19 4.960701e+23\n [9,] 1.695706e+23 1.777499e+23 6.802954e+26 2.873424e+23\n[10,] 4.845030e+29 2.669103e+24 1.697323e+22 2.320812e+29\n\n, , 4\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 4.031000e+02 7.641000e+02 7.211000e+02 1.391000e+02 1.991000e+02\n [2,] 9.763416e+05 6.305948e+05 2.105401e+04 9.610000e+00 9.256364e+05\n [3,] 7.638026e+08 7.541067e+06 2.576988e+06 1.258268e+08 6.607763e+05\n [4,] 6.985417e+09 3.963766e+08 1.216397e+10 4.327532e+10 1.699850e+11\n [5,] 2.498007e+13 5.283768e+11 7.727400e+12 3.118172e+14 1.169243e+09\n [6,] 1.089545e+17 1.371838e+14 5.347530e+13 9.975783e+14 3.846421e+10\n [7,] 9.235990e+18 1.981038e+11 6.635967e+20 3.053214e+20 9.285107e+19\n [8,] 1.276643e+16 4.308500e+23 6.971117e+20 4.109417e+14 9.810765e+13\n [9,] 1.021549e+26 2.028142e+13 9.288427e+18 6.087790e+22 1.588121e+25\n[10,] 1.908956e+28 2.307900e+24 6.371794e+26 5.386160e+27 4.078316e+24\n              [,6]         [,7]         [,8]         [,9]\n [1,] 8.431000e+02 6.161000e+02 4.711000e+02 7.821000e+02\n [2,] 3.577236e+05 8.649481e+04 4.803876e+05 7.241481e+04\n [3,] 4.674693e+08 2.824295e+08 6.978821e+06 8.067757e+07\n [4,] 9.493899e+11 2.952359e+09 1.911684e+09 7.844099e+11\n [5,] 8.416091e+14 6.857258e+13 3.361633e+14 1.064300e+13\n [6,] 4.290193e+15 2.449395e+11 1.186610e+11 5.718203e+14\n [7,] 5.211495e+20 3.027984e+20 1.053866e+20 1.361223e+20\n [8,] 9.868628e+12 4.702525e+07 6.049155e+23 1.808057e+21\n [9,] 2.912815e+25 2.597794e+24 4.081244e+10 2.202785e+10\n[10,] 5.088581e+25 4.839395e+26 2.041735e+29 2.402521e+27\n\n, , 5\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 9.921000e+02 6.810000e+01 1.111000e+02 1.681000e+02 5.331000e+02\n [2,] 6.709248e+05 1.325688e+05 9.391548e+05 9.060100e+02 4.844401e+04\n [3,] 1.350847e+08 1.655596e+08 4.839215e+08 1.948683e+07 6.981002e+08\n [4,] 1.216397e+10 1.956806e+11 2.064892e+11 2.414749e+07 2.702347e+07\n [5,] 2.422497e+14 2.082115e+08 7.229799e+12 1.847332e+13 8.286229e+14\n [6,] 1.655424e+11 3.300453e+13 1.012227e+16 1.493726e+15 5.461335e+17\n [7,] 7.378630e+19 3.019244e+14 3.539187e+20 6.653421e+16 4.975949e+20\n [8,] 2.008250e+21 2.999275e+22 6.528797e+23 1.091464e+16 1.008028e+16\n [9,] 3.346389e+14 2.129477e+26 2.095396e+20 6.452455e+15 1.133248e+26\n[10,] 2.828790e+28 7.590237e+22 1.769946e+19 5.368798e+25 2.307900e+24\n              [,6]         [,7]         [,8]         [,9]\n [1,] 8.811000e+02 5.181000e+02 6.510000e+01 7.321000e+02\n [2,] 2.863320e+05 1.798281e+04 6.660192e+05 4.289041e+04\n [3,] 1.334633e+06 2.372916e+08 6.239666e+06 6.014253e+08\n [4,] 1.314239e+11 1.385744e+10 2.904162e+11 1.944810e+01\n [5,] 6.022200e+13 2.176365e+13 1.476523e+14 7.028612e+07\n [6,] 6.903102e+17 2.821353e+14 4.531922e+16 2.021682e+17\n [7,] 2.184112e+19 3.256261e+19 7.607042e+18 5.177894e+19\n [8,] 6.523332e+21 4.084028e+23 5.437116e+21 8.716421e+18\n [9,] 1.240773e+23 3.913120e+17 7.504397e+18 7.555407e+24\n[10,] 7.362037e+25 1.894905e+25 2.393814e+24 5.391884e+29\n\n, , 6\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 4.521000e+02 5.031000e+02 7.851000e+02 6.881000e+02 9.441000e+02\n [2,] 5.626500e+05 2.592100e+02 6.692876e+05 2.632716e+05 7.007364e+05\n [3,] 2.596063e+07 3.641473e+08 8.332376e+05 1.148621e+08 2.691419e+06\n [4,] 3.877289e+11 1.322992e+11 6.362098e+11 9.632358e+10 4.365609e+10\n [5,] 8.317139e+11 7.830129e+12 2.856602e+13 2.587660e+14 2.853694e+08\n [6,] 5.265518e+15 9.002444e+15 1.202555e+15 1.098666e+13 5.576381e+16\n [7,] 2.369978e+20 2.106130e+19 1.272684e+19 4.323227e+20 4.820294e+13\n [8,] 2.243270e+22 4.449504e+20 2.079159e+21 2.274093e+15 9.701111e+20\n [9,] 9.919291e+26 1.324426e+20 4.356753e+19 5.271806e+25 2.377310e+18\n[10,] 3.648979e+23 1.473592e+17 5.868694e+29 1.547081e+28 4.635704e+26\n              [,6]         [,7]         [,8]         [,9]\n [1,] 9.251000e+02 8.241000e+02 5.541000e+02 5.171000e+02\n [2,] 8.744120e+05 8.767521e+04 2.163180e+05 1.377152e+05\n [3,] 1.257515e+05 8.132727e+06 1.128112e+06 3.248368e+06\n [4,] 7.076457e+08 3.877289e+11 1.418338e+10 1.738221e+10\n [5,] 1.804229e+04 1.559357e+13 2.418008e+11 2.604268e+13\n [6,] 1.561677e+13 2.169187e+16 3.367509e+17 4.717157e+16\n [7,] 8.984433e+17 6.294004e+16 1.004037e+20 1.971634e+15\n [8,] 2.008250e+21 7.588862e+23 1.217397e+20 6.109501e+22\n [9,] 5.141663e+25 1.324426e+20 1.486003e+26 1.095841e+22\n[10,] 2.950689e+29 3.939423e+24 5.033734e+27 1.209999e+28\n\n, , 7\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 4.821000e+02 3.141000e+02 5.811000e+02 8.681000e+02 6.971000e+02\n [2,] 1.042441e+04 7.733961e+04 4.004001e+04 9.141272e+05 1.657304e+05\n [3,] 4.374183e+08 5.395519e+08 1.398792e+08 7.341149e+08 7.627897e+07\n [4,] 2.294433e+11 6.887689e+07 2.629630e+11 1.101518e+11 3.431093e+08\n [5,] 5.270552e+13 2.296534e+14 5.611357e+13 8.845381e+11 2.420612e+13\n [6,] 4.812115e+16 1.867881e+16 7.437020e+08 2.039069e+15 6.813933e+13\n [7,] 7.425309e+16 4.854911e+19 3.370323e+20 5.163860e+16 1.991253e+20\n [8,] 5.972234e+22 9.099437e+22 1.615759e+22 2.850127e+14 3.088627e+20\n [9,] 7.078334e+25 6.551565e+26 2.092105e+23 6.931835e+26 4.321807e+17\n[10,] 2.838384e+15 2.125905e+15 7.707561e+24 7.450618e+19 7.208132e+22\n              [,6]         [,7]         [,8]         [,9]\n [1,] 8.141000e+02 2.211000e+02 7.501000e+02 5.911000e+02\n [2,] 3.470388e+05 6.481860e+05 4.004001e+04 1.050408e+05\n [3,] 7.361274e+07 2.269810e+02 1.085996e+08 1.508753e+07\n [4,] 3.616965e+10 1.816891e+08 3.608887e+09 4.031807e+10\n [5,] 3.223084e+13 5.283768e+11 4.225533e+13 8.490334e+11\n [6,] 7.561863e+12 2.037567e+17 4.897965e+15 4.626003e+14\n [7,] 2.159149e+15 2.344092e+11 1.439082e+20 9.194217e+19\n [8,] 1.090968e+23 6.982751e+23 8.758491e+21 5.156294e+19\n [9,] 9.988588e+23 7.196126e+26 2.470134e+26 3.945584e+22\n[10,] 2.435323e+23 5.993675e+29 2.920691e+23 9.964767e+23\n\n, , 8\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 4.621000e+02 4.291000e+02 6.211000e+02 8.131000e+02 7.811000e+02\n [2,] 1.590121e+04 4.721064e+05 3.795792e+05 5.611508e+05 9.783188e+05\n [3,] 4.987667e+07 7.812300e+05 1.481199e+08 3.460963e+08 6.382774e+05\n [4,] 2.629630e+11 5.864497e+11 3.379005e+09 1.353714e+10 4.942089e+08\n [5,] 2.250672e+14 7.701226e+14 2.086724e+07 3.487622e+13 4.754486e+12\n [6,] 4.827084e+15 7.735084e+17 3.747598e+17 5.115833e+15 1.392101e+13\n [7,] 8.409938e+19 5.626857e+18 1.948717e+00 2.693075e+20 1.747746e+16\n [8,] 2.416472e+20 1.919589e+22 3.131304e+18 9.537633e+23 4.157687e+23\n [9,] 1.188531e+25 3.945584e+22 3.988905e+25 9.024337e+21 9.988588e+23\n[10,] 1.462399e+29 1.447278e+26 2.376281e+26 3.855818e+29 5.384322e+26\n              [,6]         [,7]         [,8]         [,9]\n [1,] 9.210000e+01 4.631000e+02 3.411000e+02 3.721000e+02\n [2,] 2.746808e+05 1.545276e+05 9.006001e+04 9.469236e+05\n [3,] 4.291176e+07 2.633747e+05 6.121763e+08 4.074310e+07\n [4,] 6.735691e+08 1.887145e+11 7.956191e+10 2.321070e+11\n [5,] 1.000500e+15 6.558641e+14 7.933948e+12 7.913036e+13\n [6,] 7.140355e+16 5.389247e+17 1.426567e+12 5.341719e+15\n [7,] 2.269945e+20 2.210650e+19 4.275361e+08 5.263158e+17\n [8,] 1.034716e+23 1.289367e+23 1.180050e+22 4.543694e+23\n [9,] 6.997086e+26 1.038274e+24 1.188531e+25 6.267839e+25\n[10,] 1.001000e+30 9.788420e+22 2.879596e+27 8.964825e+27\n\nbc.d(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.d(x, y, \"!=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.d(x, y, \"&lt;\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.d(x, y, \"&gt;\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]  [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2]  [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE FALSE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.d(x, y, \"&lt;=\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.d(x, y, \"&gt;=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]  [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2]  [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE FALSE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE TRUE"
  },
  {
    "objectID": "man/array_replicate.html",
    "href": "man/array_replicate.html",
    "title": "array_replicate",
    "section": "",
    "text": "The array_replicate() function replicates array dimensions until the specified dimension sizes are reached, and returns the array.   The various broadcasting functions recycle array dimensions virtually, meaning little to no additional memory is needed.  The array_replicate() function, however, physically replicates the dimensions of an array (and thus actually occupies additional memory space).  \n\n\n\narray_replicate(x, tdim)\n\n\n\n\n\n\n\n\nx\n\n\nan atomic or recursive array or matrix.\n\n\n\n\ntdim\n\n\nan integer vector, giving the target dimension to reach.\n\n\n\n\n\n\n\nReturns the replicated array.\n\n\n\n\nlibrary(\"broadcast\")\n\n\nx &lt;- matrix(1:9, 3,3)\ncolnames(x) &lt;- LETTERS[1:3]\nrownames(x) &lt;- letters[1:3]\nnames(x) &lt;- month.abb[1:9]\nprint(x)\n\n  A B C\na 1 4 7\nb 2 5 8\nc 3 6 9\nattr(,\"names\")\n[1] \"Jan\" \"Feb\" \"Mar\" \"Apr\" \"May\" \"Jun\" \"Jul\" \"Aug\" \"Sep\"\n\narray_replicate(x, c(3,3,2)) # replicate to larger size\n\n, , 1\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n, , 2\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9"
  },
  {
    "objectID": "man/array_replicate.html#recycle-array-dimensions",
    "href": "man/array_replicate.html#recycle-array-dimensions",
    "title": "array_replicate",
    "section": "",
    "text": "The array_replicate() function replicates array dimensions until the specified dimension sizes are reached, and returns the array.   The various broadcasting functions recycle array dimensions virtually, meaning little to no additional memory is needed.  The array_replicate() function, however, physically replicates the dimensions of an array (and thus actually occupies additional memory space).  \n\n\n\narray_replicate(x, tdim)\n\n\n\n\n\n\n\n\nx\n\n\nan atomic or recursive array or matrix.\n\n\n\n\ntdim\n\n\nan integer vector, giving the target dimension to reach.\n\n\n\n\n\n\n\nReturns the replicated array.\n\n\n\n\nlibrary(\"broadcast\")\n\n\nx &lt;- matrix(1:9, 3,3)\ncolnames(x) &lt;- LETTERS[1:3]\nrownames(x) &lt;- letters[1:3]\nnames(x) &lt;- month.abb[1:9]\nprint(x)\n\n  A B C\na 1 4 7\nb 2 5 8\nc 3 6 9\nattr(,\"names\")\n[1] \"Jan\" \"Feb\" \"Mar\" \"Apr\" \"May\" \"Jun\" \"Jul\" \"Aug\" \"Sep\"\n\narray_replicate(x, c(3,3,2)) # replicate to larger size\n\n, , 1\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n, , 2\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9"
  },
  {
    "objectID": "man/aaa00_broadcast_help.html",
    "href": "man/aaa00_broadcast_help.html",
    "title": "aaa00_broadcast_help",
    "section": "",
    "text": "broadcast:  Simple Broadcasted Binding and Binary Operations for Atomic and Recursive Arrays with Minimal Dependencies.   Implements simple broadcasted operations for atomic and recursive arrays.\nBesides linking to ‘Rcpp’, ‘broadcast’ does not depend on, vendor, link to, include, or otherwise use any external libraries; ‘broadcast’ was essentially made from scratch and can be installed out-of-the-box.\nThe broadcasted implementations include, but are not limited to, the following:\n\n\nA more efficient and broadcasted version of abind(), for binding arrays along an arbitrary dimension;\n\n\nRelational operations (like ==, !=, &lt;, &gt;, &lt;=, &gt;=; can also take into account Machine precision);\n\n\nArithmetic operations (like +, -, *, /, \"gcd\", ^, pmin(), pmax());\n\n\nBoolean combiner operations (like &, |, xor(), \"nand\");\n\n\nString distance, (in)equality, and concatenation operations;\n\n\nA Broadcasted implementation of ifelse();\n\n\nA Broadcasted apply-like function; The broadcasted implementations strive to minimize computation time and memory usage (which is not just good for computer efficiency, but also for the environment).\n\n\n\n\n\nAn introduction and overview of the package can be found on the website.  \n\n\n\nOuter-like functions  ‘broadcast’ provides a set of functions for binary, element-wise, outer operations with broadcasting.  These functions use an API similar to the outer and sweep functions.   The following functions for type-specific binary operations are available:\n\n\nbc.d: decimal (64bit) arithmetic and relational operations;\n\n\nbc.i: integer (53bit) arithmetic and relational operations;\n\n\nbc.b: Boolean operations;\n\n\nbc.cplx: complex arithmetic and (in)equality operations;\n\n\nbc.str: string (in)equality, concatenation, and distance operations;\n\n\nbc.list: apply any ‘R’ function to 2 recursive arrays with broadcasting.  \n\n\nBinding Implementations  ‘broadcast’ provides 3 binding implementations:  bind_mat, bind_array, and bind_dt.  \nGeneral functions  ‘broadcast’ also comes with 2 general broadcasted functions:\n\n\nbc_ifelse: Broadcasted version of ifelse.\n\n\nbcapply: Broadcasted apply-like function.  \n\n\nOther functions  ‘broadcast’ also provides type-casting functions, which preserve names and dimensions - convenient for arrays.  \n\n\n\nAuthor, Maintainer: Tony Wilkes tony_a_wilkes@outlook.com (ORCID)\n\n\n\nThe badges shown in the documentation of this R-package were made using the services of: https://shields.io/"
  },
  {
    "objectID": "man/aaa00_broadcast_help.html#broadcast-simple-broadcasted-operations-for-atomic-and-recursive-arrays-with-minimal-dependencies",
    "href": "man/aaa00_broadcast_help.html#broadcast-simple-broadcasted-operations-for-atomic-and-recursive-arrays-with-minimal-dependencies",
    "title": "aaa00_broadcast_help",
    "section": "",
    "text": "broadcast:  Simple Broadcasted Binding and Binary Operations for Atomic and Recursive Arrays with Minimal Dependencies.   Implements simple broadcasted operations for atomic and recursive arrays.\nBesides linking to ‘Rcpp’, ‘broadcast’ does not depend on, vendor, link to, include, or otherwise use any external libraries; ‘broadcast’ was essentially made from scratch and can be installed out-of-the-box.\nThe broadcasted implementations include, but are not limited to, the following:\n\n\nA more efficient and broadcasted version of abind(), for binding arrays along an arbitrary dimension;\n\n\nRelational operations (like ==, !=, &lt;, &gt;, &lt;=, &gt;=; can also take into account Machine precision);\n\n\nArithmetic operations (like +, -, *, /, \"gcd\", ^, pmin(), pmax());\n\n\nBoolean combiner operations (like &, |, xor(), \"nand\");\n\n\nString distance, (in)equality, and concatenation operations;\n\n\nA Broadcasted implementation of ifelse();\n\n\nA Broadcasted apply-like function; The broadcasted implementations strive to minimize computation time and memory usage (which is not just good for computer efficiency, but also for the environment).\n\n\n\n\n\nAn introduction and overview of the package can be found on the website.  \n\n\n\nOuter-like functions  ‘broadcast’ provides a set of functions for binary, element-wise, outer operations with broadcasting.  These functions use an API similar to the outer and sweep functions.   The following functions for type-specific binary operations are available:\n\n\nbc.d: decimal (64bit) arithmetic and relational operations;\n\n\nbc.i: integer (53bit) arithmetic and relational operations;\n\n\nbc.b: Boolean operations;\n\n\nbc.cplx: complex arithmetic and (in)equality operations;\n\n\nbc.str: string (in)equality, concatenation, and distance operations;\n\n\nbc.list: apply any ‘R’ function to 2 recursive arrays with broadcasting.  \n\n\nBinding Implementations  ‘broadcast’ provides 3 binding implementations:  bind_mat, bind_array, and bind_dt.  \nGeneral functions  ‘broadcast’ also comes with 2 general broadcasted functions:\n\n\nbc_ifelse: Broadcasted version of ifelse.\n\n\nbcapply: Broadcasted apply-like function.  \n\n\nOther functions  ‘broadcast’ also provides type-casting functions, which preserve names and dimensions - convenient for arrays.  \n\n\n\nAuthor, Maintainer: Tony Wilkes tony_a_wilkes@outlook.com (ORCID)\n\n\n\nThe badges shown in the documentation of this R-package were made using the services of: https://shields.io/"
  },
  {
    "objectID": "about/NEWS.html",
    "href": "about/NEWS.html",
    "title": "Changelog",
    "section": "",
    "text": "…still testing…"
  },
  {
    "objectID": "about/LICENSE.html",
    "href": "about/LICENSE.html",
    "title": "License",
    "section": "",
    "text": "1.1. “Contributor” means each individual or legal entity that creates, contributes to the creation of, or owns Covered Software.\n1.2. “Contributor Version” means the combination of the Contributions of others (if any) used by a Contributor and that particular Contributor’s Contribution.\n1.3. “Contribution” means Covered Software of a particular Contributor.\n1.4. “Covered Software” means Source Code Form to which the initial Contributor has attached the notice in Exhibit A, the Executable Form of such Source Code Form, and Modifications of such Source Code Form, in each case including portions thereof.\n1.5. “Incompatible With Secondary Licenses” means\n(a) that the initial Contributor has attached the notice described\n    in Exhibit B to the Covered Software; or\n\n(b) that the Covered Software was made available under the terms of\n    version 1.1 or earlier of the License, but not also under the\n    terms of a Secondary License.\n1.6. “Executable Form” means any form of the work other than Source Code Form.\n1.7. “Larger Work” means a work that combines Covered Software with other material, in a separate file or files, that is not Covered Software.\n1.8. “License” means this document.\n1.9. “Licensable” means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently, any and all of the rights conveyed by this License.\n1.10. “Modifications” means any of the following:\n(a) any file in Source Code Form that results from an addition to,\n    deletion from, or modification of the contents of Covered\n    Software; or\n\n(b) any new file in Source Code Form that contains any Covered\n    Software.\n1.11. “Patent Claims” of a Contributor means any patent claim(s), including without limitation, method, process, and apparatus claims, in any patent Licensable by such Contributor that would be infringed, but for the grant of the License, by the making, using, selling, offering for sale, having made, import, or transfer of either its Contributions or its Contributor Version.\n1.12. “Secondary License” means either the GNU General Public License, Version 2.0, the GNU Lesser General Public License, Version 2.1, the GNU Affero General Public License, Version 3.0, or any later versions of those licenses.\n1.13. “Source Code Form” means the form of the work preferred for making modifications.\n1.14. “You” (or “Your”) means an individual or a legal entity exercising rights under this License. For legal entities, “You” includes any entity that controls, is controlled by, or is under common control with You. For purposes of this definition, “control” means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.\n\n\n\n2.1. Grants\nEach Contributor hereby grants You a world-wide, royalty-free, non-exclusive license:\n\nunder intellectual property rights (other than patent or trademark) Licensable by such Contributor to use, reproduce, make available, modify, display, perform, distribute, and otherwise exploit its Contributions, either on an unmodified basis, with Modifications, or as part of a Larger Work; and\nunder Patent Claims of such Contributor to make, use, sell, offer for sale, have made, import, and otherwise transfer either its Contributions or its Contributor Version.\n\n2.2. Effective Date\nThe licenses granted in Section 2.1 with respect to any Contribution become effective for each Contribution on the date the Contributor first distributes such Contribution.\n2.3. Limitations on Grant Scope\nThe licenses granted in this Section 2 are the only rights granted under this License. No additional rights or licenses will be implied from the distribution or licensing of Covered Software under this License. Notwithstanding Section 2.1(b) above, no patent license is granted by a Contributor:\n\nfor any code that a Contributor has removed from Covered Software; or\nfor infringements caused by: (i) Your and any other third party’s modifications of Covered Software, or (ii) the combination of its Contributions with other software (except as part of its Contributor Version); or\nunder Patent Claims infringed by Covered Software in the absence of its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks, or logos of any Contributor (except as may be necessary to comply with the notice requirements in Section 3.4).\n2.4. Subsequent Licenses\nNo Contributor makes additional grants as a result of Your choice to distribute the Covered Software under a subsequent version of this License (see Section 10.2) or under the terms of a Secondary License (if permitted under the terms of Section 3.3).\n2.5. Representation\nEach Contributor represents that the Contributor believes its Contributions are its original creation(s) or it has sufficient rights to grant the rights to its Contributions conveyed by this License.\n2.6. Fair Use\nThis License is not intended to limit any rights You have under applicable copyright doctrines of fair use, fair dealing, or other equivalents.\n2.7. Conditions\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in Section 2.1.\n\n\n\n3.1. Distribution of Source Form\nAll distribution of Covered Software in Source Code Form, including any Modifications that You create or to which You contribute, must be under the terms of this License. You must inform recipients that the Source Code Form of the Covered Software is governed by the terms of this License, and how they can obtain a copy of this License. You may not attempt to alter or restrict the recipients’ rights in the Source Code Form.\n3.2. Distribution of Executable Form\nIf You distribute Covered Software in Executable Form then:\n\nsuch Covered Software must also be made available in Source Code Form, as described in Section 3.1, and You must inform recipients of the Executable Form how they can obtain a copy of such Source Code Form by reasonable means in a timely manner, at a charge no more than the cost of distribution to the recipient; and\nYou may distribute such Executable Form under the terms of this License, or sublicense it under different terms, provided that the license for the Executable Form does not attempt to limit or alter the recipients’ rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\nYou may create and distribute a Larger Work under terms of Your choice, provided that You also comply with the requirements of this License for the Covered Software. If the Larger Work is a combination of Covered Software with a work governed by one or more Secondary Licenses, and the Covered Software is not Incompatible With Secondary Licenses, this License permits You to additionally distribute such Covered Software under the terms of such Secondary License(s), so that the recipient of the Larger Work may, at their option, further distribute the Covered Software under the terms of either this License or such Secondary License(s).\n3.4. Notices\nYou may not remove or alter the substance of any license notices (including copyright notices, patent notices, disclaimers of warranty, or limitations of liability) contained within the Source Code Form of the Covered Software, except that You may alter any license notices to the extent required to remedy known factual inaccuracies.\n3.5. Application of Additional Terms\nYou may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, You may do so only on Your own behalf, and not on behalf of any Contributor. You must make it absolutely clear that any such warranty, support, indemnity, or liability obligation is offered by You alone, and You hereby agree to indemnify every Contributor for any liability incurred by such Contributor as a result of warranty, support, indemnity or liability terms You offer. You may include additional disclaimers of warranty and limitations of liability specific to any jurisdiction.\n\n\n\nIf it is impossible for You to comply with any of the terms of this License with respect to some or all of the Covered Software due to statute, judicial order, or regulation then You must: (a) comply with the terms of this License to the maximum extent possible; and (b) describe the limitations and the code they affect. Such description must be placed in a text file included with all distributions of the Covered Software under this License. Except to the extent prohibited by statute or regulation, such description must be sufficiently detailed for a recipient of ordinary skill to be able to understand it.\n\n\n\n5.1. The rights granted under this License will terminate automatically if You fail to comply with any of its terms. However, if You become compliant, then the rights granted under this License from a particular Contributor are reinstated (a) provisionally, unless and until such Contributor explicitly and finally terminates Your grants, and (b) on an ongoing basis, if such Contributor fails to notify You of the non-compliance by some reasonable means prior to 60 days after You have come back into compliance. Moreover, Your grants from a particular Contributor are reinstated on an ongoing basis if such Contributor notifies You of the non-compliance by some reasonable means, this is the first time You have received notice of non-compliance with this License from such Contributor, and You become compliant prior to 30 days after Your receipt of the notice.\n5.2. If You initiate litigation against any entity by asserting a patent infringement claim (excluding declaratory judgment actions, counter-claims, and cross-claims) alleging that a Contributor Version directly or indirectly infringes any patent, then the rights granted to You by any and all Contributors for the Covered Software under Section 2.1 of this License shall terminate.\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all end user license agreements (excluding distributors and resellers) which have been validly granted by You or Your distributors under this License prior to termination shall survive termination.\n\n\n                                                                 *\n\nDisclaimer of Warranty *\n\n————————- *\n                                                                 *\nCovered Software is provided under this License on an “as is” *\nbasis, without warranty of any kind, either expressed, implied, or *\nstatutory, including, without limitation, warranties that the *\nCovered Software is free of defects, merchantable, fit for a *\nparticular purpose or non-infringing. The entire risk as to the *\nquality and performance of the Covered Software is with You. *\nShould any Covered Software prove defective in any respect, You *\n(not any Contributor) assume the cost of any necessary servicing, *\nrepair, or correction. This disclaimer of warranty constitutes an *\nessential part of this License. No use of any Covered Software is *\nauthorized under this License except under this disclaimer. *\n                                                                 *\n\n\n\n\n                                                                 *\n\nLimitation of Liability *\n\n————————– *\n                                                                 *\nUnder no circumstances and under no legal theory, whether tort *\n(including negligence), contract, or otherwise, shall any *\nContributor, or anyone who distributes Covered Software as *\npermitted above, be liable to You for any direct, indirect, *\nspecial, incidental, or consequential damages of any character *\nincluding, without limitation, damages for lost profits, loss of *\ngoodwill, work stoppage, computer failure or malfunction, or any *\nand all other commercial damages or losses, even if such party *\nshall have been informed of the possibility of such damages. This *\nlimitation of liability shall not apply to liability for death or *\npersonal injury resulting from such party’s negligence to the *\nextent applicable law prohibits such limitation. Some *\njurisdictions do not allow the exclusion or limitation of *\nincidental or consequential damages, so this exclusion and *\nlimitation may not apply to You. *\n                                                                 *\n\n\n\n\n\nAny litigation relating to this License may be brought only in the courts of a jurisdiction where the defendant maintains its principal place of business and such litigation shall be governed by laws of that jurisdiction, without reference to its conflict-of-law provisions. Nothing in this Section shall prevent a party’s ability to bring cross-claims or counter-claims.\n\n\n\nThis License represents the complete agreement concerning the subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not be used to construe this License against a Contributor.\n\n\n\n10.1. New Versions\nMozilla Foundation is the license steward. Except as provided in Section 10.3, no one other than the license steward has the right to modify or publish new versions of this License. Each version will be given a distinguishing version number.\n10.2. Effect of New Versions\nYou may distribute the Covered Software under the terms of the version of the License under which You originally received the Covered Software, or under the terms of any subsequent version published by the license steward.\n10.3. Modified Versions\nIf you create software not governed by this License, and you want to create a new license for such software, you may create and use a modified version of this License if you rename the license and remove any references to the name of the license steward (except to note that such modified license differs from this License).\n10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses\nIf You choose to distribute Source Code Form that is Incompatible With Secondary Licenses under the terms of this version of the License, the notice described in Exhibit B of this License must be attached.\n\n\n\nThis Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.\nIf it is not possible or desirable to put the notice in a particular file, then You may include the notice in a location (such as a LICENSE file in a relevant directory) where a recipient would be likely to look for such a notice.\nYou may add additional accurate notices of copyright ownership.\n\n\n\nThis Source Code Form is “Incompatible With Secondary Licenses”, as defined by the Mozilla Public License, v. 2.0."
  },
  {
    "objectID": "about/LICENSE.html#definitions",
    "href": "about/LICENSE.html#definitions",
    "title": "License",
    "section": "",
    "text": "1.1. “Contributor” means each individual or legal entity that creates, contributes to the creation of, or owns Covered Software.\n1.2. “Contributor Version” means the combination of the Contributions of others (if any) used by a Contributor and that particular Contributor’s Contribution.\n1.3. “Contribution” means Covered Software of a particular Contributor.\n1.4. “Covered Software” means Source Code Form to which the initial Contributor has attached the notice in Exhibit A, the Executable Form of such Source Code Form, and Modifications of such Source Code Form, in each case including portions thereof.\n1.5. “Incompatible With Secondary Licenses” means\n(a) that the initial Contributor has attached the notice described\n    in Exhibit B to the Covered Software; or\n\n(b) that the Covered Software was made available under the terms of\n    version 1.1 or earlier of the License, but not also under the\n    terms of a Secondary License.\n1.6. “Executable Form” means any form of the work other than Source Code Form.\n1.7. “Larger Work” means a work that combines Covered Software with other material, in a separate file or files, that is not Covered Software.\n1.8. “License” means this document.\n1.9. “Licensable” means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently, any and all of the rights conveyed by this License.\n1.10. “Modifications” means any of the following:\n(a) any file in Source Code Form that results from an addition to,\n    deletion from, or modification of the contents of Covered\n    Software; or\n\n(b) any new file in Source Code Form that contains any Covered\n    Software.\n1.11. “Patent Claims” of a Contributor means any patent claim(s), including without limitation, method, process, and apparatus claims, in any patent Licensable by such Contributor that would be infringed, but for the grant of the License, by the making, using, selling, offering for sale, having made, import, or transfer of either its Contributions or its Contributor Version.\n1.12. “Secondary License” means either the GNU General Public License, Version 2.0, the GNU Lesser General Public License, Version 2.1, the GNU Affero General Public License, Version 3.0, or any later versions of those licenses.\n1.13. “Source Code Form” means the form of the work preferred for making modifications.\n1.14. “You” (or “Your”) means an individual or a legal entity exercising rights under this License. For legal entities, “You” includes any entity that controls, is controlled by, or is under common control with You. For purposes of this definition, “control” means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity."
  },
  {
    "objectID": "about/LICENSE.html#license-grants-and-conditions",
    "href": "about/LICENSE.html#license-grants-and-conditions",
    "title": "License",
    "section": "",
    "text": "2.1. Grants\nEach Contributor hereby grants You a world-wide, royalty-free, non-exclusive license:\n\nunder intellectual property rights (other than patent or trademark) Licensable by such Contributor to use, reproduce, make available, modify, display, perform, distribute, and otherwise exploit its Contributions, either on an unmodified basis, with Modifications, or as part of a Larger Work; and\nunder Patent Claims of such Contributor to make, use, sell, offer for sale, have made, import, and otherwise transfer either its Contributions or its Contributor Version.\n\n2.2. Effective Date\nThe licenses granted in Section 2.1 with respect to any Contribution become effective for each Contribution on the date the Contributor first distributes such Contribution.\n2.3. Limitations on Grant Scope\nThe licenses granted in this Section 2 are the only rights granted under this License. No additional rights or licenses will be implied from the distribution or licensing of Covered Software under this License. Notwithstanding Section 2.1(b) above, no patent license is granted by a Contributor:\n\nfor any code that a Contributor has removed from Covered Software; or\nfor infringements caused by: (i) Your and any other third party’s modifications of Covered Software, or (ii) the combination of its Contributions with other software (except as part of its Contributor Version); or\nunder Patent Claims infringed by Covered Software in the absence of its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks, or logos of any Contributor (except as may be necessary to comply with the notice requirements in Section 3.4).\n2.4. Subsequent Licenses\nNo Contributor makes additional grants as a result of Your choice to distribute the Covered Software under a subsequent version of this License (see Section 10.2) or under the terms of a Secondary License (if permitted under the terms of Section 3.3).\n2.5. Representation\nEach Contributor represents that the Contributor believes its Contributions are its original creation(s) or it has sufficient rights to grant the rights to its Contributions conveyed by this License.\n2.6. Fair Use\nThis License is not intended to limit any rights You have under applicable copyright doctrines of fair use, fair dealing, or other equivalents.\n2.7. Conditions\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in Section 2.1."
  },
  {
    "objectID": "about/LICENSE.html#responsibilities",
    "href": "about/LICENSE.html#responsibilities",
    "title": "License",
    "section": "",
    "text": "3.1. Distribution of Source Form\nAll distribution of Covered Software in Source Code Form, including any Modifications that You create or to which You contribute, must be under the terms of this License. You must inform recipients that the Source Code Form of the Covered Software is governed by the terms of this License, and how they can obtain a copy of this License. You may not attempt to alter or restrict the recipients’ rights in the Source Code Form.\n3.2. Distribution of Executable Form\nIf You distribute Covered Software in Executable Form then:\n\nsuch Covered Software must also be made available in Source Code Form, as described in Section 3.1, and You must inform recipients of the Executable Form how they can obtain a copy of such Source Code Form by reasonable means in a timely manner, at a charge no more than the cost of distribution to the recipient; and\nYou may distribute such Executable Form under the terms of this License, or sublicense it under different terms, provided that the license for the Executable Form does not attempt to limit or alter the recipients’ rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\nYou may create and distribute a Larger Work under terms of Your choice, provided that You also comply with the requirements of this License for the Covered Software. If the Larger Work is a combination of Covered Software with a work governed by one or more Secondary Licenses, and the Covered Software is not Incompatible With Secondary Licenses, this License permits You to additionally distribute such Covered Software under the terms of such Secondary License(s), so that the recipient of the Larger Work may, at their option, further distribute the Covered Software under the terms of either this License or such Secondary License(s).\n3.4. Notices\nYou may not remove or alter the substance of any license notices (including copyright notices, patent notices, disclaimers of warranty, or limitations of liability) contained within the Source Code Form of the Covered Software, except that You may alter any license notices to the extent required to remedy known factual inaccuracies.\n3.5. Application of Additional Terms\nYou may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, You may do so only on Your own behalf, and not on behalf of any Contributor. You must make it absolutely clear that any such warranty, support, indemnity, or liability obligation is offered by You alone, and You hereby agree to indemnify every Contributor for any liability incurred by such Contributor as a result of warranty, support, indemnity or liability terms You offer. You may include additional disclaimers of warranty and limitations of liability specific to any jurisdiction."
  },
  {
    "objectID": "about/LICENSE.html#inability-to-comply-due-to-statute-or-regulation",
    "href": "about/LICENSE.html#inability-to-comply-due-to-statute-or-regulation",
    "title": "License",
    "section": "",
    "text": "If it is impossible for You to comply with any of the terms of this License with respect to some or all of the Covered Software due to statute, judicial order, or regulation then You must: (a) comply with the terms of this License to the maximum extent possible; and (b) describe the limitations and the code they affect. Such description must be placed in a text file included with all distributions of the Covered Software under this License. Except to the extent prohibited by statute or regulation, such description must be sufficiently detailed for a recipient of ordinary skill to be able to understand it."
  },
  {
    "objectID": "about/LICENSE.html#termination",
    "href": "about/LICENSE.html#termination",
    "title": "License",
    "section": "",
    "text": "5.1. The rights granted under this License will terminate automatically if You fail to comply with any of its terms. However, if You become compliant, then the rights granted under this License from a particular Contributor are reinstated (a) provisionally, unless and until such Contributor explicitly and finally terminates Your grants, and (b) on an ongoing basis, if such Contributor fails to notify You of the non-compliance by some reasonable means prior to 60 days after You have come back into compliance. Moreover, Your grants from a particular Contributor are reinstated on an ongoing basis if such Contributor notifies You of the non-compliance by some reasonable means, this is the first time You have received notice of non-compliance with this License from such Contributor, and You become compliant prior to 30 days after Your receipt of the notice.\n5.2. If You initiate litigation against any entity by asserting a patent infringement claim (excluding declaratory judgment actions, counter-claims, and cross-claims) alleging that a Contributor Version directly or indirectly infringes any patent, then the rights granted to You by any and all Contributors for the Covered Software under Section 2.1 of this License shall terminate.\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all end user license agreements (excluding distributors and resellers) which have been validly granted by You or Your distributors under this License prior to termination shall survive termination.\n\n\n                                                                 *\n\nDisclaimer of Warranty *\n\n————————- *\n                                                                 *\nCovered Software is provided under this License on an “as is” *\nbasis, without warranty of any kind, either expressed, implied, or *\nstatutory, including, without limitation, warranties that the *\nCovered Software is free of defects, merchantable, fit for a *\nparticular purpose or non-infringing. The entire risk as to the *\nquality and performance of the Covered Software is with You. *\nShould any Covered Software prove defective in any respect, You *\n(not any Contributor) assume the cost of any necessary servicing, *\nrepair, or correction. This disclaimer of warranty constitutes an *\nessential part of this License. No use of any Covered Software is *\nauthorized under this License except under this disclaimer. *\n                                                                 *\n\n\n\n\n                                                                 *\n\nLimitation of Liability *\n\n————————– *\n                                                                 *\nUnder no circumstances and under no legal theory, whether tort *\n(including negligence), contract, or otherwise, shall any *\nContributor, or anyone who distributes Covered Software as *\npermitted above, be liable to You for any direct, indirect, *\nspecial, incidental, or consequential damages of any character *\nincluding, without limitation, damages for lost profits, loss of *\ngoodwill, work stoppage, computer failure or malfunction, or any *\nand all other commercial damages or losses, even if such party *\nshall have been informed of the possibility of such damages. This *\nlimitation of liability shall not apply to liability for death or *\npersonal injury resulting from such party’s negligence to the *\nextent applicable law prohibits such limitation. Some *\njurisdictions do not allow the exclusion or limitation of *\nincidental or consequential damages, so this exclusion and *\nlimitation may not apply to You. *\n                                                                 *"
  },
  {
    "objectID": "about/LICENSE.html#litigation",
    "href": "about/LICENSE.html#litigation",
    "title": "License",
    "section": "",
    "text": "Any litigation relating to this License may be brought only in the courts of a jurisdiction where the defendant maintains its principal place of business and such litigation shall be governed by laws of that jurisdiction, without reference to its conflict-of-law provisions. Nothing in this Section shall prevent a party’s ability to bring cross-claims or counter-claims."
  },
  {
    "objectID": "about/LICENSE.html#miscellaneous",
    "href": "about/LICENSE.html#miscellaneous",
    "title": "License",
    "section": "",
    "text": "This License represents the complete agreement concerning the subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not be used to construe this License against a Contributor."
  },
  {
    "objectID": "about/LICENSE.html#versions-of-the-license",
    "href": "about/LICENSE.html#versions-of-the-license",
    "title": "License",
    "section": "",
    "text": "10.1. New Versions\nMozilla Foundation is the license steward. Except as provided in Section 10.3, no one other than the license steward has the right to modify or publish new versions of this License. Each version will be given a distinguishing version number.\n10.2. Effect of New Versions\nYou may distribute the Covered Software under the terms of the version of the License under which You originally received the Covered Software, or under the terms of any subsequent version published by the license steward.\n10.3. Modified Versions\nIf you create software not governed by this License, and you want to create a new license for such software, you may create and use a modified version of this License if you rename the license and remove any references to the name of the license steward (except to note that such modified license differs from this License).\n10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses\nIf You choose to distribute Source Code Form that is Incompatible With Secondary Licenses under the terms of this version of the License, the notice described in Exhibit B of this License must be attached."
  },
  {
    "objectID": "about/LICENSE.html#exhibit-a---source-code-form-license-notice",
    "href": "about/LICENSE.html#exhibit-a---source-code-form-license-notice",
    "title": "License",
    "section": "",
    "text": "This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.\nIf it is not possible or desirable to put the notice in a particular file, then You may include the notice in a location (such as a LICENSE file in a relevant directory) where a recipient would be likely to look for such a notice.\nYou may add additional accurate notices of copyright ownership."
  },
  {
    "objectID": "about/LICENSE.html#exhibit-b---incompatible-with-secondary-licenses-notice",
    "href": "about/LICENSE.html#exhibit-b---incompatible-with-secondary-licenses-notice",
    "title": "License",
    "section": "",
    "text": "This Source Code Form is “Incompatible With Secondary Licenses”, as defined by the Mozilla Public License, v. 2.0."
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "broadcast",
    "section": "🗺️Overview",
    "text": "🗺️Overview\nThe ‘broadcast’ package, as the name suggests, performs “broadcasting” (similar to broadcasting in the ‘Numpy’ module for ‘Python’).\nIn the context of operations involving 2 (or more) arrays, “broadcasting” refers to recycling array dimensions without allocating additional memory, which is considerably faster and more memory-efficient than R’s regular dimensions repetition mechanism.\nPlease read the article “Broadcasting explained” for a more complete explanation of what “broadcasting” is.\n \nAt its core, the ‘broadcast’ package provides 3 functionalities, all 3 related to “broadcasting”:\n \nFirst, ‘broadcast’ provides functions for element-wise outer computations between any 2 arrays.\nThese are similar to base R’s outer() function, but using broadcasting, which is faster and more efficient than the mechanism employed by outer().\nThe outer-like functions provided by ‘broadcast’ are optimised for a large set of operations, including, but not limited to, the following:\n\nrelational operations (like ==, !=, &lt;, &gt;, &lt;=, &gt;=, etc.);\narithmetic operations (like +, -, *, /, ^, etc.);\nBoolean combiner operations (like &, |, xor, etc.);\nstring concatenation, string (in)equality, and string distance (Levenshtein) operations.\n\nBase ‘R’ outer() function has some sloppy rules regarding the dimensions of the output, making it hard to predict the output shape.\nThe outer-like functions provided by ‘broadcast’ have very strict broadcasting rules, making it easy to accurately predict the dimensions of the result.\n \nSecond, ‘broadcast’ provides the bind_array() function, which is an broadcasted and enhanced form of the fantastic abind::abind() function:\n\nbind_array() allows for broadcasting (obviously), whereas abind::abind() does not.\nbind_array() is significantly faster and uses less memory than abind::abind().\nbind_array() also differs from abind::abind() in that it can handle recursive arrays properly; abind::abind() unlists everything to atomic arrays, ruining the structure.\n\n \nThird, ‘broadcast’ provides several generic functions for broadcasting:\n\nbcapply(): a broadcasted apply-like function that works on pairs of arrays.\nbc_ifelse(): a broadcasted ifelse() function. Broadcasts between the yes and no arguments."
  },
  {
    "objectID": "index.html#why-use-broadcast",
    "href": "index.html#why-use-broadcast",
    "title": "broadcast",
    "section": "🤷🏽Why use ‘broadcast’",
    "text": "🤷🏽Why use ‘broadcast’\nEfficiency\nBroadcasting dimensions is faster and more memory efficient than repeating dimensions.\nThis is not simply a need for speed.\nEfficient programs use less energy and resources, and is thus better for the environment.\nAs a favoured language for the sciences, ‘R’ should not throw away an opportunity to become more efficient.\nThe Benchmarks show that ‘broadcast’ has a somewhat similar speed as equivalent operations in ‘Numpy’.\n \nConvenience\nBroadcasting can make many applications much easier to write.\nFor Example: Suppose you want to compute some metric on all possible pair-wise combinations of the elements of 2 vectors.\nYou could write slow and ugly nested for-loops…\nBut you can instead also make the vectors orthogonal, and perform the broadcasting computation on the 2 orthogonal vectors.\nThe broadcasted method runs much faster, is faster to type, and easier to reason about, than using the clumsy nested for-loops.\nFor more practical examples, see Examples of Practical Applictaions.\n \nHigh Test Coverage\nThe ‘broadcast’ package has been developed with a set of unit tests that have high (&gt; 95%) coverage.\n \nMinimal Dependencies\nBesides linking to ‘Rcpp’, ‘broadcast’ does not depend on, vendor, link to, include, or otherwise use any external libraries; ‘broadcast’ was essentially made from scratch and can be installed out-of-the-box.\nNot using external libraries brings a number of advantages:\n\nAvoid dependency hell: Every dependency that is added to a software package increases the likelihood of something breaking (AKA “dependency hell”). ‘broadcast’ thus avoids this.\nAvoid wasting resources for translations: Using libraries from other languages, such as ‘xtensor’ (‘C++’) or ‘Numpy’ (‘Python’) means that - at some point - one needs to convert between the structure of R to that of the other language, and vice-versa, which wastes precious time and memory. ‘broadcast’ requires no such translations of structures, and thus does not waste precious time and memory.\nEnsure consistent behaviour: Using libraries from other languages also means one cannot always guarantee consistent behaviour of some operations. For example: both ‘Numpy’ and ‘xtensor’ have only limited support for missing values, whereas ‘R’ supports missing values for both atomic and recursive array/vector types (except type of ‘Raw’). Since ‘broadcast’ does not rely on external libraries, it can ensure consistent behaviour."
  },
  {
    "objectID": "index.html#documentation",
    "href": "index.html#documentation",
    "title": "broadcast",
    "section": "📖Documentation",
    "text": "📖Documentation\n\nInstallation:\nBroadcasting Explained:\nExamples of Practical Applications:\nComparisons & Benchmarks:"
  },
  {
    "objectID": "man/aaa01_broadcast_bind.html",
    "href": "man/aaa01_broadcast_bind.html",
    "title": "aaa01_broadcast_bind",
    "section": "",
    "text": "This help page gives additional details on the binding implementations in the ‘broadcast’ package.  \n\n\n\nIf argument input has length 0, or it contains exclusively objects where one or more dimensions are 0, an error is returned.   If input has length 1, these functions simply return input[[1L]].  \n\n\n\nThe API of bind_array() is inspired by the fantastic abind::abind function by Tony Plare & Richard Heiberger (2016).  But bind_array() differs considerably from abind::abind in the following ways:\n\n\nbind_array() differs from abind::abind in that it can handle recursive arrays properly  (the abind::abind function would unlist everything to atomic arrays, ruining the structure).\n\n\nbind_array() allows for broadcasting, while abind::abind does not support broadcasting.\n\n\nbind_array() is generally faster than abind::abind, as bind_array() relies heavily on ‘C’ and ‘C++’ code.\n\n\nunlike abind::abind, bind_array() only binds (atomic/recursive) arrays and matrices.  bind_array()does not attempt to convert things to arrays when they are not arrays, but will give an error instead.  This saves computation time and prevents unexpected results.\n\n\nbind_array() has more streamlined naming options, compared to abind::abind.  \n\n\nbind_mat() is a modified version of rbind/cbind.  bind_mat() differs from rbind/cbind in the following ways:\n\n\nit has more streamlined naming options/\n\n\nbind_mat() gives an error when fractional recycling is attempted (like binding 1:3 with 1:10).\n\n\nbind The primary differences is that   \n\n\n\n\n\n…"
  },
  {
    "objectID": "man/aaa01_broadcast_bind.html#details-on-the-binding-implementations-in-broadcast",
    "href": "man/aaa01_broadcast_bind.html#details-on-the-binding-implementations-in-broadcast",
    "title": "aaa01_broadcast_bind",
    "section": "",
    "text": "This help page gives additional details on the binding implementations in the ‘broadcast’ package.  \n\n\n\nIf argument input has length 0, or it contains exclusively objects where one or more dimensions are 0, an error is returned.   If input has length 1, these functions simply return input[[1L]].  \n\n\n\nThe API of bind_array() is inspired by the fantastic abind::abind function by Tony Plare & Richard Heiberger (2016).  But bind_array() differs considerably from abind::abind in the following ways:\n\n\nbind_array() differs from abind::abind in that it can handle recursive arrays properly  (the abind::abind function would unlist everything to atomic arrays, ruining the structure).\n\n\nbind_array() allows for broadcasting, while abind::abind does not support broadcasting.\n\n\nbind_array() is generally faster than abind::abind, as bind_array() relies heavily on ‘C’ and ‘C++’ code.\n\n\nunlike abind::abind, bind_array() only binds (atomic/recursive) arrays and matrices.  bind_array()does not attempt to convert things to arrays when they are not arrays, but will give an error instead.  This saves computation time and prevents unexpected results.\n\n\nbind_array() has more streamlined naming options, compared to abind::abind.  \n\n\nbind_mat() is a modified version of rbind/cbind.  bind_mat() differs from rbind/cbind in the following ways:\n\n\nit has more streamlined naming options/\n\n\nbind_mat() gives an error when fractional recycling is attempted (like binding 1:3 with 1:10).\n\n\nbind The primary differences is that   \n\n\n\n\n\n…"
  },
  {
    "objectID": "man/bc.cplx.html",
    "href": "man/bc.cplx.html",
    "title": "bc.cplx",
    "section": "",
    "text": "The bc.cplx() function performs broadcasted complex numeric operations pairs of arrays.   Note that bc.cplx() uses more strict NA checks than base ‘R’:  If for an element of either x or y, either the real or imaginary part is NA or NaN, than the result of the operation for that element is necessarily NA. \n\n\n\nbc.cplx(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable atomic arrays of type complex.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported arithmetic operators: +, -, *, /.  Supported relational operators: ==, !=. \n\n\n\n\n\n\n\nFor arithmetic operators:  A complex array as a result of the broadcasted arithmetic operation.   For relational operators:  A logical array as a result of the broadcasted relational comparison.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\ngen &lt;- function() sample(c(rnorm(10), NA, NA, NaN, NaN, Inf, Inf, -Inf, -Inf))\nx &lt;- array(gen() + gen() * -1i, x.dim)\ny &lt;- array(gen() + gen() * -1i, c(10,1,1))\n\nbc.cplx(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [2,]    NA FALSE FALSE FALSE    NA    NA    NA   NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [4,] FALSE FALSE    NA    NA    NA    NA    NA   NA FALSE\n [5,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [8,]    NA    NA    NA    NA FALSE FALSE FALSE   NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n[10,]    NA    NA FALSE FALSE FALSE    NA    NA   NA    NA\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [2,]    NA FALSE FALSE FALSE    NA    NA    NA   NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [4,] FALSE FALSE    NA    NA    NA    NA    NA   NA FALSE\n [5,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [8,]    NA    NA    NA    NA FALSE FALSE FALSE   NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n[10,]    NA    NA FALSE FALSE FALSE    NA    NA   NA    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [2,]    NA FALSE FALSE FALSE    NA    NA    NA   NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [4,] FALSE FALSE    NA    NA    NA    NA    NA   NA FALSE\n [5,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [8,]    NA    NA    NA    NA FALSE FALSE FALSE   NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n[10,]    NA    NA FALSE FALSE FALSE    NA    NA   NA    NA\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [2,]    NA FALSE FALSE FALSE    NA    NA    NA   NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [4,] FALSE FALSE    NA    NA    NA    NA    NA   NA FALSE\n [5,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [8,]    NA    NA    NA    NA FALSE FALSE FALSE   NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n[10,]    NA    NA FALSE FALSE FALSE    NA    NA   NA    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [2,]    NA FALSE FALSE FALSE    NA    NA    NA   NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [4,] FALSE FALSE    NA    NA    NA    NA    NA   NA FALSE\n [5,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [8,]    NA    NA    NA    NA FALSE FALSE FALSE   NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n[10,]    NA    NA FALSE FALSE FALSE    NA    NA   NA    NA\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [2,]    NA FALSE FALSE FALSE    NA    NA    NA   NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [4,] FALSE FALSE    NA    NA    NA    NA    NA   NA FALSE\n [5,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [8,]    NA    NA    NA    NA FALSE FALSE FALSE   NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n[10,]    NA    NA FALSE FALSE FALSE    NA    NA   NA    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [2,]    NA FALSE FALSE FALSE    NA    NA    NA   NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [4,] FALSE FALSE    NA    NA    NA    NA    NA   NA FALSE\n [5,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [8,]    NA    NA    NA    NA FALSE FALSE FALSE   NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n[10,]    NA    NA FALSE FALSE FALSE    NA    NA   NA    NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [2,]    NA FALSE FALSE FALSE    NA    NA    NA   NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [4,] FALSE FALSE    NA    NA    NA    NA    NA   NA FALSE\n [5,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [8,]    NA    NA    NA    NA FALSE FALSE FALSE   NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n[10,]    NA    NA FALSE FALSE FALSE    NA    NA   NA    NA\n\nbc.cplx(x, y, \"!=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA TRUE TRUE TRUE   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE TRUE   NA   NA   NA   NA   NA   NA TRUE\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA TRUE TRUE TRUE   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE TRUE   NA   NA   NA   NA\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA TRUE TRUE TRUE   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE TRUE   NA   NA   NA   NA   NA   NA TRUE\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA TRUE TRUE TRUE   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE TRUE   NA   NA   NA   NA\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA TRUE TRUE TRUE   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE TRUE   NA   NA   NA   NA   NA   NA TRUE\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA TRUE TRUE TRUE   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE TRUE   NA   NA   NA   NA\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA TRUE TRUE TRUE   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE TRUE   NA   NA   NA   NA   NA   NA TRUE\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA TRUE TRUE TRUE   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE TRUE   NA   NA   NA   NA\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA TRUE TRUE TRUE   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE TRUE   NA   NA   NA   NA   NA   NA TRUE\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA TRUE TRUE TRUE   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE TRUE   NA   NA   NA   NA\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA TRUE TRUE TRUE   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE TRUE   NA   NA   NA   NA   NA   NA TRUE\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA TRUE TRUE TRUE   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE TRUE   NA   NA   NA   NA\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA TRUE TRUE TRUE   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE TRUE   NA   NA   NA   NA   NA   NA TRUE\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA TRUE TRUE TRUE   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE TRUE   NA   NA   NA   NA\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA TRUE TRUE TRUE   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE TRUE   NA   NA   NA   NA   NA   NA TRUE\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA TRUE TRUE TRUE   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE TRUE   NA   NA   NA   NA\n\nbc.cplx(x, y, \"+\")\n\n, , 1\n\n                    [,1]                 [,2]           [,3]\n [1,]                 NA                   NA             NA\n [2,]                 NA       Inf+1.0596551i Inf-0.3575091i\n [3,]                 NA                   NA             NA\n [4,] -1.270397-1.11835i -1.502248-0.2796861i             NA\n [5,]                 NA                   NA             NA\n [6,]                 NA                   NA             NA\n [7,]                 NA                   NA             NA\n [8,]                 NA                   NA             NA\n [9,]                 NA                   NA             NA\n[10,]                 NA                   NA Inf-0.6885392i\n                       [,4]                  [,5]               [,6]\n [1,]                    NA                    NA                 NA\n [2,]        Inf+0.4811546i                    NA                 NA\n [3,]                    NA                    NA                 NA\n [4,]                    NA                    NA                 NA\n [5,]                    NA                    NA                 NA\n [6,]                    NA                    NA                 NA\n [7,]                    NA                    NA                 NA\n [8,]                    NA        Inf-0.3139673i 1.785238-1.731131i\n [9,]                    NA                    NA                 NA\n[10,] -0.2179495-2.1057034i -0.4498002-1.2670397i                 NA\n                     [,7] [,8]           [,9]\n [1,]                  NA   NA             NA\n [2,]                  NA   NA             NA\n [3,]                  NA   NA             NA\n [4,]                  NA   NA Inf+0.2988144i\n [5,]                  NA   NA             NA\n [6,]                  NA   NA             NA\n [7,]                  NA   NA             NA\n [8,] 1.553388-0.8924678i   NA             NA\n [9,]                  NA   NA             NA\n[10,]                  NA   NA             NA\n\n, , 2\n\n                    [,1]                 [,2]           [,3]\n [1,]                 NA                   NA             NA\n [2,]                 NA       Inf+1.0596551i Inf-0.3575091i\n [3,]                 NA                   NA             NA\n [4,] -1.270397-1.11835i -1.502248-0.2796861i             NA\n [5,]                 NA                   NA             NA\n [6,]                 NA                   NA             NA\n [7,]                 NA                   NA             NA\n [8,]                 NA                   NA             NA\n [9,]                 NA                   NA             NA\n[10,]                 NA                   NA Inf-0.6885392i\n                       [,4]                  [,5]               [,6]\n [1,]                    NA                    NA                 NA\n [2,]        Inf+0.4811546i                    NA                 NA\n [3,]                    NA                    NA                 NA\n [4,]                    NA                    NA                 NA\n [5,]                    NA                    NA                 NA\n [6,]                    NA                    NA                 NA\n [7,]                    NA                    NA                 NA\n [8,]                    NA        Inf-0.3139673i 1.785238-1.731131i\n [9,]                    NA                    NA                 NA\n[10,] -0.2179495-2.1057034i -0.4498002-1.2670397i                 NA\n                     [,7] [,8]           [,9]\n [1,]                  NA   NA             NA\n [2,]                  NA   NA             NA\n [3,]                  NA   NA             NA\n [4,]                  NA   NA Inf+0.2988144i\n [5,]                  NA   NA             NA\n [6,]                  NA   NA             NA\n [7,]                  NA   NA             NA\n [8,] 1.553388-0.8924678i   NA             NA\n [9,]                  NA   NA             NA\n[10,]                  NA   NA             NA\n\n, , 3\n\n                    [,1]                 [,2]           [,3]\n [1,]                 NA                   NA             NA\n [2,]                 NA       Inf+1.0596551i Inf-0.3575091i\n [3,]                 NA                   NA             NA\n [4,] -1.270397-1.11835i -1.502248-0.2796861i             NA\n [5,]                 NA                   NA             NA\n [6,]                 NA                   NA             NA\n [7,]                 NA                   NA             NA\n [8,]                 NA                   NA             NA\n [9,]                 NA                   NA             NA\n[10,]                 NA                   NA Inf-0.6885392i\n                       [,4]                  [,5]               [,6]\n [1,]                    NA                    NA                 NA\n [2,]        Inf+0.4811546i                    NA                 NA\n [3,]                    NA                    NA                 NA\n [4,]                    NA                    NA                 NA\n [5,]                    NA                    NA                 NA\n [6,]                    NA                    NA                 NA\n [7,]                    NA                    NA                 NA\n [8,]                    NA        Inf-0.3139673i 1.785238-1.731131i\n [9,]                    NA                    NA                 NA\n[10,] -0.2179495-2.1057034i -0.4498002-1.2670397i                 NA\n                     [,7] [,8]           [,9]\n [1,]                  NA   NA             NA\n [2,]                  NA   NA             NA\n [3,]                  NA   NA             NA\n [4,]                  NA   NA Inf+0.2988144i\n [5,]                  NA   NA             NA\n [6,]                  NA   NA             NA\n [7,]                  NA   NA             NA\n [8,] 1.553388-0.8924678i   NA             NA\n [9,]                  NA   NA             NA\n[10,]                  NA   NA             NA\n\n, , 4\n\n                    [,1]                 [,2]           [,3]\n [1,]                 NA                   NA             NA\n [2,]                 NA       Inf+1.0596551i Inf-0.3575091i\n [3,]                 NA                   NA             NA\n [4,] -1.270397-1.11835i -1.502248-0.2796861i             NA\n [5,]                 NA                   NA             NA\n [6,]                 NA                   NA             NA\n [7,]                 NA                   NA             NA\n [8,]                 NA                   NA             NA\n [9,]                 NA                   NA             NA\n[10,]                 NA                   NA Inf-0.6885392i\n                       [,4]                  [,5]               [,6]\n [1,]                    NA                    NA                 NA\n [2,]        Inf+0.4811546i                    NA                 NA\n [3,]                    NA                    NA                 NA\n [4,]                    NA                    NA                 NA\n [5,]                    NA                    NA                 NA\n [6,]                    NA                    NA                 NA\n [7,]                    NA                    NA                 NA\n [8,]                    NA        Inf-0.3139673i 1.785238-1.731131i\n [9,]                    NA                    NA                 NA\n[10,] -0.2179495-2.1057034i -0.4498002-1.2670397i                 NA\n                     [,7] [,8]           [,9]\n [1,]                  NA   NA             NA\n [2,]                  NA   NA             NA\n [3,]                  NA   NA             NA\n [4,]                  NA   NA Inf+0.2988144i\n [5,]                  NA   NA             NA\n [6,]                  NA   NA             NA\n [7,]                  NA   NA             NA\n [8,] 1.553388-0.8924678i   NA             NA\n [9,]                  NA   NA             NA\n[10,]                  NA   NA             NA\n\n, , 5\n\n                    [,1]                 [,2]           [,3]\n [1,]                 NA                   NA             NA\n [2,]                 NA       Inf+1.0596551i Inf-0.3575091i\n [3,]                 NA                   NA             NA\n [4,] -1.270397-1.11835i -1.502248-0.2796861i             NA\n [5,]                 NA                   NA             NA\n [6,]                 NA                   NA             NA\n [7,]                 NA                   NA             NA\n [8,]                 NA                   NA             NA\n [9,]                 NA                   NA             NA\n[10,]                 NA                   NA Inf-0.6885392i\n                       [,4]                  [,5]               [,6]\n [1,]                    NA                    NA                 NA\n [2,]        Inf+0.4811546i                    NA                 NA\n [3,]                    NA                    NA                 NA\n [4,]                    NA                    NA                 NA\n [5,]                    NA                    NA                 NA\n [6,]                    NA                    NA                 NA\n [7,]                    NA                    NA                 NA\n [8,]                    NA        Inf-0.3139673i 1.785238-1.731131i\n [9,]                    NA                    NA                 NA\n[10,] -0.2179495-2.1057034i -0.4498002-1.2670397i                 NA\n                     [,7] [,8]           [,9]\n [1,]                  NA   NA             NA\n [2,]                  NA   NA             NA\n [3,]                  NA   NA             NA\n [4,]                  NA   NA Inf+0.2988144i\n [5,]                  NA   NA             NA\n [6,]                  NA   NA             NA\n [7,]                  NA   NA             NA\n [8,] 1.553388-0.8924678i   NA             NA\n [9,]                  NA   NA             NA\n[10,]                  NA   NA             NA\n\n, , 6\n\n                    [,1]                 [,2]           [,3]\n [1,]                 NA                   NA             NA\n [2,]                 NA       Inf+1.0596551i Inf-0.3575091i\n [3,]                 NA                   NA             NA\n [4,] -1.270397-1.11835i -1.502248-0.2796861i             NA\n [5,]                 NA                   NA             NA\n [6,]                 NA                   NA             NA\n [7,]                 NA                   NA             NA\n [8,]                 NA                   NA             NA\n [9,]                 NA                   NA             NA\n[10,]                 NA                   NA Inf-0.6885392i\n                       [,4]                  [,5]               [,6]\n [1,]                    NA                    NA                 NA\n [2,]        Inf+0.4811546i                    NA                 NA\n [3,]                    NA                    NA                 NA\n [4,]                    NA                    NA                 NA\n [5,]                    NA                    NA                 NA\n [6,]                    NA                    NA                 NA\n [7,]                    NA                    NA                 NA\n [8,]                    NA        Inf-0.3139673i 1.785238-1.731131i\n [9,]                    NA                    NA                 NA\n[10,] -0.2179495-2.1057034i -0.4498002-1.2670397i                 NA\n                     [,7] [,8]           [,9]\n [1,]                  NA   NA             NA\n [2,]                  NA   NA             NA\n [3,]                  NA   NA             NA\n [4,]                  NA   NA Inf+0.2988144i\n [5,]                  NA   NA             NA\n [6,]                  NA   NA             NA\n [7,]                  NA   NA             NA\n [8,] 1.553388-0.8924678i   NA             NA\n [9,]                  NA   NA             NA\n[10,]                  NA   NA             NA\n\n, , 7\n\n                    [,1]                 [,2]           [,3]\n [1,]                 NA                   NA             NA\n [2,]                 NA       Inf+1.0596551i Inf-0.3575091i\n [3,]                 NA                   NA             NA\n [4,] -1.270397-1.11835i -1.502248-0.2796861i             NA\n [5,]                 NA                   NA             NA\n [6,]                 NA                   NA             NA\n [7,]                 NA                   NA             NA\n [8,]                 NA                   NA             NA\n [9,]                 NA                   NA             NA\n[10,]                 NA                   NA Inf-0.6885392i\n                       [,4]                  [,5]               [,6]\n [1,]                    NA                    NA                 NA\n [2,]        Inf+0.4811546i                    NA                 NA\n [3,]                    NA                    NA                 NA\n [4,]                    NA                    NA                 NA\n [5,]                    NA                    NA                 NA\n [6,]                    NA                    NA                 NA\n [7,]                    NA                    NA                 NA\n [8,]                    NA        Inf-0.3139673i 1.785238-1.731131i\n [9,]                    NA                    NA                 NA\n[10,] -0.2179495-2.1057034i -0.4498002-1.2670397i                 NA\n                     [,7] [,8]           [,9]\n [1,]                  NA   NA             NA\n [2,]                  NA   NA             NA\n [3,]                  NA   NA             NA\n [4,]                  NA   NA Inf+0.2988144i\n [5,]                  NA   NA             NA\n [6,]                  NA   NA             NA\n [7,]                  NA   NA             NA\n [8,] 1.553388-0.8924678i   NA             NA\n [9,]                  NA   NA             NA\n[10,]                  NA   NA             NA\n\n, , 8\n\n                    [,1]                 [,2]           [,3]\n [1,]                 NA                   NA             NA\n [2,]                 NA       Inf+1.0596551i Inf-0.3575091i\n [3,]                 NA                   NA             NA\n [4,] -1.270397-1.11835i -1.502248-0.2796861i             NA\n [5,]                 NA                   NA             NA\n [6,]                 NA                   NA             NA\n [7,]                 NA                   NA             NA\n [8,]                 NA                   NA             NA\n [9,]                 NA                   NA             NA\n[10,]                 NA                   NA Inf-0.6885392i\n                       [,4]                  [,5]               [,6]\n [1,]                    NA                    NA                 NA\n [2,]        Inf+0.4811546i                    NA                 NA\n [3,]                    NA                    NA                 NA\n [4,]                    NA                    NA                 NA\n [5,]                    NA                    NA                 NA\n [6,]                    NA                    NA                 NA\n [7,]                    NA                    NA                 NA\n [8,]                    NA        Inf-0.3139673i 1.785238-1.731131i\n [9,]                    NA                    NA                 NA\n[10,] -0.2179495-2.1057034i -0.4498002-1.2670397i                 NA\n                     [,7] [,8]           [,9]\n [1,]                  NA   NA             NA\n [2,]                  NA   NA             NA\n [3,]                  NA   NA             NA\n [4,]                  NA   NA Inf+0.2988144i\n [5,]                  NA   NA             NA\n [6,]                  NA   NA             NA\n [7,]                  NA   NA             NA\n [8,] 1.553388-0.8924678i   NA             NA\n [9,]                  NA   NA             NA\n[10,]                  NA   NA             NA\n\nbc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), \"==\")\n\n [1]    NA FALSE    NA FALSE    NA    NA    NA FALSE    NA    NA    NA    NA\n[13]    NA    NA FALSE    NA    NA    NA\n\nbc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), \"!=\")\n\n [1]   NA   NA   NA   NA   NA   NA   NA   NA   NA TRUE   NA   NA   NA   NA   NA\n[16]   NA TRUE   NA\n\nx &lt;- gen() + gen() * -1i\ny &lt;- gen() + gen() * -1i\nout &lt;- bc.cplx(array(x), array(y), \"*\")\ncbind(x, y, x*y, out)\n\n                          x                      y                      \n [1,]       -Inf+2.2485959i         NaN+      NaNi        NaN+      NaNi\n [2,]  0.4705568-0.9011384i  0.60330965+0.2226359i  0.4845172-0.4389027i\n [3,]       -Inf+0.4019739i                     NA        NaN-      Infi\n [4,]        NaN+      NaNi -0.54358935+0.3956243i        NaN+      NaNi\n [5,]  1.0738429-0.6358286i -1.29984427-2.0465097i -2.6970580-1.3711518i\n [6,]                    NA         NaN+0.7962419i        NaN+      NaNi\n [7,]        Inf+1.3656000i  0.02790856-0.9228963i        Inf-      Infi\n [8,] -0.6640104-0.1777173i         NaN-      Infi       -Inf+      Infi\n [9,] -1.3131657-0.4400642i                     NA                    NA\n[10,]                    NA         NaN+0.4121668i        NaN+      NaNi\n[11,]  1.7576805+0.9535723i         Inf+1.2377548i        Inf+      Infi\n[12,]        NaN+      Infi         NaN+      NaNi        NaN+      NaNi\n[13,]        NaN+      Infi -0.50315485-1.1984267i        Inf-      Infi\n[14,]  1.6355438+0.3764926i         NaN+      Infi       -Inf+      Infi\n[15,]                    NA                     NA        NaN+      NaNi\n[16,]        NaN+      NaNi         Inf+1.6216790i        NaN+      NaNi\n[17,]        NaN-      Infi -0.15007464+1.0504532i        Inf+      Infi\n[18,]                    NA         NaN-      Infi       -Inf+      NaNi\n                        out\n [1,]                    NA\n [2,]  0.4845172-0.4389027i\n [3,]                    NA\n [4,]                    NA\n [5,] -2.6970580-1.3711518i\n [6,]                    NA\n [7,]        Inf-      Infi\n [8,]                    NA\n [9,]                    NA\n[10,]                    NA\n[11,]        Inf+      Infi\n[12,]                    NA\n[13,]                    NA\n[14,]                    NA\n[15,]                    NA\n[16,]                    NA\n[17,]                    NA\n[18,]                    NA"
  },
  {
    "objectID": "man/bc.cplx.html#broadcasted-complex-numeric-operations",
    "href": "man/bc.cplx.html#broadcasted-complex-numeric-operations",
    "title": "bc.cplx",
    "section": "",
    "text": "The bc.cplx() function performs broadcasted complex numeric operations pairs of arrays.   Note that bc.cplx() uses more strict NA checks than base ‘R’:  If for an element of either x or y, either the real or imaginary part is NA or NaN, than the result of the operation for that element is necessarily NA. \n\n\n\nbc.cplx(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable atomic arrays of type complex.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported arithmetic operators: +, -, *, /.  Supported relational operators: ==, !=. \n\n\n\n\n\n\n\nFor arithmetic operators:  A complex array as a result of the broadcasted arithmetic operation.   For relational operators:  A logical array as a result of the broadcasted relational comparison.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\ngen &lt;- function() sample(c(rnorm(10), NA, NA, NaN, NaN, Inf, Inf, -Inf, -Inf))\nx &lt;- array(gen() + gen() * -1i, x.dim)\ny &lt;- array(gen() + gen() * -1i, c(10,1,1))\n\nbc.cplx(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [2,]    NA FALSE FALSE FALSE    NA    NA    NA   NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [4,] FALSE FALSE    NA    NA    NA    NA    NA   NA FALSE\n [5,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [8,]    NA    NA    NA    NA FALSE FALSE FALSE   NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n[10,]    NA    NA FALSE FALSE FALSE    NA    NA   NA    NA\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [2,]    NA FALSE FALSE FALSE    NA    NA    NA   NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [4,] FALSE FALSE    NA    NA    NA    NA    NA   NA FALSE\n [5,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [8,]    NA    NA    NA    NA FALSE FALSE FALSE   NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n[10,]    NA    NA FALSE FALSE FALSE    NA    NA   NA    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [2,]    NA FALSE FALSE FALSE    NA    NA    NA   NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [4,] FALSE FALSE    NA    NA    NA    NA    NA   NA FALSE\n [5,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [8,]    NA    NA    NA    NA FALSE FALSE FALSE   NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n[10,]    NA    NA FALSE FALSE FALSE    NA    NA   NA    NA\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [2,]    NA FALSE FALSE FALSE    NA    NA    NA   NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [4,] FALSE FALSE    NA    NA    NA    NA    NA   NA FALSE\n [5,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [8,]    NA    NA    NA    NA FALSE FALSE FALSE   NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n[10,]    NA    NA FALSE FALSE FALSE    NA    NA   NA    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [2,]    NA FALSE FALSE FALSE    NA    NA    NA   NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [4,] FALSE FALSE    NA    NA    NA    NA    NA   NA FALSE\n [5,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [8,]    NA    NA    NA    NA FALSE FALSE FALSE   NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n[10,]    NA    NA FALSE FALSE FALSE    NA    NA   NA    NA\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [2,]    NA FALSE FALSE FALSE    NA    NA    NA   NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [4,] FALSE FALSE    NA    NA    NA    NA    NA   NA FALSE\n [5,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [8,]    NA    NA    NA    NA FALSE FALSE FALSE   NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n[10,]    NA    NA FALSE FALSE FALSE    NA    NA   NA    NA\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [2,]    NA FALSE FALSE FALSE    NA    NA    NA   NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [4,] FALSE FALSE    NA    NA    NA    NA    NA   NA FALSE\n [5,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [8,]    NA    NA    NA    NA FALSE FALSE FALSE   NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n[10,]    NA    NA FALSE FALSE FALSE    NA    NA   NA    NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7] [,8]  [,9]\n [1,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [2,]    NA FALSE FALSE FALSE    NA    NA    NA   NA    NA\n [3,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [4,] FALSE FALSE    NA    NA    NA    NA    NA   NA FALSE\n [5,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [6,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [7,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n [8,]    NA    NA    NA    NA FALSE FALSE FALSE   NA    NA\n [9,]    NA    NA    NA    NA    NA    NA    NA   NA    NA\n[10,]    NA    NA FALSE FALSE FALSE    NA    NA   NA    NA\n\nbc.cplx(x, y, \"!=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA TRUE TRUE TRUE   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE TRUE   NA   NA   NA   NA   NA   NA TRUE\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA TRUE TRUE TRUE   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE TRUE   NA   NA   NA   NA\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA TRUE TRUE TRUE   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE TRUE   NA   NA   NA   NA   NA   NA TRUE\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA TRUE TRUE TRUE   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE TRUE   NA   NA   NA   NA\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA TRUE TRUE TRUE   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE TRUE   NA   NA   NA   NA   NA   NA TRUE\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA TRUE TRUE TRUE   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE TRUE   NA   NA   NA   NA\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA TRUE TRUE TRUE   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE TRUE   NA   NA   NA   NA   NA   NA TRUE\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA TRUE TRUE TRUE   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE TRUE   NA   NA   NA   NA\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA TRUE TRUE TRUE   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE TRUE   NA   NA   NA   NA   NA   NA TRUE\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA TRUE TRUE TRUE   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE TRUE   NA   NA   NA   NA\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA TRUE TRUE TRUE   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE TRUE   NA   NA   NA   NA   NA   NA TRUE\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA TRUE TRUE TRUE   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE TRUE   NA   NA   NA   NA\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA TRUE TRUE TRUE   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE TRUE   NA   NA   NA   NA   NA   NA TRUE\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA TRUE TRUE TRUE   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE TRUE   NA   NA   NA   NA\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [2,]   NA TRUE TRUE TRUE   NA   NA   NA   NA   NA\n [3,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [4,] TRUE TRUE   NA   NA   NA   NA   NA   NA TRUE\n [5,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [6,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [7,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n [8,]   NA   NA   NA   NA TRUE TRUE TRUE   NA   NA\n [9,]   NA   NA   NA   NA   NA   NA   NA   NA   NA\n[10,]   NA   NA TRUE TRUE TRUE   NA   NA   NA   NA\n\nbc.cplx(x, y, \"+\")\n\n, , 1\n\n                    [,1]                 [,2]           [,3]\n [1,]                 NA                   NA             NA\n [2,]                 NA       Inf+1.0596551i Inf-0.3575091i\n [3,]                 NA                   NA             NA\n [4,] -1.270397-1.11835i -1.502248-0.2796861i             NA\n [5,]                 NA                   NA             NA\n [6,]                 NA                   NA             NA\n [7,]                 NA                   NA             NA\n [8,]                 NA                   NA             NA\n [9,]                 NA                   NA             NA\n[10,]                 NA                   NA Inf-0.6885392i\n                       [,4]                  [,5]               [,6]\n [1,]                    NA                    NA                 NA\n [2,]        Inf+0.4811546i                    NA                 NA\n [3,]                    NA                    NA                 NA\n [4,]                    NA                    NA                 NA\n [5,]                    NA                    NA                 NA\n [6,]                    NA                    NA                 NA\n [7,]                    NA                    NA                 NA\n [8,]                    NA        Inf-0.3139673i 1.785238-1.731131i\n [9,]                    NA                    NA                 NA\n[10,] -0.2179495-2.1057034i -0.4498002-1.2670397i                 NA\n                     [,7] [,8]           [,9]\n [1,]                  NA   NA             NA\n [2,]                  NA   NA             NA\n [3,]                  NA   NA             NA\n [4,]                  NA   NA Inf+0.2988144i\n [5,]                  NA   NA             NA\n [6,]                  NA   NA             NA\n [7,]                  NA   NA             NA\n [8,] 1.553388-0.8924678i   NA             NA\n [9,]                  NA   NA             NA\n[10,]                  NA   NA             NA\n\n, , 2\n\n                    [,1]                 [,2]           [,3]\n [1,]                 NA                   NA             NA\n [2,]                 NA       Inf+1.0596551i Inf-0.3575091i\n [3,]                 NA                   NA             NA\n [4,] -1.270397-1.11835i -1.502248-0.2796861i             NA\n [5,]                 NA                   NA             NA\n [6,]                 NA                   NA             NA\n [7,]                 NA                   NA             NA\n [8,]                 NA                   NA             NA\n [9,]                 NA                   NA             NA\n[10,]                 NA                   NA Inf-0.6885392i\n                       [,4]                  [,5]               [,6]\n [1,]                    NA                    NA                 NA\n [2,]        Inf+0.4811546i                    NA                 NA\n [3,]                    NA                    NA                 NA\n [4,]                    NA                    NA                 NA\n [5,]                    NA                    NA                 NA\n [6,]                    NA                    NA                 NA\n [7,]                    NA                    NA                 NA\n [8,]                    NA        Inf-0.3139673i 1.785238-1.731131i\n [9,]                    NA                    NA                 NA\n[10,] -0.2179495-2.1057034i -0.4498002-1.2670397i                 NA\n                     [,7] [,8]           [,9]\n [1,]                  NA   NA             NA\n [2,]                  NA   NA             NA\n [3,]                  NA   NA             NA\n [4,]                  NA   NA Inf+0.2988144i\n [5,]                  NA   NA             NA\n [6,]                  NA   NA             NA\n [7,]                  NA   NA             NA\n [8,] 1.553388-0.8924678i   NA             NA\n [9,]                  NA   NA             NA\n[10,]                  NA   NA             NA\n\n, , 3\n\n                    [,1]                 [,2]           [,3]\n [1,]                 NA                   NA             NA\n [2,]                 NA       Inf+1.0596551i Inf-0.3575091i\n [3,]                 NA                   NA             NA\n [4,] -1.270397-1.11835i -1.502248-0.2796861i             NA\n [5,]                 NA                   NA             NA\n [6,]                 NA                   NA             NA\n [7,]                 NA                   NA             NA\n [8,]                 NA                   NA             NA\n [9,]                 NA                   NA             NA\n[10,]                 NA                   NA Inf-0.6885392i\n                       [,4]                  [,5]               [,6]\n [1,]                    NA                    NA                 NA\n [2,]        Inf+0.4811546i                    NA                 NA\n [3,]                    NA                    NA                 NA\n [4,]                    NA                    NA                 NA\n [5,]                    NA                    NA                 NA\n [6,]                    NA                    NA                 NA\n [7,]                    NA                    NA                 NA\n [8,]                    NA        Inf-0.3139673i 1.785238-1.731131i\n [9,]                    NA                    NA                 NA\n[10,] -0.2179495-2.1057034i -0.4498002-1.2670397i                 NA\n                     [,7] [,8]           [,9]\n [1,]                  NA   NA             NA\n [2,]                  NA   NA             NA\n [3,]                  NA   NA             NA\n [4,]                  NA   NA Inf+0.2988144i\n [5,]                  NA   NA             NA\n [6,]                  NA   NA             NA\n [7,]                  NA   NA             NA\n [8,] 1.553388-0.8924678i   NA             NA\n [9,]                  NA   NA             NA\n[10,]                  NA   NA             NA\n\n, , 4\n\n                    [,1]                 [,2]           [,3]\n [1,]                 NA                   NA             NA\n [2,]                 NA       Inf+1.0596551i Inf-0.3575091i\n [3,]                 NA                   NA             NA\n [4,] -1.270397-1.11835i -1.502248-0.2796861i             NA\n [5,]                 NA                   NA             NA\n [6,]                 NA                   NA             NA\n [7,]                 NA                   NA             NA\n [8,]                 NA                   NA             NA\n [9,]                 NA                   NA             NA\n[10,]                 NA                   NA Inf-0.6885392i\n                       [,4]                  [,5]               [,6]\n [1,]                    NA                    NA                 NA\n [2,]        Inf+0.4811546i                    NA                 NA\n [3,]                    NA                    NA                 NA\n [4,]                    NA                    NA                 NA\n [5,]                    NA                    NA                 NA\n [6,]                    NA                    NA                 NA\n [7,]                    NA                    NA                 NA\n [8,]                    NA        Inf-0.3139673i 1.785238-1.731131i\n [9,]                    NA                    NA                 NA\n[10,] -0.2179495-2.1057034i -0.4498002-1.2670397i                 NA\n                     [,7] [,8]           [,9]\n [1,]                  NA   NA             NA\n [2,]                  NA   NA             NA\n [3,]                  NA   NA             NA\n [4,]                  NA   NA Inf+0.2988144i\n [5,]                  NA   NA             NA\n [6,]                  NA   NA             NA\n [7,]                  NA   NA             NA\n [8,] 1.553388-0.8924678i   NA             NA\n [9,]                  NA   NA             NA\n[10,]                  NA   NA             NA\n\n, , 5\n\n                    [,1]                 [,2]           [,3]\n [1,]                 NA                   NA             NA\n [2,]                 NA       Inf+1.0596551i Inf-0.3575091i\n [3,]                 NA                   NA             NA\n [4,] -1.270397-1.11835i -1.502248-0.2796861i             NA\n [5,]                 NA                   NA             NA\n [6,]                 NA                   NA             NA\n [7,]                 NA                   NA             NA\n [8,]                 NA                   NA             NA\n [9,]                 NA                   NA             NA\n[10,]                 NA                   NA Inf-0.6885392i\n                       [,4]                  [,5]               [,6]\n [1,]                    NA                    NA                 NA\n [2,]        Inf+0.4811546i                    NA                 NA\n [3,]                    NA                    NA                 NA\n [4,]                    NA                    NA                 NA\n [5,]                    NA                    NA                 NA\n [6,]                    NA                    NA                 NA\n [7,]                    NA                    NA                 NA\n [8,]                    NA        Inf-0.3139673i 1.785238-1.731131i\n [9,]                    NA                    NA                 NA\n[10,] -0.2179495-2.1057034i -0.4498002-1.2670397i                 NA\n                     [,7] [,8]           [,9]\n [1,]                  NA   NA             NA\n [2,]                  NA   NA             NA\n [3,]                  NA   NA             NA\n [4,]                  NA   NA Inf+0.2988144i\n [5,]                  NA   NA             NA\n [6,]                  NA   NA             NA\n [7,]                  NA   NA             NA\n [8,] 1.553388-0.8924678i   NA             NA\n [9,]                  NA   NA             NA\n[10,]                  NA   NA             NA\n\n, , 6\n\n                    [,1]                 [,2]           [,3]\n [1,]                 NA                   NA             NA\n [2,]                 NA       Inf+1.0596551i Inf-0.3575091i\n [3,]                 NA                   NA             NA\n [4,] -1.270397-1.11835i -1.502248-0.2796861i             NA\n [5,]                 NA                   NA             NA\n [6,]                 NA                   NA             NA\n [7,]                 NA                   NA             NA\n [8,]                 NA                   NA             NA\n [9,]                 NA                   NA             NA\n[10,]                 NA                   NA Inf-0.6885392i\n                       [,4]                  [,5]               [,6]\n [1,]                    NA                    NA                 NA\n [2,]        Inf+0.4811546i                    NA                 NA\n [3,]                    NA                    NA                 NA\n [4,]                    NA                    NA                 NA\n [5,]                    NA                    NA                 NA\n [6,]                    NA                    NA                 NA\n [7,]                    NA                    NA                 NA\n [8,]                    NA        Inf-0.3139673i 1.785238-1.731131i\n [9,]                    NA                    NA                 NA\n[10,] -0.2179495-2.1057034i -0.4498002-1.2670397i                 NA\n                     [,7] [,8]           [,9]\n [1,]                  NA   NA             NA\n [2,]                  NA   NA             NA\n [3,]                  NA   NA             NA\n [4,]                  NA   NA Inf+0.2988144i\n [5,]                  NA   NA             NA\n [6,]                  NA   NA             NA\n [7,]                  NA   NA             NA\n [8,] 1.553388-0.8924678i   NA             NA\n [9,]                  NA   NA             NA\n[10,]                  NA   NA             NA\n\n, , 7\n\n                    [,1]                 [,2]           [,3]\n [1,]                 NA                   NA             NA\n [2,]                 NA       Inf+1.0596551i Inf-0.3575091i\n [3,]                 NA                   NA             NA\n [4,] -1.270397-1.11835i -1.502248-0.2796861i             NA\n [5,]                 NA                   NA             NA\n [6,]                 NA                   NA             NA\n [7,]                 NA                   NA             NA\n [8,]                 NA                   NA             NA\n [9,]                 NA                   NA             NA\n[10,]                 NA                   NA Inf-0.6885392i\n                       [,4]                  [,5]               [,6]\n [1,]                    NA                    NA                 NA\n [2,]        Inf+0.4811546i                    NA                 NA\n [3,]                    NA                    NA                 NA\n [4,]                    NA                    NA                 NA\n [5,]                    NA                    NA                 NA\n [6,]                    NA                    NA                 NA\n [7,]                    NA                    NA                 NA\n [8,]                    NA        Inf-0.3139673i 1.785238-1.731131i\n [9,]                    NA                    NA                 NA\n[10,] -0.2179495-2.1057034i -0.4498002-1.2670397i                 NA\n                     [,7] [,8]           [,9]\n [1,]                  NA   NA             NA\n [2,]                  NA   NA             NA\n [3,]                  NA   NA             NA\n [4,]                  NA   NA Inf+0.2988144i\n [5,]                  NA   NA             NA\n [6,]                  NA   NA             NA\n [7,]                  NA   NA             NA\n [8,] 1.553388-0.8924678i   NA             NA\n [9,]                  NA   NA             NA\n[10,]                  NA   NA             NA\n\n, , 8\n\n                    [,1]                 [,2]           [,3]\n [1,]                 NA                   NA             NA\n [2,]                 NA       Inf+1.0596551i Inf-0.3575091i\n [3,]                 NA                   NA             NA\n [4,] -1.270397-1.11835i -1.502248-0.2796861i             NA\n [5,]                 NA                   NA             NA\n [6,]                 NA                   NA             NA\n [7,]                 NA                   NA             NA\n [8,]                 NA                   NA             NA\n [9,]                 NA                   NA             NA\n[10,]                 NA                   NA Inf-0.6885392i\n                       [,4]                  [,5]               [,6]\n [1,]                    NA                    NA                 NA\n [2,]        Inf+0.4811546i                    NA                 NA\n [3,]                    NA                    NA                 NA\n [4,]                    NA                    NA                 NA\n [5,]                    NA                    NA                 NA\n [6,]                    NA                    NA                 NA\n [7,]                    NA                    NA                 NA\n [8,]                    NA        Inf-0.3139673i 1.785238-1.731131i\n [9,]                    NA                    NA                 NA\n[10,] -0.2179495-2.1057034i -0.4498002-1.2670397i                 NA\n                     [,7] [,8]           [,9]\n [1,]                  NA   NA             NA\n [2,]                  NA   NA             NA\n [3,]                  NA   NA             NA\n [4,]                  NA   NA Inf+0.2988144i\n [5,]                  NA   NA             NA\n [6,]                  NA   NA             NA\n [7,]                  NA   NA             NA\n [8,] 1.553388-0.8924678i   NA             NA\n [9,]                  NA   NA             NA\n[10,]                  NA   NA             NA\n\nbc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), \"==\")\n\n [1]    NA FALSE    NA FALSE    NA    NA    NA FALSE    NA    NA    NA    NA\n[13]    NA    NA FALSE    NA    NA    NA\n\nbc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), \"!=\")\n\n [1]   NA   NA   NA   NA   NA   NA   NA   NA   NA TRUE   NA   NA   NA   NA   NA\n[16]   NA TRUE   NA\n\nx &lt;- gen() + gen() * -1i\ny &lt;- gen() + gen() * -1i\nout &lt;- bc.cplx(array(x), array(y), \"*\")\ncbind(x, y, x*y, out)\n\n                          x                      y                      \n [1,]       -Inf+2.2485959i         NaN+      NaNi        NaN+      NaNi\n [2,]  0.4705568-0.9011384i  0.60330965+0.2226359i  0.4845172-0.4389027i\n [3,]       -Inf+0.4019739i                     NA        NaN-      Infi\n [4,]        NaN+      NaNi -0.54358935+0.3956243i        NaN+      NaNi\n [5,]  1.0738429-0.6358286i -1.29984427-2.0465097i -2.6970580-1.3711518i\n [6,]                    NA         NaN+0.7962419i        NaN+      NaNi\n [7,]        Inf+1.3656000i  0.02790856-0.9228963i        Inf-      Infi\n [8,] -0.6640104-0.1777173i         NaN-      Infi       -Inf+      Infi\n [9,] -1.3131657-0.4400642i                     NA                    NA\n[10,]                    NA         NaN+0.4121668i        NaN+      NaNi\n[11,]  1.7576805+0.9535723i         Inf+1.2377548i        Inf+      Infi\n[12,]        NaN+      Infi         NaN+      NaNi        NaN+      NaNi\n[13,]        NaN+      Infi -0.50315485-1.1984267i        Inf-      Infi\n[14,]  1.6355438+0.3764926i         NaN+      Infi       -Inf+      Infi\n[15,]                    NA                     NA        NaN+      NaNi\n[16,]        NaN+      NaNi         Inf+1.6216790i        NaN+      NaNi\n[17,]        NaN-      Infi -0.15007464+1.0504532i        Inf+      Infi\n[18,]                    NA         NaN-      Infi       -Inf+      NaNi\n                        out\n [1,]                    NA\n [2,]  0.4845172-0.4389027i\n [3,]                    NA\n [4,]                    NA\n [5,] -2.6970580-1.3711518i\n [6,]                    NA\n [7,]        Inf-      Infi\n [8,]                    NA\n [9,]                    NA\n[10,]                    NA\n[11,]        Inf+      Infi\n[12,]                    NA\n[13,]                    NA\n[14,]                    NA\n[15,]                    NA\n[16,]                    NA\n[17,]                    NA\n[18,]                    NA"
  },
  {
    "objectID": "man/bc.i.html",
    "href": "man/bc.i.html",
    "title": "bc.i",
    "section": "",
    "text": "The bc.i() function performs broadcasted integer numeric operations on 2 numeric or logical arrays.   Please note that these operations will treat the input as 53bit integers, and will efficiently truncate when necessary.  Therefore, something like bc.i(1, 1.5, “==”) returns TRUE, because trunc(1.5) equals 1.  \n\n\n\nbc.i(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable logical or numeric arrays.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported arithmetic operators: +, -, *, gcd, ^, pmin, pmax.  Supported relational operators: ==, !=, &lt;, &gt;, &lt;=, &gt;=. \n\n\n\n\n\n\n\nFor arithmetic operators:  A numeric array of whole numbers, as a result of the broadcasted arithmetic operation.  Base ‘R’ supports 53 bit integers, which thus range from approximately -9 quadrillion to +9 quadrillion.  Values outside of this range will be returned as -Inf or Inf, as an extra protection against integer overflow.   For relational operators:  A logical array as a result of the broadcasted integer relational comparison.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(NA, 1.1:1000.1), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\nbc.i(x, y, \"+\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  964  737  869  794  705  256  862   22  597\n [2,]  694  964  457   73  804  795  919   58  888\n [3,]   87  825  463  508  581  287  958  133  600\n [4,]  227  515  458  305  107  563  646   81  195\n [5,]  868   43  859  900  162  768  183   64  824\n [6,]  911  198  131  785   44  154  182  796   64\n [7,]  731  155  419  320  275  321  357  227  611\n [8,]  166  855 1000  741  482  471  787  212  741\n [9,]  433  774  425  493  398  565  840  141  469\n[10,]  503  731   70  107  422  746  140  174  755\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  469  989  183   48  964  331   26  856   64\n [2,]  888  800  154  479  730  623  883  659  194\n [3,]  549  842  345  408  519  843  321  472  940\n [4,]  745  803  189  431  965  869  753  419  752\n [5,]  497   68   33  939  400  784  872  907  890\n [6,]  475  299  436  537  235  711  503 1001  953\n [7,]  310  812  492  976  129  712  543   76  871\n [8,]  824  320  757  670  496  718  926  209  739\n [9,]  324  512  525  871  754  236  288  776  980\n[10,]  465  823  847  331  770   15  590  967  164\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  866  992  825  479  937  872  183  804  653\n [2,]  626  237  473  211  211  494  378  191  296\n [3,]   98  787  213  240  226  886  930   41  503\n [4,]   50  839  160  661  736  458  549  839  327\n [5,]  498  580  676  883  428  208   89   10  917\n [6,]   24  869  422   86  869  212  854  311  399\n [7,]  264  568   64  365 1002  759   20  918  990\n [8,]  461   25  655  443  560  346  795  432   68\n [9,]  569  801  765  991  552  599  286   68  927\n[10,]   42   89  810  987  103  559  127  246   46\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  371  392  206  653  851  787  781  716  588\n [2,]  194  250  284  557  632  328  293  992  441\n [3,]  522  238  885  676   43  518  126  622   78\n [4,]  632  340  286  596  989  209  100  278  524\n [5,]  741  726  773  943   40  330  418  450  805\n [6,]  388  462  762  859  678  954  878  235   87\n [7,]  336  897  759   51  546  410  745  592   95\n [8,]  888  133  469  534  749   12  133  472  476\n [9,]  186  621  229  855  518   27  744  284 1009\n[10,]  902  891  226  261  814  134  388  549   83\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  349  487  613  190  757  767  488  907  900\n [2,]  134   56  880  711  228  381  731  337  740\n [3,]  828  609   68  298  657  381  129  222  543\n [4,]   30  811  466  379  116  226  542  930  200\n [5,]  575  587  379  546  549  311  450  375  227\n [6,]  270  160  221  458  706  846  522  151  120\n [7,]  668  513  794  696  493   57  272  766  948\n [8,]  297  570  763   44  938  985  446  210  516\n [9,]   78  348 1009  273  973  817  957  681  502\n[10,]  436  660  501  216  360  600  370  954  723\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  535  430  958   10  508  609  427  146  534\n [2,]  187   70  367  675  992  467  126   96  749\n [3,]  968  633  324  559  765  518  205   47  334\n [4,]  244  921  253  717  408  129  527   63  400\n [5,]  466  911  781  132  850  621  496    6  281\n [6,]  812  386  385  273  526  260 1003  331  830\n [7,]  242  480   83  338  814  456  200  959  900\n [8,]  747  105  228  879  146  548   NA  593  708\n [9,]  599  533  143  814  243  238  112  131  748\n[10,]  504  457  857  953  906  616  396  452  118\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  476  508  794  934  697  342  986  732  609\n [2,]   85  719  807  468  459   48  476  853  590\n [3,]  986  869  705  438  144  743  800  213  946\n [4,]   77  965  573  601  862  918  256  129  651\n [5,]  598  598  169  265  423  596   87  331  285\n [6,]  879  474  391  938  443  108  107   65  695\n [7,]  682  185  946  405  898  513  756  291  353\n [8,]  447   59  595  261  470  747  625  896  448\n [9,]  523  200  150  459  962  564  590  414   64\n[10,]  266  176  123   13  726  582  965  310  124\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  876  717  781  575   19   70  845  936  758\n [2,]  108  577   67  499  284  998  678  489  957\n [3,]  315  940  597  908  437  424  839  345  357\n [4,]  636  876  186  542  741  998  130  827  326\n [5,]  430  915  835  463  493  664  151  994   83\n [6,]  757  216  666   22  991  689  668  297  354\n [7,]  575   58   63  617  567  245  909  589  487\n [8,]  327  282   73  923  608  265  130  454  352\n [9,]  809  919  380  446  204  840  221   80  536\n[10,]  327 1000  930  760  495  754  107  335  788\n\nbc.i(x, y, \"-\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  962  735  867  792  703  254  860   20  595\n [2,]  690  960  453   69  800  791  915   54  884\n [3,]   81  819  457  502  575  281  952  127  594\n [4,]  219  507  450  297   99  555  638   73  187\n [5,]  858   33  849  890  152  758  173   54  814\n [6,]  899  186  119  773   32  142  170  784   52\n [7,]  717  141  405  306  261  307  343  213  597\n [8,]  150  839  984  725  466  455  771  196  725\n [9,]  415  756  407  475  380  547  822  123  451\n[10,]  483  711   50   87  402  726  120  154  735\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  467  987  181   46  962  329   24  854   62\n [2,]  884  796  150  475  726  619  879  655  190\n [3,]  543  836  339  402  513  837  315  466  934\n [4,]  737  795  181  423  957  861  745  411  744\n [5,]  487   58   23  929  390  774  862  897  880\n [6,]  463  287  424  525  223  699  491  989  941\n [7,]  296  798  478  962  115  698  529   62  857\n [8,]  808  304  741  654  480  702  910  193  723\n [9,]  306  494  507  853  736  218  270  758  962\n[10,]  445  803  827  311  750   -5  570  947  144\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  864  990  823  477  935  870  181  802  651\n [2,]  622  233  469  207  207  490  374  187  292\n [3,]   92  781  207  234  220  880  924   35  497\n [4,]   42  831  152  653  728  450  541  831  319\n [5,]  488  570  666  873  418  198   79    0  907\n [6,]   12  857  410   74  857  200  842  299  387\n [7,]  250  554   50  351  988  745    6  904  976\n [8,]  445    9  639  427  544  330  779  416   52\n [9,]  551  783  747  973  534  581  268   50  909\n[10,]   22   69  790  967   83  539  107  226   26\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  369  390  204  651  849  785  779  714  586\n [2,]  190  246  280  553  628  324  289  988  437\n [3,]  516  232  879  670   37  512  120  616   72\n [4,]  624  332  278  588  981  201   92  270  516\n [5,]  731  716  763  933   30  320  408  440  795\n [6,]  376  450  750  847  666  942  866  223   75\n [7,]  322  883  745   37  532  396  731  578   81\n [8,]  872  117  453  518  733   -4  117  456  460\n [9,]  168  603  211  837  500    9  726  266  991\n[10,]  882  871  206  241  794  114  368  529   63\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  347  485  611  188  755  765  486  905  898\n [2,]  130   52  876  707  224  377  727  333  736\n [3,]  822  603   62  292  651  375  123  216  537\n [4,]   22  803  458  371  108  218  534  922  192\n [5,]  565  577  369  536  539  301  440  365  217\n [6,]  258  148  209  446  694  834  510  139  108\n [7,]  654  499  780  682  479   43  258  752  934\n [8,]  281  554  747   28  922  969  430  194  500\n [9,]   60  330  991  255  955  799  939  663  484\n[10,]  416  640  481  196  340  580  350  934  703\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  533  428  956    8  506  607  425  144  532\n [2,]  183   66  363  671  988  463  122   92  745\n [3,]  962  627  318  553  759  512  199   41  328\n [4,]  236  913  245  709  400  121  519   55  392\n [5,]  456  901  771  122  840  611  486   -4  271\n [6,]  800  374  373  261  514  248  991  319  818\n [7,]  228  466   69  324  800  442  186  945  886\n [8,]  731   89  212  863  130  532   NA  577  692\n [9,]  581  515  125  796  225  220   94  113  730\n[10,]  484  437  837  933  886  596  376  432   98\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  474  506  792  932  695  340  984  730  607\n [2,]   81  715  803  464  455   44  472  849  586\n [3,]  980  863  699  432  138  737  794  207  940\n [4,]   69  957  565  593  854  910  248  121  643\n [5,]  588  588  159  255  413  586   77  321  275\n [6,]  867  462  379  926  431   96   95   53  683\n [7,]  668  171  932  391  884  499  742  277  339\n [8,]  431   43  579  245  454  731  609  880  432\n [9,]  505  182  132  441  944  546  572  396   46\n[10,]  246  156  103   -7  706  562  945  290  104\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  874  715  779  573   17   68  843  934  756\n [2,]  104  573   63  495  280  994  674  485  953\n [3,]  309  934  591  902  431  418  833  339  351\n [4,]  628  868  178  534  733  990  122  819  318\n [5,]  420  905  825  453  483  654  141  984   73\n [6,]  745  204  654   10  979  677  656  285  342\n [7,]  561   44   49  603  553  231  895  575  473\n [8,]  311  266   57  907  592  249  114  438  336\n [9,]  791  901  362  428  186  822  203   62  518\n[10,]  307  980  910  740  475  734   87  315  768\n\nbc.i(x, y, \"*\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  963  736  868  793  704  255  861   21  596\n [2,] 1384 1924  910  142 1604 1586 1834  112 1772\n [3,]  252 2466 1380 1515 1734  852 2865  390 1791\n [4,]  892 2044 1816 1204  412 2236 2568  308  764\n [5,] 4315  190 4270 4475  785 3815  890  295 4095\n [6,] 5430 1152  750 4674  228  888 1056 4740  348\n [7,] 5068 1036 2884 2191 1876 2198 2450 1540 4228\n [8,] 1264 6776 7936 5864 3792 3704 6232 1632 5864\n [9,] 3816 6885 3744 4356 3501 5004 7479 1188 4140\n[10,] 4930 7210  600  970 4120 7360 1300 1640 7450\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  468  988  182   47  963  330   25  855   63\n [2,] 1772 1596  304  954 1456 1242 1762 1314  384\n [3,] 1638 2517 1026 1215 1548 2520  954 1407 2811\n [4,] 2964 3196  740 1708 3844 3460 2996 1660 2992\n [5,] 2460  315  140 4670 1975 3895 4335 4510 4425\n [6,] 2814 1758 2580 3186 1374 4230 2982 5970 5682\n [7,] 2121 5635 3395 6783  854 4935 3752  483 6048\n [8,] 6528 2496 5992 5296 3904 5680 7344 1608 5848\n [9,] 2835 4527 4644 7758 6705 2043 2511 6903 8739\n[10,] 4550 8130 8370 3210 7600   50 5800 9570 1540\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  865  991  824  478  936  871  182  803  652\n [2,] 1248  470  942  418  418  984  752  378  588\n [3,]  285 2352  630  711  669 2649 2781  114 1500\n [4,]  184 3340  624 2628 2928 1816 2180 3340 1292\n [5,] 2465 2875 3355 4390 2115 1015  420   25 4560\n [6,]  108 5178 2496  480 5178 1236 5088 1830 2358\n [7,] 1799 3927  399 2506 6965 5264   91 6377 6881\n [8,] 3624  136 5176 3480 4416 2704 6296 3392  480\n [9,] 5040 7128 6804 8838 4887 5310 2493  531 8262\n[10,]  320  790 8000 9770  930 5490 1170 2360  360\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  370  391  205  652  850  786  780  715  587\n [2,]  384  496  564 1110 1260  652  582 1980  878\n [3,] 1557  705 2646 2019  120 1545  369 1857  225\n [4,] 2512 1344 1128 2368 3940  820  384 1096 2080\n [5,] 3680 3605 3840 4690  175 1625 2065 2225 4000\n [6,] 2292 2736 4536 5118 4032 5688 5232 1374  486\n [7,] 2303 6230 5264  308 3773 2821 5166 4095  616\n [8,] 7040 1000 3688 4208 5928   32 1000 3712 3744\n [9,] 1593 5508 1980 7614 4581  162 6615 2475 9000\n[10,] 8920 8810 2160 2510 8040 1240 3780 5390  730\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  348  486  612  189  756  766  487  906  899\n [2,]  264  108 1756 1418  452  758 1458  670 1476\n [3,] 2475 1818  195  885 1962 1134  378  657 1620\n [4,]  104 3228 1848 1500  448  888 2152 3704  784\n [5,] 2850 2910 1870 2705 2720 1530 2225 1850 1110\n [6,] 1584  924 1290 2712 4200 5040 3096  870  684\n [7,] 4627 3542 5509 4823 3402  350 1855 5313 6587\n [8,] 2312 4496 6040  288 7440 7816 3504 1616 4064\n [9,]  621 3051 9000 2376 8676 7272 8532 6048 4437\n[10,] 4260 6500 4910 2060 3500 5900 3600 9440 7130\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  534  429  957    9  507  608  426  145  533\n [2,]  370  136  730 1346 1980  930  248  188 1494\n [3,] 2895 1890  963 1668 2286 1545  606  132  993\n [4,]  960 3668  996 2852 1616  500 2092  236 1584\n [5,] 2305 4530 3880  635 4225 3080 2455    5 1380\n [6,] 4836 2280 2274 1602 3120 1524 5982 1950 4944\n [7,] 1645 3311  532 2317 5649 3143 1351 6664 6251\n [8,] 5912  776 1760 6968 1104 4320   NA 4680 5600\n [9,] 5310 4716 1206 7245 2106 2061  927 1098 6651\n[10,] 4940 4470 8470 9430 8960 6060 3860 4420 1080\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  475  507  793  933  696  341  985  731  608\n [2,]  166 1434 1610  932  914   92  948 1702 1176\n [3,] 2949 2598 2106 1305  423 2220 2391  630 2829\n [4,]  292 3844 2276 2388 3432 3656 1008  500 2588\n [5,] 2965 2965  820 1300 2090 2955  410 1630 1400\n [6,] 5238 2808 2310 5592 2622  612  606  354 4134\n [7,] 4725 1246 6573 2786 6237 3542 5243 1988 2422\n [8,] 3512  408 4696 2024 3696 5912 4936 7104 3520\n [9,] 4626 1719 1269 4050 8577 4995 5229 3645  495\n[10,] 2560 1660 1130   30 7160 5720 9550 3000 1140\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  875  716  780  574   18   69  844  935  757\n [2,]  212 1150  130  994  564 1992 1352  974 1910\n [3,]  936 2811 1782 2715 1302 1263 2508 1026 1062\n [4,] 2528 3488  728 2152 2948 3976  504 3292 1288\n [5,] 2125 4550 4150 2290 2440 3295  730 4945  390\n [6,] 4506 1260 3960   96 5910 4098 3972 1746 2088\n [7,] 3976  357  392 4270 3920 1666 6314 4074 3360\n [8,] 2552 2192  520 7320 4800 2056  976 3568 2752\n [9,] 7200 8190 3339 3933 1755 7479 1908  639 4743\n[10,] 3170 9900 9200 7500 4850 7440  970 3250 7780\n\nbc.i(x, y, \"gcd\") # greatest common divisor\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    1    1    2    1    1    2    2\n [3,]    3    3    1    1    1    1    1    1    3\n [4,]    1    1    2    1    1    1    2    1    1\n [5,]    1    1    1    5    1    1    1    1    1\n [6,]    1    6    1    1    2    2    2    2    2\n [7,]    1    1    1    1    1    1    7    1    1\n [8,]    2    1    8    1    2    1    1    4    1\n [9,]    1    9    1    1    1    1    3    3    1\n[10,]    1    1   10    1    2    2   10    2    5\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    2    1    2    1    1    1    2\n [3,]    3    1    3    3    3    3    3    1    1\n [4,]    1    1    1    1    1    1    1    1    4\n [5,]    1    1    1    1    5    1    1    1    5\n [6,]    1    1    2    3    1    3    1    1    1\n [7,]    1    7    1    1    1    1    1    1    1\n [8,]    8    8    1    2    8    2    2    1    1\n [9,]    9    1    3    1    1    1    9    1    1\n[10,]    5    1    1    1   10    5   10    1    2\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    1    1    1    1    2    2    1    2\n [3,]    1    1    3    3    1    1    3    1    1\n [4,]    2    1    4    1    4    2    1    1    1\n [5,]    1    5    1    1    1    1    1    5    1\n [6,]    6    1    2    2    1    2    2    1    3\n [7,]    1    1    1    1    1    1    1    1    1\n [8,]    1    1    1    1    8    2    1    8    4\n [9,]    1    9    9    1    3    1    1    1    9\n[10,]    2    1   10    1    1    1    1    2    2\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    2    1    2    2    1    2    1\n [3,]    3    1    3    1    1    1    3    1    3\n [4,]    4    4    2    4    1    1    4    2    4\n [5,]    1    1    1    1    5    5    1    5    5\n [6,]    2    6    6    1    6    6    2    1    3\n [7,]    7    1    1    1    7    1    1    1    1\n [8,]    8    1    1    2    1    4    1    8    4\n [9,]    3    9    1    9    1    9    3    1    1\n[10,]    2    1    2    1    2    2    2    1    1\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    2    1    2    1    1    1    2\n [3,]    3    3    1    1    3    3    3    3    3\n [4,]    2    1    2    1    4    2    2    2    4\n [5,]    5    1    1    1    1    1    5    5    1\n [6,]    6    2    1    2    2    6    6    1    6\n [7,]    1    1    1    1    1    1    1    1    1\n [8,]    1    2    1    4    2    1    2    2    4\n [9,]    3    3    1    3    1    1    3    3    1\n[10,]    2   10    1    2   10   10   10    2    1\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    1    2    1    1    2    1    2    2    1\n [3,]    1    3    3    1    3    1    1    1    1\n [4,]    4    1    1    1    4    1    1    1    4\n [5,]    1    1    1    1    5    1    1    1    1\n [6,]    2    2    1    3    2    2    1    1    2\n [7,]    1    1    1    1    1    1    1    7    1\n [8,]    1    1    4    1    2    4   NA    1    4\n [9,]    1    1    1    1    9    1    1    1    1\n[10,]    2    1    1    1    2    2    2    2    2\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    1    1    1    2    1    2    2    1    2\n [3,]    1    1    3    3    3    1    1    3    1\n [4,]    1    1    1    1    2    2    4    1    1\n [5,]    1    1    1    5    1    1    1    1    5\n [6,]    3    6    1    2    1    6    1    1    1\n [7,]    1    1    1    1    1    1    7    1    1\n [8,]    1    1    1    1    2    1    1    8    8\n [9,]    1    1    3    9    1    3    1    9    1\n[10,]    2    2    1    1    2    2    5   10    2\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    1    1    1    2    2    2    1    1\n [3,]    3    1    3    1    1    1    1    3    3\n [4,]    4    4    2    2    1    2    2    1    2\n [5,]    5    5    5    1    1    1    1    1    1\n [6,]    1    6    6    2    1    1    2    3    6\n [7,]    1    1    7    1    7    7    1    1    1\n [8,]    1    2    1    1    8    1    2    2    8\n [9,]    1    1    1    1    3    3    1    1    1\n[10,]    1   10   10   10    5    2    1    5    2\n\nbc.i(x, y, \"^\")\n\n, , 1\n\n              [,1]         [,2]         [,3]         [,4]        [,5]\n [1,] 9.630000e+02 7.360000e+02 8.680000e+02 7.930000e+02         704\n [2,] 4.788640e+05 9.254440e+05 2.070250e+05 5.041000e+03      643204\n [3,] 5.927040e+05 5.554122e+08 9.733600e+07 1.287876e+08   193100552\n [4,] 2.472973e+09 6.818418e+10 4.248381e+10 8.208541e+09   112550881\n [5,] 4.786896e+14 7.923517e+07 4.542442e+14 5.742687e+14 95388992557\n [6,]          Inf 5.009650e+13 3.814697e+12          Inf  3010936384\n [7,]          Inf 1.555364e+15          Inf          Inf         Inf\n [8,]          Inf          Inf          Inf          Inf         Inf\n [9,]          Inf          Inf          Inf          Inf         Inf\n[10,]          Inf          Inf          Inf          Inf         Inf\n              [,6]         [,7]      [,8]         [,9]\n [1,] 2.550000e+02 8.610000e+02        21 5.960000e+02\n [2,] 6.288490e+05 8.408890e+05      3136 7.849960e+05\n [3,] 2.290630e+07 8.709839e+08   2197000 2.127762e+08\n [4,] 9.764438e+10 1.698792e+11  35153041 1.330863e+09\n [5,] 2.585965e+14 1.786899e+11 714924299 3.684847e+14\n [6,] 1.050922e+13 2.972186e+13       Inf 3.806869e+10\n [7,]          Inf          Inf       Inf          Inf\n [8,]          Inf          Inf       Inf          Inf\n [9,]          Inf          Inf       Inf          Inf\n[10,]          Inf          Inf       Inf          Inf\n\n, , 2\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 4.680000e+02 9.880000e+02 1.820000e+02 4.700000e+01 9.630000e+02\n [2,] 7.849960e+05 6.368040e+05 2.310400e+04 2.275290e+05 5.299840e+05\n [3,] 1.627713e+08 5.905897e+08 4.000169e+07 6.643012e+07 1.373881e+08\n [4,] 3.014899e+11 4.075558e+11 1.171351e+09 3.324386e+10 8.528910e+11\n [5,] 2.882873e+13 9.924365e+08 1.721037e+07 7.107787e+14 9.615801e+12\n [6,]          Inf 6.327115e+14 6.321363e+15          Inf 1.442158e+14\n [7,]          Inf          Inf          Inf          Inf 4.022711e+14\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 3.300000e+02 2.500000e+01 8.550000e+02 6.300000e+01\n [2,] 3.856410e+05 7.761610e+05 4.316490e+05 3.686400e+04\n [3,] 5.927040e+08 3.215743e+07 1.031617e+08 8.226570e+08\n [4,] 5.598407e+11 3.147221e+11 2.966145e+10 3.130447e+11\n [5,] 2.868714e+14 4.898865e+14 5.970802e+14 5.428956e+14\n [6,]          Inf          Inf          Inf          Inf\n [7,]          Inf          Inf 7.446353e+12          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,] 9.765625e+06          Inf          Inf          Inf\n\n, , 3\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 8.650000e+02 9.910000e+02 8.240000e+02 4.780000e+02 9.360000e+02\n [2,] 3.893760e+05 5.522500e+04 2.218410e+05 4.368100e+04 4.368100e+04\n [3,] 8.573750e+05 4.818903e+08 9.261000e+06 1.331205e+07 1.108957e+07\n [4,] 4.477456e+06 4.861227e+11 5.922409e+08 1.863209e+11 2.871074e+11\n [5,] 2.912290e+13 6.285491e+13 1.360231e+14 5.217622e+14 1.354259e+13\n [6,] 3.401222e+07          Inf 5.182747e+15 2.621440e+11          Inf\n [7,]          Inf          Inf 1.954897e+12          Inf          Inf\n [8,]          Inf 6.975757e+09          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,] 1.125900e+15          Inf          Inf          Inf          Inf\n              [,6]        [,7]         [,8]         [,9]\n [1,] 8.710000e+02         182 8.030000e+02 6.520000e+02\n [2,] 2.420640e+05      141376 3.572100e+04 8.643600e+04\n [3,] 6.884654e+08   796597983 5.487200e+04 1.250000e+08\n [4,] 4.248381e+10 88223850625 4.861227e+11 1.088454e+10\n [5,] 3.447309e+11  4182119424 3.125000e+03 6.309199e+14\n [6,] 7.641935e+13         Inf 8.050058e+14 3.684303e+15\n [7,]          Inf    62748517          Inf          Inf\n [8,]          Inf         Inf          Inf 1.679616e+14\n [9,]          Inf         Inf 8.662996e+15          Inf\n[10,]          Inf         Inf          Inf 3.656158e+15\n\n, , 4\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 3.700000e+02 3.910000e+02 2.050000e+02 6.520000e+02          850\n [2,] 3.686400e+04 6.150400e+04 7.952400e+04 3.080250e+05       396900\n [3,] 1.397984e+08 1.297788e+07 6.861290e+08 3.048212e+08        64000\n [4,] 1.555387e+11 1.274551e+10 6.324067e+09 1.228250e+11 941336550625\n [5,] 2.159678e+14 1.948392e+14 2.671813e+14 7.261297e+14     52521875\n [6,] 3.107278e+15 8.990608e+15          Inf          Inf          Inf\n [7,]          Inf          Inf          Inf 3.192778e+11          Inf\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 7.860000e+02 7.800000e+02 7.150000e+02 5.870000e+02\n [2,] 1.062760e+05 8.468100e+04 9.801000e+05 1.927210e+05\n [3,] 1.365909e+08 1.860867e+06 2.371767e+08 4.218750e+05\n [4,] 1.766101e+09 8.493466e+07 5.636406e+09 7.311616e+10\n [5,] 3.625908e+12 1.201573e+13 1.745019e+13 3.276800e+14\n [6,]          Inf          Inf 1.442158e+14 2.824295e+11\n [7,]          Inf          Inf          Inf 4.086756e+13\n [8,] 6.553600e+04          Inf          Inf          Inf\n [9,] 1.983593e+11          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 5\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 3.480000e+02 4.860000e+02 6.120000e+02 1.890000e+02 7.560000e+02\n [2,] 1.742400e+04 2.916000e+03 7.708840e+05 5.026810e+05 5.107600e+04\n [3,] 5.615156e+08 2.225450e+08 2.746250e+05 2.567237e+07 2.797263e+08\n [4,] 4.569760e+05 4.241253e+11 4.555834e+10 1.977539e+10 1.573519e+08\n [5,] 6.016921e+13 6.677516e+13 7.317420e+12 4.634323e+13 4.764250e+13\n [6,] 3.385506e+14 1.333903e+13 9.877130e+13 8.527674e+15          Inf\n [7,]          Inf          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf 2.821110e+12          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 7.660000e+02 4.870000e+02 9.060000e+02 8.990000e+02\n [2,] 1.436410e+05 5.314410e+05 1.122250e+05 5.446440e+05\n [3,] 5.401015e+07 2.000376e+06 1.050346e+07 1.574640e+08\n [4,] 2.428913e+09 8.377783e+10 7.352651e+11 1.475789e+09\n [5,] 2.682916e+12 1.745019e+13 6.934396e+12 5.392186e+11\n [6,]          Inf          Inf 9.294114e+12 2.194973e+12\n [7,] 7.812500e+11          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 6\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 5.340000e+02 4.290000e+02 9.570000e+02 9.000000e+00 5.070000e+02\n [2,] 3.422500e+04 4.624000e+03 1.332250e+05 4.529290e+05 9.801000e+05\n [3,] 8.986321e+08 2.500470e+08 3.307616e+07 1.718796e+08 4.424507e+08\n [4,] 3.317760e+09 7.070943e+11 3.844124e+09 2.584390e+11 2.663946e+10\n [5,] 2.082115e+13 6.104372e+14 2.813900e+14 3.303837e+10 4.308078e+14\n [6,]          Inf 3.010936e+15 2.963707e+15 3.622994e+14          Inf\n [7,]          Inf          Inf 1.464519e+13          Inf          Inf\n [8,]          Inf 7.837434e+15          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 6.080000e+02 4.260000e+02 1.450000e+02 5.330000e+02\n [2,] 2.162250e+05 1.537600e+04 8.836000e+03 5.580090e+05\n [3,] 1.365909e+08 8.242408e+06 8.518400e+04 3.626469e+07\n [4,] 2.441406e+08 7.481811e+10 1.211736e+07 2.459126e+10\n [5,] 8.869590e+13 2.853694e+13 1.000000e+00 1.601568e+12\n [6,] 2.685359e+14          Inf 1.178420e+15          Inf\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf           NA          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 7\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 4.750000e+02 5.070000e+02 7.930000e+02 9.330000e+02 6.960000e+02\n [2,] 6.889000e+03 5.140890e+05 6.480250e+05 2.171560e+05 2.088490e+05\n [3,] 9.498621e+08 6.494619e+08 3.459484e+08 8.231288e+07 2.803221e+06\n [4,] 2.839824e+07 8.528910e+11 1.048212e+11 1.270274e+11 5.419374e+11\n [5,] 7.332861e+13 7.332861e+13 1.186367e+11 1.188138e+12 1.276090e+13\n [6,]          Inf          Inf 3.256600e+15          Inf 6.964479e+15\n [7,]          Inf 5.661611e+15          Inf          Inf          Inf\n [8,]          Inf 4.576794e+13          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf 5.904900e+04          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 3.410000e+02 9.850000e+02 7.310000e+02 6.080000e+02\n [2,] 2.116000e+03 2.246760e+05 7.242010e+05 3.457440e+05\n [3,] 4.052240e+08 5.062616e+08 9.261000e+06 8.385618e+08\n [4,] 6.978865e+11 4.032758e+09 2.441406e+08 1.752335e+11\n [5,] 7.210036e+13 3.707398e+09 3.682036e+12 1.721037e+12\n [6,] 1.126162e+12 1.061520e+12 4.218053e+10          Inf\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf 4.605367e+15\n[10,]          Inf          Inf          Inf          Inf\n\n, , 8\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 8.750000e+02 7.160000e+02 7.800000e+02 5.740000e+02 1.800000e+01\n [2,] 1.123600e+04 3.306250e+05 4.225000e+03 2.470090e+05 7.952400e+04\n [3,] 3.037133e+07 8.226570e+08 2.095846e+08 7.412176e+08 8.174650e+07\n [4,] 1.595395e+11 5.781838e+11 1.097199e+09 8.377783e+10 2.950326e+11\n [5,] 1.386579e+13 6.240321e+14 3.939041e+14 2.015243e+13 2.767573e+13\n [6,]          Inf 8.576612e+13          Inf 1.677722e+07          Inf\n [7,]          Inf 8.974107e+11 1.727095e+12          Inf          Inf\n [8,]          Inf          Inf 3.186448e+14          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]        [,7]         [,8]         [,9]\n [1,] 6.900000e+01         844 9.350000e+02 7.570000e+02\n [2,] 9.920160e+05      456976 2.371690e+05 9.120250e+05\n [3,] 7.461846e+07   584277056 4.000169e+07 4.436186e+07\n [4,] 9.762151e+11   252047376 4.587746e+11 1.075037e+10\n [5,] 1.242874e+14 66338290976 9.461968e+14 2.887174e+09\n [6,]          Inf         Inf 6.072366e+14 1.776133e+15\n [7,]          Inf         Inf          Inf          Inf\n [8,]          Inf         Inf          Inf          Inf\n [9,]          Inf         Inf          Inf          Inf\n[10,]          Inf         Inf          Inf          Inf\n\nbc.i(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE    NA FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.i(x, y, \"!=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7]  [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE   NA TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.i(x, y, \"&lt;\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE    NA FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.i(x, y, \"&gt;\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5]  [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7]  [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5]  [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7]  [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE   NA  TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3]  [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE FALSE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.i(x, y, \"&lt;=\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE    NA FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.i(x, y, \"&gt;=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5]  [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5]  [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7]  [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE   NA  TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3]  [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE FALSE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE"
  },
  {
    "objectID": "man/bc.i.html#broadcasted-integer-numeric-operations-with-extra-overflow-protection",
    "href": "man/bc.i.html#broadcasted-integer-numeric-operations-with-extra-overflow-protection",
    "title": "bc.i",
    "section": "",
    "text": "The bc.i() function performs broadcasted integer numeric operations on 2 numeric or logical arrays.   Please note that these operations will treat the input as 53bit integers, and will efficiently truncate when necessary.  Therefore, something like bc.i(1, 1.5, “==”) returns TRUE, because trunc(1.5) equals 1.  \n\n\n\nbc.i(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable logical or numeric arrays.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported arithmetic operators: +, -, *, gcd, ^, pmin, pmax.  Supported relational operators: ==, !=, &lt;, &gt;, &lt;=, &gt;=. \n\n\n\n\n\n\n\nFor arithmetic operators:  A numeric array of whole numbers, as a result of the broadcasted arithmetic operation.  Base ‘R’ supports 53 bit integers, which thus range from approximately -9 quadrillion to +9 quadrillion.  Values outside of this range will be returned as -Inf or Inf, as an extra protection against integer overflow.   For relational operators:  A logical array as a result of the broadcasted integer relational comparison.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(NA, 1.1:1000.1), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\nbc.i(x, y, \"+\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  964  737  869  794  705  256  862   22  597\n [2,]  694  964  457   73  804  795  919   58  888\n [3,]   87  825  463  508  581  287  958  133  600\n [4,]  227  515  458  305  107  563  646   81  195\n [5,]  868   43  859  900  162  768  183   64  824\n [6,]  911  198  131  785   44  154  182  796   64\n [7,]  731  155  419  320  275  321  357  227  611\n [8,]  166  855 1000  741  482  471  787  212  741\n [9,]  433  774  425  493  398  565  840  141  469\n[10,]  503  731   70  107  422  746  140  174  755\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  469  989  183   48  964  331   26  856   64\n [2,]  888  800  154  479  730  623  883  659  194\n [3,]  549  842  345  408  519  843  321  472  940\n [4,]  745  803  189  431  965  869  753  419  752\n [5,]  497   68   33  939  400  784  872  907  890\n [6,]  475  299  436  537  235  711  503 1001  953\n [7,]  310  812  492  976  129  712  543   76  871\n [8,]  824  320  757  670  496  718  926  209  739\n [9,]  324  512  525  871  754  236  288  776  980\n[10,]  465  823  847  331  770   15  590  967  164\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  866  992  825  479  937  872  183  804  653\n [2,]  626  237  473  211  211  494  378  191  296\n [3,]   98  787  213  240  226  886  930   41  503\n [4,]   50  839  160  661  736  458  549  839  327\n [5,]  498  580  676  883  428  208   89   10  917\n [6,]   24  869  422   86  869  212  854  311  399\n [7,]  264  568   64  365 1002  759   20  918  990\n [8,]  461   25  655  443  560  346  795  432   68\n [9,]  569  801  765  991  552  599  286   68  927\n[10,]   42   89  810  987  103  559  127  246   46\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  371  392  206  653  851  787  781  716  588\n [2,]  194  250  284  557  632  328  293  992  441\n [3,]  522  238  885  676   43  518  126  622   78\n [4,]  632  340  286  596  989  209  100  278  524\n [5,]  741  726  773  943   40  330  418  450  805\n [6,]  388  462  762  859  678  954  878  235   87\n [7,]  336  897  759   51  546  410  745  592   95\n [8,]  888  133  469  534  749   12  133  472  476\n [9,]  186  621  229  855  518   27  744  284 1009\n[10,]  902  891  226  261  814  134  388  549   83\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  349  487  613  190  757  767  488  907  900\n [2,]  134   56  880  711  228  381  731  337  740\n [3,]  828  609   68  298  657  381  129  222  543\n [4,]   30  811  466  379  116  226  542  930  200\n [5,]  575  587  379  546  549  311  450  375  227\n [6,]  270  160  221  458  706  846  522  151  120\n [7,]  668  513  794  696  493   57  272  766  948\n [8,]  297  570  763   44  938  985  446  210  516\n [9,]   78  348 1009  273  973  817  957  681  502\n[10,]  436  660  501  216  360  600  370  954  723\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  535  430  958   10  508  609  427  146  534\n [2,]  187   70  367  675  992  467  126   96  749\n [3,]  968  633  324  559  765  518  205   47  334\n [4,]  244  921  253  717  408  129  527   63  400\n [5,]  466  911  781  132  850  621  496    6  281\n [6,]  812  386  385  273  526  260 1003  331  830\n [7,]  242  480   83  338  814  456  200  959  900\n [8,]  747  105  228  879  146  548   NA  593  708\n [9,]  599  533  143  814  243  238  112  131  748\n[10,]  504  457  857  953  906  616  396  452  118\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  476  508  794  934  697  342  986  732  609\n [2,]   85  719  807  468  459   48  476  853  590\n [3,]  986  869  705  438  144  743  800  213  946\n [4,]   77  965  573  601  862  918  256  129  651\n [5,]  598  598  169  265  423  596   87  331  285\n [6,]  879  474  391  938  443  108  107   65  695\n [7,]  682  185  946  405  898  513  756  291  353\n [8,]  447   59  595  261  470  747  625  896  448\n [9,]  523  200  150  459  962  564  590  414   64\n[10,]  266  176  123   13  726  582  965  310  124\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  876  717  781  575   19   70  845  936  758\n [2,]  108  577   67  499  284  998  678  489  957\n [3,]  315  940  597  908  437  424  839  345  357\n [4,]  636  876  186  542  741  998  130  827  326\n [5,]  430  915  835  463  493  664  151  994   83\n [6,]  757  216  666   22  991  689  668  297  354\n [7,]  575   58   63  617  567  245  909  589  487\n [8,]  327  282   73  923  608  265  130  454  352\n [9,]  809  919  380  446  204  840  221   80  536\n[10,]  327 1000  930  760  495  754  107  335  788\n\nbc.i(x, y, \"-\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  962  735  867  792  703  254  860   20  595\n [2,]  690  960  453   69  800  791  915   54  884\n [3,]   81  819  457  502  575  281  952  127  594\n [4,]  219  507  450  297   99  555  638   73  187\n [5,]  858   33  849  890  152  758  173   54  814\n [6,]  899  186  119  773   32  142  170  784   52\n [7,]  717  141  405  306  261  307  343  213  597\n [8,]  150  839  984  725  466  455  771  196  725\n [9,]  415  756  407  475  380  547  822  123  451\n[10,]  483  711   50   87  402  726  120  154  735\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  467  987  181   46  962  329   24  854   62\n [2,]  884  796  150  475  726  619  879  655  190\n [3,]  543  836  339  402  513  837  315  466  934\n [4,]  737  795  181  423  957  861  745  411  744\n [5,]  487   58   23  929  390  774  862  897  880\n [6,]  463  287  424  525  223  699  491  989  941\n [7,]  296  798  478  962  115  698  529   62  857\n [8,]  808  304  741  654  480  702  910  193  723\n [9,]  306  494  507  853  736  218  270  758  962\n[10,]  445  803  827  311  750   -5  570  947  144\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  864  990  823  477  935  870  181  802  651\n [2,]  622  233  469  207  207  490  374  187  292\n [3,]   92  781  207  234  220  880  924   35  497\n [4,]   42  831  152  653  728  450  541  831  319\n [5,]  488  570  666  873  418  198   79    0  907\n [6,]   12  857  410   74  857  200  842  299  387\n [7,]  250  554   50  351  988  745    6  904  976\n [8,]  445    9  639  427  544  330  779  416   52\n [9,]  551  783  747  973  534  581  268   50  909\n[10,]   22   69  790  967   83  539  107  226   26\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  369  390  204  651  849  785  779  714  586\n [2,]  190  246  280  553  628  324  289  988  437\n [3,]  516  232  879  670   37  512  120  616   72\n [4,]  624  332  278  588  981  201   92  270  516\n [5,]  731  716  763  933   30  320  408  440  795\n [6,]  376  450  750  847  666  942  866  223   75\n [7,]  322  883  745   37  532  396  731  578   81\n [8,]  872  117  453  518  733   -4  117  456  460\n [9,]  168  603  211  837  500    9  726  266  991\n[10,]  882  871  206  241  794  114  368  529   63\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  347  485  611  188  755  765  486  905  898\n [2,]  130   52  876  707  224  377  727  333  736\n [3,]  822  603   62  292  651  375  123  216  537\n [4,]   22  803  458  371  108  218  534  922  192\n [5,]  565  577  369  536  539  301  440  365  217\n [6,]  258  148  209  446  694  834  510  139  108\n [7,]  654  499  780  682  479   43  258  752  934\n [8,]  281  554  747   28  922  969  430  194  500\n [9,]   60  330  991  255  955  799  939  663  484\n[10,]  416  640  481  196  340  580  350  934  703\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  533  428  956    8  506  607  425  144  532\n [2,]  183   66  363  671  988  463  122   92  745\n [3,]  962  627  318  553  759  512  199   41  328\n [4,]  236  913  245  709  400  121  519   55  392\n [5,]  456  901  771  122  840  611  486   -4  271\n [6,]  800  374  373  261  514  248  991  319  818\n [7,]  228  466   69  324  800  442  186  945  886\n [8,]  731   89  212  863  130  532   NA  577  692\n [9,]  581  515  125  796  225  220   94  113  730\n[10,]  484  437  837  933  886  596  376  432   98\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  474  506  792  932  695  340  984  730  607\n [2,]   81  715  803  464  455   44  472  849  586\n [3,]  980  863  699  432  138  737  794  207  940\n [4,]   69  957  565  593  854  910  248  121  643\n [5,]  588  588  159  255  413  586   77  321  275\n [6,]  867  462  379  926  431   96   95   53  683\n [7,]  668  171  932  391  884  499  742  277  339\n [8,]  431   43  579  245  454  731  609  880  432\n [9,]  505  182  132  441  944  546  572  396   46\n[10,]  246  156  103   -7  706  562  945  290  104\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  874  715  779  573   17   68  843  934  756\n [2,]  104  573   63  495  280  994  674  485  953\n [3,]  309  934  591  902  431  418  833  339  351\n [4,]  628  868  178  534  733  990  122  819  318\n [5,]  420  905  825  453  483  654  141  984   73\n [6,]  745  204  654   10  979  677  656  285  342\n [7,]  561   44   49  603  553  231  895  575  473\n [8,]  311  266   57  907  592  249  114  438  336\n [9,]  791  901  362  428  186  822  203   62  518\n[10,]  307  980  910  740  475  734   87  315  768\n\nbc.i(x, y, \"*\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  963  736  868  793  704  255  861   21  596\n [2,] 1384 1924  910  142 1604 1586 1834  112 1772\n [3,]  252 2466 1380 1515 1734  852 2865  390 1791\n [4,]  892 2044 1816 1204  412 2236 2568  308  764\n [5,] 4315  190 4270 4475  785 3815  890  295 4095\n [6,] 5430 1152  750 4674  228  888 1056 4740  348\n [7,] 5068 1036 2884 2191 1876 2198 2450 1540 4228\n [8,] 1264 6776 7936 5864 3792 3704 6232 1632 5864\n [9,] 3816 6885 3744 4356 3501 5004 7479 1188 4140\n[10,] 4930 7210  600  970 4120 7360 1300 1640 7450\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  468  988  182   47  963  330   25  855   63\n [2,] 1772 1596  304  954 1456 1242 1762 1314  384\n [3,] 1638 2517 1026 1215 1548 2520  954 1407 2811\n [4,] 2964 3196  740 1708 3844 3460 2996 1660 2992\n [5,] 2460  315  140 4670 1975 3895 4335 4510 4425\n [6,] 2814 1758 2580 3186 1374 4230 2982 5970 5682\n [7,] 2121 5635 3395 6783  854 4935 3752  483 6048\n [8,] 6528 2496 5992 5296 3904 5680 7344 1608 5848\n [9,] 2835 4527 4644 7758 6705 2043 2511 6903 8739\n[10,] 4550 8130 8370 3210 7600   50 5800 9570 1540\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  865  991  824  478  936  871  182  803  652\n [2,] 1248  470  942  418  418  984  752  378  588\n [3,]  285 2352  630  711  669 2649 2781  114 1500\n [4,]  184 3340  624 2628 2928 1816 2180 3340 1292\n [5,] 2465 2875 3355 4390 2115 1015  420   25 4560\n [6,]  108 5178 2496  480 5178 1236 5088 1830 2358\n [7,] 1799 3927  399 2506 6965 5264   91 6377 6881\n [8,] 3624  136 5176 3480 4416 2704 6296 3392  480\n [9,] 5040 7128 6804 8838 4887 5310 2493  531 8262\n[10,]  320  790 8000 9770  930 5490 1170 2360  360\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  370  391  205  652  850  786  780  715  587\n [2,]  384  496  564 1110 1260  652  582 1980  878\n [3,] 1557  705 2646 2019  120 1545  369 1857  225\n [4,] 2512 1344 1128 2368 3940  820  384 1096 2080\n [5,] 3680 3605 3840 4690  175 1625 2065 2225 4000\n [6,] 2292 2736 4536 5118 4032 5688 5232 1374  486\n [7,] 2303 6230 5264  308 3773 2821 5166 4095  616\n [8,] 7040 1000 3688 4208 5928   32 1000 3712 3744\n [9,] 1593 5508 1980 7614 4581  162 6615 2475 9000\n[10,] 8920 8810 2160 2510 8040 1240 3780 5390  730\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  348  486  612  189  756  766  487  906  899\n [2,]  264  108 1756 1418  452  758 1458  670 1476\n [3,] 2475 1818  195  885 1962 1134  378  657 1620\n [4,]  104 3228 1848 1500  448  888 2152 3704  784\n [5,] 2850 2910 1870 2705 2720 1530 2225 1850 1110\n [6,] 1584  924 1290 2712 4200 5040 3096  870  684\n [7,] 4627 3542 5509 4823 3402  350 1855 5313 6587\n [8,] 2312 4496 6040  288 7440 7816 3504 1616 4064\n [9,]  621 3051 9000 2376 8676 7272 8532 6048 4437\n[10,] 4260 6500 4910 2060 3500 5900 3600 9440 7130\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  534  429  957    9  507  608  426  145  533\n [2,]  370  136  730 1346 1980  930  248  188 1494\n [3,] 2895 1890  963 1668 2286 1545  606  132  993\n [4,]  960 3668  996 2852 1616  500 2092  236 1584\n [5,] 2305 4530 3880  635 4225 3080 2455    5 1380\n [6,] 4836 2280 2274 1602 3120 1524 5982 1950 4944\n [7,] 1645 3311  532 2317 5649 3143 1351 6664 6251\n [8,] 5912  776 1760 6968 1104 4320   NA 4680 5600\n [9,] 5310 4716 1206 7245 2106 2061  927 1098 6651\n[10,] 4940 4470 8470 9430 8960 6060 3860 4420 1080\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  475  507  793  933  696  341  985  731  608\n [2,]  166 1434 1610  932  914   92  948 1702 1176\n [3,] 2949 2598 2106 1305  423 2220 2391  630 2829\n [4,]  292 3844 2276 2388 3432 3656 1008  500 2588\n [5,] 2965 2965  820 1300 2090 2955  410 1630 1400\n [6,] 5238 2808 2310 5592 2622  612  606  354 4134\n [7,] 4725 1246 6573 2786 6237 3542 5243 1988 2422\n [8,] 3512  408 4696 2024 3696 5912 4936 7104 3520\n [9,] 4626 1719 1269 4050 8577 4995 5229 3645  495\n[10,] 2560 1660 1130   30 7160 5720 9550 3000 1140\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]  875  716  780  574   18   69  844  935  757\n [2,]  212 1150  130  994  564 1992 1352  974 1910\n [3,]  936 2811 1782 2715 1302 1263 2508 1026 1062\n [4,] 2528 3488  728 2152 2948 3976  504 3292 1288\n [5,] 2125 4550 4150 2290 2440 3295  730 4945  390\n [6,] 4506 1260 3960   96 5910 4098 3972 1746 2088\n [7,] 3976  357  392 4270 3920 1666 6314 4074 3360\n [8,] 2552 2192  520 7320 4800 2056  976 3568 2752\n [9,] 7200 8190 3339 3933 1755 7479 1908  639 4743\n[10,] 3170 9900 9200 7500 4850 7440  970 3250 7780\n\nbc.i(x, y, \"gcd\") # greatest common divisor\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    1    1    2    1    1    2    2\n [3,]    3    3    1    1    1    1    1    1    3\n [4,]    1    1    2    1    1    1    2    1    1\n [5,]    1    1    1    5    1    1    1    1    1\n [6,]    1    6    1    1    2    2    2    2    2\n [7,]    1    1    1    1    1    1    7    1    1\n [8,]    2    1    8    1    2    1    1    4    1\n [9,]    1    9    1    1    1    1    3    3    1\n[10,]    1    1   10    1    2    2   10    2    5\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    2    1    2    1    1    1    2\n [3,]    3    1    3    3    3    3    3    1    1\n [4,]    1    1    1    1    1    1    1    1    4\n [5,]    1    1    1    1    5    1    1    1    5\n [6,]    1    1    2    3    1    3    1    1    1\n [7,]    1    7    1    1    1    1    1    1    1\n [8,]    8    8    1    2    8    2    2    1    1\n [9,]    9    1    3    1    1    1    9    1    1\n[10,]    5    1    1    1   10    5   10    1    2\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    1    1    1    1    2    2    1    2\n [3,]    1    1    3    3    1    1    3    1    1\n [4,]    2    1    4    1    4    2    1    1    1\n [5,]    1    5    1    1    1    1    1    5    1\n [6,]    6    1    2    2    1    2    2    1    3\n [7,]    1    1    1    1    1    1    1    1    1\n [8,]    1    1    1    1    8    2    1    8    4\n [9,]    1    9    9    1    3    1    1    1    9\n[10,]    2    1   10    1    1    1    1    2    2\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    2    1    2    2    1    2    1\n [3,]    3    1    3    1    1    1    3    1    3\n [4,]    4    4    2    4    1    1    4    2    4\n [5,]    1    1    1    1    5    5    1    5    5\n [6,]    2    6    6    1    6    6    2    1    3\n [7,]    7    1    1    1    7    1    1    1    1\n [8,]    8    1    1    2    1    4    1    8    4\n [9,]    3    9    1    9    1    9    3    1    1\n[10,]    2    1    2    1    2    2    2    1    1\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    2    2    1    2    1    1    1    2\n [3,]    3    3    1    1    3    3    3    3    3\n [4,]    2    1    2    1    4    2    2    2    4\n [5,]    5    1    1    1    1    1    5    5    1\n [6,]    6    2    1    2    2    6    6    1    6\n [7,]    1    1    1    1    1    1    1    1    1\n [8,]    1    2    1    4    2    1    2    2    4\n [9,]    3    3    1    3    1    1    3    3    1\n[10,]    2   10    1    2   10   10   10    2    1\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    1    2    1    1    2    1    2    2    1\n [3,]    1    3    3    1    3    1    1    1    1\n [4,]    4    1    1    1    4    1    1    1    4\n [5,]    1    1    1    1    5    1    1    1    1\n [6,]    2    2    1    3    2    2    1    1    2\n [7,]    1    1    1    1    1    1    1    7    1\n [8,]    1    1    4    1    2    4   NA    1    4\n [9,]    1    1    1    1    9    1    1    1    1\n[10,]    2    1    1    1    2    2    2    2    2\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    1    1    1    2    1    2    2    1    2\n [3,]    1    1    3    3    3    1    1    3    1\n [4,]    1    1    1    1    2    2    4    1    1\n [5,]    1    1    1    5    1    1    1    1    5\n [6,]    3    6    1    2    1    6    1    1    1\n [7,]    1    1    1    1    1    1    7    1    1\n [8,]    1    1    1    1    2    1    1    8    8\n [9,]    1    1    3    9    1    3    1    9    1\n[10,]    2    2    1    1    2    2    5   10    2\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,]    1    1    1    1    1    1    1    1    1\n [2,]    2    1    1    1    2    2    2    1    1\n [3,]    3    1    3    1    1    1    1    3    3\n [4,]    4    4    2    2    1    2    2    1    2\n [5,]    5    5    5    1    1    1    1    1    1\n [6,]    1    6    6    2    1    1    2    3    6\n [7,]    1    1    7    1    7    7    1    1    1\n [8,]    1    2    1    1    8    1    2    2    8\n [9,]    1    1    1    1    3    3    1    1    1\n[10,]    1   10   10   10    5    2    1    5    2\n\nbc.i(x, y, \"^\")\n\n, , 1\n\n              [,1]         [,2]         [,3]         [,4]        [,5]\n [1,] 9.630000e+02 7.360000e+02 8.680000e+02 7.930000e+02         704\n [2,] 4.788640e+05 9.254440e+05 2.070250e+05 5.041000e+03      643204\n [3,] 5.927040e+05 5.554122e+08 9.733600e+07 1.287876e+08   193100552\n [4,] 2.472973e+09 6.818418e+10 4.248381e+10 8.208541e+09   112550881\n [5,] 4.786896e+14 7.923517e+07 4.542442e+14 5.742687e+14 95388992557\n [6,]          Inf 5.009650e+13 3.814697e+12          Inf  3010936384\n [7,]          Inf 1.555364e+15          Inf          Inf         Inf\n [8,]          Inf          Inf          Inf          Inf         Inf\n [9,]          Inf          Inf          Inf          Inf         Inf\n[10,]          Inf          Inf          Inf          Inf         Inf\n              [,6]         [,7]      [,8]         [,9]\n [1,] 2.550000e+02 8.610000e+02        21 5.960000e+02\n [2,] 6.288490e+05 8.408890e+05      3136 7.849960e+05\n [3,] 2.290630e+07 8.709839e+08   2197000 2.127762e+08\n [4,] 9.764438e+10 1.698792e+11  35153041 1.330863e+09\n [5,] 2.585965e+14 1.786899e+11 714924299 3.684847e+14\n [6,] 1.050922e+13 2.972186e+13       Inf 3.806869e+10\n [7,]          Inf          Inf       Inf          Inf\n [8,]          Inf          Inf       Inf          Inf\n [9,]          Inf          Inf       Inf          Inf\n[10,]          Inf          Inf       Inf          Inf\n\n, , 2\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 4.680000e+02 9.880000e+02 1.820000e+02 4.700000e+01 9.630000e+02\n [2,] 7.849960e+05 6.368040e+05 2.310400e+04 2.275290e+05 5.299840e+05\n [3,] 1.627713e+08 5.905897e+08 4.000169e+07 6.643012e+07 1.373881e+08\n [4,] 3.014899e+11 4.075558e+11 1.171351e+09 3.324386e+10 8.528910e+11\n [5,] 2.882873e+13 9.924365e+08 1.721037e+07 7.107787e+14 9.615801e+12\n [6,]          Inf 6.327115e+14 6.321363e+15          Inf 1.442158e+14\n [7,]          Inf          Inf          Inf          Inf 4.022711e+14\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 3.300000e+02 2.500000e+01 8.550000e+02 6.300000e+01\n [2,] 3.856410e+05 7.761610e+05 4.316490e+05 3.686400e+04\n [3,] 5.927040e+08 3.215743e+07 1.031617e+08 8.226570e+08\n [4,] 5.598407e+11 3.147221e+11 2.966145e+10 3.130447e+11\n [5,] 2.868714e+14 4.898865e+14 5.970802e+14 5.428956e+14\n [6,]          Inf          Inf          Inf          Inf\n [7,]          Inf          Inf 7.446353e+12          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,] 9.765625e+06          Inf          Inf          Inf\n\n, , 3\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 8.650000e+02 9.910000e+02 8.240000e+02 4.780000e+02 9.360000e+02\n [2,] 3.893760e+05 5.522500e+04 2.218410e+05 4.368100e+04 4.368100e+04\n [3,] 8.573750e+05 4.818903e+08 9.261000e+06 1.331205e+07 1.108957e+07\n [4,] 4.477456e+06 4.861227e+11 5.922409e+08 1.863209e+11 2.871074e+11\n [5,] 2.912290e+13 6.285491e+13 1.360231e+14 5.217622e+14 1.354259e+13\n [6,] 3.401222e+07          Inf 5.182747e+15 2.621440e+11          Inf\n [7,]          Inf          Inf 1.954897e+12          Inf          Inf\n [8,]          Inf 6.975757e+09          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,] 1.125900e+15          Inf          Inf          Inf          Inf\n              [,6]        [,7]         [,8]         [,9]\n [1,] 8.710000e+02         182 8.030000e+02 6.520000e+02\n [2,] 2.420640e+05      141376 3.572100e+04 8.643600e+04\n [3,] 6.884654e+08   796597983 5.487200e+04 1.250000e+08\n [4,] 4.248381e+10 88223850625 4.861227e+11 1.088454e+10\n [5,] 3.447309e+11  4182119424 3.125000e+03 6.309199e+14\n [6,] 7.641935e+13         Inf 8.050058e+14 3.684303e+15\n [7,]          Inf    62748517          Inf          Inf\n [8,]          Inf         Inf          Inf 1.679616e+14\n [9,]          Inf         Inf 8.662996e+15          Inf\n[10,]          Inf         Inf          Inf 3.656158e+15\n\n, , 4\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 3.700000e+02 3.910000e+02 2.050000e+02 6.520000e+02          850\n [2,] 3.686400e+04 6.150400e+04 7.952400e+04 3.080250e+05       396900\n [3,] 1.397984e+08 1.297788e+07 6.861290e+08 3.048212e+08        64000\n [4,] 1.555387e+11 1.274551e+10 6.324067e+09 1.228250e+11 941336550625\n [5,] 2.159678e+14 1.948392e+14 2.671813e+14 7.261297e+14     52521875\n [6,] 3.107278e+15 8.990608e+15          Inf          Inf          Inf\n [7,]          Inf          Inf          Inf 3.192778e+11          Inf\n [8,]          Inf          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 7.860000e+02 7.800000e+02 7.150000e+02 5.870000e+02\n [2,] 1.062760e+05 8.468100e+04 9.801000e+05 1.927210e+05\n [3,] 1.365909e+08 1.860867e+06 2.371767e+08 4.218750e+05\n [4,] 1.766101e+09 8.493466e+07 5.636406e+09 7.311616e+10\n [5,] 3.625908e+12 1.201573e+13 1.745019e+13 3.276800e+14\n [6,]          Inf          Inf 1.442158e+14 2.824295e+11\n [7,]          Inf          Inf          Inf 4.086756e+13\n [8,] 6.553600e+04          Inf          Inf          Inf\n [9,] 1.983593e+11          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 5\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 3.480000e+02 4.860000e+02 6.120000e+02 1.890000e+02 7.560000e+02\n [2,] 1.742400e+04 2.916000e+03 7.708840e+05 5.026810e+05 5.107600e+04\n [3,] 5.615156e+08 2.225450e+08 2.746250e+05 2.567237e+07 2.797263e+08\n [4,] 4.569760e+05 4.241253e+11 4.555834e+10 1.977539e+10 1.573519e+08\n [5,] 6.016921e+13 6.677516e+13 7.317420e+12 4.634323e+13 4.764250e+13\n [6,] 3.385506e+14 1.333903e+13 9.877130e+13 8.527674e+15          Inf\n [7,]          Inf          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf 2.821110e+12          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 7.660000e+02 4.870000e+02 9.060000e+02 8.990000e+02\n [2,] 1.436410e+05 5.314410e+05 1.122250e+05 5.446440e+05\n [3,] 5.401015e+07 2.000376e+06 1.050346e+07 1.574640e+08\n [4,] 2.428913e+09 8.377783e+10 7.352651e+11 1.475789e+09\n [5,] 2.682916e+12 1.745019e+13 6.934396e+12 5.392186e+11\n [6,]          Inf          Inf 9.294114e+12 2.194973e+12\n [7,] 7.812500e+11          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 6\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 5.340000e+02 4.290000e+02 9.570000e+02 9.000000e+00 5.070000e+02\n [2,] 3.422500e+04 4.624000e+03 1.332250e+05 4.529290e+05 9.801000e+05\n [3,] 8.986321e+08 2.500470e+08 3.307616e+07 1.718796e+08 4.424507e+08\n [4,] 3.317760e+09 7.070943e+11 3.844124e+09 2.584390e+11 2.663946e+10\n [5,] 2.082115e+13 6.104372e+14 2.813900e+14 3.303837e+10 4.308078e+14\n [6,]          Inf 3.010936e+15 2.963707e+15 3.622994e+14          Inf\n [7,]          Inf          Inf 1.464519e+13          Inf          Inf\n [8,]          Inf 7.837434e+15          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 6.080000e+02 4.260000e+02 1.450000e+02 5.330000e+02\n [2,] 2.162250e+05 1.537600e+04 8.836000e+03 5.580090e+05\n [3,] 1.365909e+08 8.242408e+06 8.518400e+04 3.626469e+07\n [4,] 2.441406e+08 7.481811e+10 1.211736e+07 2.459126e+10\n [5,] 8.869590e+13 2.853694e+13 1.000000e+00 1.601568e+12\n [6,] 2.685359e+14          Inf 1.178420e+15          Inf\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf           NA          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf\n\n, , 7\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 4.750000e+02 5.070000e+02 7.930000e+02 9.330000e+02 6.960000e+02\n [2,] 6.889000e+03 5.140890e+05 6.480250e+05 2.171560e+05 2.088490e+05\n [3,] 9.498621e+08 6.494619e+08 3.459484e+08 8.231288e+07 2.803221e+06\n [4,] 2.839824e+07 8.528910e+11 1.048212e+11 1.270274e+11 5.419374e+11\n [5,] 7.332861e+13 7.332861e+13 1.186367e+11 1.188138e+12 1.276090e+13\n [6,]          Inf          Inf 3.256600e+15          Inf 6.964479e+15\n [7,]          Inf 5.661611e+15          Inf          Inf          Inf\n [8,]          Inf 4.576794e+13          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf 5.904900e+04          Inf\n              [,6]         [,7]         [,8]         [,9]\n [1,] 3.410000e+02 9.850000e+02 7.310000e+02 6.080000e+02\n [2,] 2.116000e+03 2.246760e+05 7.242010e+05 3.457440e+05\n [3,] 4.052240e+08 5.062616e+08 9.261000e+06 8.385618e+08\n [4,] 6.978865e+11 4.032758e+09 2.441406e+08 1.752335e+11\n [5,] 7.210036e+13 3.707398e+09 3.682036e+12 1.721037e+12\n [6,] 1.126162e+12 1.061520e+12 4.218053e+10          Inf\n [7,]          Inf          Inf          Inf          Inf\n [8,]          Inf          Inf          Inf          Inf\n [9,]          Inf          Inf          Inf 4.605367e+15\n[10,]          Inf          Inf          Inf          Inf\n\n, , 8\n\n              [,1]         [,2]         [,3]         [,4]         [,5]\n [1,] 8.750000e+02 7.160000e+02 7.800000e+02 5.740000e+02 1.800000e+01\n [2,] 1.123600e+04 3.306250e+05 4.225000e+03 2.470090e+05 7.952400e+04\n [3,] 3.037133e+07 8.226570e+08 2.095846e+08 7.412176e+08 8.174650e+07\n [4,] 1.595395e+11 5.781838e+11 1.097199e+09 8.377783e+10 2.950326e+11\n [5,] 1.386579e+13 6.240321e+14 3.939041e+14 2.015243e+13 2.767573e+13\n [6,]          Inf 8.576612e+13          Inf 1.677722e+07          Inf\n [7,]          Inf 8.974107e+11 1.727095e+12          Inf          Inf\n [8,]          Inf          Inf 3.186448e+14          Inf          Inf\n [9,]          Inf          Inf          Inf          Inf          Inf\n[10,]          Inf          Inf          Inf          Inf          Inf\n              [,6]        [,7]         [,8]         [,9]\n [1,] 6.900000e+01         844 9.350000e+02 7.570000e+02\n [2,] 9.920160e+05      456976 2.371690e+05 9.120250e+05\n [3,] 7.461846e+07   584277056 4.000169e+07 4.436186e+07\n [4,] 9.762151e+11   252047376 4.587746e+11 1.075037e+10\n [5,] 1.242874e+14 66338290976 9.461968e+14 2.887174e+09\n [6,]          Inf         Inf 6.072366e+14 1.776133e+15\n [7,]          Inf         Inf          Inf          Inf\n [8,]          Inf         Inf          Inf          Inf\n [9,]          Inf         Inf          Inf          Inf\n[10,]          Inf         Inf          Inf          Inf\n\nbc.i(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE    NA FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.i(x, y, \"!=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7]  [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE   NA TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.i(x, y, \"&lt;\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE    NA FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.i(x, y, \"&gt;\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5]  [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7]  [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5]  [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7]  [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE   NA  TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3]  [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE FALSE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.i(x, y, \"&lt;=\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE    NA FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.i(x, y, \"&gt;=\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5]  [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5]  [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE  TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7]  [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE   NA  TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE  TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3]  [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE  TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE FALSE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE"
  },
  {
    "objectID": "man/bc.str.html",
    "href": "man/bc.str.html",
    "title": "bc.str",
    "section": "",
    "text": "The bc.str() function performs broadcasted string operations on pairs of arrays.  \n\n\n\nbc.str(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable atomic arrays of typee character.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported concatenation operators: +.  Supported relational operators: ==, !=.  Supported distance operators: levenshtein. \n\n\n\n\n\n\n\nFor concatenation operation:  A character array as a result of the broadcasted concatenation operation.   For relational operation:  A logical array as a result of the broadcasted relational comparison.   For distance operation:  An integer array as a result of the broadcasted distance measurement.  \n\n\n\n\nlibrary(\"broadcast\")\n\n\n# string concatenation:\nx &lt;- array(letters, c(10, 2, 1))\ny &lt;- array(letters, c(10,1,1))\nbc.str(x, y, \"+\")\n\n, , 1\n\n      [,1] [,2]\n [1,] \"aa\" \"ka\"\n [2,] \"bb\" \"lb\"\n [3,] \"cc\" \"mc\"\n [4,] \"dd\" \"nd\"\n [5,] \"ee\" \"oe\"\n [6,] \"ff\" \"pf\"\n [7,] \"gg\" \"qg\"\n [8,] \"hh\" \"rh\"\n [9,] \"ii\" \"si\"\n[10,] \"jj\" \"tj\"\n\n# string (in)equality:\nbc.str(array(letters), array(letters), \"==\")\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.str(array(letters), array(letters), \"!=\")\n\n [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[25] FALSE FALSE\n\n# string distance (Levenshtein):\nx &lt;- array(month.name, c(12, 1))\ny &lt;- array(month.abb, c(1, 12))\nout &lt;- bc.str(x, y, \"levenshtein\")\ndimnames(out) &lt;- list(month.name, month.abb)\nprint(out)\n\n          Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\nJanuary     4   7   5   6   5   5   5   6   7   7   7   7\nFebruary    7   5   6   7   6   7   7   7   7   8   8   7\nMarch       4   5   2   4   3   5   5   5   5   4   5   4\nApril       5   5   4   2   5   5   4   4   5   5   5   5\nMay         2   3   1   3   0   3   3   3   3   3   3   3\nJune        2   4   4   4   4   1   2   3   4   4   4   4\nJuly        3   4   4   4   3   2   1   3   4   4   4   4\nAugust      6   6   6   5   6   5   5   3   6   5   6   6\nSeptember   9   7   8   7   9   9   9   9   6   8   9   8\nOctober     7   6   6   6   7   7   7   7   6   4   6   6\nNovember    8   6   7   7   8   8   8   8   7   8   5   7\nDecember    8   6   7   7   8   8   8   8   7   7   8   5"
  },
  {
    "objectID": "man/bc.str.html#broadcasted-string-operations",
    "href": "man/bc.str.html#broadcasted-string-operations",
    "title": "bc.str",
    "section": "",
    "text": "The bc.str() function performs broadcasted string operations on pairs of arrays.  \n\n\n\nbc.str(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable atomic arrays of typee character.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported concatenation operators: +.  Supported relational operators: ==, !=.  Supported distance operators: levenshtein. \n\n\n\n\n\n\n\nFor concatenation operation:  A character array as a result of the broadcasted concatenation operation.   For relational operation:  A logical array as a result of the broadcasted relational comparison.   For distance operation:  An integer array as a result of the broadcasted distance measurement.  \n\n\n\n\nlibrary(\"broadcast\")\n\n\n# string concatenation:\nx &lt;- array(letters, c(10, 2, 1))\ny &lt;- array(letters, c(10,1,1))\nbc.str(x, y, \"+\")\n\n, , 1\n\n      [,1] [,2]\n [1,] \"aa\" \"ka\"\n [2,] \"bb\" \"lb\"\n [3,] \"cc\" \"mc\"\n [4,] \"dd\" \"nd\"\n [5,] \"ee\" \"oe\"\n [6,] \"ff\" \"pf\"\n [7,] \"gg\" \"qg\"\n [8,] \"hh\" \"rh\"\n [9,] \"ii\" \"si\"\n[10,] \"jj\" \"tj\"\n\n# string (in)equality:\nbc.str(array(letters), array(letters), \"==\")\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.str(array(letters), array(letters), \"!=\")\n\n [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[25] FALSE FALSE\n\n# string distance (Levenshtein):\nx &lt;- array(month.name, c(12, 1))\ny &lt;- array(month.abb, c(1, 12))\nout &lt;- bc.str(x, y, \"levenshtein\")\ndimnames(out) &lt;- list(month.name, month.abb)\nprint(out)\n\n          Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\nJanuary     4   7   5   6   5   5   5   6   7   7   7   7\nFebruary    7   5   6   7   6   7   7   7   7   8   8   7\nMarch       4   5   2   4   3   5   5   5   5   4   5   4\nApril       5   5   4   2   5   5   4   4   5   5   5   5\nMay         2   3   1   3   0   3   3   3   3   3   3   3\nJune        2   4   4   4   4   1   2   3   4   4   4   4\nJuly        3   4   4   4   3   2   1   3   4   4   4   4\nAugust      6   6   6   5   6   5   5   3   6   5   6   6\nSeptember   9   7   8   7   9   9   9   9   6   8   9   8\nOctober     7   6   6   6   7   7   7   7   6   4   6   6\nNovember    8   6   7   7   8   8   8   8   7   8   5   7\nDecember    8   6   7   7   8   8   8   8   7   7   8   5"
  },
  {
    "objectID": "man/bc_dim.html",
    "href": "man/bc_dim.html",
    "title": "bc_dim",
    "section": "",
    "text": "bc_dim(x, y) gives the dimensions an array would have, as the result of an broadcasted binary element-wise operation between 2 arrays x and y.\n\n\n\nbc_dim(x, y)\n\n\n\n\n\n\n\n\nx, y\n\n\nan atomic or recursive array.\n\n\n\n\n\n\n\nReturns the recycled array.\n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(TRUE, FALSE, NA), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\ndim(bc.b(x, y, \"&\")) == bc_dim(x, y)\n\n[1] TRUE TRUE TRUE\n\ndim(bc.b(x, y, \"|\")) == bc_dim(x, y)\n\n[1] TRUE TRUE TRUE"
  },
  {
    "objectID": "man/bc_dim.html#predict-broadcasted-dimensions",
    "href": "man/bc_dim.html#predict-broadcasted-dimensions",
    "title": "bc_dim",
    "section": "",
    "text": "bc_dim(x, y) gives the dimensions an array would have, as the result of an broadcasted binary element-wise operation between 2 arrays x and y.\n\n\n\nbc_dim(x, y)\n\n\n\n\n\n\n\n\nx, y\n\n\nan atomic or recursive array.\n\n\n\n\n\n\n\nReturns the recycled array.\n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(TRUE, FALSE, NA), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\ndim(bc.b(x, y, \"&\")) == bc_dim(x, y)\n\n[1] TRUE TRUE TRUE\n\ndim(bc.b(x, y, \"|\")) == bc_dim(x, y)\n\n[1] TRUE TRUE TRUE"
  },
  {
    "objectID": "man/bd.b.html",
    "href": "man/bd.b.html",
    "title": "bd.b",
    "section": "",
    "text": "The bc.b() function performs broadcasted Boolean operations on 2 logical (or 32bit integer) arrays.   Please note that these operations will treat the input as Boolean.  Therefore, something like bc.b(1, 2, “==”) returns TRUE, because both 1 and 2 are TRUE when cast as Boolean.  \n\n\n\nbc.b(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable logical (or 32bit integer) arrays.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported Boolean operators: &, |, xor, nand, ==, !=, &lt;, &gt;, &lt;=, &gt;=. \n\n\n\n\n\n\n\nA logical array as a result of the broadcasted Boolean operation.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(TRUE, FALSE, NA), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\nbc.b(x, y, \"&\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE    NA    NA  TRUE    NA  TRUE  TRUE  TRUE\n [2,]  TRUE    NA    NA    NA FALSE    NA FALSE FALSE    NA\n [3,]  TRUE    NA    NA FALSE  TRUE FALSE    NA FALSE FALSE\n [4,]  TRUE    NA    NA    NA FALSE    NA  TRUE  TRUE FALSE\n [5,]  TRUE    NA    NA    NA FALSE    NA    NA FALSE  TRUE\n [6,]    NA  TRUE  TRUE    NA FALSE FALSE FALSE  TRUE FALSE\n [7,]    NA    NA  TRUE    NA    NA  TRUE    NA FALSE FALSE\n [8,]  TRUE FALSE FALSE    NA    NA    NA FALSE FALSE    NA\n [9,]  TRUE    NA FALSE  TRUE    NA FALSE FALSE  TRUE FALSE\n[10,] FALSE  TRUE    NA  TRUE FALSE  TRUE FALSE  TRUE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE  TRUE    NA    NA    NA  TRUE    NA    NA\n [2,] FALSE  TRUE FALSE  TRUE FALSE    NA FALSE FALSE FALSE\n [3,]    NA FALSE FALSE    NA  TRUE  TRUE    NA FALSE  TRUE\n [4,] FALSE FALSE  TRUE    NA    NA    NA    NA  TRUE FALSE\n [5,]    NA  TRUE  TRUE FALSE FALSE    NA  TRUE FALSE  TRUE\n [6,]  TRUE FALSE    NA    NA    NA FALSE    NA    NA    NA\n [7,]  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE\n [8,] FALSE FALSE    NA FALSE    NA FALSE    NA  TRUE  TRUE\n [9,]  TRUE  TRUE  TRUE    NA    NA FALSE FALSE FALSE  TRUE\n[10,]    NA    NA    NA    NA  TRUE    NA    NA FALSE    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE  TRUE    NA    NA    NA    NA FALSE    NA\n [2,] FALSE    NA FALSE  TRUE  TRUE    NA FALSE    NA  TRUE\n [3,]    NA FALSE    NA FALSE  TRUE FALSE  TRUE FALSE  TRUE\n [4,]  TRUE  TRUE    NA FALSE  TRUE FALSE    NA FALSE  TRUE\n [5,]    NA  TRUE  TRUE FALSE FALSE    NA  TRUE FALSE  TRUE\n [6,]  TRUE    NA  TRUE  TRUE FALSE    NA  TRUE FALSE    NA\n [7,] FALSE FALSE  TRUE    NA FALSE FALSE FALSE    NA    NA\n [8,]  TRUE    NA    NA  TRUE    NA FALSE    NA  TRUE    NA\n [9,] FALSE FALSE    NA FALSE    NA    NA    NA  TRUE FALSE\n[10,]  TRUE  TRUE  TRUE    NA  TRUE FALSE    NA  TRUE    NA\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE FALSE    NA FALSE    NA    NA FALSE FALSE\n [2,] FALSE    NA    NA  TRUE FALSE FALSE  TRUE  TRUE  TRUE\n [3,]  TRUE    NA    NA  TRUE    NA FALSE    NA    NA    NA\n [4,]    NA  TRUE FALSE    NA    NA  TRUE FALSE    NA  TRUE\n [5,] FALSE    NA FALSE FALSE  TRUE  TRUE    NA    NA FALSE\n [6,]  TRUE  TRUE  TRUE    NA FALSE  TRUE    NA  TRUE  TRUE\n [7,]    NA  TRUE    NA FALSE FALSE  TRUE FALSE  TRUE  TRUE\n [8,]    NA  TRUE  TRUE FALSE FALSE    NA    NA FALSE FALSE\n [9,]  TRUE FALSE FALSE    NA    NA    NA FALSE FALSE  TRUE\n[10,] FALSE    NA  TRUE    NA FALSE FALSE  TRUE    NA    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE    NA  TRUE    NA FALSE    NA FALSE  TRUE\n [2,]    NA    NA  TRUE    NA  TRUE FALSE    NA  TRUE  TRUE\n [3,] FALSE  TRUE FALSE  TRUE FALSE  TRUE    NA  TRUE FALSE\n [4,]  TRUE  TRUE    NA FALSE  TRUE    NA    NA FALSE    NA\n [5,] FALSE    NA  TRUE    NA  TRUE FALSE  TRUE    NA    NA\n [6,]  TRUE    NA FALSE    NA    NA    NA  TRUE    NA FALSE\n [7,]  TRUE  TRUE FALSE    NA FALSE  TRUE    NA FALSE    NA\n [8,]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE    NA  TRUE\n [9,] FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE    NA    NA\n[10,] FALSE  TRUE  TRUE FALSE FALSE FALSE    NA    NA FALSE\n\n, , 6\n\n      [,1]  [,2]  [,3] [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] TRUE  TRUE    NA   NA FALSE    NA FALSE    NA  TRUE\n [2,]   NA  TRUE  TRUE TRUE    NA    NA  TRUE  TRUE  TRUE\n [3,] TRUE    NA  TRUE   NA    NA  TRUE    NA    NA FALSE\n [4,]   NA    NA    NA   NA    NA FALSE  TRUE FALSE  TRUE\n [5,] TRUE  TRUE    NA TRUE FALSE  TRUE FALSE    NA    NA\n [6,] TRUE FALSE FALSE   NA  TRUE    NA  TRUE  TRUE    NA\n [7,]   NA    NA  TRUE   NA  TRUE FALSE FALSE  TRUE    NA\n [8,]   NA  TRUE  TRUE TRUE FALSE FALSE  TRUE  TRUE FALSE\n [9,] TRUE    NA    NA TRUE FALSE FALSE  TRUE  TRUE    NA\n[10,] TRUE FALSE  TRUE   NA    NA    NA FALSE FALSE  TRUE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA FALSE  TRUE  TRUE  TRUE FALSE FALSE    NA\n [2,]  TRUE  TRUE    NA  TRUE    NA    NA FALSE  TRUE  TRUE\n [3,]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE    NA FALSE    NA\n [4,] FALSE FALSE  TRUE  TRUE FALSE    NA  TRUE  TRUE    NA\n [5,] FALSE FALSE  TRUE    NA    NA    NA    NA FALSE FALSE\n [6,] FALSE  TRUE    NA    NA FALSE FALSE  TRUE FALSE  TRUE\n [7,]  TRUE FALSE  TRUE  TRUE    NA FALSE FALSE    NA    NA\n [8,]  TRUE  TRUE FALSE  TRUE  TRUE    NA  TRUE    NA FALSE\n [9,]  TRUE  TRUE FALSE FALSE    NA  TRUE    NA    NA  TRUE\n[10,]  TRUE FALSE    NA  TRUE FALSE  TRUE FALSE  TRUE    NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE  TRUE FALSE    NA FALSE FALSE FALSE  TRUE\n [2,]    NA  TRUE FALSE FALSE FALSE    NA    NA    NA  TRUE\n [3,] FALSE FALSE  TRUE    NA  TRUE    NA  TRUE FALSE FALSE\n [4,]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE\n [5,] FALSE    NA    NA    NA    NA  TRUE  TRUE FALSE    NA\n [6,]    NA    NA    NA FALSE  TRUE  TRUE  TRUE    NA    NA\n [7,] FALSE    NA    NA FALSE    NA FALSE  TRUE    NA    NA\n [8,]    NA FALSE FALSE FALSE FALSE    NA FALSE  TRUE FALSE\n [9,]    NA FALSE    NA    NA  TRUE FALSE    NA    NA FALSE\n[10,]  TRUE  TRUE FALSE  TRUE  TRUE  TRUE    NA    NA FALSE\n\nbc.b(x, y, \"|\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.b(x, y, \"xor\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE    NA    NA FALSE    NA FALSE FALSE FALSE\n [2,] FALSE    NA    NA    NA  TRUE    NA  TRUE  TRUE    NA\n [3,] FALSE    NA    NA  TRUE FALSE  TRUE    NA  TRUE  TRUE\n [4,] FALSE    NA    NA    NA  TRUE    NA FALSE FALSE  TRUE\n [5,] FALSE    NA    NA    NA  TRUE    NA    NA  TRUE FALSE\n [6,]    NA FALSE FALSE    NA  TRUE  TRUE  TRUE FALSE  TRUE\n [7,]    NA    NA FALSE    NA    NA FALSE    NA  TRUE  TRUE\n [8,] FALSE  TRUE  TRUE    NA    NA    NA  TRUE  TRUE    NA\n [9,] FALSE    NA  TRUE FALSE    NA  TRUE  TRUE FALSE  TRUE\n[10,]  TRUE FALSE    NA FALSE  TRUE FALSE  TRUE FALSE  TRUE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE FALSE    NA    NA    NA FALSE    NA    NA\n [2,]  TRUE FALSE  TRUE FALSE  TRUE    NA  TRUE  TRUE  TRUE\n [3,]    NA  TRUE  TRUE    NA FALSE FALSE    NA  TRUE FALSE\n [4,]  TRUE  TRUE FALSE    NA    NA    NA    NA FALSE  TRUE\n [5,]    NA FALSE FALSE  TRUE  TRUE    NA FALSE  TRUE FALSE\n [6,] FALSE  TRUE    NA    NA    NA  TRUE    NA    NA    NA\n [7,] FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE\n [8,]  TRUE  TRUE    NA  TRUE    NA  TRUE    NA FALSE FALSE\n [9,] FALSE FALSE FALSE    NA    NA  TRUE  TRUE  TRUE FALSE\n[10,]    NA    NA    NA    NA FALSE    NA    NA  TRUE    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5] [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE FALSE FALSE    NA    NA   NA    NA  TRUE    NA\n [2,]  TRUE    NA  TRUE FALSE FALSE   NA  TRUE    NA FALSE\n [3,]    NA  TRUE    NA  TRUE FALSE TRUE FALSE  TRUE FALSE\n [4,] FALSE FALSE    NA  TRUE FALSE TRUE    NA  TRUE FALSE\n [5,]    NA FALSE FALSE  TRUE  TRUE   NA FALSE  TRUE FALSE\n [6,] FALSE    NA FALSE FALSE  TRUE   NA FALSE  TRUE    NA\n [7,]  TRUE  TRUE FALSE    NA  TRUE TRUE  TRUE    NA    NA\n [8,] FALSE    NA    NA FALSE    NA TRUE    NA FALSE    NA\n [9,]  TRUE  TRUE    NA  TRUE    NA   NA    NA FALSE  TRUE\n[10,] FALSE FALSE FALSE    NA FALSE TRUE    NA FALSE    NA\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE  TRUE    NA  TRUE    NA    NA  TRUE  TRUE\n [2,]  TRUE    NA    NA FALSE  TRUE  TRUE FALSE FALSE FALSE\n [3,] FALSE    NA    NA FALSE    NA  TRUE    NA    NA    NA\n [4,]    NA FALSE  TRUE    NA    NA FALSE  TRUE    NA FALSE\n [5,]  TRUE    NA  TRUE  TRUE FALSE FALSE    NA    NA  TRUE\n [6,] FALSE FALSE FALSE    NA  TRUE FALSE    NA FALSE FALSE\n [7,]    NA FALSE    NA  TRUE  TRUE FALSE  TRUE FALSE FALSE\n [8,]    NA FALSE FALSE  TRUE  TRUE    NA    NA  TRUE  TRUE\n [9,] FALSE  TRUE  TRUE    NA    NA    NA  TRUE  TRUE FALSE\n[10,]  TRUE    NA FALSE    NA  TRUE  TRUE FALSE    NA    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE    NA  TRUE    NA  TRUE FALSE\n [2,]    NA    NA FALSE    NA FALSE  TRUE    NA FALSE FALSE\n [3,]  TRUE FALSE  TRUE FALSE  TRUE FALSE    NA FALSE  TRUE\n [4,] FALSE FALSE    NA  TRUE FALSE    NA    NA  TRUE    NA\n [5,]  TRUE    NA FALSE    NA FALSE  TRUE FALSE    NA    NA\n [6,] FALSE    NA  TRUE    NA    NA    NA FALSE    NA  TRUE\n [7,] FALSE FALSE  TRUE    NA  TRUE FALSE    NA  TRUE    NA\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE    NA FALSE\n [9,]  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE    NA    NA\n[10,]  TRUE FALSE FALSE  TRUE  TRUE  TRUE    NA    NA  TRUE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE    NA    NA  TRUE    NA  TRUE    NA FALSE\n [2,]    NA FALSE FALSE FALSE    NA    NA FALSE FALSE FALSE\n [3,] FALSE    NA FALSE    NA    NA FALSE    NA    NA  TRUE\n [4,]    NA    NA    NA    NA    NA  TRUE FALSE  TRUE FALSE\n [5,] FALSE FALSE    NA FALSE  TRUE FALSE  TRUE    NA    NA\n [6,] FALSE  TRUE  TRUE    NA FALSE    NA FALSE FALSE    NA\n [7,]    NA    NA FALSE    NA FALSE  TRUE  TRUE FALSE    NA\n [8,]    NA FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE\n [9,] FALSE    NA    NA FALSE  TRUE  TRUE FALSE FALSE    NA\n[10,] FALSE  TRUE FALSE    NA    NA    NA  TRUE  TRUE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA  TRUE FALSE FALSE FALSE  TRUE  TRUE    NA\n [2,] FALSE FALSE    NA FALSE    NA    NA  TRUE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE    NA  TRUE    NA\n [4,]  TRUE  TRUE FALSE FALSE  TRUE    NA FALSE FALSE    NA\n [5,]  TRUE  TRUE FALSE    NA    NA    NA    NA  TRUE  TRUE\n [6,]  TRUE FALSE    NA    NA  TRUE  TRUE FALSE  TRUE FALSE\n [7,] FALSE  TRUE FALSE FALSE    NA  TRUE  TRUE    NA    NA\n [8,] FALSE FALSE  TRUE FALSE FALSE    NA FALSE    NA  TRUE\n [9,] FALSE FALSE  TRUE  TRUE    NA FALSE    NA    NA FALSE\n[10,] FALSE  TRUE    NA FALSE  TRUE FALSE  TRUE FALSE    NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE FALSE  TRUE    NA  TRUE  TRUE  TRUE FALSE\n [2,]    NA FALSE  TRUE  TRUE  TRUE    NA    NA    NA FALSE\n [3,]  TRUE  TRUE FALSE    NA FALSE    NA FALSE  TRUE  TRUE\n [4,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE\n [5,]  TRUE    NA    NA    NA    NA FALSE FALSE  TRUE    NA\n [6,]    NA    NA    NA  TRUE FALSE FALSE FALSE    NA    NA\n [7,]  TRUE    NA    NA  TRUE    NA  TRUE FALSE    NA    NA\n [8,]    NA  TRUE  TRUE  TRUE  TRUE    NA  TRUE FALSE  TRUE\n [9,]    NA  TRUE    NA    NA FALSE  TRUE    NA    NA  TRUE\n[10,] FALSE FALSE  TRUE FALSE FALSE FALSE    NA    NA  TRUE\n\nbc.b(x, y, \"nand\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.b(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE    NA    NA  TRUE    NA  TRUE  TRUE  TRUE\n [2,]  TRUE    NA    NA    NA FALSE    NA FALSE FALSE    NA\n [3,]  TRUE    NA    NA FALSE  TRUE FALSE    NA FALSE FALSE\n [4,]  TRUE    NA    NA    NA FALSE    NA  TRUE  TRUE FALSE\n [5,]  TRUE    NA    NA    NA FALSE    NA    NA FALSE  TRUE\n [6,]    NA  TRUE  TRUE    NA FALSE FALSE FALSE  TRUE FALSE\n [7,]    NA    NA  TRUE    NA    NA  TRUE    NA FALSE FALSE\n [8,]  TRUE FALSE FALSE    NA    NA    NA FALSE FALSE    NA\n [9,]  TRUE    NA FALSE  TRUE    NA FALSE FALSE  TRUE FALSE\n[10,] FALSE  TRUE    NA  TRUE FALSE  TRUE FALSE  TRUE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE  TRUE    NA    NA    NA  TRUE    NA    NA\n [2,] FALSE  TRUE FALSE  TRUE FALSE    NA FALSE FALSE FALSE\n [3,]    NA FALSE FALSE    NA  TRUE  TRUE    NA FALSE  TRUE\n [4,] FALSE FALSE  TRUE    NA    NA    NA    NA  TRUE FALSE\n [5,]    NA  TRUE  TRUE FALSE FALSE    NA  TRUE FALSE  TRUE\n [6,]  TRUE FALSE    NA    NA    NA FALSE    NA    NA    NA\n [7,]  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE\n [8,] FALSE FALSE    NA FALSE    NA FALSE    NA  TRUE  TRUE\n [9,]  TRUE  TRUE  TRUE    NA    NA FALSE FALSE FALSE  TRUE\n[10,]    NA    NA    NA    NA  TRUE    NA    NA FALSE    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE  TRUE    NA    NA    NA    NA FALSE    NA\n [2,] FALSE    NA FALSE  TRUE  TRUE    NA FALSE    NA  TRUE\n [3,]    NA FALSE    NA FALSE  TRUE FALSE  TRUE FALSE  TRUE\n [4,]  TRUE  TRUE    NA FALSE  TRUE FALSE    NA FALSE  TRUE\n [5,]    NA  TRUE  TRUE FALSE FALSE    NA  TRUE FALSE  TRUE\n [6,]  TRUE    NA  TRUE  TRUE FALSE    NA  TRUE FALSE    NA\n [7,] FALSE FALSE  TRUE    NA FALSE FALSE FALSE    NA    NA\n [8,]  TRUE    NA    NA  TRUE    NA FALSE    NA  TRUE    NA\n [9,] FALSE FALSE    NA FALSE    NA    NA    NA  TRUE FALSE\n[10,]  TRUE  TRUE  TRUE    NA  TRUE FALSE    NA  TRUE    NA\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE FALSE    NA FALSE    NA    NA FALSE FALSE\n [2,] FALSE    NA    NA  TRUE FALSE FALSE  TRUE  TRUE  TRUE\n [3,]  TRUE    NA    NA  TRUE    NA FALSE    NA    NA    NA\n [4,]    NA  TRUE FALSE    NA    NA  TRUE FALSE    NA  TRUE\n [5,] FALSE    NA FALSE FALSE  TRUE  TRUE    NA    NA FALSE\n [6,]  TRUE  TRUE  TRUE    NA FALSE  TRUE    NA  TRUE  TRUE\n [7,]    NA  TRUE    NA FALSE FALSE  TRUE FALSE  TRUE  TRUE\n [8,]    NA  TRUE  TRUE FALSE FALSE    NA    NA FALSE FALSE\n [9,]  TRUE FALSE FALSE    NA    NA    NA FALSE FALSE  TRUE\n[10,] FALSE    NA  TRUE    NA FALSE FALSE  TRUE    NA    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE    NA  TRUE    NA FALSE    NA FALSE  TRUE\n [2,]    NA    NA  TRUE    NA  TRUE FALSE    NA  TRUE  TRUE\n [3,] FALSE  TRUE FALSE  TRUE FALSE  TRUE    NA  TRUE FALSE\n [4,]  TRUE  TRUE    NA FALSE  TRUE    NA    NA FALSE    NA\n [5,] FALSE    NA  TRUE    NA  TRUE FALSE  TRUE    NA    NA\n [6,]  TRUE    NA FALSE    NA    NA    NA  TRUE    NA FALSE\n [7,]  TRUE  TRUE FALSE    NA FALSE  TRUE    NA FALSE    NA\n [8,]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE    NA  TRUE\n [9,] FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE    NA    NA\n[10,] FALSE  TRUE  TRUE FALSE FALSE FALSE    NA    NA FALSE\n\n, , 6\n\n      [,1]  [,2]  [,3] [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] TRUE  TRUE    NA   NA FALSE    NA FALSE    NA  TRUE\n [2,]   NA  TRUE  TRUE TRUE    NA    NA  TRUE  TRUE  TRUE\n [3,] TRUE    NA  TRUE   NA    NA  TRUE    NA    NA FALSE\n [4,]   NA    NA    NA   NA    NA FALSE  TRUE FALSE  TRUE\n [5,] TRUE  TRUE    NA TRUE FALSE  TRUE FALSE    NA    NA\n [6,] TRUE FALSE FALSE   NA  TRUE    NA  TRUE  TRUE    NA\n [7,]   NA    NA  TRUE   NA  TRUE FALSE FALSE  TRUE    NA\n [8,]   NA  TRUE  TRUE TRUE FALSE FALSE  TRUE  TRUE FALSE\n [9,] TRUE    NA    NA TRUE FALSE FALSE  TRUE  TRUE    NA\n[10,] TRUE FALSE  TRUE   NA    NA    NA FALSE FALSE  TRUE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA FALSE  TRUE  TRUE  TRUE FALSE FALSE    NA\n [2,]  TRUE  TRUE    NA  TRUE    NA    NA FALSE  TRUE  TRUE\n [3,]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE    NA FALSE    NA\n [4,] FALSE FALSE  TRUE  TRUE FALSE    NA  TRUE  TRUE    NA\n [5,] FALSE FALSE  TRUE    NA    NA    NA    NA FALSE FALSE\n [6,] FALSE  TRUE    NA    NA FALSE FALSE  TRUE FALSE  TRUE\n [7,]  TRUE FALSE  TRUE  TRUE    NA FALSE FALSE    NA    NA\n [8,]  TRUE  TRUE FALSE  TRUE  TRUE    NA  TRUE    NA FALSE\n [9,]  TRUE  TRUE FALSE FALSE    NA  TRUE    NA    NA  TRUE\n[10,]  TRUE FALSE    NA  TRUE FALSE  TRUE FALSE  TRUE    NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE  TRUE FALSE    NA FALSE FALSE FALSE  TRUE\n [2,]    NA  TRUE FALSE FALSE FALSE    NA    NA    NA  TRUE\n [3,] FALSE FALSE  TRUE    NA  TRUE    NA  TRUE FALSE FALSE\n [4,]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE\n [5,] FALSE    NA    NA    NA    NA  TRUE  TRUE FALSE    NA\n [6,]    NA    NA    NA FALSE  TRUE  TRUE  TRUE    NA    NA\n [7,] FALSE    NA    NA FALSE    NA FALSE  TRUE    NA    NA\n [8,]    NA FALSE FALSE FALSE FALSE    NA FALSE  TRUE FALSE\n [9,]    NA FALSE    NA    NA  TRUE FALSE    NA    NA FALSE\n[10,]  TRUE  TRUE FALSE  TRUE  TRUE  TRUE    NA    NA FALSE\n\nbc.b(x, y, \"!=\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE    NA    NA FALSE    NA FALSE FALSE FALSE\n [2,] FALSE    NA    NA    NA  TRUE    NA  TRUE  TRUE    NA\n [3,] FALSE    NA    NA  TRUE FALSE  TRUE    NA  TRUE  TRUE\n [4,] FALSE    NA    NA    NA  TRUE    NA FALSE FALSE  TRUE\n [5,] FALSE    NA    NA    NA  TRUE    NA    NA  TRUE FALSE\n [6,]    NA FALSE FALSE    NA  TRUE  TRUE  TRUE FALSE  TRUE\n [7,]    NA    NA FALSE    NA    NA FALSE    NA  TRUE  TRUE\n [8,] FALSE  TRUE  TRUE    NA    NA    NA  TRUE  TRUE    NA\n [9,] FALSE    NA  TRUE FALSE    NA  TRUE  TRUE FALSE  TRUE\n[10,]  TRUE FALSE    NA FALSE  TRUE FALSE  TRUE FALSE  TRUE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE FALSE    NA    NA    NA FALSE    NA    NA\n [2,]  TRUE FALSE  TRUE FALSE  TRUE    NA  TRUE  TRUE  TRUE\n [3,]    NA  TRUE  TRUE    NA FALSE FALSE    NA  TRUE FALSE\n [4,]  TRUE  TRUE FALSE    NA    NA    NA    NA FALSE  TRUE\n [5,]    NA FALSE FALSE  TRUE  TRUE    NA FALSE  TRUE FALSE\n [6,] FALSE  TRUE    NA    NA    NA  TRUE    NA    NA    NA\n [7,] FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE\n [8,]  TRUE  TRUE    NA  TRUE    NA  TRUE    NA FALSE FALSE\n [9,] FALSE FALSE FALSE    NA    NA  TRUE  TRUE  TRUE FALSE\n[10,]    NA    NA    NA    NA FALSE    NA    NA  TRUE    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5] [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE FALSE FALSE    NA    NA   NA    NA  TRUE    NA\n [2,]  TRUE    NA  TRUE FALSE FALSE   NA  TRUE    NA FALSE\n [3,]    NA  TRUE    NA  TRUE FALSE TRUE FALSE  TRUE FALSE\n [4,] FALSE FALSE    NA  TRUE FALSE TRUE    NA  TRUE FALSE\n [5,]    NA FALSE FALSE  TRUE  TRUE   NA FALSE  TRUE FALSE\n [6,] FALSE    NA FALSE FALSE  TRUE   NA FALSE  TRUE    NA\n [7,]  TRUE  TRUE FALSE    NA  TRUE TRUE  TRUE    NA    NA\n [8,] FALSE    NA    NA FALSE    NA TRUE    NA FALSE    NA\n [9,]  TRUE  TRUE    NA  TRUE    NA   NA    NA FALSE  TRUE\n[10,] FALSE FALSE FALSE    NA FALSE TRUE    NA FALSE    NA\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE  TRUE    NA  TRUE    NA    NA  TRUE  TRUE\n [2,]  TRUE    NA    NA FALSE  TRUE  TRUE FALSE FALSE FALSE\n [3,] FALSE    NA    NA FALSE    NA  TRUE    NA    NA    NA\n [4,]    NA FALSE  TRUE    NA    NA FALSE  TRUE    NA FALSE\n [5,]  TRUE    NA  TRUE  TRUE FALSE FALSE    NA    NA  TRUE\n [6,] FALSE FALSE FALSE    NA  TRUE FALSE    NA FALSE FALSE\n [7,]    NA FALSE    NA  TRUE  TRUE FALSE  TRUE FALSE FALSE\n [8,]    NA FALSE FALSE  TRUE  TRUE    NA    NA  TRUE  TRUE\n [9,] FALSE  TRUE  TRUE    NA    NA    NA  TRUE  TRUE FALSE\n[10,]  TRUE    NA FALSE    NA  TRUE  TRUE FALSE    NA    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE    NA  TRUE    NA  TRUE FALSE\n [2,]    NA    NA FALSE    NA FALSE  TRUE    NA FALSE FALSE\n [3,]  TRUE FALSE  TRUE FALSE  TRUE FALSE    NA FALSE  TRUE\n [4,] FALSE FALSE    NA  TRUE FALSE    NA    NA  TRUE    NA\n [5,]  TRUE    NA FALSE    NA FALSE  TRUE FALSE    NA    NA\n [6,] FALSE    NA  TRUE    NA    NA    NA FALSE    NA  TRUE\n [7,] FALSE FALSE  TRUE    NA  TRUE FALSE    NA  TRUE    NA\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE    NA FALSE\n [9,]  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE    NA    NA\n[10,]  TRUE FALSE FALSE  TRUE  TRUE  TRUE    NA    NA  TRUE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE    NA    NA  TRUE    NA  TRUE    NA FALSE\n [2,]    NA FALSE FALSE FALSE    NA    NA FALSE FALSE FALSE\n [3,] FALSE    NA FALSE    NA    NA FALSE    NA    NA  TRUE\n [4,]    NA    NA    NA    NA    NA  TRUE FALSE  TRUE FALSE\n [5,] FALSE FALSE    NA FALSE  TRUE FALSE  TRUE    NA    NA\n [6,] FALSE  TRUE  TRUE    NA FALSE    NA FALSE FALSE    NA\n [7,]    NA    NA FALSE    NA FALSE  TRUE  TRUE FALSE    NA\n [8,]    NA FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE\n [9,] FALSE    NA    NA FALSE  TRUE  TRUE FALSE FALSE    NA\n[10,] FALSE  TRUE FALSE    NA    NA    NA  TRUE  TRUE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA  TRUE FALSE FALSE FALSE  TRUE  TRUE    NA\n [2,] FALSE FALSE    NA FALSE    NA    NA  TRUE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE    NA  TRUE    NA\n [4,]  TRUE  TRUE FALSE FALSE  TRUE    NA FALSE FALSE    NA\n [5,]  TRUE  TRUE FALSE    NA    NA    NA    NA  TRUE  TRUE\n [6,]  TRUE FALSE    NA    NA  TRUE  TRUE FALSE  TRUE FALSE\n [7,] FALSE  TRUE FALSE FALSE    NA  TRUE  TRUE    NA    NA\n [8,] FALSE FALSE  TRUE FALSE FALSE    NA FALSE    NA  TRUE\n [9,] FALSE FALSE  TRUE  TRUE    NA FALSE    NA    NA FALSE\n[10,] FALSE  TRUE    NA FALSE  TRUE FALSE  TRUE FALSE    NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE FALSE  TRUE    NA  TRUE  TRUE  TRUE FALSE\n [2,]    NA FALSE  TRUE  TRUE  TRUE    NA    NA    NA FALSE\n [3,]  TRUE  TRUE FALSE    NA FALSE    NA FALSE  TRUE  TRUE\n [4,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE\n [5,]  TRUE    NA    NA    NA    NA FALSE FALSE  TRUE    NA\n [6,]    NA    NA    NA  TRUE FALSE FALSE FALSE    NA    NA\n [7,]  TRUE    NA    NA  TRUE    NA  TRUE FALSE    NA    NA\n [8,]    NA  TRUE  TRUE  TRUE  TRUE    NA  TRUE FALSE  TRUE\n [9,]    NA  TRUE    NA    NA FALSE  TRUE    NA    NA  TRUE\n[10,] FALSE FALSE  TRUE FALSE FALSE FALSE    NA    NA  TRUE"
  },
  {
    "objectID": "man/bd.b.html#broadcasted-boolean-operations",
    "href": "man/bd.b.html#broadcasted-boolean-operations",
    "title": "bd.b",
    "section": "",
    "text": "The bc.b() function performs broadcasted Boolean operations on 2 logical (or 32bit integer) arrays.   Please note that these operations will treat the input as Boolean.  Therefore, something like bc.b(1, 2, “==”) returns TRUE, because both 1 and 2 are TRUE when cast as Boolean.  \n\n\n\nbc.b(x, y, op)\n\n\n\n\n\n\n\n\nx, y\n\n\nconformable logical (or 32bit integer) arrays.\n\n\n\n\nop\n\n\na single string, giving the operator.  Supported Boolean operators: &, |, xor, nand, ==, !=, &lt;, &gt;, &lt;=, &gt;=. \n\n\n\n\n\n\n\nA logical array as a result of the broadcasted Boolean operation.  \n\n\n\n\nlibrary(\"broadcast\")\n\nx.dim &lt;- c(10:8)\nx.len &lt;- prod(x.dim)\nx.data &lt;- sample(c(TRUE, FALSE, NA), x.len, TRUE)\nx &lt;- array(x.data, x.dim)\ny &lt;- array(1:50, c(10,1,1))\n\nbc.b(x, y, \"&\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE    NA    NA  TRUE    NA  TRUE  TRUE  TRUE\n [2,]  TRUE    NA    NA    NA FALSE    NA FALSE FALSE    NA\n [3,]  TRUE    NA    NA FALSE  TRUE FALSE    NA FALSE FALSE\n [4,]  TRUE    NA    NA    NA FALSE    NA  TRUE  TRUE FALSE\n [5,]  TRUE    NA    NA    NA FALSE    NA    NA FALSE  TRUE\n [6,]    NA  TRUE  TRUE    NA FALSE FALSE FALSE  TRUE FALSE\n [7,]    NA    NA  TRUE    NA    NA  TRUE    NA FALSE FALSE\n [8,]  TRUE FALSE FALSE    NA    NA    NA FALSE FALSE    NA\n [9,]  TRUE    NA FALSE  TRUE    NA FALSE FALSE  TRUE FALSE\n[10,] FALSE  TRUE    NA  TRUE FALSE  TRUE FALSE  TRUE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE  TRUE    NA    NA    NA  TRUE    NA    NA\n [2,] FALSE  TRUE FALSE  TRUE FALSE    NA FALSE FALSE FALSE\n [3,]    NA FALSE FALSE    NA  TRUE  TRUE    NA FALSE  TRUE\n [4,] FALSE FALSE  TRUE    NA    NA    NA    NA  TRUE FALSE\n [5,]    NA  TRUE  TRUE FALSE FALSE    NA  TRUE FALSE  TRUE\n [6,]  TRUE FALSE    NA    NA    NA FALSE    NA    NA    NA\n [7,]  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE\n [8,] FALSE FALSE    NA FALSE    NA FALSE    NA  TRUE  TRUE\n [9,]  TRUE  TRUE  TRUE    NA    NA FALSE FALSE FALSE  TRUE\n[10,]    NA    NA    NA    NA  TRUE    NA    NA FALSE    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE  TRUE    NA    NA    NA    NA FALSE    NA\n [2,] FALSE    NA FALSE  TRUE  TRUE    NA FALSE    NA  TRUE\n [3,]    NA FALSE    NA FALSE  TRUE FALSE  TRUE FALSE  TRUE\n [4,]  TRUE  TRUE    NA FALSE  TRUE FALSE    NA FALSE  TRUE\n [5,]    NA  TRUE  TRUE FALSE FALSE    NA  TRUE FALSE  TRUE\n [6,]  TRUE    NA  TRUE  TRUE FALSE    NA  TRUE FALSE    NA\n [7,] FALSE FALSE  TRUE    NA FALSE FALSE FALSE    NA    NA\n [8,]  TRUE    NA    NA  TRUE    NA FALSE    NA  TRUE    NA\n [9,] FALSE FALSE    NA FALSE    NA    NA    NA  TRUE FALSE\n[10,]  TRUE  TRUE  TRUE    NA  TRUE FALSE    NA  TRUE    NA\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE FALSE    NA FALSE    NA    NA FALSE FALSE\n [2,] FALSE    NA    NA  TRUE FALSE FALSE  TRUE  TRUE  TRUE\n [3,]  TRUE    NA    NA  TRUE    NA FALSE    NA    NA    NA\n [4,]    NA  TRUE FALSE    NA    NA  TRUE FALSE    NA  TRUE\n [5,] FALSE    NA FALSE FALSE  TRUE  TRUE    NA    NA FALSE\n [6,]  TRUE  TRUE  TRUE    NA FALSE  TRUE    NA  TRUE  TRUE\n [7,]    NA  TRUE    NA FALSE FALSE  TRUE FALSE  TRUE  TRUE\n [8,]    NA  TRUE  TRUE FALSE FALSE    NA    NA FALSE FALSE\n [9,]  TRUE FALSE FALSE    NA    NA    NA FALSE FALSE  TRUE\n[10,] FALSE    NA  TRUE    NA FALSE FALSE  TRUE    NA    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE    NA  TRUE    NA FALSE    NA FALSE  TRUE\n [2,]    NA    NA  TRUE    NA  TRUE FALSE    NA  TRUE  TRUE\n [3,] FALSE  TRUE FALSE  TRUE FALSE  TRUE    NA  TRUE FALSE\n [4,]  TRUE  TRUE    NA FALSE  TRUE    NA    NA FALSE    NA\n [5,] FALSE    NA  TRUE    NA  TRUE FALSE  TRUE    NA    NA\n [6,]  TRUE    NA FALSE    NA    NA    NA  TRUE    NA FALSE\n [7,]  TRUE  TRUE FALSE    NA FALSE  TRUE    NA FALSE    NA\n [8,]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE    NA  TRUE\n [9,] FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE    NA    NA\n[10,] FALSE  TRUE  TRUE FALSE FALSE FALSE    NA    NA FALSE\n\n, , 6\n\n      [,1]  [,2]  [,3] [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] TRUE  TRUE    NA   NA FALSE    NA FALSE    NA  TRUE\n [2,]   NA  TRUE  TRUE TRUE    NA    NA  TRUE  TRUE  TRUE\n [3,] TRUE    NA  TRUE   NA    NA  TRUE    NA    NA FALSE\n [4,]   NA    NA    NA   NA    NA FALSE  TRUE FALSE  TRUE\n [5,] TRUE  TRUE    NA TRUE FALSE  TRUE FALSE    NA    NA\n [6,] TRUE FALSE FALSE   NA  TRUE    NA  TRUE  TRUE    NA\n [7,]   NA    NA  TRUE   NA  TRUE FALSE FALSE  TRUE    NA\n [8,]   NA  TRUE  TRUE TRUE FALSE FALSE  TRUE  TRUE FALSE\n [9,] TRUE    NA    NA TRUE FALSE FALSE  TRUE  TRUE    NA\n[10,] TRUE FALSE  TRUE   NA    NA    NA FALSE FALSE  TRUE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA FALSE  TRUE  TRUE  TRUE FALSE FALSE    NA\n [2,]  TRUE  TRUE    NA  TRUE    NA    NA FALSE  TRUE  TRUE\n [3,]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE    NA FALSE    NA\n [4,] FALSE FALSE  TRUE  TRUE FALSE    NA  TRUE  TRUE    NA\n [5,] FALSE FALSE  TRUE    NA    NA    NA    NA FALSE FALSE\n [6,] FALSE  TRUE    NA    NA FALSE FALSE  TRUE FALSE  TRUE\n [7,]  TRUE FALSE  TRUE  TRUE    NA FALSE FALSE    NA    NA\n [8,]  TRUE  TRUE FALSE  TRUE  TRUE    NA  TRUE    NA FALSE\n [9,]  TRUE  TRUE FALSE FALSE    NA  TRUE    NA    NA  TRUE\n[10,]  TRUE FALSE    NA  TRUE FALSE  TRUE FALSE  TRUE    NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE  TRUE FALSE    NA FALSE FALSE FALSE  TRUE\n [2,]    NA  TRUE FALSE FALSE FALSE    NA    NA    NA  TRUE\n [3,] FALSE FALSE  TRUE    NA  TRUE    NA  TRUE FALSE FALSE\n [4,]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE\n [5,] FALSE    NA    NA    NA    NA  TRUE  TRUE FALSE    NA\n [6,]    NA    NA    NA FALSE  TRUE  TRUE  TRUE    NA    NA\n [7,] FALSE    NA    NA FALSE    NA FALSE  TRUE    NA    NA\n [8,]    NA FALSE FALSE FALSE FALSE    NA FALSE  TRUE FALSE\n [9,]    NA FALSE    NA    NA  TRUE FALSE    NA    NA FALSE\n[10,]  TRUE  TRUE FALSE  TRUE  TRUE  TRUE    NA    NA FALSE\n\nbc.b(x, y, \"|\")\n\n, , 1\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 2\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 3\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 4\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 5\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 6\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 7\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n, , 8\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]\n [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [3,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [4,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [5,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [6,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [7,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [8,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[10,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nbc.b(x, y, \"xor\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE    NA    NA FALSE    NA FALSE FALSE FALSE\n [2,] FALSE    NA    NA    NA  TRUE    NA  TRUE  TRUE    NA\n [3,] FALSE    NA    NA  TRUE FALSE  TRUE    NA  TRUE  TRUE\n [4,] FALSE    NA    NA    NA  TRUE    NA FALSE FALSE  TRUE\n [5,] FALSE    NA    NA    NA  TRUE    NA    NA  TRUE FALSE\n [6,]    NA FALSE FALSE    NA  TRUE  TRUE  TRUE FALSE  TRUE\n [7,]    NA    NA FALSE    NA    NA FALSE    NA  TRUE  TRUE\n [8,] FALSE  TRUE  TRUE    NA    NA    NA  TRUE  TRUE    NA\n [9,] FALSE    NA  TRUE FALSE    NA  TRUE  TRUE FALSE  TRUE\n[10,]  TRUE FALSE    NA FALSE  TRUE FALSE  TRUE FALSE  TRUE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE FALSE    NA    NA    NA FALSE    NA    NA\n [2,]  TRUE FALSE  TRUE FALSE  TRUE    NA  TRUE  TRUE  TRUE\n [3,]    NA  TRUE  TRUE    NA FALSE FALSE    NA  TRUE FALSE\n [4,]  TRUE  TRUE FALSE    NA    NA    NA    NA FALSE  TRUE\n [5,]    NA FALSE FALSE  TRUE  TRUE    NA FALSE  TRUE FALSE\n [6,] FALSE  TRUE    NA    NA    NA  TRUE    NA    NA    NA\n [7,] FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE\n [8,]  TRUE  TRUE    NA  TRUE    NA  TRUE    NA FALSE FALSE\n [9,] FALSE FALSE FALSE    NA    NA  TRUE  TRUE  TRUE FALSE\n[10,]    NA    NA    NA    NA FALSE    NA    NA  TRUE    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5] [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE FALSE FALSE    NA    NA   NA    NA  TRUE    NA\n [2,]  TRUE    NA  TRUE FALSE FALSE   NA  TRUE    NA FALSE\n [3,]    NA  TRUE    NA  TRUE FALSE TRUE FALSE  TRUE FALSE\n [4,] FALSE FALSE    NA  TRUE FALSE TRUE    NA  TRUE FALSE\n [5,]    NA FALSE FALSE  TRUE  TRUE   NA FALSE  TRUE FALSE\n [6,] FALSE    NA FALSE FALSE  TRUE   NA FALSE  TRUE    NA\n [7,]  TRUE  TRUE FALSE    NA  TRUE TRUE  TRUE    NA    NA\n [8,] FALSE    NA    NA FALSE    NA TRUE    NA FALSE    NA\n [9,]  TRUE  TRUE    NA  TRUE    NA   NA    NA FALSE  TRUE\n[10,] FALSE FALSE FALSE    NA FALSE TRUE    NA FALSE    NA\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE  TRUE    NA  TRUE    NA    NA  TRUE  TRUE\n [2,]  TRUE    NA    NA FALSE  TRUE  TRUE FALSE FALSE FALSE\n [3,] FALSE    NA    NA FALSE    NA  TRUE    NA    NA    NA\n [4,]    NA FALSE  TRUE    NA    NA FALSE  TRUE    NA FALSE\n [5,]  TRUE    NA  TRUE  TRUE FALSE FALSE    NA    NA  TRUE\n [6,] FALSE FALSE FALSE    NA  TRUE FALSE    NA FALSE FALSE\n [7,]    NA FALSE    NA  TRUE  TRUE FALSE  TRUE FALSE FALSE\n [8,]    NA FALSE FALSE  TRUE  TRUE    NA    NA  TRUE  TRUE\n [9,] FALSE  TRUE  TRUE    NA    NA    NA  TRUE  TRUE FALSE\n[10,]  TRUE    NA FALSE    NA  TRUE  TRUE FALSE    NA    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE    NA  TRUE    NA  TRUE FALSE\n [2,]    NA    NA FALSE    NA FALSE  TRUE    NA FALSE FALSE\n [3,]  TRUE FALSE  TRUE FALSE  TRUE FALSE    NA FALSE  TRUE\n [4,] FALSE FALSE    NA  TRUE FALSE    NA    NA  TRUE    NA\n [5,]  TRUE    NA FALSE    NA FALSE  TRUE FALSE    NA    NA\n [6,] FALSE    NA  TRUE    NA    NA    NA FALSE    NA  TRUE\n [7,] FALSE FALSE  TRUE    NA  TRUE FALSE    NA  TRUE    NA\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE    NA FALSE\n [9,]  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE    NA    NA\n[10,]  TRUE FALSE FALSE  TRUE  TRUE  TRUE    NA    NA  TRUE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE    NA    NA  TRUE    NA  TRUE    NA FALSE\n [2,]    NA FALSE FALSE FALSE    NA    NA FALSE FALSE FALSE\n [3,] FALSE    NA FALSE    NA    NA FALSE    NA    NA  TRUE\n [4,]    NA    NA    NA    NA    NA  TRUE FALSE  TRUE FALSE\n [5,] FALSE FALSE    NA FALSE  TRUE FALSE  TRUE    NA    NA\n [6,] FALSE  TRUE  TRUE    NA FALSE    NA FALSE FALSE    NA\n [7,]    NA    NA FALSE    NA FALSE  TRUE  TRUE FALSE    NA\n [8,]    NA FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE\n [9,] FALSE    NA    NA FALSE  TRUE  TRUE FALSE FALSE    NA\n[10,] FALSE  TRUE FALSE    NA    NA    NA  TRUE  TRUE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA  TRUE FALSE FALSE FALSE  TRUE  TRUE    NA\n [2,] FALSE FALSE    NA FALSE    NA    NA  TRUE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE    NA  TRUE    NA\n [4,]  TRUE  TRUE FALSE FALSE  TRUE    NA FALSE FALSE    NA\n [5,]  TRUE  TRUE FALSE    NA    NA    NA    NA  TRUE  TRUE\n [6,]  TRUE FALSE    NA    NA  TRUE  TRUE FALSE  TRUE FALSE\n [7,] FALSE  TRUE FALSE FALSE    NA  TRUE  TRUE    NA    NA\n [8,] FALSE FALSE  TRUE FALSE FALSE    NA FALSE    NA  TRUE\n [9,] FALSE FALSE  TRUE  TRUE    NA FALSE    NA    NA FALSE\n[10,] FALSE  TRUE    NA FALSE  TRUE FALSE  TRUE FALSE    NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE FALSE  TRUE    NA  TRUE  TRUE  TRUE FALSE\n [2,]    NA FALSE  TRUE  TRUE  TRUE    NA    NA    NA FALSE\n [3,]  TRUE  TRUE FALSE    NA FALSE    NA FALSE  TRUE  TRUE\n [4,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE\n [5,]  TRUE    NA    NA    NA    NA FALSE FALSE  TRUE    NA\n [6,]    NA    NA    NA  TRUE FALSE FALSE FALSE    NA    NA\n [7,]  TRUE    NA    NA  TRUE    NA  TRUE FALSE    NA    NA\n [8,]    NA  TRUE  TRUE  TRUE  TRUE    NA  TRUE FALSE  TRUE\n [9,]    NA  TRUE    NA    NA FALSE  TRUE    NA    NA  TRUE\n[10,] FALSE FALSE  TRUE FALSE FALSE FALSE    NA    NA  TRUE\n\nbc.b(x, y, \"nand\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [4,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [5,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [9,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[10,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\nbc.b(x, y, \"==\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE    NA    NA  TRUE    NA  TRUE  TRUE  TRUE\n [2,]  TRUE    NA    NA    NA FALSE    NA FALSE FALSE    NA\n [3,]  TRUE    NA    NA FALSE  TRUE FALSE    NA FALSE FALSE\n [4,]  TRUE    NA    NA    NA FALSE    NA  TRUE  TRUE FALSE\n [5,]  TRUE    NA    NA    NA FALSE    NA    NA FALSE  TRUE\n [6,]    NA  TRUE  TRUE    NA FALSE FALSE FALSE  TRUE FALSE\n [7,]    NA    NA  TRUE    NA    NA  TRUE    NA FALSE FALSE\n [8,]  TRUE FALSE FALSE    NA    NA    NA FALSE FALSE    NA\n [9,]  TRUE    NA FALSE  TRUE    NA FALSE FALSE  TRUE FALSE\n[10,] FALSE  TRUE    NA  TRUE FALSE  TRUE FALSE  TRUE FALSE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE  TRUE    NA    NA    NA  TRUE    NA    NA\n [2,] FALSE  TRUE FALSE  TRUE FALSE    NA FALSE FALSE FALSE\n [3,]    NA FALSE FALSE    NA  TRUE  TRUE    NA FALSE  TRUE\n [4,] FALSE FALSE  TRUE    NA    NA    NA    NA  TRUE FALSE\n [5,]    NA  TRUE  TRUE FALSE FALSE    NA  TRUE FALSE  TRUE\n [6,]  TRUE FALSE    NA    NA    NA FALSE    NA    NA    NA\n [7,]  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE\n [8,] FALSE FALSE    NA FALSE    NA FALSE    NA  TRUE  TRUE\n [9,]  TRUE  TRUE  TRUE    NA    NA FALSE FALSE FALSE  TRUE\n[10,]    NA    NA    NA    NA  TRUE    NA    NA FALSE    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE  TRUE  TRUE    NA    NA    NA    NA FALSE    NA\n [2,] FALSE    NA FALSE  TRUE  TRUE    NA FALSE    NA  TRUE\n [3,]    NA FALSE    NA FALSE  TRUE FALSE  TRUE FALSE  TRUE\n [4,]  TRUE  TRUE    NA FALSE  TRUE FALSE    NA FALSE  TRUE\n [5,]    NA  TRUE  TRUE FALSE FALSE    NA  TRUE FALSE  TRUE\n [6,]  TRUE    NA  TRUE  TRUE FALSE    NA  TRUE FALSE    NA\n [7,] FALSE FALSE  TRUE    NA FALSE FALSE FALSE    NA    NA\n [8,]  TRUE    NA    NA  TRUE    NA FALSE    NA  TRUE    NA\n [9,] FALSE FALSE    NA FALSE    NA    NA    NA  TRUE FALSE\n[10,]  TRUE  TRUE  TRUE    NA  TRUE FALSE    NA  TRUE    NA\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE FALSE    NA FALSE    NA    NA FALSE FALSE\n [2,] FALSE    NA    NA  TRUE FALSE FALSE  TRUE  TRUE  TRUE\n [3,]  TRUE    NA    NA  TRUE    NA FALSE    NA    NA    NA\n [4,]    NA  TRUE FALSE    NA    NA  TRUE FALSE    NA  TRUE\n [5,] FALSE    NA FALSE FALSE  TRUE  TRUE    NA    NA FALSE\n [6,]  TRUE  TRUE  TRUE    NA FALSE  TRUE    NA  TRUE  TRUE\n [7,]    NA  TRUE    NA FALSE FALSE  TRUE FALSE  TRUE  TRUE\n [8,]    NA  TRUE  TRUE FALSE FALSE    NA    NA FALSE FALSE\n [9,]  TRUE FALSE FALSE    NA    NA    NA FALSE FALSE  TRUE\n[10,] FALSE    NA  TRUE    NA FALSE FALSE  TRUE    NA    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA  TRUE    NA  TRUE    NA FALSE    NA FALSE  TRUE\n [2,]    NA    NA  TRUE    NA  TRUE FALSE    NA  TRUE  TRUE\n [3,] FALSE  TRUE FALSE  TRUE FALSE  TRUE    NA  TRUE FALSE\n [4,]  TRUE  TRUE    NA FALSE  TRUE    NA    NA FALSE    NA\n [5,] FALSE    NA  TRUE    NA  TRUE FALSE  TRUE    NA    NA\n [6,]  TRUE    NA FALSE    NA    NA    NA  TRUE    NA FALSE\n [7,]  TRUE  TRUE FALSE    NA FALSE  TRUE    NA FALSE    NA\n [8,]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE    NA  TRUE\n [9,] FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE    NA    NA\n[10,] FALSE  TRUE  TRUE FALSE FALSE FALSE    NA    NA FALSE\n\n, , 6\n\n      [,1]  [,2]  [,3] [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] TRUE  TRUE    NA   NA FALSE    NA FALSE    NA  TRUE\n [2,]   NA  TRUE  TRUE TRUE    NA    NA  TRUE  TRUE  TRUE\n [3,] TRUE    NA  TRUE   NA    NA  TRUE    NA    NA FALSE\n [4,]   NA    NA    NA   NA    NA FALSE  TRUE FALSE  TRUE\n [5,] TRUE  TRUE    NA TRUE FALSE  TRUE FALSE    NA    NA\n [6,] TRUE FALSE FALSE   NA  TRUE    NA  TRUE  TRUE    NA\n [7,]   NA    NA  TRUE   NA  TRUE FALSE FALSE  TRUE    NA\n [8,]   NA  TRUE  TRUE TRUE FALSE FALSE  TRUE  TRUE FALSE\n [9,] TRUE    NA    NA TRUE FALSE FALSE  TRUE  TRUE    NA\n[10,] TRUE FALSE  TRUE   NA    NA    NA FALSE FALSE  TRUE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE    NA FALSE  TRUE  TRUE  TRUE FALSE FALSE    NA\n [2,]  TRUE  TRUE    NA  TRUE    NA    NA FALSE  TRUE  TRUE\n [3,]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE    NA FALSE    NA\n [4,] FALSE FALSE  TRUE  TRUE FALSE    NA  TRUE  TRUE    NA\n [5,] FALSE FALSE  TRUE    NA    NA    NA    NA FALSE FALSE\n [6,] FALSE  TRUE    NA    NA FALSE FALSE  TRUE FALSE  TRUE\n [7,]  TRUE FALSE  TRUE  TRUE    NA FALSE FALSE    NA    NA\n [8,]  TRUE  TRUE FALSE  TRUE  TRUE    NA  TRUE    NA FALSE\n [9,]  TRUE  TRUE FALSE FALSE    NA  TRUE    NA    NA  TRUE\n[10,]  TRUE FALSE    NA  TRUE FALSE  TRUE FALSE  TRUE    NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE  TRUE FALSE    NA FALSE FALSE FALSE  TRUE\n [2,]    NA  TRUE FALSE FALSE FALSE    NA    NA    NA  TRUE\n [3,] FALSE FALSE  TRUE    NA  TRUE    NA  TRUE FALSE FALSE\n [4,]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE\n [5,] FALSE    NA    NA    NA    NA  TRUE  TRUE FALSE    NA\n [6,]    NA    NA    NA FALSE  TRUE  TRUE  TRUE    NA    NA\n [7,] FALSE    NA    NA FALSE    NA FALSE  TRUE    NA    NA\n [8,]    NA FALSE FALSE FALSE FALSE    NA FALSE  TRUE FALSE\n [9,]    NA FALSE    NA    NA  TRUE FALSE    NA    NA FALSE\n[10,]  TRUE  TRUE FALSE  TRUE  TRUE  TRUE    NA    NA FALSE\n\nbc.b(x, y, \"!=\")\n\n, , 1\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE    NA    NA FALSE    NA FALSE FALSE FALSE\n [2,] FALSE    NA    NA    NA  TRUE    NA  TRUE  TRUE    NA\n [3,] FALSE    NA    NA  TRUE FALSE  TRUE    NA  TRUE  TRUE\n [4,] FALSE    NA    NA    NA  TRUE    NA FALSE FALSE  TRUE\n [5,] FALSE    NA    NA    NA  TRUE    NA    NA  TRUE FALSE\n [6,]    NA FALSE FALSE    NA  TRUE  TRUE  TRUE FALSE  TRUE\n [7,]    NA    NA FALSE    NA    NA FALSE    NA  TRUE  TRUE\n [8,] FALSE  TRUE  TRUE    NA    NA    NA  TRUE  TRUE    NA\n [9,] FALSE    NA  TRUE FALSE    NA  TRUE  TRUE FALSE  TRUE\n[10,]  TRUE FALSE    NA FALSE  TRUE FALSE  TRUE FALSE  TRUE\n\n, , 2\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE FALSE    NA    NA    NA FALSE    NA    NA\n [2,]  TRUE FALSE  TRUE FALSE  TRUE    NA  TRUE  TRUE  TRUE\n [3,]    NA  TRUE  TRUE    NA FALSE FALSE    NA  TRUE FALSE\n [4,]  TRUE  TRUE FALSE    NA    NA    NA    NA FALSE  TRUE\n [5,]    NA FALSE FALSE  TRUE  TRUE    NA FALSE  TRUE FALSE\n [6,] FALSE  TRUE    NA    NA    NA  TRUE    NA    NA    NA\n [7,] FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE\n [8,]  TRUE  TRUE    NA  TRUE    NA  TRUE    NA FALSE FALSE\n [9,] FALSE FALSE FALSE    NA    NA  TRUE  TRUE  TRUE FALSE\n[10,]    NA    NA    NA    NA FALSE    NA    NA  TRUE    NA\n\n, , 3\n\n       [,1]  [,2]  [,3]  [,4]  [,5] [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE FALSE FALSE    NA    NA   NA    NA  TRUE    NA\n [2,]  TRUE    NA  TRUE FALSE FALSE   NA  TRUE    NA FALSE\n [3,]    NA  TRUE    NA  TRUE FALSE TRUE FALSE  TRUE FALSE\n [4,] FALSE FALSE    NA  TRUE FALSE TRUE    NA  TRUE FALSE\n [5,]    NA FALSE FALSE  TRUE  TRUE   NA FALSE  TRUE FALSE\n [6,] FALSE    NA FALSE FALSE  TRUE   NA FALSE  TRUE    NA\n [7,]  TRUE  TRUE FALSE    NA  TRUE TRUE  TRUE    NA    NA\n [8,] FALSE    NA    NA FALSE    NA TRUE    NA FALSE    NA\n [9,]  TRUE  TRUE    NA  TRUE    NA   NA    NA FALSE  TRUE\n[10,] FALSE FALSE FALSE    NA FALSE TRUE    NA FALSE    NA\n\n, , 4\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE  TRUE    NA  TRUE    NA    NA  TRUE  TRUE\n [2,]  TRUE    NA    NA FALSE  TRUE  TRUE FALSE FALSE FALSE\n [3,] FALSE    NA    NA FALSE    NA  TRUE    NA    NA    NA\n [4,]    NA FALSE  TRUE    NA    NA FALSE  TRUE    NA FALSE\n [5,]  TRUE    NA  TRUE  TRUE FALSE FALSE    NA    NA  TRUE\n [6,] FALSE FALSE FALSE    NA  TRUE FALSE    NA FALSE FALSE\n [7,]    NA FALSE    NA  TRUE  TRUE FALSE  TRUE FALSE FALSE\n [8,]    NA FALSE FALSE  TRUE  TRUE    NA    NA  TRUE  TRUE\n [9,] FALSE  TRUE  TRUE    NA    NA    NA  TRUE  TRUE FALSE\n[10,]  TRUE    NA FALSE    NA  TRUE  TRUE FALSE    NA    NA\n\n, , 5\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]    NA FALSE    NA FALSE    NA  TRUE    NA  TRUE FALSE\n [2,]    NA    NA FALSE    NA FALSE  TRUE    NA FALSE FALSE\n [3,]  TRUE FALSE  TRUE FALSE  TRUE FALSE    NA FALSE  TRUE\n [4,] FALSE FALSE    NA  TRUE FALSE    NA    NA  TRUE    NA\n [5,]  TRUE    NA FALSE    NA FALSE  TRUE FALSE    NA    NA\n [6,] FALSE    NA  TRUE    NA    NA    NA FALSE    NA  TRUE\n [7,] FALSE FALSE  TRUE    NA  TRUE FALSE    NA  TRUE    NA\n [8,] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE    NA FALSE\n [9,]  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE    NA    NA\n[10,]  TRUE FALSE FALSE  TRUE  TRUE  TRUE    NA    NA  TRUE\n\n, , 6\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE FALSE    NA    NA  TRUE    NA  TRUE    NA FALSE\n [2,]    NA FALSE FALSE FALSE    NA    NA FALSE FALSE FALSE\n [3,] FALSE    NA FALSE    NA    NA FALSE    NA    NA  TRUE\n [4,]    NA    NA    NA    NA    NA  TRUE FALSE  TRUE FALSE\n [5,] FALSE FALSE    NA FALSE  TRUE FALSE  TRUE    NA    NA\n [6,] FALSE  TRUE  TRUE    NA FALSE    NA FALSE FALSE    NA\n [7,]    NA    NA FALSE    NA FALSE  TRUE  TRUE FALSE    NA\n [8,]    NA FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE\n [9,] FALSE    NA    NA FALSE  TRUE  TRUE FALSE FALSE    NA\n[10,] FALSE  TRUE FALSE    NA    NA    NA  TRUE  TRUE FALSE\n\n, , 7\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,] FALSE    NA  TRUE FALSE FALSE FALSE  TRUE  TRUE    NA\n [2,] FALSE FALSE    NA FALSE    NA    NA  TRUE FALSE FALSE\n [3,] FALSE FALSE FALSE FALSE FALSE FALSE    NA  TRUE    NA\n [4,]  TRUE  TRUE FALSE FALSE  TRUE    NA FALSE FALSE    NA\n [5,]  TRUE  TRUE FALSE    NA    NA    NA    NA  TRUE  TRUE\n [6,]  TRUE FALSE    NA    NA  TRUE  TRUE FALSE  TRUE FALSE\n [7,] FALSE  TRUE FALSE FALSE    NA  TRUE  TRUE    NA    NA\n [8,] FALSE FALSE  TRUE FALSE FALSE    NA FALSE    NA  TRUE\n [9,] FALSE FALSE  TRUE  TRUE    NA FALSE    NA    NA FALSE\n[10,] FALSE  TRUE    NA FALSE  TRUE FALSE  TRUE FALSE    NA\n\n, , 8\n\n       [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9]\n [1,]  TRUE  TRUE FALSE  TRUE    NA  TRUE  TRUE  TRUE FALSE\n [2,]    NA FALSE  TRUE  TRUE  TRUE    NA    NA    NA FALSE\n [3,]  TRUE  TRUE FALSE    NA FALSE    NA FALSE  TRUE  TRUE\n [4,] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE\n [5,]  TRUE    NA    NA    NA    NA FALSE FALSE  TRUE    NA\n [6,]    NA    NA    NA  TRUE FALSE FALSE FALSE    NA    NA\n [7,]  TRUE    NA    NA  TRUE    NA  TRUE FALSE    NA    NA\n [8,]    NA  TRUE  TRUE  TRUE  TRUE    NA  TRUE FALSE  TRUE\n [9,]    NA  TRUE    NA    NA FALSE  TRUE    NA    NA  TRUE\n[10,] FALSE FALSE  TRUE FALSE FALSE FALSE    NA    NA  TRUE"
  },
  {
    "objectID": "man/properties.html",
    "href": "man/properties.html",
    "title": "properties",
    "section": "",
    "text": "ndim() returns the number of dimensions of an object.  lst.ndim() returns the number of dimensions of every list-element.  lst.typeof() returns the (internal) type of every list-element.  len() is an alias for length.  lst.len() is an alias for lengths.   These functions were all designed to be efficient.  \n\n\n\nndim(x)\n\nlst.ndim(x)\n\nlst.typeof(x)\n\n\n\n\n\n\n\n\nx\n\n\nan object. For functions starting with lst., x must be a list (i.e. recursive vector or recursive array). \n\n\n\n\n\n\n\nAn integer scalar\n\n\n\n\nlibrary(\"broadcast\")\n\n\n# bind_array ====\n\n# here, atomic and recursive arrays are mixed,\n# resulting in recursive arrays\n\n# creating the arrays\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\n# binding the arrays\ninput &lt;- list(x = x, y = y)\nbind_array(input, along = 0L) # binds on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\nbind_array(input, along = 1L) # binds on first dimension (i.e. rows)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, along = 2L)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, along = 3L) # bind on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 0L) # binds on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 1L) # binds on last dimension (i.e. columns)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, revalong = 2L)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, revalong = 3L) # bind on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\n# binding, with empty arrays\nemptyarray &lt;- array(numeric(0L), c(0L, 3L))\ndimnames(emptyarray) &lt;- list(NULL, paste(\"empty\", 1:3))\nprint(emptyarray)\n\n     empty 1 empty 2 empty 3\n\ninput &lt;- list(x = x, y = emptyarray)\nbind_array(input, along = 1L, comnames_from = 2L) # row-bind\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n################################################################################\n\n# bind_mat ====\n\n# here, atomic and recursive matrices are mixed,\n# resulting in a recursive matrix\n\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\nbind_mat(list(x = x, y = y), 2L)\n\n  A            B            C                  \na logical,3    logical,3    logical,3    1 5 9 \nb integer,10   integer,10   integer,10   2 6 10\nc numeric,10   numeric,10   numeric,10   3 7 11\nd character,26 character,26 character,26 4 8 12\n\n################################################################################\n\n# bind_dt ====\n\n\nx &lt;- data.frame(a = 1:12, b = month.abb) # data.frame\ny &lt;- data.table::data.table(a = 1:12, b = month.abb) # data.table\n\nbind_dt(list(x = x, y = y), 2L) # column bind\n\n      x.a    x.b   y.a    y.b\n    &lt;int&gt; &lt;char&gt; &lt;int&gt; &lt;char&gt;\n 1:     1    Jan     1    Jan\n 2:     2    Feb     2    Feb\n 3:     3    Mar     3    Mar\n 4:     4    Apr     4    Apr\n 5:     5    May     5    May\n 6:     6    Jun     6    Jun\n 7:     7    Jul     7    Jul\n 8:     8    Aug     8    Aug\n 9:     9    Sep     9    Sep\n10:    10    Oct    10    Oct\n11:    11    Nov    11    Nov\n12:    12    Dec    12    Dec\n\nbind_dt(list(x = x, y = y), 1L) # row bind\n\n        a      b\n    &lt;int&gt; &lt;char&gt;\n 1:     1    Jan\n 2:     2    Feb\n 3:     3    Mar\n 4:     4    Apr\n 5:     5    May\n 6:     6    Jun\n 7:     7    Jul\n 8:     8    Aug\n 9:     9    Sep\n10:    10    Oct\n11:    11    Nov\n12:    12    Dec\n13:     1    Jan\n14:     2    Feb\n15:     3    Mar\n16:     4    Apr\n17:     5    May\n18:     6    Jun\n19:     7    Jul\n20:     8    Aug\n21:     9    Sep\n22:    10    Oct\n23:    11    Nov\n24:    12    Dec\n        a      b"
  },
  {
    "objectID": "man/properties.html#small-property-functions",
    "href": "man/properties.html#small-property-functions",
    "title": "properties",
    "section": "",
    "text": "ndim() returns the number of dimensions of an object.  lst.ndim() returns the number of dimensions of every list-element.  lst.typeof() returns the (internal) type of every list-element.  len() is an alias for length.  lst.len() is an alias for lengths.   These functions were all designed to be efficient.  \n\n\n\nndim(x)\n\nlst.ndim(x)\n\nlst.typeof(x)\n\n\n\n\n\n\n\n\nx\n\n\nan object. For functions starting with lst., x must be a list (i.e. recursive vector or recursive array). \n\n\n\n\n\n\n\nAn integer scalar\n\n\n\n\nlibrary(\"broadcast\")\n\n\n# bind_array ====\n\n# here, atomic and recursive arrays are mixed,\n# resulting in recursive arrays\n\n# creating the arrays\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\n# binding the arrays\ninput &lt;- list(x = x, y = y)\nbind_array(input, along = 0L) # binds on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\nbind_array(input, along = 1L) # binds on first dimension (i.e. rows)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, along = 2L)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, along = 3L) # bind on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 0L) # binds on new dimension after last\n\n, , x\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n, , y\n\n  A B C \na 1 5 9 \nb 2 6 10\nc 3 7 11\nd 4 8 12\n\nbind_array(input, revalong = 1L) # binds on last dimension (i.e. columns)\n\n  A            B            C            y.1 y.2 y.3\na logical,3    logical,3    logical,3    1   5   9  \nb integer,10   integer,10   integer,10   2   6   10 \nc numeric,10   numeric,10   numeric,10   3   7   11 \nd character,26 character,26 character,26 4   8   12 \n\nbind_array(input, revalong = 2L)\n\n    A            B            C           \na   logical,3    logical,3    logical,3   \nb   integer,10   integer,10   integer,10  \nc   numeric,10   numeric,10   numeric,10  \nd   character,26 character,26 character,26\ny.1 1            5            9           \ny.2 2            6            10          \ny.3 3            7            11          \ny.4 4            8            12          \n\nbind_array(input, revalong = 3L) # bind on new dimension before first\n\n, , 1\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 1         2          3          4           \n\n, , 2\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 5         6          7          8           \n\n, , 3\n\n  a         b          c          d           \nx logical,3 integer,10 numeric,10 character,26\ny 9         10         11         12          \n\n# binding, with empty arrays\nemptyarray &lt;- array(numeric(0L), c(0L, 3L))\ndimnames(emptyarray) &lt;- list(NULL, paste(\"empty\", 1:3))\nprint(emptyarray)\n\n     empty 1 empty 2 empty 3\n\ninput &lt;- list(x = x, y = emptyarray)\nbind_array(input, along = 1L, comnames_from = 2L) # row-bind\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\n################################################################################\n\n# bind_mat ====\n\n# here, atomic and recursive matrices are mixed,\n# resulting in a recursive matrix\n\nx &lt;- c(\n  lapply(1:3, \\(x)sample(c(TRUE, FALSE, NA))),\n  lapply(1:3, \\(x)sample(1:10)),\n  lapply(1:3, \\(x)rnorm(10)),\n  lapply(1:3, \\(x)sample(letters))\n)\nx &lt;- matrix(x, 4, 3, byrow = TRUE)\ndimnames(x) &lt;- list(letters[1:4], LETTERS[1:3])\nprint(x)\n\n  A            B            C           \na logical,3    logical,3    logical,3   \nb integer,10   integer,10   integer,10  \nc numeric,10   numeric,10   numeric,10  \nd character,26 character,26 character,26\n\ny &lt;- matrix(1:12, 4, 3)\nprint(y)\n\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n\nbind_mat(list(x = x, y = y), 2L)\n\n  A            B            C                  \na logical,3    logical,3    logical,3    1 5 9 \nb integer,10   integer,10   integer,10   2 6 10\nc numeric,10   numeric,10   numeric,10   3 7 11\nd character,26 character,26 character,26 4 8 12\n\n################################################################################\n\n# bind_dt ====\n\n\nx &lt;- data.frame(a = 1:12, b = month.abb) # data.frame\ny &lt;- data.table::data.table(a = 1:12, b = month.abb) # data.table\n\nbind_dt(list(x = x, y = y), 2L) # column bind\n\n      x.a    x.b   y.a    y.b\n    &lt;int&gt; &lt;char&gt; &lt;int&gt; &lt;char&gt;\n 1:     1    Jan     1    Jan\n 2:     2    Feb     2    Feb\n 3:     3    Mar     3    Mar\n 4:     4    Apr     4    Apr\n 5:     5    May     5    May\n 6:     6    Jun     6    Jun\n 7:     7    Jul     7    Jul\n 8:     8    Aug     8    Aug\n 9:     9    Sep     9    Sep\n10:    10    Oct    10    Oct\n11:    11    Nov    11    Nov\n12:    12    Dec    12    Dec\n\nbind_dt(list(x = x, y = y), 1L) # row bind\n\n        a      b\n    &lt;int&gt; &lt;char&gt;\n 1:     1    Jan\n 2:     2    Feb\n 3:     3    Mar\n 4:     4    Apr\n 5:     5    May\n 6:     6    Jun\n 7:     7    Jul\n 8:     8    Aug\n 9:     9    Sep\n10:    10    Oct\n11:    11    Nov\n12:    12    Dec\n13:     1    Jan\n14:     2    Feb\n15:     3    Mar\n16:     4    Apr\n17:     5    May\n18:     6    Jun\n19:     7    Jul\n20:     8    Aug\n21:     9    Sep\n22:    10    Oct\n23:    11    Nov\n24:    12    Dec\n        a      b"
  },
  {
    "objectID": "vignettes/a_installation.html",
    "href": "vignettes/a_installation.html",
    "title": "Installation",
    "section": "",
    "text": "To install ‘broadcast’ from GitHub, one may run the following code in ‘R’:\n\n\nremotes::install_github(\"https://github.com/tony-aw/broadcast\")\n\n‘broadcast’ is not a large package per-sé, but it does contain a large amount of compiled code (‘C’ and ‘C++’). Compilation of the package may be slow on some operating systems, especially Linux systems; please be patient. On my own personal laptop (Windows 11), installation takes about 2 minutes.\nIf installation is too slow, one may try to speed up the installation using multi-threading, for example like so:\n\n\nnthreads &lt;- 8L # specify number of threads\nSys.setenv(MAKEFLAGS = paste0(\"-j\", nthreads)) # may speed up installation\n\nremotes::install_github(\"https://github.com/tony-aw/broadcast\")\n\n \nTo attach the package - thus expose its functions to the namespace - please use the following:\n\n\nlibrary(broadcast)\n\n \nTo open the introduction help page of the ‘broadcast’ package, please use any of the following:\n\n\n?broadcast::broadcast\n?broadcast::broadcast_help\n?broadcast::`broadcast-package`"
  },
  {
    "objectID": "vignettes/c_practical_applications.html",
    "href": "vignettes/c_practical_applications.html",
    "title": "Practical Applications",
    "section": "",
    "text": "library(broadcast)\nlibrary(kableExtra)\n#&gt; Warning: package 'kableExtra' was built under R version 4.4.1\n\n \n\nIntroduction\nBroadcasting comes up frequent enough in real world problems. This articles gives a few examples of these.\n \n\n\nVector quantization\nThis first example is taken from Numpy’s own documentation.\nThe basic operation in Vector Quantization (VQ) finds the closest point in a set of points, called codes in VQ jargon, to a given point, called the observation. In the very simple, two-dimensional case shown below, the values in observation describe the weight and height of an athlete to be classified. The codes represent different classes of athletes. Finding the closest point requires calculating the distance between observation and each of the codes. The shortest distance provides the best match. In this example, codes[0] is the closest class indicating that the athlete is likely a basketball player.\n\n\nobservation &lt;- array(c(111.0, 188.0), dim = c(1, 2))\ncodes &lt;- array(\n  c(102.0, 203.0,\n    132.0, 193.0,\n    45.0, 155.0,\n    57.0, 173.0),\n  dim = c(4, 2)\n)\n\ndiff &lt;- bc.num(codes, observation, \"-\")\ndist &lt;- apply(diff^2, 2L, sum) |&gt; sqrt()\nwhich.min(dist); dist[which.min(dist)]\n#&gt; [1] 1\n#&gt; [1] 125.3395\n\n \n\n\nFind most resembling string\nIf you have 2 vectors of strings, and you want to find which pair of strings (one string from each vector), you’ll need to find the string distance of all possible combinations.\nThis can be done very fast and very conveniently with ‘broadcast’, using the following code:\n\nx &lt;- array(month.name)\ny &lt;- array(month.abb, c(1, 12))\n\nout &lt;- bc.str(x, y, \"levenshtein\")\ndimnames(out) &lt;- list(x, y)\nprint(out)\n#&gt;           Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n#&gt; January     4   7   5   6   5   5   5   6   7   7   7   7\n#&gt; February    7   5   6   7   6   7   7   7   7   8   8   7\n#&gt; March       4   5   2   4   3   5   5   5   5   4   5   4\n#&gt; April       5   5   4   2   5   5   4   4   5   5   5   5\n#&gt; May         2   3   1   3   0   3   3   3   3   3   3   3\n#&gt; June        2   4   4   4   4   1   2   3   4   4   4   4\n#&gt; July        3   4   4   4   3   2   1   3   4   4   4   4\n#&gt; August      6   6   6   5   6   5   5   3   6   5   6   6\n#&gt; September   9   7   8   7   9   9   9   9   6   8   9   8\n#&gt; October     7   6   6   6   7   7   7   7   6   4   6   6\n#&gt; November    8   6   7   7   8   8   8   8   7   8   5   7\n#&gt; December    8   6   7   7   8   8   8   8   7   7   8   5"
  }
]