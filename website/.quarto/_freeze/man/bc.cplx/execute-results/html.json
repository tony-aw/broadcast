{
  "hash": "290c5faf97e3506c49f37da26522ddc7",
  "result": {
    "markdown": "---\ntitle: bc.cplx\n---\n\n## Broadcasted Complex Numeric Operations {.unnumbered}\n\n\n### Description\n\nThe <code>bc.cplx()</code> function performs broadcasted complex numeric operations pairs of arrays. <br />\n<br />\nNote that <code>bc.cplx()</code> uses more strict <code>NA</code> checks than base 'R': <br />\nIf for an element of either <code>x</code> or <code>y</code>, either the real or imaginary part is <code>NA</code> or <code>NaN</code>,\nthan the result of the operation for that element is necessarily <code>NA</code>. <br />\n\n\n\n### Usage\n\n<pre><code class='language-R'>bc.cplx(x, y, op)\n</code></pre>\n\n\n### Arguments\n\n<table>\n<tr><td style = \"white-space: collapse; font-family: monospace; vertical-align: top\"><code id=\"x\">x</code>, <code id=\"y\">y</code></td>\n<td>\nconformable atomic arrays of type <code>complex</code>.\n</td></tr>\n<tr><td style = \"white-space: collapse; font-family: monospace; vertical-align: top\"><code id=\"op\">op</code></td>\n<td>\na single string, giving the operator. <br />\nSupported arithmetic operators: +, -, *, /. <br />\nSupported relational operators: ==, !=. <br />\n</td></tr>\n</table>\n\n\n### Value\n\nFor arithmetic operators: <br />\nA complex array as a result of the broadcasted arithmetic operation. <br />\n<br />\nFor relational operators: <br />\nA logical array as a result of the broadcasted relational comparison. <br />\n<br />\n\n\n\n### Examples\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"broadcast\")\n\nx.dim <- c(4:2)\nx.len <- prod(x.dim)\ngen <- function() sample(c(rnorm(10), NA, NA, NaN, NaN, Inf, Inf, -Inf, -Inf))\nx <- array(gen() + gen() * -1i, x.dim)\ny <- array(gen() + gen() * -1i, c(4,1,1))\n\nbc.cplx(x, y, \"==\")\n## , , 1\n## \n##       [,1]  [,2]  [,3]\n## [1,] FALSE    NA FALSE\n## [2,] FALSE    NA FALSE\n## [3,] FALSE    NA    NA\n## [4,] FALSE FALSE    NA\n## \n## , , 2\n## \n##       [,1]  [,2]  [,3]\n## [1,]    NA    NA FALSE\n## [2,]    NA    NA FALSE\n## [3,] FALSE FALSE    NA\n## [4,]    NA FALSE    NA\nbc.cplx(x, y, \"!=\")\n## , , 1\n## \n##      [,1] [,2] [,3]\n## [1,] TRUE   NA TRUE\n## [2,] TRUE   NA TRUE\n## [3,] TRUE   NA   NA\n## [4,] TRUE TRUE   NA\n## \n## , , 2\n## \n##      [,1] [,2] [,3]\n## [1,]   NA   NA TRUE\n## [2,]   NA   NA TRUE\n## [3,] TRUE TRUE   NA\n## [4,]   NA TRUE   NA\n\nbc.cplx(x, y, \"+\")\n## , , 1\n## \n##                       [,1]            [,2]                  [,3]\n## [1,]  1.2433005+0.8231328i              NA -0.3423783+0.6830224i\n## [2,] -0.7122369+3.0339327i              NA        Inf+0.8376546i\n## [3,]        Inf-1.1009406i              NA                    NA\n## [4,]       -Inf+0.7504550i -Inf+0.1785948i                    NA\n## \n## , , 2\n## \n##                [,1]           [,2]                  [,3]\n## [1,]             NA             NA 0.04976569+0.9486583i\n## [2,]             NA             NA 1.08698436+1.7352869i\n## [3,] Inf-0.9005174i  Inf-1.226466i                    NA\n## [4,]             NA -Inf+2.049101i                    NA\n\nbc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), \"==\")\n##  [1]    NA    NA    NA    NA    NA FALSE    NA    NA    NA    NA    NA    NA\n## [13] FALSE    NA    NA    NA    NA    NA\nbc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), \"!=\")\n##  [1]   NA TRUE   NA   NA   NA   NA   NA TRUE   NA   NA   NA   NA   NA   NA   NA\n## [16]   NA   NA   NA\n\nx <- gen() + gen() * -1i\ny <- gen() + gen() * -1i\nout <- bc.cplx(array(x), array(y), \"*\")\ncbind(x, y, x*y, out)\n##                             x                      y                    \n##  [1,]        NaN+        Infi         NaN-      Infi       Inf+     NaNi\n##  [2,]        NaN+0.102119972i                     NA                  NA\n##  [3,]                      NA -0.86214545+0.5760591i                  NA\n##  [4,] -0.6976202+1.153845410i                     NA                  NA\n##  [5,]  0.8392584-0.018429361i         Inf+0.2221399i       Inf-     Infi\n##  [6,]       -Inf+0.139953341i  0.58910911+0.2569771i      -Inf-     Infi\n##  [7,]        NaN+        Infi         NaN+      NaNi       NaN+     NaNi\n##  [8,]                      NA                     NA                  NA\n##  [9,]                      NA         NaN+0.4854671i       NaN+     NaNi\n## [10,]        NaN-        Infi         NaN-      Infi      -Inf+     NaNi\n## [11,]  0.4500623-1.266495141i         NaN+      NaNi       NaN+     NaNi\n## [12,]        NaN+        NaNi         NaN+      Infi       NaN+     NaNi\n## [13,]        NaN+        NaNi         NaN-0.1888180i       NaN+     NaNi\n## [14,]        NaN-        Infi  0.01076006+0.1718302i       Inf-     Infi\n## [15,]        Inf-1.232884752i                     NA       NaN+     NaNi\n## [16,]        NaN+0.002586964i         Inf+0.5841066i       NaN+     Infi\n## [17,]       -Inf+0.723600434i         NaN+      Infi       NaN-     Infi\n## [18,] -1.4426247-1.492838869i  0.64207141-1.4248691i -3.053368+1.097042i\n##                       out\n##  [1,]                  NA\n##  [2,]                  NA\n##  [3,]                  NA\n##  [4,]                  NA\n##  [5,]       Inf-     Infi\n##  [6,]      -Inf-     Infi\n##  [7,]                  NA\n##  [8,]                  NA\n##  [9,]                  NA\n## [10,]                  NA\n## [11,]                  NA\n## [12,]                  NA\n## [13,]                  NA\n## [14,]                  NA\n## [15,]                  NA\n## [16,]                  NA\n## [17,]                  NA\n## [18,] -3.053368+1.097042i\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}