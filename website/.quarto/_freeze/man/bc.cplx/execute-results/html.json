{
  "hash": "290c5faf97e3506c49f37da26522ddc7",
  "result": {
    "markdown": "---\ntitle: bc.cplx\n---\n\n## Broadcasted Complex Numeric Operations {.unnumbered}\n\n\n### Description\n\nThe <code>bc.cplx()</code> function performs broadcasted complex numeric operations pairs of arrays. <br />\n<br />\nNote that <code>bc.cplx()</code> uses more strict <code>NA</code> checks than base 'R': <br />\nIf for an element of either <code>x</code> or <code>y</code>, either the real or imaginary part is <code>NA</code> or <code>NaN</code>,\nthan the result of the operation for that element is necessarily <code>NA</code>. <br />\n\n\n\n### Usage\n\n<pre><code class='language-R'>bc.cplx(x, y, op)\n</code></pre>\n\n\n### Arguments\n\n<table>\n<tr><td style = \"white-space: collapse; font-family: monospace; vertical-align: top\"><code id=\"x\">x</code>, <code id=\"y\">y</code></td>\n<td>\nconformable atomic arrays of type <code>complex</code>.\n</td></tr>\n<tr><td style = \"white-space: collapse; font-family: monospace; vertical-align: top\"><code id=\"op\">op</code></td>\n<td>\na single string, giving the operator. <br />\nSupported arithmetic operators: +, -, *, /. <br />\nSupported relational operators: ==, !=. <br />\n</td></tr>\n</table>\n\n\n### Value\n\nFor arithmetic operators: <br />\nA complex array as a result of the broadcasted arithmetic operation. <br />\n<br />\nFor relational operators: <br />\nA logical array as a result of the broadcasted relational comparison. <br />\n<br />\n\n\n\n### Examples\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"broadcast\")\n\nx.dim <- c(4:2)\nx.len <- prod(x.dim)\ngen <- function() sample(c(rnorm(10), NA, NA, NaN, NaN, Inf, Inf, -Inf, -Inf))\nx <- array(gen() + gen() * -1i, x.dim)\ny <- array(gen() + gen() * -1i, c(4,1,1))\n\nbc.cplx(x, y, \"==\")\n## , , 1\n## \n##      [,1] [,2]  [,3]\n## [1,]   NA   NA    NA\n## [2,]   NA   NA FALSE\n## [3,]   NA   NA    NA\n## [4,]   NA   NA    NA\n## \n## , , 2\n## \n##       [,1] [,2] [,3]\n## [1,]    NA   NA   NA\n## [2,] FALSE   NA   NA\n## [3,]    NA   NA   NA\n## [4,]    NA   NA   NA\nbc.cplx(x, y, \"!=\")\n## , , 1\n## \n##      [,1] [,2] [,3]\n## [1,]   NA   NA   NA\n## [2,]   NA   NA TRUE\n## [3,]   NA   NA   NA\n## [4,]   NA   NA   NA\n## \n## , , 2\n## \n##      [,1] [,2] [,3]\n## [1,]   NA   NA   NA\n## [2,] TRUE   NA   NA\n## [3,]   NA   NA   NA\n## [4,]   NA   NA   NA\n\nbc.cplx(x, y, \"+\")\n## , , 1\n## \n##      [,1] [,2]                [,3]\n## [1,]   NA   NA                  NA\n## [2,]   NA   NA 1.239402-0.5621381i\n## [3,]   NA   NA                  NA\n## [4,]   NA   NA                  NA\n## \n## , , 2\n## \n##                       [,1] [,2] [,3]\n## [1,]                    NA   NA   NA\n## [2,] -0.1177906-0.1899242i   NA   NA\n## [3,]                    NA   NA   NA\n## [4,]                    NA   NA   NA\n\nbc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), \"==\")\n##  [1]    NA    NA    NA    NA    NA    NA    NA    NA FALSE    NA    NA    NA\n## [13]    NA FALSE    NA FALSE FALSE    NA\nbc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), \"!=\")\n##  [1]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA TRUE   NA   NA TRUE   NA\n## [16] TRUE   NA   NA\n\nx <- gen() + gen() * -1i\ny <- gen() + gen() * -1i\nout <- bc.cplx(array(x), array(y), \"*\")\ncbind(x, y, x*y, out)\n##                           x                       y                      \n##  [1,]        NaN+      NaNi         NaN+0.39895339i        NaN+      NaNi\n##  [2,]  0.3708879-1.0285263i -0.75489206-0.69864528i -0.9985554+0.5173073i\n##  [3,]        NaN+      Infi         NaN-       Infi        Inf+      NaNi\n##  [4,] -0.2773073+0.1818190i         NaN-       Infi        Inf+      Infi\n##  [5,]        NaN-      Infi                      NA        Inf+      NaNi\n##  [6,]        NaN+      Infi  0.09134356+1.02062243i       -Inf+      Infi\n##  [7,]                    NA         NaN+       NaNi        NaN+      NaNi\n##  [8,]        NaN+0.5934785i         NaN+       Infi       -Inf+      NaNi\n##  [9,]        NaN-      Infi -0.64296981-1.22102400i       -Inf+      Infi\n## [10,]        NaN+      NaNi         NaN+       Infi        NaN+      NaNi\n## [11,]  2.2534456+2.0604645i -0.06044483-2.33889200i  4.6829947-5.3951104i\n## [12,]                    NA -2.55886274-0.05485849i                    NA\n## [13,]        Inf+0.1766376i         NaN+       NaNi        NaN+      NaNi\n## [14,] -0.4744898+0.6098589i -0.43832351+0.53688903i -0.1194466-0.5220638i\n## [15,]                    NA                      NA        NaN+      NaNi\n## [16,]  0.2172505-0.8951261i         Inf+0.03375768i        Inf-      Infi\n## [17,]                    NA  2.74997186-0.64897609i                    NA\n## [18,]  0.6590122+1.0852398i                      NA                    NA\n##                         out\n##  [1,]                    NA\n##  [2,] -0.9985554+0.5173073i\n##  [3,]                    NA\n##  [4,]                    NA\n##  [5,]                    NA\n##  [6,]                    NA\n##  [7,]                    NA\n##  [8,]                    NA\n##  [9,]                    NA\n## [10,]                    NA\n## [11,]  4.6829947-5.3951104i\n## [12,]                    NA\n## [13,]                    NA\n## [14,] -0.1194466-0.5220638i\n## [15,]                    NA\n## [16,]        Inf-      Infi\n## [17,]                    NA\n## [18,]                    NA\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}