{
  "hash": "290c5faf97e3506c49f37da26522ddc7",
  "result": {
    "markdown": "---\ntitle: bc.cplx\n---\n\n## Broadcasted Complex Numeric Operations {.unnumbered}\n\n\n### Description\n\nThe <code>bc.cplx()</code> function performs broadcasted complex numeric operations pairs of arrays. <br />\n<br />\nNote that <code>bc.cplx()</code> uses more strict <code>NA</code> checks than base 'R': <br />\nIf for an element of either <code>x</code> or <code>y</code>, either the real or imaginary part is <code>NA</code> or <code>NaN</code>,\nthan the result of the operation for that element is necessarily <code>NA</code>. <br />\n\n\n\n### Usage\n\n<pre><code class='language-R'>bc.cplx(x, y, op)\n</code></pre>\n\n\n### Arguments\n\n<table>\n<tr><td style = \"white-space: collapse; font-family: monospace; vertical-align: top\"><code id=\"x\">x</code>, <code id=\"y\">y</code></td>\n<td>\nconformable atomic arrays of type <code>complex</code>.\n</td></tr>\n<tr><td style = \"white-space: collapse; font-family: monospace; vertical-align: top\"><code id=\"op\">op</code></td>\n<td>\na single string, giving the operator. <br />\nSupported arithmetic operators: +, -, *, /. <br />\nSupported relational operators: ==, !=. <br />\n</td></tr>\n</table>\n\n\n### Value\n\nFor arithmetic operators: <br />\nA complex array as a result of the broadcasted arithmetic operation. <br />\n<br />\nFor relational operators: <br />\nA logical array as a result of the broadcasted relational comparison. <br />\n<br />\n\n\n\n### Examples\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"broadcast\")\n\nx.dim <- c(4:2)\nx.len <- prod(x.dim)\ngen <- function() sample(c(rnorm(10), NA, NA, NaN, NaN, Inf, Inf, -Inf, -Inf))\nx <- array(gen() + gen() * -1i, x.dim)\ny <- array(gen() + gen() * -1i, c(4,1,1))\n\nbc.cplx(x, y, \"==\")\n## , , 1\n## \n##       [,1]  [,2]  [,3]\n## [1,]    NA    NA    NA\n## [2,]    NA    NA    NA\n## [3,]    NA    NA    NA\n## [4,] FALSE FALSE FALSE\n## \n## , , 2\n## \n##       [,1] [,2]  [,3]\n## [1,] FALSE   NA FALSE\n## [2,]    NA   NA    NA\n## [3,]    NA   NA    NA\n## [4,]    NA   NA    NA\nbc.cplx(x, y, \"!=\")\n## , , 1\n## \n##      [,1] [,2] [,3]\n## [1,]   NA   NA   NA\n## [2,]   NA   NA   NA\n## [3,]   NA   NA   NA\n## [4,] TRUE TRUE TRUE\n## \n## , , 2\n## \n##      [,1] [,2] [,3]\n## [1,] TRUE   NA TRUE\n## [2,]   NA   NA   NA\n## [3,]   NA   NA   NA\n## [4,]   NA   NA   NA\n\nbc.cplx(x, y, \"+\")\n## , , 1\n## \n##                [,1]           [,2]         [,3]\n## [1,]             NA             NA           NA\n## [2,]             NA             NA           NA\n## [3,]             NA             NA           NA\n## [4,] Inf+0.2466087i Inf-0.3311673i Inf+1.23231i\n## \n## , , 2\n## \n##                      [,1] [,2]           [,3]\n## [1,] -1.176965+0.5845252i   NA -Inf+1.165631i\n## [2,]                   NA   NA             NA\n## [3,]                   NA   NA             NA\n## [4,]                   NA   NA             NA\n\nbc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), \"==\")\n##  [1] FALSE    NA FALSE    NA FALSE    NA    NA    NA FALSE    NA    NA FALSE\n## [13]    NA    NA    NA    NA    NA FALSE\nbc.cplx(array(gen() + gen() * -1i), array(gen() + gen() * -1i), \"!=\")\n##  [1]   NA TRUE   NA TRUE   NA   NA   NA   NA   NA TRUE   NA   NA TRUE   NA   NA\n## [16]   NA   NA   NA\n\nx <- gen() + gen() * -1i\ny <- gen() + gen() * -1i\nout <- bc.cplx(array(x), array(y), \"*\")\ncbind(x, y, x*y, out)\n##                            x                      y                       \n##  [1,]                     NA        NaN-       Infi         NaN+      NaNi\n##  [2,]         Inf+1.7871814i  0.1327086-0.99151994i         Inf-      Infi\n##  [3,]         NaN+      NaNi                     NA                     NA\n##  [4,]                     NA        NaN+       NaNi         NaN+      NaNi\n##  [5,]         NaN-      Infi       -Inf+0.62080399i         NaN+      Infi\n##  [6,] -0.02332669+0.1346626i  0.9414179+0.54090805i -0.09480025+0.1141562i\n##  [7,]  0.78776249+0.1105995i -0.2860200+0.58342403i -0.28984217+0.4279659i\n##  [8,]  2.45020248-1.1244018i -1.1069729+0.02945758i -2.67918559+1.3168593i\n##  [9,]                     NA        NaN+0.32328107i         NaN+      NaNi\n## [10,] -0.52624448+1.0352581i        Inf-0.94003536i        -Inf+      Infi\n## [11,]        -Inf-0.5309971i -1.4351848+0.16181157i         Inf-      Infi\n## [12,]         NaN+0.5877540i                     NA        -Inf+      NaNi\n## [13,]         NaN+      Infi                     NA         NaN+      NaNi\n## [14,]         NaN+      Infi        NaN-       Infi         Inf+      NaNi\n## [15,]  0.23515171+0.3485614i        NaN+       NaNi         NaN+      NaNi\n## [16,]         Inf+0.4318695i        NaN+       Infi         NaN+      Infi\n## [17,]         NaN-      Infi -0.1447287+0.66273567i         Inf+      Infi\n## [18,]                     NA -0.7975142-0.81001480i                     NA\n##                          out\n##  [1,]                     NA\n##  [2,]         Inf-      Infi\n##  [3,]                     NA\n##  [4,]                     NA\n##  [5,]                     NA\n##  [6,] -0.09480025+0.1141562i\n##  [7,] -0.28984217+0.4279659i\n##  [8,] -2.67918559+1.3168593i\n##  [9,]                     NA\n## [10,]        -Inf+      Infi\n## [11,]         Inf-      Infi\n## [12,]                     NA\n## [13,]                     NA\n## [14,]                     NA\n## [15,]                     NA\n## [16,]                     NA\n## [17,]                     NA\n## [18,]                     NA\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}