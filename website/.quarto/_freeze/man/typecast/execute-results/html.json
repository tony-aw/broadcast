{
  "hash": "a5ccdb91bc8c80696452fb7ffadff56c",
  "result": {
    "markdown": "---\ntitle: typecast\n---\n\n## Atomic and List Type Casting With Names and Dimensions Preserved {.unnumbered}\n\n\n### Description\n\nType casting usually strips away attributes of objects. <br />\nThe functions provided here preserve dimensions, dimnames, and names,\nwhich may be more convenient for arrays and array-like objects. <br />\n<br />\nThe functions are as follows: <br />\n\n\n<ul>\n<li> <code>as_bool()</code>: converts object to atomic type <code>logical</code> (<code>TRUE, FALSE, NA</code>).\n\n</li>\n<li> <code>as_int()</code>: converts object to atomic type <code>integer</code>.\n\n</li>\n<li> <code>as_dbl()</code>: converts object to atomic type <code>double</code> (AKA numeric).\n\n</li>\n<li> <code>as_chr()</code>: converts object to atomic type <code>character</code>.\n\n</li>\n<li> <code>as_cplx()</code>: converts object to atomic type <code>complex</code>.\n\n</li>\n<li> <code>as_raw()</code>: converts object to atomic type <code>raw</code>.\n\n</li>\n<li> <code>as_list()</code>: converts object to recursive type <code>list</code>. <br />\n\n</li></ul>\n\n<code>as_num()</code> is an alias for <code>as_dbl()</code>. <br />\n<code>as_str()</code> is an alias for <code>as_chr()</code>. <br />\n<br />\nSee also typeof. <br /> <br />\n\n\n\n### Usage\n\n<pre><code class='language-R'>as_bool(x, ...)\n\nas_int(x, ...)\n\nas_dbl(x, ...)\n\nas_num(x, ...)\n\nas_chr(x, ...)\n\nas_str(x, ...)\n\nas_cplx(x, ...)\n\nas_raw(x, ...)\n\nas_list(x, ...)\n</code></pre>\n\n\n### Arguments\n\n<table>\n<tr><td style = \"white-space: collapse; font-family: monospace; vertical-align: top\"><code id=\"x\">x</code></td>\n<td>\nan R object.\n</td></tr>\n<tr><td style = \"white-space: collapse; font-family: monospace; vertical-align: top\"><code id=\"...\">...</code></td>\n<td>\nfurther arguments passed to or from other methods.\n</td></tr>\n</table>\n\n\n### Value\n\nThe converted object. <br /> <br />\n\n\n\n### Examples\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"broadcast\")\n\n\n# matrix example ====\nx <- matrix(sample(-1:28), ncol = 5)\ncolnames(x) <- month.name[1:5]\nrownames(x) <- month.abb[1:6]\nnames(x) <- c(letters[1:20], LETTERS[1:10])\nprint(x)\n##     January February March April May\n## Jan       1       28    11    -1   9\n## Feb       0       18    15     7  19\n## Mar       4       23     3    20   6\n## Apr      10       21    17    25   8\n## May       2        5    13    16  27\n## Jun      22       24    14    26  12\n## attr(,\"names\")\n##  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n## [20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nas_bool(x)\n##     January February March April  May\n## Jan    TRUE     TRUE  TRUE  TRUE TRUE\n## Feb   FALSE     TRUE  TRUE  TRUE TRUE\n## Mar    TRUE     TRUE  TRUE  TRUE TRUE\n## Apr    TRUE     TRUE  TRUE  TRUE TRUE\n## May    TRUE     TRUE  TRUE  TRUE TRUE\n## Jun    TRUE     TRUE  TRUE  TRUE TRUE\n## attr(,\"names\")\n##  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n## [20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\nas_int(x)\n##     January February March April May\n## Jan       1       28    11    -1   9\n## Feb       0       18    15     7  19\n## Mar       4       23     3    20   6\n## Apr      10       21    17    25   8\n## May       2        5    13    16  27\n## Jun      22       24    14    26  12\n## attr(,\"names\")\n##  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n## [20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\nas_dbl(x)\n##     January February March April May\n## Jan       1       28    11    -1   9\n## Feb       0       18    15     7  19\n## Mar       4       23     3    20   6\n## Apr      10       21    17    25   8\n## May       2        5    13    16  27\n## Jun      22       24    14    26  12\n## attr(,\"names\")\n##  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n## [20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\nas_chr(x)\n##     January February March April May \n## Jan \"1\"     \"28\"     \"11\"  \"-1\"  \"9\" \n## Feb \"0\"     \"18\"     \"15\"  \"7\"   \"19\"\n## Mar \"4\"     \"23\"     \"3\"   \"20\"  \"6\" \n## Apr \"10\"    \"21\"     \"17\"  \"25\"  \"8\" \n## May \"2\"     \"5\"      \"13\"  \"16\"  \"27\"\n## Jun \"22\"    \"24\"     \"14\"  \"26\"  \"12\"\n## attr(,\"names\")\n##  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n## [20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\nas_cplx(x)\n##     January February March April   May\n## Jan    1+0i    28+0i 11+0i -1+0i  9+0i\n## Feb    0+0i    18+0i 15+0i  7+0i 19+0i\n## Mar    4+0i    23+0i  3+0i 20+0i  6+0i\n## Apr   10+0i    21+0i 17+0i 25+0i  8+0i\n## May    2+0i     5+0i 13+0i 16+0i 27+0i\n## Jun   22+0i    24+0i 14+0i 26+0i 12+0i\n## attr(,\"names\")\n##  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n## [20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\nas_raw(x)\n##     January February March April May\n## Jan      01       1c    0b    00  09\n## Feb      00       12    0f    07  13\n## Mar      04       17    03    14  06\n## Apr      0a       15    11    19  08\n## May      02       05    0d    10  1b\n## Jun      16       18    0e    1a  0c\n## attr(,\"names\")\n##  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n## [20] \"t\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\n\n################################################################################\n\n# factor example ====\nx <- factor(month.abb, levels = month.abb)\nnames(x) <- month.name\nprint(x)\n##   January  February     March     April       May      June      July    August \n##       Jan       Feb       Mar       Apr       May       Jun       Jul       Aug \n## September   October  November  December \n##       Sep       Oct       Nov       Dec \n## Levels: Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n\nas_bool(as_int(x) > 6)\n##   January  February     March     April       May      June      July    August \n##     FALSE     FALSE     FALSE     FALSE     FALSE     FALSE      TRUE      TRUE \n## September   October  November  December \n##      TRUE      TRUE      TRUE      TRUE\nas_int(x)\n##   January  February     March     April       May      June      July    August \n##         1         2         3         4         5         6         7         8 \n## September   October  November  December \n##         9        10        11        12\nas_dbl(x)\n##   January  February     March     April       May      June      July    August \n##         1         2         3         4         5         6         7         8 \n## September   October  November  December \n##         9        10        11        12\nas_chr(x)\n##   January  February     March     April       May      June      July    August \n##     \"Jan\"     \"Feb\"     \"Mar\"     \"Apr\"     \"May\"     \"Jun\"     \"Jul\"     \"Aug\" \n## September   October  November  December \n##     \"Sep\"     \"Oct\"     \"Nov\"     \"Dec\"\nas_cplx(x)\n##   January  February     March     April       May      June      July    August \n##  1+0i  2+0i  3+0i  4+0i  5+0i  6+0i  7+0i  8+0i\n## September   October  November  December \n##  9+0i 10+0i 11+0i 12+0i\nas_raw(x)\n##   January  February     March     April       May      June      July    August \n##        01        02        03        04        05        06        07        08 \n## September   October  November  December \n##        09        0a        0b        0c\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}