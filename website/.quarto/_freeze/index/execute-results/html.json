{
  "hash": "38d102f65c5f225c59f5e4ecd220a80a",
  "result": {
    "markdown": "<img src=\"man/figures/broadcast.png\" height=\"300\"/>\n\n\n\n\n\n<!-- badges: start -->\n\n[![Project Status: WIP - Initial development is in progress, but there has not yet been a stable, usable release suitable for the public.](https://www.repostatus.org/badges/latest/wip.svg)](https://www.repostatus.org/#wip) [![](https://img.shields.io/badge/lifecycle-experimental-orange.svg)](https://lifecycle.r-lib.org/articles/stages.html#experimental) [![](https://img.shields.io/badge/ORCID-0000--0001--9498--8379-green.svg)](https://orcid.org/0000-0001-9498-8379)\n\n<!-- badges: end -->\n\n# Introduction\n\n¬†\n\n## üó∫Ô∏èOverview\n\nThe 'broadcast' `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 581 512\" style=\"height:1em;width:1.13em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"/></svg>`{=html} - package, as the name suggests, performs \"broadcasting\" (similar to broadcasting in the 'Numpy' module for 'Python').\n\nIn the context of operations involving 2 (or more) arrays, \"broadcasting\" refers to recycling array dimensions **without** allocating additional memory, which is considerably **faster** and **more memory-efficient** than R's regular dimensions replication mechanism.\n\nPlease read the article \"Broadcasting explained\" for a more complete explanation of what \"broadcasting\" is.\n\n¬†\n\nAt its core, the 'broadcast' package provides 3 functionalities, all 3 related to \"broadcasting\":\n\n¬†\n\nFirst, 'broadcast' provides functions for broadcasted element-wise binary operations between any 2 arrays. They support are optimised for a large set of relational-, arithmetic-, Boolean-, and string operations.\\\nThese functions have clear broadcasting rules, making it easy to accurately predict the dimensions of the result.\n\n¬†\n\nSecond, 'broadcast' provides the [bind_array()](/man/bind.qmd) function, which is a broadcasted and enhanced form of the fantastic `abind::abind()` function:\n\n-   [bind_array()](/man/bind.qmd) allows for broadcasting (obviously), whereas `abind::abind()` does not.\n-   [bind_array()](/man/bind.qmd) is significantly **faster** and uses **less memory** than `abind::abind()`.\n-   [bind_array()](/man/bind.qmd) also differs from `abind::abind()` in that it can handle recursive arrays properly; `abind::abind()` unlists everything to atomic arrays, ruining the structure.\n\n¬†\n\nThird, 'broadcast' provides several generic functions for broadcasting:\n\n-   [bcapply()](/man/bcapply.qmd): a broadcasted apply-like function that works on pairs of arrays.\n-   [bc_ifelse()](/man/bc_ifelse.qmd): a broadcasted `ifelse()` function. Broadcasts between the `yes` and `no` arguments.\n\n¬†\n\nAdditionally, 'broadcast' includes the [acast()](/man/acast.qmd) function, for casting/pivoting an array into a new dimension. Roughly analogous to `data.table::dcast()`, but for arrays.\n\n¬†\n\n## ü§∑üèΩWhy use 'broadcast'\n\n**Efficiency**\n\nBroadcasting dimensions is faster and more memory efficient than replicating dimensions.\\\nEfficient programs use less energy and resources, and is thus better for the environment.\\\nAs a favoured language for the sciences, `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 581 512\" style=\"height:1em;width:1.13em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"/></svg>`{=html} should not throw away an opportunity to become more efficient.\n\nThe `Benchmarks` show that 'broadcast' has a somewhat similar speed as equivalent operations in 'Numpy'.\n\n¬†\n\n**Convenience**\n\nHave you ever been bothered by any of the following while programming in `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 581 512\" style=\"height:1em;width:1.13em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"/></svg>`{=html}:\n\n-   `abind::abind()` being too slow, saying arrays are not conformable, and/or coercing recursive arrays to character arrays?\n-   that there is no built-in way to cast or pivot arrays?\n-   Receiving the \"non-conformable arrays\" error message in a simple operation when it intuitively should work?\n-   Receiving the \"Error: cannot allocate vector of size\" error message because `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 581 512\" style=\"height:1em;width:1.13em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"/></svg>`{=html} unnecessarily allocates too much memory?\n-   Trying to perform a simple operation on all possible combinations, only to find out you need nested loops and/or grid expansions to do something that should be *very* simple?\n\nIf you answered \"YES\" to any of the above, 'broadcast' may very well be the `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 581 512\" style=\"height:1em;width:1.13em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"/></svg>`{=html} - package for you.\n\n¬†\n\n**Minimal Dependencies**\n\nBesides linking to 'Rcpp', 'broadcast' does not depend on, vendor, link to, include, or otherwise use any external libraries; 'broadcast' was essentially made from scratch and can be installed out-of-the-box.\n\nNot using external libraries brings a number of advantages:\n\n-   **Avoid dependency hell**: Every dependency that is added to a software package increases the likelihood of something breaking (AKA \"dependency hell\"). 'broadcast' thus avoids this.\n-   **Avoid wasting resources for translations**: Using libraries from other languages, such as 'xtensor' ('C++') or 'Numpy' ('Python') means that - at some point - one needs to convert between the structure of `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 581 512\" style=\"height:1em;width:1.13em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"/></svg>`{=html} to that of the other language, and vice-versa, which wastes precious time, memory, and power. 'broadcast' requires no such translations of structures, and is therefore much less wasteful.\n-   **Ensure consistent behaviour**: Using libraries from other languages also means one cannot always guarantee consistent behaviour for some operations. For example: both 'Numpy' and 'xtensor' have only limited support for missing values, whereas `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 581 512\" style=\"height:1em;width:1.13em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"/></svg>`{=html} supports missing values for both atomic and recursive array/vector types (except type of 'Raw'). Since 'broadcast' does not rely on external libraries, it can ensure behaviour that is consistent with the rest of `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 581 512\" style=\"height:1em;width:1.13em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"/></svg>`{=html}.\n\n¬†\n\n**Tested**\n\nThe 'broadcast' package is frequently checked using a large suite of unit tests via the [tinytest](https://github.com/markvanderloo/tinytest) package. These tests have a coverage of approximately 95%. As such, the chance of a function from this package breaking is relatively low.\n\nSince 'broadcast' is still relatively new package, bugs are still very much possible. I encourage users who find bugs to report them swiftly to the GitHub page, and I will fix them as soon as time permits.\n\n¬†\n\n## üöÄQuick Example\n\nConsider the matrix `x` and the row vector `y`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- array(1:25, c(5, 5))\ny <- array(1:5*10, c(1, 5))\nprint(x)\n#>      [,1] [,2] [,3] [,4] [,5]\n#> [1,]    1    6   11   16   21\n#> [2,]    2    7   12   17   22\n#> [3,]    3    8   13   18   23\n#> [4,]    4    9   14   19   24\n#> [5,]    5   10   15   20   25\nprint(y)\n#>      [,1] [,2] [,3] [,4] [,5]\n#> [1,]   10   20   30   40   50\n```\n:::\n\n\nSuppose one wishes to compute the element-wise addition of these 2 arrays.\n\nThis won't work in base 'R':\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx + y\nError in x + y : non-conformable arrays\n```\n:::\n\n\nWhen computing the element-wise sum of these arrays, they both need to be recycled to equal size in order to compute the element-wise computation.\\\nI.e. `y` needs its single row to be recycled 5 times, creating 2 conformable matrices.\n\nYou *could* do the following....\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx + y[rep(1L, 5L),]\n#>      [,1] [,2] [,3] [,4] [,5]\n#> [1,]   11   26   41   56   71\n#> [2,]   12   27   42   57   72\n#> [3,]   13   28   43   58   73\n#> [4,]   14   29   44   59   74\n#> [5,]   15   30   45   60   75\n```\n:::\n\n\n... but this involves replicating/copying `y` several times, which costs memory, reduces speed, and the code is not easily scalable for arrays with different dimensions.\n\nThe 'broadcast' package performs \"broadcasting\", which can do the above, but **faster** and **without unnecessary copies**, like so:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbc.num(x, y, \"+\")\n#>      [,1] [,2] [,3] [,4] [,5]\n#> [1,]   11   26   41   56   71\n#> [2,]   12   27   42   57   72\n#> [3,]   13   28   43   58   73\n#> [4,]   14   29   44   59   74\n#> [5,]   15   30   45   60   75\n```\n:::\n\n\n¬†\n\n## üìñDocumentation\n\nThe documentation in the 'broadcast' website is divided into 3 main parts:\n\n-   Guides and Vignettes: Here you'll find the topic-oriented guides in the form of a few Vignettes.\n-   Reference Manual: Here you'll find the function-oriented reference manual.\n-   About: Here you'll find mainly the Acknowledgements, Change logs and License file.\n\n¬† ¬†\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}