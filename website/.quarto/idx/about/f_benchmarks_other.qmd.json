{"title":"Other benchmarks","markdown":{"yaml":{"title":"Other benchmarks","format":"html"},"headingText":"Introduction","containsRefs":false,"markdown":"\n\n```{r, include = FALSE}\nknitr::opts_chunk$set(\n  collapse = TRUE,\n  comment = \"#>\",\n  warning = FALSE\n)\n```\n\n```{r setup, eval=TRUE, echo=FALSE}\nsuppressMessages(\n  {\n    library(broadcast)\n    library(bench)\n    library(tinyplot)\n    library(abind)\n  }\n)\n\n```\n\n\n&nbsp;\n\n\nThis page benchmarks some of the functions from 'broadcast' with some near-equivalent functions from other packages. The code is given here also.\n\n&nbsp;\n\n# `abind::abind()`\n\nIn this section, te performance of the [bind_array()](/man/bind_array.qmd) function from 'broadcast' is compared to the performance of the `abind()` function from the 'abind' package.\n\n&nbsp;\n\nThe following code was used:\n\n\n```{r echo = TRUE, eval=FALSE}\nn <- 110L\nnms <- function(n) sample(letters, n, TRUE)\nx <- array(as.double(1:25), c(n, n, n))\ny <- array(as.double(-1:-25), c(n, n, n))\ndimnames(x) <- lapply(dim(x), nms)\ndimnames(y) <- lapply(dim(y), nms)\ninput <- list(x, y, x)\n\ngc()\nbm_abind <- bench::mark(\n  abind = abind::abind(input, along = 2),\n  broadcast = bind_array(input, 2),\n  min_iterations = 100,\n  check = FALSE # because abind adds empty dimnames\n)\nsummary(bm_abind)\nplot(bm_abind)\n\n```\n\nAnd here are the results:\n\n```{r fig.width=8, echo=FALSE}\nload(\"benchmarks/bm_abind.RData\")\nsummary(bm_abind)\nplot(bm_abind)\n```\n\n\nClearly, the [bind_array()](/man/bind_array.qmd) implementation from 'broadcast' is about 2 times faster than the implementation from the 'abind' package. It is also about 1.5 times more memory efficient.\n\n&nbsp;\n\n# `Rfast::Outer()`\n\nAn outer computation is a special case of broadcasting, namely broadcasting between a row vector and a column vector (or vice-versa). The `outer()` function from base 'R' is too slow and consumes too much memory to provide any meaningful benchmark. But the 'Rfast' package provides a very fast implementation of the `outer()` function. It may be interesting how broadcasted operations hold up to the famously fast 'Rfast' package.\n\nHere the outer-sum between a column-vector `x` and row-vector `y` is computed using `Rfast::outer()` and `broadcast::bc.num()`, and their speeds and memory consumption are compared.\n\nThe following code was used:\n\n```{r echo = TRUE, eval=FALSE}\n\nn <- 1e4\nx <- array(rnorm(10), c(n, 1))\ny <- array(rnorm(10), c(1, n))\ngc()\nbm_outer <- bench::mark(\n  Rfast = Rfast::Outer(x, y, \"+\"),\n  broadcast = bc.num(x, y, \"+\"),\n  min_iterations = 100,\n  check = FALSE # because Rfast flips the dimensions of the results\n)\nsummary(bm_outer)\nplot(bm_outer)\n\n```\n\nAnd here are the results:\n\n```{r fig.width=8, echo=FALSE}\nload(\"benchmarks/bm_outer.RData\")\nsummary(bm_outer)\nplot(bm_outer)\n```\n\n\nIt seems that the implementations of 'broadcast' and the blazingly fast 'Rfast' package reach similar speeds and use the same amount of memory.\n\nNote, however, that `Rfast::Outer()` unfortunately only supports numeric vectors, and does not provide higher-dimensional broadcasting. 'broadcast', on the other hand, supports all atomic types as well as the `list` recursive type, and supports arrays of any dimensions up to 16 dimensions.\n\n&nbsp;\n\n\n","srcMarkdownNoYaml":"\n\n```{r, include = FALSE}\nknitr::opts_chunk$set(\n  collapse = TRUE,\n  comment = \"#>\",\n  warning = FALSE\n)\n```\n\n```{r setup, eval=TRUE, echo=FALSE}\nsuppressMessages(\n  {\n    library(broadcast)\n    library(bench)\n    library(tinyplot)\n    library(abind)\n  }\n)\n\n```\n\n\n&nbsp;\n\n# Introduction\n\nThis page benchmarks some of the functions from 'broadcast' with some near-equivalent functions from other packages. The code is given here also.\n\n&nbsp;\n\n# `abind::abind()`\n\nIn this section, te performance of the [bind_array()](/man/bind_array.qmd) function from 'broadcast' is compared to the performance of the `abind()` function from the 'abind' package.\n\n&nbsp;\n\nThe following code was used:\n\n\n```{r echo = TRUE, eval=FALSE}\nn <- 110L\nnms <- function(n) sample(letters, n, TRUE)\nx <- array(as.double(1:25), c(n, n, n))\ny <- array(as.double(-1:-25), c(n, n, n))\ndimnames(x) <- lapply(dim(x), nms)\ndimnames(y) <- lapply(dim(y), nms)\ninput <- list(x, y, x)\n\ngc()\nbm_abind <- bench::mark(\n  abind = abind::abind(input, along = 2),\n  broadcast = bind_array(input, 2),\n  min_iterations = 100,\n  check = FALSE # because abind adds empty dimnames\n)\nsummary(bm_abind)\nplot(bm_abind)\n\n```\n\nAnd here are the results:\n\n```{r fig.width=8, echo=FALSE}\nload(\"benchmarks/bm_abind.RData\")\nsummary(bm_abind)\nplot(bm_abind)\n```\n\n\nClearly, the [bind_array()](/man/bind_array.qmd) implementation from 'broadcast' is about 2 times faster than the implementation from the 'abind' package. It is also about 1.5 times more memory efficient.\n\n&nbsp;\n\n# `Rfast::Outer()`\n\nAn outer computation is a special case of broadcasting, namely broadcasting between a row vector and a column vector (or vice-versa). The `outer()` function from base 'R' is too slow and consumes too much memory to provide any meaningful benchmark. But the 'Rfast' package provides a very fast implementation of the `outer()` function. It may be interesting how broadcasted operations hold up to the famously fast 'Rfast' package.\n\nHere the outer-sum between a column-vector `x` and row-vector `y` is computed using `Rfast::outer()` and `broadcast::bc.num()`, and their speeds and memory consumption are compared.\n\nThe following code was used:\n\n```{r echo = TRUE, eval=FALSE}\n\nn <- 1e4\nx <- array(rnorm(10), c(n, 1))\ny <- array(rnorm(10), c(1, n))\ngc()\nbm_outer <- bench::mark(\n  Rfast = Rfast::Outer(x, y, \"+\"),\n  broadcast = bc.num(x, y, \"+\"),\n  min_iterations = 100,\n  check = FALSE # because Rfast flips the dimensions of the results\n)\nsummary(bm_outer)\nplot(bm_outer)\n\n```\n\nAnd here are the results:\n\n```{r fig.width=8, echo=FALSE}\nload(\"benchmarks/bm_outer.RData\")\nsummary(bm_outer)\nplot(bm_outer)\n```\n\n\nIt seems that the implementations of 'broadcast' and the blazingly fast 'Rfast' package reach similar speeds and use the same amount of memory.\n\nNote, however, that `Rfast::Outer()` unfortunately only supports numeric vectors, and does not provide higher-dimensional broadcasting. 'broadcast', on the other hand, supports all atomic types as well as the `list` recursive type, and supports arrays of any dimensions up to 16 dimensions.\n\n&nbsp;\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"f_benchmarks_other.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","fontsize":"1.2em","fontcolor":"#18161B","mainfont":"Tahoma","theme":["pandoc","../light.css"],"title":"Other benchmarks"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}