{"title":"Functionality Overview","markdown":{"yaml":{"title":"Functionality Overview","format":"html"},"headingText":"Introduction","containsRefs":false,"markdown":"\n\n```{r, include = FALSE}\nknitr::opts_chunk$set(\n  collapse = TRUE,\n  comment = \"#>\"\n)\n```\n\n```{r setup, eval=TRUE, echo=FALSE}\nknitr::opts_chunk$set(message = FALSE, warning = FALSE)\nlibrary(broadcast)\nlibrary(kableExtra) |> suppressWarnings()\n```\n\n\n&nbsp;\n\n\nThe 'broadcast' package provides 4 main functionalities:\n\n - outer-like functions to perform broadcasted outer-computations\n - broadcasted generic pair-wise functions\n - broadcasted dimensional binding of arrays (and also matrices and data.tables)\n - array typecasting with dimensions and names preserved\n \nThis guide will give an overview of each of these 4 functionalities.\n\n\n&nbsp;\n\n# Outer-like functions\n\n\nThe 'broadcast' package provides functions that perform Broadcasted outer operations,\nsimilar to base R's `outer()` function.\nThe outer-like functions are the following:\n\n - [bc.b](/man/bc.b.qmd): Broadcasted Boolean operations.\n - [bc.i](/man/bc.i.qmd) : Broadcasted (53bit) Integer Numeric operations.\n - [bc.d](/man/bc.d.qmd): Broadcasted (64bit) Decimal Numeric operations.\n - [bc.cplx](/man/bc.cplx.qmd): Broadcasted Complex Numeric operations.\n - [bc.str](/man/bc.str.qmd): Broadcasted String operations.\n - [bc.list](/man/bc.list.qmd): Broadcasted operations on Recursive arrays.\n \n \nThere are several things to note about the above functions.\n\nFirst, the naming convention is \"bc.\" followed by some abbreviation of the operation type. For example, \"b\" refers to \"Boolean operations\", \"i\" to \"Integer Numeric operations\", and \"d\" to \"Decimal Numeric Operations\".\n\nSecond, the `outer()` function from base 'R' is only optimized for the \"*\" operator; all other operators are called \"regularly\", somewhat (but not entirely) similar as functions would be called in an `apply()`-like function. The outer-like functions provided by 'broadcast', however, come with a very large set of optimised operators, written and compiled in 'C' and 'C++'.\n\nThird, where base 'R' provides a single `outer()` function, 'broadcast' provides several outer-like functions.\nThis is done for the following reasons:\n\n - As stated earlier, the outer-like functions provided by 'broadcast' come with a very large set of pre-compiled, optimised operations.  \n Fitting all of those operators into a single outer-like function would be inefficient, and would also make it easy for the user to lose track of all of the supported operators.\n - Splitting the numeric-ish operations into Boolean, (53bit) Integer, and (64bit) Decimal numbers, allows for only performing typecasting when necessary; more importantly, typecasting here is performed at the 'C' level, without allocating an entirely new vector/array.  \n This allows for far more efficient code.  \n For example: `bc.i(x, y \"+\")` is significantly faster and more memory efficient than `bc.d(trunc(x), trunc(y), \"+\")`, as the latter results in producing unnecessary copies of both `x` and `y`.\n \n\nFor details on the operators supported in each of the outer-like functions, please refer to the relevant sections in the Reference Manual.\n\n  \n \n&nbsp;\n\n# Binding implementations\n\n'broadcast' provides 3 functions for dimensional binding:\n\n - [bind_mat](/man/bind.qmd): binds vectors and matrices row-wise or column-wise; allows for vector (i.e. linear) recycling.\n - [bind_array](/man/bind.qmd): binds arrays (including matrices) along any arbitrary dimension; allows dimensional broadcasting.\n - [bind_dt](/man/bind.qmd): binds data.frames and data.tables; allows for matching unmatched columns.\n \nNote that the naming convention of the binding implementations here is\n\"bind_\" followed by the **resulting class** (abbreviated) - i.e. ...\n\n - [bind_mat](/man/bind.qmd) **returns** a matrix, but can bind both matrices and vectors.\n - [bind_array](/man/bind.qmd) **returns** an array, but can bind both arrays and matrices.\n - [bind_dt](/man/bind.qmd) **returns** a data.table, but can bind not only data.tables, but also most other data.frame-like objects.\n \nThe [bind_dt](/man/bind.qmd) function is only callable if the 'data.table' package is also installed.\n\n\n&nbsp;\n\n\n\n&nbsp;\n&nbsp;\n","srcMarkdownNoYaml":"\n\n```{r, include = FALSE}\nknitr::opts_chunk$set(\n  collapse = TRUE,\n  comment = \"#>\"\n)\n```\n\n```{r setup, eval=TRUE, echo=FALSE}\nknitr::opts_chunk$set(message = FALSE, warning = FALSE)\nlibrary(broadcast)\nlibrary(kableExtra) |> suppressWarnings()\n```\n\n\n&nbsp;\n\n# Introduction\n\nThe 'broadcast' package provides 4 main functionalities:\n\n - outer-like functions to perform broadcasted outer-computations\n - broadcasted generic pair-wise functions\n - broadcasted dimensional binding of arrays (and also matrices and data.tables)\n - array typecasting with dimensions and names preserved\n \nThis guide will give an overview of each of these 4 functionalities.\n\n\n&nbsp;\n\n# Outer-like functions\n\n\nThe 'broadcast' package provides functions that perform Broadcasted outer operations,\nsimilar to base R's `outer()` function.\nThe outer-like functions are the following:\n\n - [bc.b](/man/bc.b.qmd): Broadcasted Boolean operations.\n - [bc.i](/man/bc.i.qmd) : Broadcasted (53bit) Integer Numeric operations.\n - [bc.d](/man/bc.d.qmd): Broadcasted (64bit) Decimal Numeric operations.\n - [bc.cplx](/man/bc.cplx.qmd): Broadcasted Complex Numeric operations.\n - [bc.str](/man/bc.str.qmd): Broadcasted String operations.\n - [bc.list](/man/bc.list.qmd): Broadcasted operations on Recursive arrays.\n \n \nThere are several things to note about the above functions.\n\nFirst, the naming convention is \"bc.\" followed by some abbreviation of the operation type. For example, \"b\" refers to \"Boolean operations\", \"i\" to \"Integer Numeric operations\", and \"d\" to \"Decimal Numeric Operations\".\n\nSecond, the `outer()` function from base 'R' is only optimized for the \"*\" operator; all other operators are called \"regularly\", somewhat (but not entirely) similar as functions would be called in an `apply()`-like function. The outer-like functions provided by 'broadcast', however, come with a very large set of optimised operators, written and compiled in 'C' and 'C++'.\n\nThird, where base 'R' provides a single `outer()` function, 'broadcast' provides several outer-like functions.\nThis is done for the following reasons:\n\n - As stated earlier, the outer-like functions provided by 'broadcast' come with a very large set of pre-compiled, optimised operations.  \n Fitting all of those operators into a single outer-like function would be inefficient, and would also make it easy for the user to lose track of all of the supported operators.\n - Splitting the numeric-ish operations into Boolean, (53bit) Integer, and (64bit) Decimal numbers, allows for only performing typecasting when necessary; more importantly, typecasting here is performed at the 'C' level, without allocating an entirely new vector/array.  \n This allows for far more efficient code.  \n For example: `bc.i(x, y \"+\")` is significantly faster and more memory efficient than `bc.d(trunc(x), trunc(y), \"+\")`, as the latter results in producing unnecessary copies of both `x` and `y`.\n \n\nFor details on the operators supported in each of the outer-like functions, please refer to the relevant sections in the Reference Manual.\n\n  \n \n&nbsp;\n\n# Binding implementations\n\n'broadcast' provides 3 functions for dimensional binding:\n\n - [bind_mat](/man/bind.qmd): binds vectors and matrices row-wise or column-wise; allows for vector (i.e. linear) recycling.\n - [bind_array](/man/bind.qmd): binds arrays (including matrices) along any arbitrary dimension; allows dimensional broadcasting.\n - [bind_dt](/man/bind.qmd): binds data.frames and data.tables; allows for matching unmatched columns.\n \nNote that the naming convention of the binding implementations here is\n\"bind_\" followed by the **resulting class** (abbreviated) - i.e. ...\n\n - [bind_mat](/man/bind.qmd) **returns** a matrix, but can bind both matrices and vectors.\n - [bind_array](/man/bind.qmd) **returns** an array, but can bind both arrays and matrices.\n - [bind_dt](/man/bind.qmd) **returns** a data.table, but can bind not only data.tables, but also most other data.frame-like objects.\n \nThe [bind_dt](/man/bind.qmd) function is only callable if the 'data.table' package is also installed.\n\n\n&nbsp;\n\n\n\n&nbsp;\n&nbsp;\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"d_functions.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","fontsize":"1.2em","theme":["pandoc","../light.css"],"title":"Functionality Overview"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}