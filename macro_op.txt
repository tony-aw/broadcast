
#define MACRO_OP_REL_DBL(DIMCODE) do {	\
  switch(op) {	\
  case 1:	\
  {	\
    MACRO_TYPESWITCH_NUMERIC_REL(	\
      DIMCODE,	\
      tempcalc = NA_REAL,	\
      tempcalc = abs((double)px[flatind_x] - (double)py[flatind_y]), \
      tempout = NA_LOGICAL, \
      tempout = tempcalc < prec  \
    );	\
    break;	\
  }	\
  case 2:	\
  {	\
    MACRO_TYPESWITCH_NUMERIC_REL(	\
      DIMCODE,	\
      tempcalc = NA_REAL,	\
      tempcalc = abs((double)px[flatind_x] - (double)py[flatind_y]),	\
      tempout = NA_LOGICAL, \
      tempout = tempcalc >= prec  \
    );	\
    break;	\
  }	\
  case 3:	\
  {	\
    MACRO_TYPESWITCH_NUMERIC_REL(	\
      DIMCODE,	\
      tempcalc = NA_REAL,	\
      tempcalc = ((double)px[flatind_x] - (double)py[flatind_y]),  \
      tempout = NA_LOGICAL, \
      tempout = tempcalc <= -prec  \
    );	\
    break;	\
  }	\
  case 4:	\
  {	\
    MACRO_TYPESWITCH_NUMERIC_REL(	\
      DIMCODE,	\
      tempcalc = NA_REAL,	\
      tempcalc = ((double)px[flatind_x] - (double)py[flatind_y]),  \
      tempout = NA_LOGICAL, \
      tempout = tempcalc >= prec  \
    );	\
    break;	\
  }	\
  case 5:	\
  {	\
    MACRO_TYPESWITCH_NUMERIC_REL(	\
      DIMCODE,	\
      tempcalc = NA_REAL,	\
      tempcalc = ((double)px[flatind_x] - (double)py[flatind_y]),  \
      tempout = NA_LOGICAL, \
      tempout = tempcalc < prec  \
    );	\
    break;	\
  }	\
  case 6:	\
  {	\
    MACRO_TYPESWITCH_NUMERIC_REL(	\
      DIMCODE,	\
      tempcalc = NA_REAL,	\
      tempcalc = ((double)px[flatind_x] - (double)py[flatind_y]),	\
      tempout = NA_LOGICAL, \
      tempout = tempcalc > -prec  \
    );	\
    break;	\
  }	\
  default:	\
  {	\
    stop("given operator not supported in the given context");	\
  }	\
}	\
} while(0)
